diff -urN findutils-4.2.20/find/parser.c findutils-4.2.20-adistroSTEP/find/parser.c
--- findutils-4.2.20/find/parser.c	2005-03-08 11:39:05.000000000 +1300
+++ findutils-4.2.20-adistroSTEP/find/parser.c	2005-05-17 13:56:51.325570400 +1200
@@ -2336,9 +2336,9 @@
 {
   FILE *f;
 
-  if (!strcmp (path, "/dev/stderr"))
+  if (!strcmp (path, "/System/Devices/stderr"))
     return (stderr);
-  else if (!strcmp (path, "/dev/stdout"))
+  else if (!strcmp (path, "/System/Devices/stdout"))
     return (stdout);
   f = fopen (path, "w");
   if (f == NULL)
diff -urN findutils-4.2.20/find/pred.c findutils-4.2.20-adistroSTEP/find/pred.c
--- findutils-4.2.20/find/pred.c	2005-03-04 23:33:39.000000000 +1300
+++ findutils-4.2.20-adistroSTEP/find/pred.c	2005-05-17 13:56:51.328569944 +1200
@@ -1434,8 +1434,8 @@
 static void
 prep_child_for_exec (void)
 {
-  const char inputfile[] = "/dev/null";
-  /* fprintf(stderr, "attaching stdin to /dev/null\n"); */
+  const char inputfile[] = "/System/Devices/null";
+  /* fprintf(stderr, "attaching stdin to /System/Devices/null\n"); */
   
   close(0);
   if (open(inputfile, O_RDONLY) < 0)
@@ -1443,7 +1443,7 @@
       /* This is not entirely fatal, since 
        * executing the child with a closed
        * stdin is almost as good as executing it
-       * with its stdin attached to /dev/null.
+       * with its stdin attached to /System/Devices/null.
        */
       error (0, errno, "%s", inputfile);
     }
diff -urN findutils-4.2.20/locate/frcode.c findutils-4.2.20-adistroSTEP/locate/frcode.c
--- findutils-4.2.20/locate/frcode.c	2005-03-03 11:36:21.000000000 +1300
+++ findutils-4.2.20-adistroSTEP/locate/frcode.c	2005-05-17 13:57:04.673541200 +1200
@@ -43,7 +43,7 @@
    /usr/src
    /usr/src/cmd/aardvark.c
    /usr/src/cmd/armadillo.c
-   /usr/tmp/zoo
+   /usr/System/TemporaryFiles/zoo
 
    Length of the longest prefix of the preceding entry to share:
    0 /usr/src
diff -urN findutils-4.2.20/xargs/xargs.c findutils-4.2.20-adistroSTEP/xargs/xargs.c
--- findutils-4.2.20/xargs/xargs.c	2005-03-03 11:36:25.000000000 +1300
+++ findutils-4.2.20-adistroSTEP/xargs/xargs.c	2005-05-17 13:57:27.645049000 +1200
@@ -349,7 +349,7 @@
   long posix_arg_size_min;
   long arg_size;
   long size_of_environment = env_size(environ);
-  char *default_cmd = "/bin/echo";
+  char *default_cmd = "/System/Tools/echo";
   int (*read_args) PARAMS ((void)) = read_line;
 
   program_name = argv[0];
@@ -894,9 +894,9 @@
 
       if (!tty_stream)
 	{
-	  tty_stream = fopen ("/dev/tty", "r");
+	  tty_stream = fopen ("/System/Devices/tty", "r");
 	  if (!tty_stream)
-	    error (1, errno, "/dev/tty");
+	    error (1, errno, "/System/Devices/tty");
 	}
       fputs ("?...", stderr);
       fflush (stderr);
@@ -913,7 +913,7 @@
 }
 
 
-/* Close stdin and attach /dev/null to it.
+/* Close stdin and attach /System/Devices/null to it.
  * This resolves Savannah bug #3992.
  */
 static void
@@ -921,8 +921,8 @@
 {
   if (!keep_stdin)
     {
-      const char inputfile[] = "/dev/null";
-      /* fprintf(stderr, "attaching stdin to /dev/null\n"); */
+      const char inputfile[] = "/System/Devices/null";
+      /* fprintf(stderr, "attaching stdin to /System/Devices/null\n"); */
       
       close(0);
       if (open(inputfile, O_RDONLY) < 0)
@@ -930,7 +930,7 @@
 	  /* This is not entirely fatal, since 
 	   * executing the child with a closed
 	   * stdin is almost as good as executing it
-	   * with its stdin attached to /dev/null.
+	   * with its stdin attached to /System/Devices/null.
 	   */
 	  error (0, errno, "%s", inputfile);
 	}
