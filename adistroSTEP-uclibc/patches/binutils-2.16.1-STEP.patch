diff -urN binutils-2.16.1/Makefile.def binutils-2.16.1-STEP/Makefile.def
--- binutils-2.16.1/Makefile.def	2005-03-01 03:06:55.000000000 +1300
+++ binutils-2.16.1-STEP/Makefile.def	2005-09-02 11:16:21.023122576 +1200
@@ -1,4 +1,4 @@
-#! /usr/bin/autogen
+#! /System/Tools/autogen
 AutoGen definitions Makefile.tpl;
 
 // Makefile.in is generated from Makefile.tpl by 'autogen Makefile.def'.
diff -urN binutils-2.16.1/Makefile.in binutils-2.16.1-STEP/Makefile.in
--- binutils-2.16.1/Makefile.in	2005-06-13 07:30:54.000000000 +1200
+++ binutils-2.16.1-STEP/Makefile.in	2005-09-02 11:16:21.056117560 +1200
@@ -182,11 +182,11 @@
 STAGE_HOST_EXPORTS = \
 	$(HOST_EXPORTS) \
 	CC="$(STAGE_CC_WRAPPER) $$r/$(HOST_SUBDIR)/prev-gcc/xgcc$(exeext) \
-	  -B$$r/$(HOST_SUBDIR)/prev-gcc/ -B$(build_tooldir)/bin/"; export CC; \
+	  -B$$r/$(HOST_SUBDIR)/prev-gcc/ -B$(build_tooldir)/System/Tools/"; export CC; \
 	CC_FOR_BUILD="$(STAGE_CC_WRAPPER) \
 	  $$r/$(HOST_SUBDIR)/prev-gcc/xgcc$(exeext) \
 	  -B$$r/$(HOST_SUBDIR)/prev-gcc/ \
-	  -B$(build_tooldir)/bin/"; export CC_FOR_BUILD;
+	  -B$(build_tooldir)/System/Tools/"; export CC_FOR_BUILD;
 
 # This is set by the configure script to the list of directories which
 # should be built using the target tools.
@@ -300,7 +300,7 @@
 MAKEINFO = `if [ -f $$r/$(BUILD_SUBDIR)/texinfo/makeinfo/Makefile ] ; \
 	then echo $$r/$(BUILD_SUBDIR)/texinfo/makeinfo/makeinfo ; \
 	else if (${CONFIGURED_MAKEINFO} --version \
-	  | egrep 'texinfo[^0-9]*([1-3][0-9]|4\.[2-9]|[5-9])') >/dev/null 2>&1; \
+	  | egrep 'texinfo[^0-9]*([1-3][0-9]|4\.[2-9]|[5-9])') >/System/Devices/null 2>&1; \
         then echo ${CONFIGURED_MAKEINFO}; else echo $$s/missing makeinfo; fi; fi`
 
 # This just becomes part of the MAKEINFO definition passed down to
@@ -1831,9 +1831,9 @@
 	else true; fi
 	-rm -f texinfo/po/Makefile texinfo/po/Makefile.in texinfo/info/Makefile
 	-rm -f texinfo/doc/Makefile texinfo/po/POTFILES
-	-rmdir texinfo/doc texinfo/info texinfo/intl texinfo/lib 2>/dev/null
-	-rmdir texinfo/makeinfo texinfo/po texinfo/util 2>/dev/null
-	-rmdir fastjar gcc libiberty texinfo zlib 2>/dev/null
+	-rmdir texinfo/doc texinfo/info texinfo/intl texinfo/lib 2>/System/Devices/null
+	-rmdir texinfo/makeinfo texinfo/po texinfo/util 2>/System/Devices/null
+	-rmdir fastjar gcc libiberty texinfo zlib 2>/System/Devices/null
 
 local-maintainer-clean:
 	@echo "This command is intended for maintainers to use;"
@@ -30379,7 +30379,7 @@
 gcc-no-fixedincludes:
 	@if [ -f ./gcc/Makefile ]; then \
 	  rm -rf gcc/tmp-include; \
-	  mv gcc/include gcc/tmp-include 2>/dev/null; \
+	  mv gcc/include gcc/tmp-include 2>/System/Devices/null; \
 	  mkdir gcc/include; \
 	  cp $(srcdir)/gcc/gsyslimits.h gcc/include/syslimits.h; \
 	  touch gcc/stmp-fixinc gcc/include/fixed; \
@@ -30391,7 +30391,7 @@
 	  (cd ./gcc && \
 	   $(MAKE) $(GCC_FLAGS_TO_PASS) install); \
 	  rm -rf gcc/include; \
-	  mv gcc/tmp-include gcc/include 2>/dev/null; \
+	  mv gcc/tmp-include gcc/include 2>/System/Devices/null; \
 	else true; fi
 @endif gcc
 
@@ -32599,7 +32599,7 @@
 	cd .. ; \
 	for file in $${files} ; do \
 	  f1=$$r/stage2-gcc/$$file; f2=$$r/stage3-gcc/$$file; \
-	  @do_compare@ > /dev/null 2>&1; \
+	  @do_compare@ > /System/Devices/null 2>&1; \
 	  test $$? -eq 1 && echo $$file differs >> .bad_compare || true; \
 	done ; \
 	if [ -f .bad_compare ]; then \
@@ -33361,7 +33361,7 @@
 	cd .. ; \
 	for file in $${files} ; do \
 	  f1=$$r/stage3-gcc/$$file; f2=$$r/stage4-gcc/$$file; \
-	  @do_compare@ > /dev/null 2>&1; \
+	  @do_compare@ > /System/Devices/null 2>&1; \
 	  test $$? -eq 1 && echo $$file differs >> .bad_compare || true; \
 	done ; \
 	if [ -f .bad_compare ]; then \
@@ -35503,7 +35503,7 @@
 multilib.out: maybe-all-gcc
 	@r=`${PWD_COMMAND}`; export r; \
 	echo "Checking multilib configuration..."; \
-	$(CC_FOR_TARGET) --print-multi-lib > multilib.tmp 2> /dev/null ; \
+	$(CC_FOR_TARGET) --print-multi-lib > multilib.tmp 2> /System/Devices/null ; \
 	$(SHELL) $(srcdir)/move-if-change multilib.tmp multilib.out ; \
 
 # Rebuilding Makefile.in, using autogen.
diff -urN binutils-2.16.1/Makefile.tpl binutils-2.16.1-STEP/Makefile.tpl
--- binutils-2.16.1/Makefile.tpl	2005-03-01 04:13:31.000000000 +1300
+++ binutils-2.16.1-STEP/Makefile.tpl	2005-09-02 11:16:21.059117104 +1200
@@ -185,11 +185,11 @@
 STAGE_HOST_EXPORTS = \
 	$(HOST_EXPORTS) \
 	CC="$(STAGE_CC_WRAPPER) $$r/$(HOST_SUBDIR)/prev-gcc/xgcc$(exeext) \
-	  -B$$r/$(HOST_SUBDIR)/prev-gcc/ -B$(build_tooldir)/bin/"; export CC; \
+	  -B$$r/$(HOST_SUBDIR)/prev-gcc/ -B$(build_tooldir)/System/Tools/"; export CC; \
 	CC_FOR_BUILD="$(STAGE_CC_WRAPPER) \
 	  $$r/$(HOST_SUBDIR)/prev-gcc/xgcc$(exeext) \
 	  -B$$r/$(HOST_SUBDIR)/prev-gcc/ \
-	  -B$(build_tooldir)/bin/"; export CC_FOR_BUILD;
+	  -B$(build_tooldir)/System/Tools/"; export CC_FOR_BUILD;
 
 # This is set by the configure script to the list of directories which
 # should be built using the target tools.
@@ -303,7 +303,7 @@
 MAKEINFO = `if [ -f $$r/$(BUILD_SUBDIR)/texinfo/makeinfo/Makefile ] ; \
 	then echo $$r/$(BUILD_SUBDIR)/texinfo/makeinfo/makeinfo ; \
 	else if (${CONFIGURED_MAKEINFO} --version \
-	  | egrep 'texinfo[^0-9]*([1-3][0-9]|4\.[2-9]|[5-9])') >/dev/null 2>&1; \
+	  | egrep 'texinfo[^0-9]*([1-3][0-9]|4\.[2-9]|[5-9])') >/System/Devices/null 2>&1; \
         then echo ${CONFIGURED_MAKEINFO}; else echo $$s/missing makeinfo; fi; fi`
 
 # This just becomes part of the MAKEINFO definition passed down to
@@ -684,9 +684,9 @@
 	else true; fi
 	-rm -f texinfo/po/Makefile texinfo/po/Makefile.in texinfo/info/Makefile
 	-rm -f texinfo/doc/Makefile texinfo/po/POTFILES
-	-rmdir texinfo/doc texinfo/info texinfo/intl texinfo/lib 2>/dev/null
-	-rmdir texinfo/makeinfo texinfo/po texinfo/util 2>/dev/null
-	-rmdir fastjar gcc libiberty texinfo zlib 2>/dev/null
+	-rmdir texinfo/doc texinfo/info texinfo/intl texinfo/lib 2>/System/Devices/null
+	-rmdir texinfo/makeinfo texinfo/po texinfo/util 2>/System/Devices/null
+	-rmdir fastjar gcc libiberty texinfo zlib 2>/System/Devices/null
 
 local-maintainer-clean:
 	@echo "This command is intended for maintainers to use;"
@@ -1237,7 +1237,7 @@
 gcc-no-fixedincludes:
 	@if [ -f ./gcc/Makefile ]; then \
 	  rm -rf gcc/tmp-include; \
-	  mv gcc/include gcc/tmp-include 2>/dev/null; \
+	  mv gcc/include gcc/tmp-include 2>/System/Devices/null; \
 	  mkdir gcc/include; \
 	  cp $(srcdir)/gcc/gsyslimits.h gcc/include/syslimits.h; \
 	  touch gcc/stmp-fixinc gcc/include/fixed; \
@@ -1249,7 +1249,7 @@
 	  (cd ./gcc && \
 	   $(MAKE) $(GCC_FLAGS_TO_PASS) install); \
 	  rm -rf gcc/include; \
-	  mv gcc/tmp-include gcc/include 2>/dev/null; \
+	  mv gcc/tmp-include gcc/include 2>/System/Devices/null; \
 	else true; fi
 @endif gcc
 
@@ -1452,7 +1452,7 @@
 	cd .. ; \
 	for file in $${files} ; do \
 	  f1=$$r/stage[+prev+]-gcc/$$file; f2=$$r/stage[+id+]-gcc/$$file; \
-	  @do_compare@ > /dev/null 2>&1; \
+	  @do_compare@ > /System/Devices/null 2>&1; \
 	  test $$? -eq 1 && echo $$file differs >> .bad_compare || true; \
 	done ; \
 	if [ -f .bad_compare ]; then \
@@ -1661,7 +1661,7 @@
 multilib.out: maybe-all-gcc
 	@r=`${PWD_COMMAND}`; export r; \
 	echo "Checking multilib configuration..."; \
-	$(CC_FOR_TARGET) --print-multi-lib > multilib.tmp 2> /dev/null ; \
+	$(CC_FOR_TARGET) --print-multi-lib > multilib.tmp 2> /System/Devices/null ; \
 	$(SHELL) $(srcdir)/move-if-change multilib.tmp multilib.out ; \
 
 # Rebuilding Makefile.in, using autogen.
diff -urN binutils-2.16.1/bfd/ChangeLog-9193 binutils-2.16.1-STEP/bfd/ChangeLog-9193
--- binutils-2.16.1/bfd/ChangeLog-9193	2001-03-09 10:03:55.000000000 +1300
+++ binutils-2.16.1-STEP/bfd/ChangeLog-9193	2005-09-02 11:16:19.115412592 +1200
@@ -166,7 +166,7 @@
 	CALC_ADDEND): Define.
 
 	* aix386-core.c (aix386_core_file_p): Use cd_regs[0] for computing
-	the offsetof because AIX /bin/cc does not like to take the address
+	the offsetof because AIX /System/Tools/cc does not like to take the address
 	of an array.  (From Minh Tran-Le.)
 
 Thu Dec 16 13:06:32 1993  Jeffrey A. Law  (law@snake.cs.utah.edu)
@@ -6675,7 +6675,7 @@
 	* config/t-m68k-elf:  Set DEFAULT_VECTOR to elf_big_vec.
 
 	* config/{h-amix,h-dgux,h-irix3,h-ultra3}: For systems where
-	RANLIB is defined as echo, send the output to /dev/null to help
+	RANLIB is defined as echo, send the output to /System/Devices/null to help
 	reduce clutter in the output from doing a make.
 
 Mon Oct 21 17:48:48 1991  John Gilmore  (gnu at cygnus.com)
diff -urN binutils-2.16.1/bfd/ChangeLog-9495 binutils-2.16.1-STEP/bfd/ChangeLog-9495
--- binutils-2.16.1/bfd/ChangeLog-9495	2002-03-05 18:26:02.000000000 +1300
+++ binutils-2.16.1-STEP/bfd/ChangeLog-9495	2005-09-02 11:16:19.127410768 +1200
@@ -8454,7 +8454,7 @@
 	failure indication, it merely means there are no relocs.
 
 	* elfcode.h (NAME(bfd_elf,write_object_contents)): Don't use space
-	after NAME, since SunOS /bin/cc can't handle it.
+	after NAME, since SunOS /System/Tools/cc can't handle it.
 
 Wed Mar 16 16:43:33 1994  David J. Mackenzie  (djm@thepub.cygnus.com)
 
@@ -8465,7 +8465,7 @@
 
 	* aoutf1.h (4 places): Use a simple #if on ARCH_SIZE, rather than
 	all that convoluted stuff with NAME, CAT3, etc.  The convoluted
-	stuff broke for SunOS4 /bin/cc (due to DEFUN elimination, I guess).
+	stuff broke for SunOS4 /System/Tools/cc (due to DEFUN elimination, I guess).
 
 Wed Mar 16 00:02:05 1994  Jeffrey A. Law  (law@snake.cs.utah.edu)
 
diff -urN binutils-2.16.1/bfd/Makefile.am binutils-2.16.1-STEP/bfd/Makefile.am
--- binutils-2.16.1/bfd/Makefile.am	2005-06-13 06:58:52.000000000 +1200
+++ binutils-2.16.1-STEP/bfd/Makefile.am	2005-09-02 11:16:19.459360304 +1200
@@ -779,7 +779,7 @@
 	$(MAKE) MKDEP="$(MKDEP)" DEP1
 	sed -f dep.sed < DEP1 > DEPA
 	echo '# IF YOU PUT ANYTHING HERE IT WILL GO AWAY' >> DEPA
-	if grep ' /' DEPA > /dev/null 2> /dev/null; then \
+	if grep ' /' DEPA > /System/Devices/null 2> /System/Devices/null; then \
 	  echo 'make DEP failed!'; exit 1; \
 	else \
 	  mv -f DEPA $@; \
diff -urN binutils-2.16.1/bfd/Makefile.in binutils-2.16.1-STEP/bfd/Makefile.in
--- binutils-2.16.1/bfd/Makefile.in	2005-06-13 06:58:55.000000000 +1200
+++ binutils-2.16.1-STEP/bfd/Makefile.in	2005-09-02 11:16:19.471358480 +1200
@@ -1083,7 +1083,7 @@
 		$(TAGS_FILES) $(LISP)
 	tags=; \
 	here=`pwd`; \
-	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
+	if ($(ETAGS) --etags-include --version) >/System/Devices/null 2>&1; then \
 	  include_option=--etags-include; \
 	  empty_fix=.; \
 	else \
@@ -1362,7 +1362,7 @@
 	$(MAKE) MKDEP="$(MKDEP)" DEP1
 	sed -f dep.sed < DEP1 > DEPA
 	echo '# IF YOU PUT ANYTHING HERE IT WILL GO AWAY' >> DEPA
-	if grep ' /' DEPA > /dev/null 2> /dev/null; then \
+	if grep ' /' DEPA > /System/Devices/null 2> /System/Devices/null; then \
 	  echo 'make DEP failed!'; exit 1; \
 	else \
 	  mv -f DEPA $@; \
diff -urN binutils-2.16.1/bfd/aclocal.m4 binutils-2.16.1-STEP/bfd/aclocal.m4
--- binutils-2.16.1/bfd/aclocal.m4	2005-04-30 01:57:02.000000000 +1200
+++ binutils-2.16.1-STEP/bfd/aclocal.m4	2005-09-02 11:16:19.099415024 +1200
@@ -192,7 +192,7 @@
     for i in 1 2 3 4 5 6; do
       echo '#include "conftst'$i'.h"' >> sub/conftest.c
       # Using `: > sub/conftst$i.h' creates only sub/conftst1.h with
-      # Solaris 8's {/usr,}/bin/sh.
+      # Solaris 8's {/usr,}/System/Tools/sh.
       touch sub/conftst$i.h
     done
     echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf
@@ -216,10 +216,10 @@
        source=sub/conftest.c object=sub/conftest.${OBJEXT-o} \
        depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
        $SHELL ./depcomp $depcc -c -o sub/conftest.${OBJEXT-o} sub/conftest.c \
-         >/dev/null 2>conftest.err &&
-       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
-       grep sub/conftest.${OBJEXT-o} sub/conftest.Po > /dev/null 2>&1 &&
-       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
+         >/System/Devices/null 2>conftest.err &&
+       grep sub/conftst6.h sub/conftest.Po > /System/Devices/null 2>&1 &&
+       grep sub/conftest.${OBJEXT-o} sub/conftest.Po > /System/Devices/null 2>&1 &&
+       ${MAKE-make} -s -f confmf > /System/Devices/null 2>&1; then
       # icc doesn't choke on unknown options, it will just issue warnings
       # or remarks (even with -Werror).  So we grep stderr for any message
       # that says an option was ignored or not supported.
@@ -228,7 +228,7 @@
       # The diagnosis changed in icc 8.0:
       #   icc: Command line remark: option '-MP' not supported
       if (grep 'ignoring option' conftest.err ||
-          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
+          grep 'not supported' conftest.err) >/System/Devices/null 2>&1; then :; else
         am_cv_$1_dependencies_compiler_type=$depmode
         break
       fi
@@ -295,7 +295,7 @@
   # Grep'ing the first line is not enough: some people post-process
   # each Makefile.in and add a new line on top of each file to say so.
   # So let's grep whole file.
-  if grep '^#.*generated by automake' $mf > /dev/null 2>&1; then
+  if grep '^#.*generated by automake' $mf > /System/Devices/null 2>&1; then
     dirpart=`AS_DIRNAME("$mf")`
   else
     continue
@@ -392,7 +392,7 @@
 
 # test whether we have cygpath
 if test -z "$CYGPATH_W"; then
-  if (cygpath --version) >/dev/null 2>/dev/null; then
+  if (cygpath --version) >/System/Devices/null 2>/System/Devices/null; then
     CYGPATH_W='cygpath -w'
   else
     CYGPATH_W=echo
@@ -491,14 +491,14 @@
 # Check whether the underlying file-system supports filenames
 # with a leading dot.  For instance MS-DOS doesn't.
 AC_DEFUN([AM_SET_LEADING_DOT],
-[rm -rf .tst 2>/dev/null
-mkdir .tst 2>/dev/null
+[rm -rf .tst 2>/System/Devices/null
+mkdir .tst 2>/System/Devices/null
 if test -d .tst; then
   am__leading_dot=.
 else
   am__leading_dot=_
 fi
-rmdir .tst 2>/dev/null
+rmdir .tst 2>/System/Devices/null
 AC_SUBST([am__leading_dot])])
 
 # Add --enable-maintainer-mode option to configure.         -*- Autoconf -*-
@@ -562,7 +562,7 @@
 # In particular we don't look at `^make:' because GNU make might
 # be invoked under some other name (usually "gmake"), in which
 # case it prints its new name instead of `make'.
-if test "`$am_make -s -f confmf 2> /dev/null | grep -v 'ing directory'`" = "done"; then
+if test "`$am_make -s -f confmf 2> /System/Devices/null | grep -v 'ing directory'`" = "done"; then
    am__include=include
    am__quote=
    _am_result=GNU
@@ -570,7 +570,7 @@
 # Now try BSD make style include.
 if test "$am__include" = "#"; then
    echo '.include "confinc"' > confmf
-   if test "`$am_make -s -f confmf 2> /dev/null`" = "done"; then
+   if test "`$am_make -s -f confmf 2> /System/Devices/null`" = "done"; then
       am__include=.include
       am__quote="\""
       _am_result=BSD
@@ -646,7 +646,7 @@
 # restrict ourselves to GNU make (using the --version option ensures
 # this.)
 AC_DEFUN([AM_PROG_MKDIR_P],
-[if mkdir -p --version . >/dev/null 2>&1 && test ! -d ./--version; then
+[if mkdir -p --version . >/System/Devices/null 2>&1 && test ! -d ./--version; then
   # We used to keeping the `.' as first argument, in order to
   # allow $(mkdir_p) to be used without argument.  As in
   #   $(mkdir_p) $(somedir)
@@ -737,7 +737,7 @@
 # (eg FreeBSD returns the mod time of the symlink's containing
 # directory).
 if (
-   set X `ls -Lt $srcdir/configure conftest.file 2> /dev/null`
+   set X `ls -Lt $srcdir/configure conftest.file 2> /System/Devices/null`
    if test "$[*]" = "X"; then
       # -L didn't work.
       set X `ls -t $srcdir/configure conftest.file`
@@ -844,7 +844,7 @@
   plaintar)
     # Must skip GNU tar: if it does not support --format= it doesn't create
     # ustar tarball either.
-    (tar --version) >/dev/null 2>&1 && continue
+    (tar --version) >/System/Devices/null 2>&1 && continue
     am__tar='tar chf - "$$tardir"'
     am__tar_='tar chf - "$tardir"'
     am__untar='tar xf -'
@@ -878,7 +878,7 @@
   rm -rf conftest.dir
   if test -s conftest.tar; then
     AM_RUN_LOG([$am__untar <conftest.tar])
-    grep GrepMe conftest.dir/file >/dev/null 2>&1 && break
+    grep GrepMe conftest.dir/file >/System/Devices/null 2>&1 && break
   fi
 done
 rm -rf conftest.dir
diff -urN binutils-2.16.1/bfd/configure binutils-2.16.1-STEP/bfd/configure
--- binutils-2.16.1/bfd/configure	2005-06-13 06:58:46.000000000 +1200
+++ binutils-2.16.1-STEP/bfd/configure	2005-09-02 11:16:19.154406664 +1200
@@ -1,4 +1,4 @@
-#! /bin/sh
+#! /System/Tools/sh
 # Guess values for system-dependent variables and create Makefiles.
 # Generated by GNU Autoconf 2.59.
 #
@@ -10,19 +10,19 @@
 ## --------------------- ##
 
 # Be Bourne compatible
-if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
+if test -n "${ZSH_VERSION+set}" && (emulate sh) >/System/Devices/null 2>&1; then
   emulate sh
   NULLCMD=:
   # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
   # is contrary to our usage.  Disable this feature.
   alias -g '${1+"$@"}'='"$@"'
-elif test -n "${BASH_VERSION+set}" && (set -o posix) >/dev/null 2>&1; then
+elif test -n "${BASH_VERSION+set}" && (set -o posix) >/System/Devices/null 2>&1; then
   set -o posix
 fi
 DUALCASE=1; export DUALCASE # for MKS sh
 
 # Support unset when possible.
-if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
+if ( (MAIL=60; unset MAIL) || exit) >/System/Devices/null 2>&1; then
   as_unset=unset
 else
   as_unset=false
@@ -49,13 +49,13 @@
 done
 
 # Required to use basename.
-if expr a : '\(a\)' >/dev/null 2>&1; then
+if expr a : '\(a\)' >/System/Devices/null 2>&1; then
   as_expr=expr
 else
   as_expr=false
 fi
 
-if (basename /) >/dev/null 2>&1 && test "X`basename / 2>&1`" = "X/"; then
+if (basename /) >/System/Devices/null 2>&1 && test "X`basename / 2>&1`" = "X/"; then
   as_basename=basename
 else
   as_basename=false
@@ -67,7 +67,7 @@
 $as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
 	 X"$0" : 'X\(//\)$' \| \
 	 X"$0" : 'X\(/\)$' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X/"$0" |
     sed '/^.*\/\([^/][^/]*\)\/*$/{ s//\1/; q; }
   	  /^X\/\(\/\/\)$/{ s//\1/; q; }
@@ -85,10 +85,10 @@
 
 # The user is always right.
 if test "${PATH_SEPARATOR+set}" != set; then
-  echo "#! /bin/sh" >conf$$.sh
+  echo "#! /System/Tools/sh" >conf$$.sh
   echo  "exit 0"   >>conf$$.sh
   chmod +x conf$$.sh
-  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
+  if (PATH="/nonexistent;."; conf$$.sh) >/System/Devices/null 2>&1; then
     PATH_SEPARATOR=';'
   else
     PATH_SEPARATOR=:
@@ -99,7 +99,7 @@
 
   as_lineno_1=$LINENO
   as_lineno_2=$LINENO
-  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
+  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/System/Devices/null`
   test "x$as_lineno_1" != "x$as_lineno_2" &&
   test "x$as_lineno_3"  = "x$as_lineno_2"  || {
   # Find who we are.  Look in the path if we contain no path at all
@@ -138,9 +138,9 @@
 	   if ("$as_dir/$as_base" -c '
   as_lineno_1=$LINENO
   as_lineno_2=$LINENO
-  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
+  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/System/Devices/null`
   test "x$as_lineno_1" != "x$as_lineno_2" &&
-  test "x$as_lineno_3"  = "x$as_lineno_2" ') 2>/dev/null; then
+  test "x$as_lineno_3"  = "x$as_lineno_2" ') 2>/System/Devices/null; then
 	     $as_unset BASH_ENV || test "${BASH_ENV+set}" != set || { BASH_ENV=; export BASH_ENV; }
 	     $as_unset ENV || test "${ENV+set}" != set || { ENV=; export ENV; }
 	     CONFIG_SHELL=$as_dir/$as_base
@@ -191,7 +191,7 @@
   *)       ECHO_N= ECHO_C='\c' ECHO_T= ;;
 esac
 
-if expr a : '\(a\)' >/dev/null 2>&1; then
+if expr a : '\(a\)' >/System/Devices/null 2>&1; then
   as_expr=expr
 else
   as_expr=false
@@ -199,7 +199,7 @@
 
 rm -f conf$$ conf$$.exe conf$$.file
 echo >conf$$.file
-if ln -s conf$$.file conf$$ 2>/dev/null; then
+if ln -s conf$$.file conf$$ 2>/System/Devices/null; then
   # We could just check for DJGPP; but this test a) works b) is more generic
   # and c) will remain valid once DJGPP supports symlinks (DJGPP 2.04).
   if test -f conf$$.exe; then
@@ -208,14 +208,14 @@
   else
     as_ln_s='ln -s'
   fi
-elif ln conf$$.file conf$$ 2>/dev/null; then
+elif ln conf$$.file conf$$ 2>/System/Devices/null; then
   as_ln_s=ln
 else
   as_ln_s='cp -p'
 fi
 rm -f conf$$ conf$$.exe conf$$.file
 
-if mkdir -p . 2>/dev/null; then
+if mkdir -p . 2>/System/Devices/null; then
   as_mkdir_p=:
 else
   test -d ./-p && rmdir ./-p
@@ -244,7 +244,7 @@
 # Name of the host.
 # hostname on some systems (SVR3.2, Linux) returns a bogus exit status,
 # so uname gets run too.
-ac_hostname=`(hostname || uname -n) 2>/dev/null | sed 1q`
+ac_hostname=`(hostname || uname -n) 2>/System/Devices/null | sed 1q`
 
 exec 6>&1
 
@@ -257,7 +257,7 @@
 subdirs=
 MFLAGS=
 MAKEFLAGS=
-SHELL=${CONFIG_SHELL-/bin/sh}
+SHELL=${CONFIG_SHELL-/System/Tools/sh}
 
 # Maximum number of lines to put in a shell here document.
 # This variable seems obsolete.  It should probably be removed, and
@@ -317,7 +317,7 @@
 ac_init_version=false
 # The variables have the same names as the options, with
 # dashes changed to underlines.
-cache_file=/dev/null
+cache_file=/System/Devices/null
 exec_prefix=NONE
 no_create=
 no_recursion=
@@ -395,7 +395,7 @@
   -disable-* | --disable-*)
     ac_feature=`expr "x$ac_option" : 'x-*disable-\(.*\)'`
     # Reject names that are not valid shell variable names.
-    expr "x$ac_feature" : ".*[^-_$as_cr_alnum]" >/dev/null &&
+    expr "x$ac_feature" : ".*[^-_$as_cr_alnum]" >/System/Devices/null &&
       { echo "$as_me: error: invalid feature name: $ac_feature" >&2
    { (exit 1); exit 1; }; }
     ac_feature=`echo $ac_feature | sed 's/-/_/g'`
@@ -404,7 +404,7 @@
   -enable-* | --enable-*)
     ac_feature=`expr "x$ac_option" : 'x-*enable-\([^=]*\)'`
     # Reject names that are not valid shell variable names.
-    expr "x$ac_feature" : ".*[^-_$as_cr_alnum]" >/dev/null &&
+    expr "x$ac_feature" : ".*[^-_$as_cr_alnum]" >/System/Devices/null &&
       { echo "$as_me: error: invalid feature name: $ac_feature" >&2
    { (exit 1); exit 1; }; }
     ac_feature=`echo $ac_feature | sed 's/-/_/g'`
@@ -586,7 +586,7 @@
   -with-* | --with-*)
     ac_package=`expr "x$ac_option" : 'x-*with-\([^=]*\)'`
     # Reject names that are not valid shell variable names.
-    expr "x$ac_package" : ".*[^-_$as_cr_alnum]" >/dev/null &&
+    expr "x$ac_package" : ".*[^-_$as_cr_alnum]" >/System/Devices/null &&
       { echo "$as_me: error: invalid package name: $ac_package" >&2
    { (exit 1); exit 1; }; }
     ac_package=`echo $ac_package| sed 's/-/_/g'`
@@ -599,7 +599,7 @@
   -without-* | --without-*)
     ac_package=`expr "x$ac_option" : 'x-*without-\(.*\)'`
     # Reject names that are not valid shell variable names.
-    expr "x$ac_package" : ".*[^-_$as_cr_alnum]" >/dev/null &&
+    expr "x$ac_package" : ".*[^-_$as_cr_alnum]" >/System/Devices/null &&
       { echo "$as_me: error: invalid package name: $ac_package" >&2
    { (exit 1); exit 1; }; }
     ac_package=`echo $ac_package | sed 's/-/_/g'`
@@ -631,7 +631,7 @@
   *=*)
     ac_envvar=`expr "x$ac_option" : 'x\([^=]*\)='`
     # Reject names that are not valid shell variable names.
-    expr "x$ac_envvar" : ".*[^_$as_cr_alnum]" >/dev/null &&
+    expr "x$ac_envvar" : ".*[^_$as_cr_alnum]" >/System/Devices/null &&
       { echo "$as_me: error: invalid variable name: $ac_envvar" >&2
    { (exit 1); exit 1; }; }
     ac_optarg=`echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"`
@@ -641,7 +641,7 @@
   *)
     # FIXME: should be removed in autoconf 3.0.
     echo "$as_me: WARNING: you should use --build, --host, --target" >&2
-    expr "x$ac_option" : ".*[^-._$as_cr_alnum]" >/dev/null &&
+    expr "x$ac_option" : ".*[^-._$as_cr_alnum]" >/System/Devices/null &&
       echo "$as_me: WARNING: invalid host type: $ac_option" >&2
     : ${build_alias=$ac_option} ${host_alias=$ac_option} ${target_alias=$ac_option}
     ;;
@@ -699,19 +699,19 @@
 ac_tool_prefix=
 test -n "$host_alias" && ac_tool_prefix=$host_alias-
 
-test "$silent" = yes && exec 6>/dev/null
+test "$silent" = yes && exec 6>/System/Devices/null
 
 
 # Find the source files, if location was not specified.
 if test -z "$srcdir"; then
   ac_srcdir_defaulted=yes
   # Try the directory containing this script, then its parent.
-  ac_confdir=`(dirname "$0") 2>/dev/null ||
+  ac_confdir=`(dirname "$0") 2>/System/Devices/null ||
 $as_expr X"$0" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$0" : 'X\(//\)[^/]' \| \
 	 X"$0" : 'X\(//\)$' \| \
 	 X"$0" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$0" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -734,7 +734,7 @@
    { (exit 1); exit 1; }; }
   fi
 fi
-(cd $srcdir && test -r ./$ac_unique_file) 2>/dev/null ||
+(cd $srcdir && test -r ./$ac_unique_file) 2>/System/Devices/null ||
   { echo "$as_me: error: sources are in $srcdir, but \`cd $srcdir' does not work" >&2
    { (exit 1); exit 1; }; }
 srcdir=`echo "$srcdir" | sed 's%\([^\\/]\)[\\/]*$%\1%'`
@@ -1004,22 +1004,22 @@
 ## Platform. ##
 ## --------- ##
 
-hostname = `(hostname || uname -n) 2>/dev/null | sed 1q`
-uname -m = `(uname -m) 2>/dev/null || echo unknown`
-uname -r = `(uname -r) 2>/dev/null || echo unknown`
-uname -s = `(uname -s) 2>/dev/null || echo unknown`
-uname -v = `(uname -v) 2>/dev/null || echo unknown`
-
-/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`
-/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`
-
-/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`
-/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`
-/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`
-hostinfo               = `(hostinfo) 2>/dev/null               || echo unknown`
-/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`
-/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`
-/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`
+hostname = `(hostname || uname -n) 2>/System/Devices/null | sed 1q`
+uname -m = `(uname -m) 2>/System/Devices/null || echo unknown`
+uname -r = `(uname -r) 2>/System/Devices/null || echo unknown`
+uname -s = `(uname -s) 2>/System/Devices/null || echo unknown`
+uname -v = `(uname -v) 2>/System/Devices/null || echo unknown`
+
+/System/Tools/uname -p = `(/System/Tools/uname -p) 2>/System/Devices/null || echo unknown`
+/System/Tools/uname -X     = `(/System/Tools/uname -X) 2>/System/Devices/null     || echo unknown`
+
+/System/Tools/arch              = `(/System/Tools/arch) 2>/System/Devices/null              || echo unknown`
+/System/Tools/arch -k       = `(/System/Tools/arch -k) 2>/System/Devices/null       || echo unknown`
+/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/System/Devices/null || echo unknown`
+hostinfo               = `(hostinfo) 2>/System/Devices/null               || echo unknown`
+/System/Tools/machine           = `(/System/Tools/machine) 2>/System/Devices/null           || echo unknown`
+/System/Tools/oslevel       = `(/System/Tools/oslevel) 2>/System/Devices/null       || echo unknown`
+/System/Tools/universe          = `(/System/Tools/universe) 2>/System/Devices/null          || echo unknown`
 
 _ASUNAME
 
@@ -1229,7 +1229,7 @@
 done
 
 if test -r "$cache_file"; then
-  # Some versions of bash will fail to source /dev/null (special
+  # Some versions of bash will fail to source /System/Devices/null (special
   # files actually), so we avoid doing that.
   if test -f "$cache_file"; then
     { echo "$as_me:$LINENO: loading cache $cache_file" >&5
@@ -1348,7 +1348,7 @@
 ac_configure="$SHELL $ac_aux_dir/configure" # This should be Cygnus configure.
 
 # Make sure we can run config.sub.
-$ac_config_sub sun4 >/dev/null 2>&1 ||
+$ac_config_sub sun4 >/System/Devices/null 2>&1 ||
   { { echo "$as_me:$LINENO: error: cannot run $ac_config_sub" >&5
 echo "$as_me: error: cannot run $ac_config_sub" >&2;}
    { (exit 1); exit 1; }; }
@@ -1748,18 +1748,18 @@
 echo "$as_me:$LINENO:" \
      "checking for C compiler version" >&5
 ac_compiler=`set X $ac_compile; echo $2`
-{ (eval echo "$as_me:$LINENO: \"$ac_compiler --version </dev/null >&5\"") >&5
-  (eval $ac_compiler --version </dev/null >&5) 2>&5
+{ (eval echo "$as_me:$LINENO: \"$ac_compiler --version </System/Devices/null >&5\"") >&5
+  (eval $ac_compiler --version </System/Devices/null >&5) 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
-{ (eval echo "$as_me:$LINENO: \"$ac_compiler -v </dev/null >&5\"") >&5
-  (eval $ac_compiler -v </dev/null >&5) 2>&5
+{ (eval echo "$as_me:$LINENO: \"$ac_compiler -v </System/Devices/null >&5\"") >&5
+  (eval $ac_compiler -v </System/Devices/null >&5) 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
-{ (eval echo "$as_me:$LINENO: \"$ac_compiler -V </dev/null >&5\"") >&5
-  (eval $ac_compiler -V </dev/null >&5) 2>&5
+{ (eval echo "$as_me:$LINENO: \"$ac_compiler -V </System/Devices/null >&5\"") >&5
+  (eval $ac_compiler -V </System/Devices/null >&5) 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
@@ -1941,7 +1941,7 @@
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }; then
-  for ac_file in `(ls conftest.o conftest.obj; ls conftest.*) 2>/dev/null`; do
+  for ac_file in `(ls conftest.o conftest.obj; ls conftest.*) 2>/System/Devices/null`; do
   case $ac_file in
     *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg ) ;;
     *) ac_cv_objext=`expr "$ac_file" : '.*\.\(.*\)'`
@@ -2491,13 +2491,13 @@
 # Find a good install program.  We prefer a C program (faster),
 # so one script is as good as another.  But avoid the broken or
 # incompatible versions:
-# SysV /etc/install, /usr/sbin/install
+# SysV/System/Settings/install, /usr/System/AdminTools/install
 # SunOS /usr/etc/install
-# IRIX /sbin/install
-# AIX /bin/install
+# IRIX /System/AdminTools/install
+# AIX /System/Tools/install
 # AmigaOS /C/install, which installs bootblocks on floppy discs
-# AIX 4 /usr/bin/installbsd, which doesn't work without a -g flag
-# AFS /usr/afsws/bin/install, which mishandles nonexistent args
+# AIX 4 /System/Tools/installbsd, which doesn't work without a -g flag
+# AFS /usr/afsws/System/Tools/install, which mishandles nonexistent args
 # SVR4 /usr/ucb/install, which tries to use the nonexistent group "staff"
 # OS/2's system install, which has a completely different semantic
 # ./install, which can be erroneously created by make from ./install.sh.
@@ -2515,7 +2515,7 @@
   # Account for people who put trailing slashes in PATH elements.
 case $as_dir/ in
   ./ | .// | /cC/* | \
-  /etc/* | /usr/sbin/* | /usr/etc/* | /sbin/* | /usr/afsws/bin/* | \
+ /System/Settings/* | /usr/System/AdminTools/* | /usr/etc/* | /System/AdminTools/* | /usr/afsws/System/Tools/* | \
   ?:\\/os2\\/install\\/* | ?:\\/OS2\\/INSTALL\\/* | \
   /usr/ucb/* ) ;;
   *)
@@ -2526,11 +2526,11 @@
       for ac_exec_ext in '' $ac_executable_extensions; do
 	if $as_executable_p "$as_dir/$ac_prog$ac_exec_ext"; then
 	  if test $ac_prog = install &&
-	    grep dspmsg "$as_dir/$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
+	    grep dspmsg "$as_dir/$ac_prog$ac_exec_ext" >/System/Devices/null 2>&1; then
 	    # AIX install.  It has an incompatible calling convention.
 	    :
 	  elif test $ac_prog = install &&
-	    grep pwplus "$as_dir/$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
+	    grep pwplus "$as_dir/$ac_prog$ac_exec_ext" >/System/Devices/null 2>&1; then
 	    # program-specific install script used by HP pwplus--don't use.
 	    :
 	  else
@@ -2578,7 +2578,7 @@
 # (eg FreeBSD returns the mod time of the symlink's containing
 # directory).
 if (
-   set X `ls -Lt $srcdir/configure conftest.file 2> /dev/null`
+   set X `ls -Lt $srcdir/configure conftest.file 2> /System/Devices/null`
    if test "$*" = "X"; then
       # -L didn't work.
       set X `ls -t $srcdir/configure conftest.file`
@@ -2638,7 +2638,7 @@
 echo "$as_me: WARNING: \`missing' script is too old or missing" >&2;}
 fi
 
-if mkdir -p --version . >/dev/null 2>&1 && test ! -d ./--version; then
+if mkdir -p --version . >/System/Devices/null 2>&1 && test ! -d ./--version; then
   # We used to keeping the `.' as first argument, in order to
   # allow $(mkdir_p) to be used without argument.  As in
   #   $(mkdir_p) $(somedir)
@@ -2722,7 +2722,7 @@
 	@echo 'ac_maketemp="$(MAKE)"'
 _ACEOF
 # GNU make sometimes prints "make[1]: Entering...", which would confuse us.
-eval `${MAKE-make} -f conftest.make 2>/dev/null | grep temp=`
+eval `${MAKE-make} -f conftest.make 2>/System/Devices/null | grep temp=`
 if test -n "$ac_maketemp"; then
   eval ac_cv_prog_make_${ac_make}_set=yes
 else
@@ -2740,14 +2740,14 @@
   SET_MAKE="MAKE=${MAKE-make}"
 fi
 
-rm -rf .tst 2>/dev/null
-mkdir .tst 2>/dev/null
+rm -rf .tst 2>/System/Devices/null
+mkdir .tst 2>/System/Devices/null
 if test -d .tst; then
   am__leading_dot=.
 else
   am__leading_dot=_
 fi
-rmdir .tst 2>/dev/null
+rmdir .tst 2>/System/Devices/null
 
 DEPDIR="${am__leading_dot}deps"
 
@@ -2773,7 +2773,7 @@
 # In particular we don't look at `^make:' because GNU make might
 # be invoked under some other name (usually "gmake"), in which
 # case it prints its new name instead of `make'.
-if test "`$am_make -s -f confmf 2> /dev/null | grep -v 'ing directory'`" = "done"; then
+if test "`$am_make -s -f confmf 2> /System/Devices/null | grep -v 'ing directory'`" = "done"; then
    am__include=include
    am__quote=
    _am_result=GNU
@@ -2781,7 +2781,7 @@
 # Now try BSD make style include.
 if test "$am__include" = "#"; then
    echo '.include "confinc"' > confmf
-   if test "`$am_make -s -f confmf 2> /dev/null`" = "done"; then
+   if test "`$am_make -s -f confmf 2> /System/Devices/null`" = "done"; then
       am__include=.include
       am__quote="\""
       _am_result=BSD
@@ -2824,7 +2824,7 @@
 
 # test whether we have cygpath
 if test -z "$CYGPATH_W"; then
-  if (cygpath --version) >/dev/null 2>/dev/null; then
+  if (cygpath --version) >/System/Devices/null 2>/System/Devices/null; then
     CYGPATH_W='cygpath -w'
   else
     CYGPATH_W=echo
@@ -3005,7 +3005,7 @@
     for i in 1 2 3 4 5 6; do
       echo '#include "conftst'$i'.h"' >> sub/conftest.c
       # Using `: > sub/conftst$i.h' creates only sub/conftst1.h with
-      # Solaris 8's {/usr,}/bin/sh.
+      # Solaris 8's {/usr,}/System/Tools/sh.
       touch sub/conftst$i.h
     done
     echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf
@@ -3029,10 +3029,10 @@
        source=sub/conftest.c object=sub/conftest.${OBJEXT-o} \
        depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
        $SHELL ./depcomp $depcc -c -o sub/conftest.${OBJEXT-o} sub/conftest.c \
-         >/dev/null 2>conftest.err &&
-       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
-       grep sub/conftest.${OBJEXT-o} sub/conftest.Po > /dev/null 2>&1 &&
-       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
+         >/System/Devices/null 2>conftest.err &&
+       grep sub/conftst6.h sub/conftest.Po > /System/Devices/null 2>&1 &&
+       grep sub/conftest.${OBJEXT-o} sub/conftest.Po > /System/Devices/null 2>&1 &&
+       ${MAKE-make} -s -f confmf > /System/Devices/null 2>&1; then
       # icc doesn't choke on unknown options, it will just issue warnings
       # or remarks (even with -Werror).  So we grep stderr for any message
       # that says an option was ignored or not supported.
@@ -3041,7 +3041,7 @@
       # The diagnosis changed in icc 8.0:
       #   icc: Command line remark: option '-MP' not supported
       if (grep 'ignoring option' conftest.err ||
-          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
+          grep 'not supported' conftest.err) >/System/Devices/null 2>&1; then :; else
         am_cv_CC_dependencies_compiler_type=$depmode
         break
       fi
@@ -3327,7 +3327,7 @@
       re_direlt='/[^/][^/]*/\.\./'
       # Canonicalize the path of ld
       ac_prog=`echo $ac_prog| sed 's%\\\\%/%g'`
-      while echo $ac_prog | grep "$re_direlt" > /dev/null 2>&1; do
+      while echo $ac_prog | grep "$re_direlt" > /System/Devices/null 2>&1; do
 	ac_prog=`echo $ac_prog| sed "s%$re_direlt%/%"`
       done
       test -z "$LD" && LD="$ac_prog"
@@ -3360,7 +3360,7 @@
       # Check to see if the program is GNU ld.  I'd rather use --version,
       # but apparently some GNU ld's only accept -v.
       # Break only if it was the GNU/non-GNU ld that we prefer.
-      if "$lt_cv_path_LD" -v 2>&1 < /dev/null | egrep '(GNU|with BFD)' > /dev/null; then
+      if "$lt_cv_path_LD" -v 2>&1 < /System/Devices/null | egrep '(GNU|with BFD)' > /System/Devices/null; then
 	test "$with_gnu_ld" != no && break
       else
 	test "$with_gnu_ld" != yes && break
@@ -3390,7 +3390,7 @@
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
   # I'd rather use --version here, but apparently some GNU ld's only accept -v.
-if $LD -v 2>&1 </dev/null | egrep '(GNU|with BFD)' 1>&5; then
+if $LD -v 2>&1 </System/Devices/null | egrep '(GNU|with BFD)' 1>&5; then
   lt_cv_prog_gnu_ld=yes
 else
   lt_cv_prog_gnu_ld=no
@@ -3430,11 +3430,11 @@
       # Check to see if the nm accepts a BSD-compat flag.
       # Adding the `sed 1q' prevents false positives on HP-UX, which says:
       #   nm: unknown option "B" ignored
-      # Tru64's nm complains that /dev/null is an invalid object file
-      if ($tmp_nm -B /dev/null 2>&1 | sed '1q'; exit 0) | egrep '(/dev/null|Invalid file or object type)' >/dev/null; then
+      # Tru64's nm complains that /System/Devices/null is an invalid object file
+      if ($tmp_nm -B /System/Devices/null 2>&1 | sed '1q'; exit 0) | egrep '(/System/Devices/null|Invalid file or object type)' >/System/Devices/null; then
 	lt_cv_path_NM="$tmp_nm -B"
 	break
-      elif ($tmp_nm -p /dev/null 2>&1 | sed '1q'; exit 0) | egrep /dev/null >/dev/null; then
+      elif ($tmp_nm -p /System/Devices/null 2>&1 | sed '1q'; exit 0) | egrep /System/Devices/null >/System/Devices/null; then
 	lt_cv_path_NM="$tmp_nm -p"
 	break
       else
@@ -3493,7 +3493,7 @@
 
 bsdi4*)
   lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (shared object|dynamic lib)'
-  lt_cv_file_magic_cmd='/usr/bin/file -L'
+  lt_cv_file_magic_cmd='/System/Tools/file -L'
   lt_cv_file_magic_test_file=/shlib/libc.so
   ;;
 
@@ -3504,26 +3504,26 @@
 
 darwin* | rhapsody*)
   lt_cv_deplibs_check_method='file_magic Mach-O dynamically linked shared library'
-  lt_cv_file_magic_cmd='/usr/bin/file -L'
+  lt_cv_file_magic_cmd='/System/Tools/file -L'
   case "$host_os" in
   rhapsody* | darwin1.012)
     lt_cv_file_magic_test_file='/System/Library/Frameworks/System.framework/System'
     ;;
   *) # Darwin 1.3 on
-    lt_cv_file_magic_test_file='/usr/lib/libSystem.dylib'
+    lt_cv_file_magic_test_file='/System/Library/Libraries/libSystem.dylib'
     ;;
   esac
   ;;
 
 freebsd* | kfreebsd*-gnu)
-  if echo __ELF__ | $CC -E - | grep __ELF__ > /dev/null; then
+  if echo __ELF__ | $CC -E - | grep __ELF__ > /System/Devices/null; then
     case $host_cpu in
     i*86 )
       # Not sure whether the presence of OpenBSD here was a mistake.
       # Let's accept both of them until this is cleared up.
       lt_cv_deplibs_check_method='file_magic (FreeBSD|OpenBSD)/i[3-9]86 (compact )?demand paged shared library'
-      lt_cv_file_magic_cmd=/usr/bin/file
-      lt_cv_file_magic_test_file=`echo /usr/lib/libc.so.*`
+      lt_cv_file_magic_cmd=/System/Tools/file
+      lt_cv_file_magic_test_file=`echo /System/Library/Libraries/libc.so.*`
       ;;
     esac
   else
@@ -3539,13 +3539,13 @@
   case $host_cpu in
   hppa*)
     lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|PA-RISC[0-9].[0-9]) shared library'
-    lt_cv_file_magic_cmd=/usr/bin/file
-    lt_cv_file_magic_test_file=/usr/lib/libc.sl
+    lt_cv_file_magic_cmd=/System/Tools/file
+    lt_cv_file_magic_test_file=/System/Library/Libraries/libc.sl
     ;;
   ia64*)
     lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF-[0-9][0-9]) shared object file - IA64'
-    lt_cv_file_magic_cmd=/usr/bin/file
-    lt_cv_file_magic_test_file=/usr/lib/hpux32/libc.so
+    lt_cv_file_magic_cmd=/System/Tools/file
+    lt_cv_file_magic_test_file=/System/Library/Libraries/hpux32/libc.so
     ;;
   esac
   ;;
@@ -3584,7 +3584,7 @@
   ;;
 
 netbsd* | knetbsd*-gnu)
-  if echo __ELF__ | $CC -E - | grep __ELF__ > /dev/null; then
+  if echo __ELF__ | $CC -E - | grep __ELF__ > /System/Devices/null; then
     lt_cv_deplibs_check_method='match_pattern /lib[^/\.]+\.so\.[0-9]+\.[0-9]+$'
   else
     lt_cv_deplibs_check_method='match_pattern /lib[^/\.]+\.so$'
@@ -3593,8 +3593,8 @@
 
 newsos6)
   lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (executable|dynamic lib)'
-  lt_cv_file_magic_cmd=/usr/bin/file
-  lt_cv_file_magic_test_file=/usr/lib/libnls.so
+  lt_cv_file_magic_cmd=/System/Tools/file
+  lt_cv_file_magic_test_file=/System/Library/Libraries/libnls.so
   ;;
 
 osf3* | osf4* | osf5*)
@@ -3624,7 +3624,7 @@
     ;;
   motorola)
     lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (shared object|dynamic lib) M[0-9][0-9]* Version [0-9]'
-    lt_cv_file_magic_test_file=`echo /usr/lib/libc.so*`
+    lt_cv_file_magic_test_file=`echo /System/Library/Libraries/libc.so*`
     ;;
   esac
   ;;
@@ -3670,8 +3670,8 @@
 	"file_magic "*)
 	  file_magic_regex="`expr \"$deplibs_check_method\" : \"file_magic \(.*\)\"`"
 	  MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
-	  if eval $file_magic_cmd \$file_magic_test_file 2> /dev/null |
-	    egrep "$file_magic_regex" > /dev/null; then
+	  if eval $file_magic_cmd \$file_magic_test_file 2> /System/Devices/null |
+	    egrep "$file_magic_regex" > /System/Devices/null; then
 	    :
 	  else
 	    cat <<EOF 1>&2
@@ -3734,8 +3734,8 @@
 	"file_magic "*)
 	  file_magic_regex="`expr \"$deplibs_check_method\" : \"file_magic \(.*\)\"`"
 	  MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
-	  if eval $file_magic_cmd \$file_magic_test_file 2> /dev/null |
-	    egrep "$file_magic_regex" > /dev/null; then
+	  if eval $file_magic_cmd \$file_magic_test_file 2> /System/Devices/null |
+	    egrep "$file_magic_regex" > /System/Devices/null; then
 	    :
 	  else
 	    cat <<EOF 1>&2
@@ -3981,7 +3981,7 @@
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }; then
    if test "$lt_cv_prog_gnu_ld" = yes; then
-    case `/usr/bin/file conftest.$ac_objext` in
+    case `/System/Tools/file conftest.$ac_objext` in
     *32-bit*)
       LD="${LD-ld} -melf32bsmip"
       ;;
@@ -3993,7 +3993,7 @@
       ;;
     esac
    else
-    case `/usr/bin/file conftest.$ac_objext` in
+    case `/System/Tools/file conftest.$ac_objext` in
     *32-bit*)
       LD="${LD-ld} -32"
       ;;
@@ -4017,7 +4017,7 @@
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }; then
-    case "`/usr/bin/file conftest.o`" in
+    case "`/System/Tools/file conftest.o`" in
     *ELF-32*)
       HPUX_IA64_MODE="32"
       ;;
@@ -4157,9 +4157,9 @@
      t end
      /^ac_cv_env/!s/^\([^=]*\)=\(.*\)$/\1=${\1=\2}/
      : end' >>confcache
-if diff $cache_file confcache >/dev/null 2>&1; then :; else
+if diff $cache_file confcache >/System/Devices/null 2>&1; then :; else
   if test -w $cache_file; then
-    test "x$cache_file" != "x/dev/null" && echo "updating cache $cache_file"
+    test "x$cache_file" != "x/System/Devices/null" && echo "updating cache $cache_file"
     cat confcache >$cache_file
   else
     echo "not updating unwritable cache $cache_file"
@@ -4174,7 +4174,7 @@
 AS="$AS" DLLTOOL="$DLLTOOL" OBJDUMP="$OBJDUMP" \
 objext="$OBJEXT" exeext="$EXEEXT" reload_flag="$reload_flag" \
 deplibs_check_method="$deplibs_check_method" file_magic_cmd="$file_magic_cmd" \
-${CONFIG_SHELL-/bin/sh} $ac_aux_dir/ltconfig --no-reexec \
+${CONFIG_SHELL-/System/Tools/sh} $ac_aux_dir/ltconfig --no-reexec \
 $libtool_flags --no-verify --build="$build" $ac_aux_dir/ltmain.sh $host \
 || { { echo "$as_me:$LINENO: error: libtool configure failed" >&5
 echo "$as_me: error: libtool configure failed" >&2;}
@@ -4182,7 +4182,7 @@
 
 # Reload cache, that may have been modified by ltconfig
 if test -r "$cache_file"; then
-  # Some versions of bash will fail to source /dev/null (special
+  # Some versions of bash will fail to source /System/Devices/null (special
   # files actually), so we avoid doing that.
   if test -f "$cache_file"; then
     { echo "$as_me:$LINENO: loading cache $cache_file" >&5
@@ -4700,18 +4700,18 @@
 echo "$as_me:$LINENO:" \
      "checking for C compiler version" >&5
 ac_compiler=`set X $ac_compile; echo $2`
-{ (eval echo "$as_me:$LINENO: \"$ac_compiler --version </dev/null >&5\"") >&5
-  (eval $ac_compiler --version </dev/null >&5) 2>&5
+{ (eval echo "$as_me:$LINENO: \"$ac_compiler --version </System/Devices/null >&5\"") >&5
+  (eval $ac_compiler --version </System/Devices/null >&5) 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
-{ (eval echo "$as_me:$LINENO: \"$ac_compiler -v </dev/null >&5\"") >&5
-  (eval $ac_compiler -v </dev/null >&5) 2>&5
+{ (eval echo "$as_me:$LINENO: \"$ac_compiler -v </System/Devices/null >&5\"") >&5
+  (eval $ac_compiler -v </System/Devices/null >&5) 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
-{ (eval echo "$as_me:$LINENO: \"$ac_compiler -V </dev/null >&5\"") >&5
-  (eval $ac_compiler -V </dev/null >&5) 2>&5
+{ (eval echo "$as_me:$LINENO: \"$ac_compiler -V </System/Devices/null >&5\"") >&5
+  (eval $ac_compiler -V </System/Devices/null >&5) 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
@@ -5239,7 +5239,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -5277,7 +5277,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -5346,7 +5346,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -5384,7 +5384,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -5432,7 +5432,7 @@
 if test "${ac_cv_prog_egrep+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
-  if echo a | (grep -E '(a|b)') >/dev/null 2>&1
+  if echo a | (grep -E '(a|b)') >/System/Devices/null 2>&1
     then ac_cv_prog_egrep='grep -E'
     else ac_cv_prog_egrep='egrep'
     fi
@@ -5509,7 +5509,7 @@
 
 _ACEOF
 if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  $EGREP "memchr" >/dev/null 2>&1; then
+  $EGREP "memchr" >/System/Devices/null 2>&1; then
   :
 else
   ac_cv_header_stdc=no
@@ -5530,7 +5530,7 @@
 
 _ACEOF
 if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  $EGREP "free" >/dev/null 2>&1; then
+  $EGREP "free" >/System/Devices/null 2>&1; then
   :
 else
   ac_cv_header_stdc=no
@@ -5540,7 +5540,7 @@
 fi
 
 if test $ac_cv_header_stdc = yes; then
-  # /bin/cc in Irix-4.0.5 gets non-ANSI ctype macros unless using -ansi.
+  # /System/Tools/cc in Irix-4.0.5 gets non-ANSI ctype macros unless using -ansi.
   if test "$cross_compiling" = yes; then
   :
 else
@@ -6167,7 +6167,7 @@
 
 _ACEOF
 if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  $EGREP "webecray" >/dev/null 2>&1; then
+  $EGREP "webecray" >/System/Devices/null 2>&1; then
   ac_cv_os_cray=yes
 else
   ac_cv_os_cray=no
@@ -6426,7 +6426,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -6863,7 +6863,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -7332,7 +7332,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -7990,7 +7990,7 @@
       fi
 
             if test "$XGETTEXT" != ":"; then
-			if $XGETTEXT --omit-header /dev/null 2> /dev/null; then
+			if $XGETTEXT --omit-header /System/Devices/null 2> /System/Devices/null; then
 	  : ;
 	else
 	  echo "$as_me:$LINENO: result: found xgettext programs is not GNU xgettext; ignore it" >&5
@@ -8143,7 +8143,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -8262,13 +8262,13 @@
 # Find a good install program.  We prefer a C program (faster),
 # so one script is as good as another.  But avoid the broken or
 # incompatible versions:
-# SysV /etc/install, /usr/sbin/install
+# SysV/System/Settings/install, /usr/System/AdminTools/install
 # SunOS /usr/etc/install
-# IRIX /sbin/install
-# AIX /bin/install
+# IRIX /System/AdminTools/install
+# AIX /System/Tools/install
 # AmigaOS /C/install, which installs bootblocks on floppy discs
-# AIX 4 /usr/bin/installbsd, which doesn't work without a -g flag
-# AFS /usr/afsws/bin/install, which mishandles nonexistent args
+# AIX 4 /System/Tools/installbsd, which doesn't work without a -g flag
+# AFS /usr/afsws/System/Tools/install, which mishandles nonexistent args
 # SVR4 /usr/ucb/install, which tries to use the nonexistent group "staff"
 # OS/2's system install, which has a completely different semantic
 # ./install, which can be erroneously created by make from ./install.sh.
@@ -8286,7 +8286,7 @@
   # Account for people who put trailing slashes in PATH elements.
 case $as_dir/ in
   ./ | .// | /cC/* | \
-  /etc/* | /usr/sbin/* | /usr/etc/* | /sbin/* | /usr/afsws/bin/* | \
+ /System/Settings/* | /usr/System/AdminTools/* | /usr/etc/* | /System/AdminTools/* | /usr/afsws/System/Tools/* | \
   ?:\\/os2\\/install\\/* | ?:\\/OS2\\/INSTALL\\/* | \
   /usr/ucb/* ) ;;
   *)
@@ -8297,11 +8297,11 @@
       for ac_exec_ext in '' $ac_executable_extensions; do
 	if $as_executable_p "$as_dir/$ac_prog$ac_exec_ext"; then
 	  if test $ac_prog = install &&
-	    grep dspmsg "$as_dir/$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
+	    grep dspmsg "$as_dir/$ac_prog$ac_exec_ext" >/System/Devices/null 2>&1; then
 	    # AIX install.  It has an incompatible calling convention.
 	    :
 	  elif test $ac_prog = install &&
-	    grep pwplus "$as_dir/$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
+	    grep pwplus "$as_dir/$ac_prog$ac_exec_ext" >/System/Devices/null 2>&1; then
 	    # program-specific install script used by HP pwplus--don't use.
 	    :
 	  else
@@ -8686,7 +8686,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -8838,7 +8838,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -10259,7 +10259,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -11424,7 +11424,7 @@
 if test -n "$enable_targets" ; then
     for targ in `echo $enable_targets | sed 's/,/ /g'`
     do
-	result=`$ac_config_sub $targ 2>/dev/null`
+	result=`$ac_config_sub $targ 2>/System/Devices/null`
 	if test -n "$result" ; then
 	    canon_targets="$canon_targets $result"
 	else
@@ -11852,7 +11852,7 @@
 :__GNUC__:__GNUC_MINOR__:__i386__:
 _ACEOF
 if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  $EGREP ": 2 : 91 : 1 :" >/dev/null 2>&1; then
+  $EGREP ": 2 : 91 : 1 :" >/System/Devices/null 2>&1; then
   bad_64bit_gcc=yes;
 		    echo "$as_me:$LINENO: result: yes: egcs-1.1.2 on ix86 spotted" >&5
 echo "${ECHO_T}yes: egcs-1.1.2 on ix86 spotted" >&6
@@ -12166,7 +12166,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -12678,9 +12678,9 @@
      t end
      /^ac_cv_env/!s/^\([^=]*\)=\(.*\)$/\1=${\1=\2}/
      : end' >>confcache
-if diff $cache_file confcache >/dev/null 2>&1; then :; else
+if diff $cache_file confcache >/System/Devices/null 2>&1; then :; else
   if test -w $cache_file; then
-    test "x$cache_file" != "x/dev/null" && echo "updating cache $cache_file"
+    test "x$cache_file" != "x/System/Devices/null" && echo "updating cache $cache_file"
     cat confcache >$cache_file
   else
     echo "not updating unwritable cache $cache_file"
@@ -12777,19 +12777,19 @@
 ## --------------------- ##
 
 # Be Bourne compatible
-if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
+if test -n "${ZSH_VERSION+set}" && (emulate sh) >/System/Devices/null 2>&1; then
   emulate sh
   NULLCMD=:
   # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
   # is contrary to our usage.  Disable this feature.
   alias -g '${1+"$@"}'='"$@"'
-elif test -n "${BASH_VERSION+set}" && (set -o posix) >/dev/null 2>&1; then
+elif test -n "${BASH_VERSION+set}" && (set -o posix) >/System/Devices/null 2>&1; then
   set -o posix
 fi
 DUALCASE=1; export DUALCASE # for MKS sh
 
 # Support unset when possible.
-if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
+if ( (MAIL=60; unset MAIL) || exit) >/System/Devices/null 2>&1; then
   as_unset=unset
 else
   as_unset=false
@@ -12816,13 +12816,13 @@
 done
 
 # Required to use basename.
-if expr a : '\(a\)' >/dev/null 2>&1; then
+if expr a : '\(a\)' >/System/Devices/null 2>&1; then
   as_expr=expr
 else
   as_expr=false
 fi
 
-if (basename /) >/dev/null 2>&1 && test "X`basename / 2>&1`" = "X/"; then
+if (basename /) >/System/Devices/null 2>&1 && test "X`basename / 2>&1`" = "X/"; then
   as_basename=basename
 else
   as_basename=false
@@ -12834,7 +12834,7 @@
 $as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
 	 X"$0" : 'X\(//\)$' \| \
 	 X"$0" : 'X\(/\)$' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X/"$0" |
     sed '/^.*\/\([^/][^/]*\)\/*$/{ s//\1/; q; }
   	  /^X\/\(\/\/\)$/{ s//\1/; q; }
@@ -12852,10 +12852,10 @@
 
 # The user is always right.
 if test "${PATH_SEPARATOR+set}" != set; then
-  echo "#! /bin/sh" >conf$$.sh
+  echo "#! /System/Tools/sh" >conf$$.sh
   echo  "exit 0"   >>conf$$.sh
   chmod +x conf$$.sh
-  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
+  if (PATH="/nonexistent;."; conf$$.sh) >/System/Devices/null 2>&1; then
     PATH_SEPARATOR=';'
   else
     PATH_SEPARATOR=:
@@ -12866,7 +12866,7 @@
 
   as_lineno_1=$LINENO
   as_lineno_2=$LINENO
-  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
+  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/System/Devices/null`
   test "x$as_lineno_1" != "x$as_lineno_2" &&
   test "x$as_lineno_3"  = "x$as_lineno_2"  || {
   # Find who we are.  Look in the path if we contain no path at all
@@ -12906,9 +12906,9 @@
 	   if ("$as_dir/$as_base" -c '
   as_lineno_1=$LINENO
   as_lineno_2=$LINENO
-  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
+  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/System/Devices/null`
   test "x$as_lineno_1" != "x$as_lineno_2" &&
-  test "x$as_lineno_3"  = "x$as_lineno_2" ') 2>/dev/null; then
+  test "x$as_lineno_3"  = "x$as_lineno_2" ') 2>/System/Devices/null; then
 	     $as_unset BASH_ENV || test "${BASH_ENV+set}" != set || { BASH_ENV=; export BASH_ENV; }
 	     $as_unset ENV || test "${ENV+set}" != set || { ENV=; export ENV; }
 	     CONFIG_SHELL=$as_dir/$as_base
@@ -12960,7 +12960,7 @@
   *)       ECHO_N= ECHO_C='\c' ECHO_T= ;;
 esac
 
-if expr a : '\(a\)' >/dev/null 2>&1; then
+if expr a : '\(a\)' >/System/Devices/null 2>&1; then
   as_expr=expr
 else
   as_expr=false
@@ -12968,7 +12968,7 @@
 
 rm -f conf$$ conf$$.exe conf$$.file
 echo >conf$$.file
-if ln -s conf$$.file conf$$ 2>/dev/null; then
+if ln -s conf$$.file conf$$ 2>/System/Devices/null; then
   # We could just check for DJGPP; but this test a) works b) is more generic
   # and c) will remain valid once DJGPP supports symlinks (DJGPP 2.04).
   if test -f conf$$.exe; then
@@ -12977,14 +12977,14 @@
   else
     as_ln_s='ln -s'
   fi
-elif ln conf$$.file conf$$ 2>/dev/null; then
+elif ln conf$$.file conf$$ 2>/System/Devices/null; then
   as_ln_s=ln
 else
   as_ln_s='cp -p'
 fi
 rm -f conf$$ conf$$.exe conf$$.file
 
-if mkdir -p . 2>/dev/null; then
+if mkdir -p . 2>/System/Devices/null; then
   as_mkdir_p=:
 else
   test -d ./-p && rmdir ./-p
@@ -13033,7 +13033,7 @@
   $ $0 $@
 
 _CSEOF
-echo "on `(hostname || uname -n) 2>/dev/null | sed 1q`" >&5
+echo "on `(hostname || uname -n) 2>/System/Devices/null | sed 1q`" >&5
 echo >&5
 _ACEOF
 
@@ -13167,7 +13167,7 @@
 ac_configure_extra_args=
 
 if $ac_cs_silent; then
-  exec 6>/dev/null
+  exec 6>/System/Devices/null
   ac_configure_extra_args="$ac_configure_extra_args --silent"
 fi
 
@@ -13233,7 +13233,7 @@
 # Create a (secure) tmp directory for tmp files.
 
 {
-  tmp=`(umask 077 && mktemp -d -q "./confstatXXXXXX") 2>/dev/null` &&
+  tmp=`(umask 077 && mktemp -d -q "./confstatXXXXXX") 2>/System/Devices/null` &&
   test -n "$tmp" && test -d "$tmp"
 }  ||
 {
@@ -13460,12 +13460,12 @@
   esac
 
   # Compute @srcdir@, @top_srcdir@, and @INSTALL@ for subdirectories.
-  ac_dir=`(dirname "$ac_file") 2>/dev/null ||
+  ac_dir=`(dirname "$ac_file") 2>/System/Devices/null ||
 $as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$ac_file" : 'X\(//\)[^/]' \| \
 	 X"$ac_file" : 'X\(//\)$' \| \
 	 X"$ac_file" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$ac_file" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -13479,12 +13479,12 @@
     as_dirs=
     while test ! -d "$as_dir"; do
       as_dirs="$as_dir $as_dirs"
-      as_dir=`(dirname "$as_dir") 2>/dev/null ||
+      as_dir=`(dirname "$as_dir") 2>/System/Devices/null ||
 $as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$as_dir" : 'X\(//\)[^/]' \| \
 	 X"$as_dir" : 'X\(//\)$' \| \
 	 X"$as_dir" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$as_dir" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -13604,7 +13604,7 @@
 	   # Source tree
 	   echo "$srcdir/$f"
 	 else
-	   # /dev/null tree
+	   # /System/Devices/null tree
 	   { { echo "$as_me:$LINENO: error: cannot find input file: $f" >&5
 echo "$as_me: error: cannot find input file: $f" >&2;}
    { (exit 1); exit 1; }; }
@@ -13696,7 +13696,7 @@
 	   # Source tree
 	   echo "$srcdir/$f"
 	 else
-	   # /dev/null tree
+	   # /System/Devices/null tree
 	   { { echo "$as_me:$LINENO: error: cannot find input file: $f" >&5
 echo "$as_me: error: cannot find input file: $f" >&2;}
    { (exit 1); exit 1; }; }
@@ -13749,11 +13749,11 @@
 # Break up conftest.defines because some shells have a limit on the size
 # of here documents, and old seds have small limits too (100 cmds).
 echo '  # Handle all the #define templates only if necessary.' >>$CONFIG_STATUS
-echo '  if grep "^[	 ]*#[	 ]*define" $tmp/in >/dev/null; then' >>$CONFIG_STATUS
+echo '  if grep "^[	 ]*#[	 ]*define" $tmp/in >/System/Devices/null; then' >>$CONFIG_STATUS
 echo '  # If there are no defines, we may have an empty if/fi' >>$CONFIG_STATUS
 echo '  :' >>$CONFIG_STATUS
 rm -f conftest.tail
-while grep . conftest.defines >/dev/null
+while grep . conftest.defines >/System/Devices/null
 do
   # Write a limited-size here document to $tmp/defines.sed.
   echo '  cat >$tmp/defines.sed <<CEOF' >>$CONFIG_STATUS
@@ -13780,7 +13780,7 @@
 # of here documents, and old seds have small limits too (100 cmds).
 echo '  # Handle all the #undef templates' >>$CONFIG_STATUS
 rm -f conftest.tail
-while grep . conftest.undefs >/dev/null
+while grep . conftest.undefs >/System/Devices/null
 do
   # Write a limited-size here document to $tmp/undefs.sed.
   echo '  cat >$tmp/undefs.sed <<CEOF' >>$CONFIG_STATUS
@@ -13813,16 +13813,16 @@
   cat $tmp/in >>$tmp/config.h
   rm -f $tmp/in
   if test x"$ac_file" != x-; then
-    if diff $ac_file $tmp/config.h >/dev/null 2>&1; then
+    if diff $ac_file $tmp/config.h >/System/Devices/null 2>&1; then
       { echo "$as_me:$LINENO: $ac_file is unchanged" >&5
 echo "$as_me: $ac_file is unchanged" >&6;}
     else
-      ac_dir=`(dirname "$ac_file") 2>/dev/null ||
+      ac_dir=`(dirname "$ac_file") 2>/System/Devices/null ||
 $as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$ac_file" : 'X\(//\)[^/]' \| \
 	 X"$ac_file" : 'X\(//\)$' \| \
 	 X"$ac_file" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$ac_file" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -13836,12 +13836,12 @@
     as_dirs=
     while test ! -d "$as_dir"; do
       as_dirs="$as_dir $as_dirs"
-      as_dir=`(dirname "$as_dir") 2>/dev/null ||
+      as_dir=`(dirname "$as_dir") 2>/System/Devices/null ||
 $as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$as_dir" : 'X\(//\)[^/]' \| \
 	 X"$as_dir" : 'X\(//\)$' \| \
 	 X"$as_dir" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$as_dir" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -13871,12 +13871,12 @@
       _am_stamp_count=`expr $_am_stamp_count + 1` ;;
   esac
 done
-echo "timestamp for $ac_file" >`(dirname $ac_file) 2>/dev/null ||
+echo "timestamp for $ac_file" >`(dirname $ac_file) 2>/System/Devices/null ||
 $as_expr X$ac_file : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X$ac_file : 'X\(//\)[^/]' \| \
 	 X$ac_file : 'X\(//\)$' \| \
 	 X$ac_file : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X$ac_file |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -13893,12 +13893,12 @@
 for ac_file in : $CONFIG_COMMANDS; do test "x$ac_file" = x: && continue
   ac_dest=`echo "$ac_file" | sed 's,:.*,,'`
   ac_source=`echo "$ac_file" | sed 's,[^:]*:,,'`
-  ac_dir=`(dirname "$ac_dest") 2>/dev/null ||
+  ac_dir=`(dirname "$ac_dest") 2>/System/Devices/null ||
 $as_expr X"$ac_dest" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$ac_dest" : 'X\(//\)[^/]' \| \
 	 X"$ac_dest" : 'X\(//\)$' \| \
 	 X"$ac_dest" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$ac_dest" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -13912,12 +13912,12 @@
     as_dirs=
     while test ! -d "$as_dir"; do
       as_dirs="$as_dir $as_dirs"
-      as_dir=`(dirname "$as_dir") 2>/dev/null ||
+      as_dir=`(dirname "$as_dir") 2>/System/Devices/null ||
 $as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$as_dir" : 'X\(//\)[^/]' \| \
 	 X"$as_dir" : 'X\(//\)$' \| \
 	 X"$as_dir" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$as_dir" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -14008,13 +14008,13 @@
   # Grep'ing the first line is not enough: some people post-process
   # each Makefile.in and add a new line on top of each file to say so.
   # So let's grep whole file.
-  if grep '^#.*generated by automake' $mf > /dev/null 2>&1; then
-    dirpart=`(dirname "$mf") 2>/dev/null ||
+  if grep '^#.*generated by automake' $mf > /System/Devices/null 2>&1; then
+    dirpart=`(dirname "$mf") 2>/System/Devices/null ||
 $as_expr X"$mf" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$mf" : 'X\(//\)[^/]' \| \
 	 X"$mf" : 'X\(//\)$' \| \
 	 X"$mf" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$mf" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -14042,12 +14042,12 @@
        sed -e 's/\$(DEPDIR)/'"$DEPDIR"'/g' -e 's/\$U/'"$U"'/g'`; do
     # Make sure the directory exists.
     test -f "$dirpart/$file" && continue
-    fdir=`(dirname "$file") 2>/dev/null ||
+    fdir=`(dirname "$file") 2>/System/Devices/null ||
 $as_expr X"$file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$file" : 'X\(//\)[^/]' \| \
 	 X"$file" : 'X\(//\)$' \| \
 	 X"$file" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$file" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -14061,12 +14061,12 @@
     as_dirs=
     while test ! -d "$as_dir"; do
       as_dirs="$as_dir $as_dirs"
-      as_dir=`(dirname "$as_dir") 2>/dev/null ||
+      as_dir=`(dirname "$as_dir") 2>/System/Devices/null ||
 $as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$as_dir" : 'X\(//\)[^/]' \| \
 	 X"$as_dir" : 'X\(//\)$' \| \
 	 X"$as_dir" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$as_dir" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -14101,7 +14101,7 @@
 # config.status does its own redirection, appending to config.log.
 # Unfortunately, on DOS this fails, as config.log is still kept open
 # by configure, so config.status won't be able to write to it; its
-# output is simply discarded.  So we exec the FD to /dev/null,
+# output is simply discarded.  So we exec the FD to /System/Devices/null,
 # effectively closing config.log, so it can be properly (re)opened and
 # appended to by config.status.  When coming back to configure, we
 # need to make the FD available again.
@@ -14110,7 +14110,7 @@
   ac_config_status_args=
   test "$silent" = yes &&
     ac_config_status_args="$ac_config_status_args --quiet"
-  exec 5>/dev/null
+  exec 5>/System/Devices/null
   $SHELL $CONFIG_STATUS $ac_config_status_args || ac_cs_success=false
   exec 5>>config.log
   # Use ||, not &&, to avoid exiting from the if with $? = 1, which
diff -urN binutils-2.16.1/bfd/configure.com binutils-2.16.1-STEP/bfd/configure.com
--- binutils-2.16.1/bfd/configure.com	1999-05-03 19:28:55.000000000 +1200
+++ binutils-2.16.1-STEP/bfd/configure.com	2005-09-02 11:16:19.159405904 +1200
@@ -1,7 +1,7 @@
 $!
 $! This file configures the bfd library for use with openVMS (Alpha and Vax)
 $!
-$! We do not use the configure script, since we do not have /bin/sh
+$! We do not use the configure script, since we do not have /System/Tools/sh
 $! to execute it.
 $!
 $! Written by Klaus K"ampf (kkaempf@rmi.de)
diff -urN binutils-2.16.1/bfd/configure.in binutils-2.16.1-STEP/bfd/configure.in
--- binutils-2.16.1/bfd/configure.in	2005-06-13 06:58:40.000000000 +1200
+++ binutils-2.16.1-STEP/bfd/configure.in	2005-09-02 11:16:19.170404232 +1200
@@ -471,7 +471,7 @@
 if test -n "$enable_targets" ; then
     for targ in `echo $enable_targets | sed 's/,/ /g'`
     do
-	result=`$ac_config_sub $targ 2>/dev/null`
+	result=`$ac_config_sub $targ 2>/System/Devices/null`
 	if test -n "$result" ; then
 	    canon_targets="$canon_targets $result"
 	else
diff -urN binutils-2.16.1/bfd/doc/Makefile.in binutils-2.16.1-STEP/bfd/doc/Makefile.in
--- binutils-2.16.1/bfd/doc/Makefile.in	2005-06-13 06:44:56.000000000 +1200
+++ binutils-2.16.1-STEP/bfd/doc/Makefile.in	2005-09-02 11:16:19.279387664 +1200
@@ -409,7 +409,7 @@
 uninstall-info-am:
 	@$(PRE_UNINSTALL)
 	@if (install-info --version && \
-	     install-info --version 2>&1 | sed 1q | grep -i -v debian) >/dev/null 2>&1; then \
+	     install-info --version 2>&1 | sed 1q | grep -i -v debian) >/System/Devices/null 2>&1; then \
 	  list='$(INFO_DEPS)'; \
 	  for file in $$list; do \
 	    relfile=`echo "$$file" | sed 's|^.*/||'`; \
@@ -541,7 +541,7 @@
 	done
 	@$(POST_INSTALL)
 	@if (install-info --version && \
-	     install-info --version 2>&1 | sed 1q | grep -i -v debian) >/dev/null 2>&1; then \
+	     install-info --version 2>&1 | sed 1q | grep -i -v debian) >/System/Devices/null 2>&1; then \
 	  list='$(INFO_DEPS)'; \
 	  for file in $$list; do \
 	    relfile=`echo "$$file" | sed 's|^.*/||'`; \
diff -urN binutils-2.16.1/bfd/doc/bfd.info binutils-2.16.1-STEP/bfd/doc/bfd.info
--- binutils-2.16.1/bfd/doc/bfd.info	2005-06-13 07:32:58.000000000 +1200
+++ binutils-2.16.1-STEP/bfd/doc/bfd.info	2005-09-02 11:16:19.227395568 +1200
@@ -1,5 +1,5 @@
-This is ../.././bfd/doc/bfd.info, produced by makeinfo version 4.7 from
-../.././bfd/doc/bfd.texinfo.
+This is ../../../binutils-2.16.1/bfd/doc/bfd.info, produced by makeinfo
+version 4.8 from ../../../binutils-2.16.1/bfd/doc/bfd.texinfo.
 
 START-INFO-DIR-ENTRY
 * Bfd: (bfd).                   The Binary File Descriptor library.
@@ -17,73 +17,9740 @@
 section entitled "GNU Free Documentation License".
 
 
-Indirect:
-bfd.info-1: 724
-bfd.info-2: 298309
+File: bfd.info,  Node: Top,  Next: Overview,  Prev: (dir),  Up: (dir)
+
+   This file documents the binary file descriptor library libbfd.
+
+* Menu:
+
+* Overview::			Overview of BFD
+* BFD front end::		BFD front end
+* BFD back ends::		BFD back ends
+* GNU Free Documentation License::  GNU Free Documentation License
+* Index::			Index
+
+
+File: bfd.info,  Node: Overview,  Next: BFD front end,  Prev: Top,  Up: Top
+
+1 Introduction
+**************
+
+BFD is a package which allows applications to use the same routines to
+operate on object files whatever the object file format.  A new object
+file format can be supported simply by creating a new BFD back end and
+adding it to the library.
+
+   BFD is split into two parts: the front end, and the back ends (one
+for each object file format).
+   * The front end of BFD provides the interface to the user. It manages
+     memory and various canonical data structures. The front end also
+     decides which back end to use and when to call back end routines.
+
+   * The back ends provide BFD its view of the real world. Each back
+     end provides a set of calls which the BFD front end can use to
+     maintain its canonical form. The back ends also may keep around
+     information for their own use, for greater efficiency.
+
+* Menu:
+
+* History::			History
+* How It Works::		How It Works
+* What BFD Version 2 Can Do::	What BFD Version 2 Can Do
+
+
+File: bfd.info,  Node: History,  Next: How It Works,  Prev: Overview,  Up: Overview
+
+1.1 History
+===========
+
+One spur behind BFD was the desire, on the part of the GNU 960 team at
+Intel Oregon, for interoperability of applications on their COFF and
+b.out file formats.  Cygnus was providing GNU support for the team, and
+was contracted to provide the required functionality.
+
+   The name came from a conversation David Wallace was having with
+Richard Stallman about the library: RMS said that it would be quite
+hard--David said "BFD".  Stallman was right, but the name stuck.
+
+   At the same time, Ready Systems wanted much the same thing, but for
+different object file formats: IEEE-695, Oasys, Srecords, a.out and 68k
+coff.
+
+   BFD was first implemented by members of Cygnus Support; Steve
+Chamberlain (`sac@cygnus.com'), John Gilmore (`gnu@cygnus.com'), K.
+Richard Pixley (`rich@cygnus.com') and David Henkel-Wallace
+(`gumby@cygnus.com').
+
+
+File: bfd.info,  Node: How It Works,  Next: What BFD Version 2 Can Do,  Prev: History,  Up: Overview
+
+1.2 How To Use BFD
+==================
+
+To use the library, include `bfd.h' and link with `libbfd.a'.
+
+   BFD provides a common interface to the parts of an object file for a
+calling application.
+
+   When an application sucessfully opens a target file (object,
+archive, or whatever), a pointer to an internal structure is returned.
+This pointer points to a structure called `bfd', described in `bfd.h'.
+Our convention is to call this pointer a BFD, and instances of it
+within code `abfd'.  All operations on the target object file are
+applied as methods to the BFD.  The mapping is defined within `bfd.h'
+in a set of macros, all beginning with `bfd_' to reduce namespace
+pollution.
+
+   For example, this sequence does what you would probably expect:
+return the number of sections in an object file attached to a BFD
+`abfd'.
+
+     #include "bfd.h"
+
+     unsigned int number_of_sections (abfd)
+     bfd *abfd;
+     {
+       return bfd_count_sections (abfd);
+     }
+
+   The abstraction used within BFD is that an object file has:
+
+   * a header,
+
+   * a number of sections containing raw data (*note Sections::),
+
+   * a set of relocations (*note Relocations::), and
+
+   * some symbol information (*note Symbols::).
+   Also, BFDs opened for archives have the additional attribute of an
+index and contain subordinate BFDs. This approach is fine for a.out and
+coff, but loses efficiency when applied to formats such as S-records and
+IEEE-695.
+
+
+File: bfd.info,  Node: What BFD Version 2 Can Do,  Prev: How It Works,  Up: Overview
+
+1.3 What BFD Version 2 Can Do
+=============================
+
+When an object file is opened, BFD subroutines automatically determine
+the format of the input object file.  They then build a descriptor in
+memory with pointers to routines that will be used to access elements of
+the object file's data structures.
+
+   As different information from the object files is required, BFD
+reads from different sections of the file and processes them.  For
+example, a very common operation for the linker is processing symbol
+tables.  Each BFD back end provides a routine for converting between
+the object file's representation of symbols and an internal canonical
+format. When the linker asks for the symbol table of an object file, it
+calls through a memory pointer to the routine from the relevant BFD
+back end which reads and converts the table into a canonical form.  The
+linker then operates upon the canonical form. When the link is finished
+and the linker writes the output file's symbol table, another BFD back
+end routine is called to take the newly created symbol table and
+convert it into the chosen output format.
+
+* Menu:
+
+* BFD information loss::	Information Loss
+* Canonical format::		The BFD	canonical object-file format
+
+
+File: bfd.info,  Node: BFD information loss,  Next: Canonical format,  Up: What BFD Version 2 Can Do
+
+1.3.1 Information Loss
+----------------------
+
+_Information can be lost during output._ The output formats supported
+by BFD do not provide identical facilities, and information which can
+be described in one form has nowhere to go in another format. One
+example of this is alignment information in `b.out'. There is nowhere
+in an `a.out' format file to store alignment information on the
+contained data, so when a file is linked from `b.out' and an `a.out'
+image is produced, alignment information will not propagate to the
+output file. (The linker will still use the alignment information
+internally, so the link is performed correctly).
+
+   Another example is COFF section names. COFF files may contain an
+unlimited number of sections, each one with a textual section name. If
+the target of the link is a format which does not have many sections
+(e.g., `a.out') or has sections without names (e.g., the Oasys format),
+the link cannot be done simply. You can circumvent this problem by
+describing the desired input-to-output section mapping with the linker
+command language.
+
+   _Information can be lost during canonicalization._ The BFD internal
+canonical form of the external formats is not exhaustive; there are
+structures in input formats for which there is no direct representation
+internally.  This means that the BFD back ends cannot maintain all
+possible data richness through the transformation between external to
+internal and back to external formats.
+
+   This limitation is only a problem when an application reads one
+format and writes another.  Each BFD back end is responsible for
+maintaining as much data as possible, and the internal BFD canonical
+form has structures which are opaque to the BFD core, and exported only
+to the back ends. When a file is read in one format, the canonical form
+is generated for BFD and the application. At the same time, the back
+end saves away any information which may otherwise be lost. If the data
+is then written back in the same format, the back end routine will be
+able to use the canonical form provided by the BFD core as well as the
+information it prepared earlier.  Since there is a great deal of
+commonality between back ends, there is no information lost when
+linking or copying big endian COFF to little endian COFF, or `a.out' to
+`b.out'.  When a mixture of formats is linked, the information is only
+lost from the files whose format differs from the destination.
+
+
+File: bfd.info,  Node: Canonical format,  Prev: BFD information loss,  Up: What BFD Version 2 Can Do
+
+1.3.2 The BFD canonical object-file format
+------------------------------------------
+
+The greatest potential for loss of information occurs when there is the
+least overlap between the information provided by the source format,
+that stored by the canonical format, and that needed by the destination
+format. A brief description of the canonical form may help you
+understand which kinds of data you can count on preserving across
+conversions.  
+
+_files_
+     Information stored on a per-file basis includes target machine
+     architecture, particular implementation format type, a demand
+     pageable bit, and a write protected bit.  Information like Unix
+     magic numbers is not stored here--only the magic numbers' meaning,
+     so a `ZMAGIC' file would have both the demand pageable bit and the
+     write protected text bit set.  The byte order of the target is
+     stored on a per-file basis, so that big- and little-endian object
+     files may be used with one another.
+
+_sections_
+     Each section in the input file contains the name of the section,
+     the section's original address in the object file, size and
+     alignment information, various flags, and pointers into other BFD
+     data structures.
+
+_symbols_
+     Each symbol contains a pointer to the information for the object
+     file which originally defined it, its name, its value, and various
+     flag bits.  When a BFD back end reads in a symbol table, it
+     relocates all symbols to make them relative to the base of the
+     section where they were defined.  Doing this ensures that each
+     symbol points to its containing section.  Each symbol also has a
+     varying amount of hidden private data for the BFD back end.  Since
+     the symbol points to the original file, the private data format
+     for that symbol is accessible.  `ld' can operate on a collection
+     of symbols of wildly different formats without problems.
+
+     Normal global and simple local symbols are maintained on output,
+     so an output file (no matter its format) will retain symbols
+     pointing to functions and to global, static, and common variables.
+     Some symbol information is not worth retaining; in `a.out', type
+     information is stored in the symbol table as long symbol names.
+     This information would be useless to most COFF debuggers; the
+     linker has command line switches to allow users to throw it away.
+
+     There is one word of type information within the symbol, so if the
+     format supports symbol type information within symbols (for
+     example, COFF, IEEE, Oasys) and the type is simple enough to fit
+     within one word (nearly everything but aggregates), the
+     information will be preserved.
+
+_relocation level_
+     Each canonical BFD relocation record contains a pointer to the
+     symbol to relocate to, the offset of the data to relocate, the
+     section the data is in, and a pointer to a relocation type
+     descriptor. Relocation is performed by passing messages through
+     the relocation type descriptor and the symbol pointer. Therefore,
+     relocations can be performed on output data using a relocation
+     method that is only available in one of the input formats. For
+     instance, Oasys provides a byte relocation format.  A relocation
+     record requesting this relocation type would point indirectly to a
+     routine to perform this, so the relocation may be performed on a
+     byte being written to a 68k COFF file, even though 68k COFF has no
+     such relocation type.
+
+_line numbers_
+     Object formats can contain, for debugging purposes, some form of
+     mapping between symbols, source line numbers, and addresses in the
+     output file.  These addresses have to be relocated along with the
+     symbol information.  Each symbol with an associated list of line
+     number records points to the first record of the list.  The head
+     of a line number list consists of a pointer to the symbol, which
+     allows finding out the address of the function whose line number
+     is being described. The rest of the list is made up of pairs:
+     offsets into the section and line numbers. Any format which can
+     simply derive this information can pass it successfully between
+     formats (COFF, IEEE and Oasys).
+
+
+File: bfd.info,  Node: BFD front end,  Next: BFD back ends,  Prev: Overview,  Up: Top
+
+2 BFD Front End
+***************
+
+2.1 `typedef bfd'
+=================
+
+A BFD has type `bfd'; objects of this type are the cornerstone of any
+application using BFD. Using BFD consists of making references though
+the BFD and to data in the BFD.
+
+   Here is the structure that defines the type `bfd'.  It contains the
+major data about the file and pointers to the rest of the data.
+
+
+     struct bfd
+     {
+       /* A unique identifier of the BFD  */
+       unsigned int id;
+
+       /* The filename the application opened the BFD with.  */
+       const char *filename;
+
+       /* A pointer to the target jump table.  */
+       const struct bfd_target *xvec;
+
+       /* The IOSTREAM, and corresponding IO vector that provide access
+          to the file backing the BFD.  */
+       void *iostream;
+       const struct bfd_iovec *iovec;
+
+       /* Is the file descriptor being cached?  That is, can it be closed as
+          needed, and re-opened when accessed later?  */
+       bfd_boolean cacheable;
+
+       /* Marks whether there was a default target specified when the
+          BFD was opened. This is used to select which matching algorithm
+          to use to choose the back end.  */
+       bfd_boolean target_defaulted;
+
+       /* The caching routines use these to maintain a
+          least-recently-used list of BFDs.  */
+       struct bfd *lru_prev, *lru_next;
+
+       /* When a file is closed by the caching routines, BFD retains
+          state information on the file here...  */
+       ufile_ptr where;
+
+       /* ... and here: (``once'' means at least once).  */
+       bfd_boolean opened_once;
+
+       /* Set if we have a locally maintained mtime value, rather than
+          getting it from the file each time.  */
+       bfd_boolean mtime_set;
+
+       /* File modified time, if mtime_set is TRUE.  */
+       long mtime;
+
+       /* Reserved for an unimplemented file locking extension.  */
+       int ifd;
+
+       /* The format which belongs to the BFD. (object, core, etc.)  */
+       bfd_format format;
+
+       /* The direction with which the BFD was opened.  */
+       enum bfd_direction
+         {
+           no_direction = 0,
+           read_direction = 1,
+           write_direction = 2,
+           both_direction = 3
+         }
+       direction;
+
+       /* Format_specific flags.  */
+       flagword flags;
+
+       /* Currently my_archive is tested before adding origin to
+          anything. I believe that this can become always an add of
+          origin, with origin set to 0 for non archive files.  */
+       ufile_ptr origin;
+
+       /* Remember when output has begun, to stop strange things
+          from happening.  */
+       bfd_boolean output_has_begun;
+
+       /* A hash table for section names.  */
+       struct bfd_hash_table section_htab;
+
+       /* Pointer to linked list of sections.  */
+       struct bfd_section *sections;
+
+       /* The place where we add to the section list.  */
+       struct bfd_section **section_tail;
+
+       /* The number of sections.  */
+       unsigned int section_count;
+
+       /* Stuff only useful for object files:
+          The start address.  */
+       bfd_vma start_address;
+
+       /* Used for input and output.  */
+       unsigned int symcount;
+
+       /* Symbol table for output BFD (with symcount entries).  */
+       struct bfd_symbol  **outsymbols;
+
+       /* Used for slurped dynamic symbol tables.  */
+       unsigned int dynsymcount;
+
+       /* Pointer to structure which contains architecture information.  */
+       const struct bfd_arch_info *arch_info;
+
+       /* Flag set if symbols from this BFD should not be exported.  */
+       bfd_boolean no_export;
+
+       /* Stuff only useful for archives.  */
+       void *arelt_data;
+       struct bfd *my_archive;      /* The containing archive BFD.  */
+       struct bfd *next;            /* The next BFD in the archive.  */
+       struct bfd *archive_head;    /* The first BFD in the archive.  */
+       bfd_boolean has_armap;
+
+       /* A chain of BFD structures involved in a link.  */
+       struct bfd *link_next;
+
+       /* A field used by _bfd_generic_link_add_archive_symbols.  This will
+          be used only for archive elements.  */
+       int archive_pass;
+
+       /* Used by the back end to hold private data.  */
+       union
+         {
+           struct aout_data_struct *aout_data;
+           struct artdata *aout_ar_data;
+           struct _oasys_data *oasys_obj_data;
+           struct _oasys_ar_data *oasys_ar_data;
+           struct coff_tdata *coff_obj_data;
+           struct pe_tdata *pe_obj_data;
+           struct xcoff_tdata *xcoff_obj_data;
+           struct ecoff_tdata *ecoff_obj_data;
+           struct ieee_data_struct *ieee_data;
+           struct ieee_ar_data_struct *ieee_ar_data;
+           struct srec_data_struct *srec_data;
+           struct ihex_data_struct *ihex_data;
+           struct tekhex_data_struct *tekhex_data;
+           struct elf_obj_tdata *elf_obj_data;
+           struct nlm_obj_tdata *nlm_obj_data;
+           struct bout_data_struct *bout_data;
+           struct mmo_data_struct *mmo_data;
+           struct sun_core_struct *sun_core_data;
+           struct sco5_core_struct *sco5_core_data;
+           struct trad_core_struct *trad_core_data;
+           struct som_data_struct *som_data;
+           struct hpux_core_struct *hpux_core_data;
+           struct hppabsd_core_struct *hppabsd_core_data;
+           struct sgi_core_struct *sgi_core_data;
+           struct lynx_core_struct *lynx_core_data;
+           struct osf_core_struct *osf_core_data;
+           struct cisco_core_struct *cisco_core_data;
+           struct versados_data_struct *versados_data;
+           struct netbsd_core_struct *netbsd_core_data;
+           struct mach_o_data_struct *mach_o_data;
+           struct mach_o_fat_data_struct *mach_o_fat_data;
+           struct bfd_pef_data_struct *pef_data;
+           struct bfd_pef_xlib_data_struct *pef_xlib_data;
+           struct bfd_sym_data_struct *sym_data;
+           void *any;
+         }
+       tdata;
+
+       /* Used by the application to hold private data.  */
+       void *usrdata;
+
+       /* Where all the allocated stuff under this BFD goes.  This is a
+          struct objalloc *, but we use void * to avoid requiring the inclusion
+          of objalloc.h.  */
+       void *memory;
+     };
+
+2.2 Error reporting
+===================
+
+Most BFD functions return nonzero on success (check their individual
+documentation for precise semantics).  On an error, they call
+`bfd_set_error' to set an error condition that callers can check by
+calling `bfd_get_error'.  If that returns `bfd_error_system_call', then
+check `errno'.
+
+   The easiest way to report a BFD error to the user is to use
+`bfd_perror'.
+
+2.2.1 Type `bfd_error_type'
+---------------------------
+
+The values returned by `bfd_get_error' are defined by the enumerated
+type `bfd_error_type'.
+
+
+     typedef enum bfd_error
+     {
+       bfd_error_no_error = 0,
+       bfd_error_system_call,
+       bfd_error_invalid_target,
+       bfd_error_wrong_format,
+       bfd_error_wrong_object_format,
+       bfd_error_invalid_operation,
+       bfd_error_no_memory,
+       bfd_error_no_symbols,
+       bfd_error_no_armap,
+       bfd_error_no_more_archived_files,
+       bfd_error_malformed_archive,
+       bfd_error_file_not_recognized,
+       bfd_error_file_ambiguously_recognized,
+       bfd_error_no_contents,
+       bfd_error_nonrepresentable_section,
+       bfd_error_no_debug_section,
+       bfd_error_bad_value,
+       bfd_error_file_truncated,
+       bfd_error_file_too_big,
+       bfd_error_invalid_error_code
+     }
+     bfd_error_type;
+   
+2.2.1.1 `bfd_get_error'
+.......................
+
+*Synopsis*
+     bfd_error_type bfd_get_error (void);
+   *Description*
+Return the current BFD error condition.
+
+2.2.1.2 `bfd_set_error'
+.......................
+
+*Synopsis*
+     void bfd_set_error (bfd_error_type error_tag);
+   *Description*
+Set the BFD error condition to be ERROR_TAG.
+
+2.2.1.3 `bfd_errmsg'
+....................
+
+*Synopsis*
+     const char *bfd_errmsg (bfd_error_type error_tag);
+   *Description*
+Return a string describing the error ERROR_TAG, or the system error if
+ERROR_TAG is `bfd_error_system_call'.
+
+2.2.1.4 `bfd_perror'
+....................
+
+*Synopsis*
+     void bfd_perror (const char *message);
+   *Description*
+Print to the standard error stream a string describing the last BFD
+error that occurred, or the last system error if the last BFD error was
+a system call failure.  If MESSAGE is non-NULL and non-empty, the error
+string printed is preceded by MESSAGE, a colon, and a space.  It is
+followed by a newline.
+
+2.2.2 BFD error handler
+-----------------------
+
+Some BFD functions want to print messages describing the problem.  They
+call a BFD error handler function.  This function may be overridden by
+the program.
+
+   The BFD error handler acts like printf.
+
+
+     typedef void (*bfd_error_handler_type) (const char *, ...);
+   
+2.2.2.1 `bfd_set_error_handler'
+...............................
+
+*Synopsis*
+     bfd_error_handler_type bfd_set_error_handler (bfd_error_handler_type);
+   *Description*
+Set the BFD error handler function.  Returns the previous function.
+
+2.2.2.2 `bfd_set_error_program_name'
+....................................
+
+*Synopsis*
+     void bfd_set_error_program_name (const char *);
+   *Description*
+Set the program name to use when printing a BFD error.  This is printed
+before the error message followed by a colon and space.  The string
+must not be changed after it is passed to this function.
+
+2.2.2.3 `bfd_get_error_handler'
+...............................
+
+*Synopsis*
+     bfd_error_handler_type bfd_get_error_handler (void);
+   *Description*
+Return the BFD error handler function.
+
+2.3 Symbols
+===========
+
+2.3.0.1 `bfd_get_reloc_upper_bound'
+...................................
+
+*Synopsis*
+     long bfd_get_reloc_upper_bound (bfd *abfd, asection *sect);
+   *Description*
+Return the number of bytes required to store the relocation information
+associated with section SECT attached to bfd ABFD.  If an error occurs,
+return -1.
+
+2.3.0.2 `bfd_canonicalize_reloc'
+................................
+
+*Synopsis*
+     long bfd_canonicalize_reloc
+        (bfd *abfd, asection *sec, arelent **loc, asymbol **syms);
+   *Description*
+Call the back end associated with the open BFD ABFD and translate the
+external form of the relocation information attached to SEC into the
+internal canonical form.  Place the table into memory at LOC, which has
+been preallocated, usually by a call to `bfd_get_reloc_upper_bound'.
+Returns the number of relocs, or -1 on error.
+
+   The SYMS table is also needed for horrible internal magic reasons.
+
+2.3.0.3 `bfd_set_reloc'
+.......................
+
+*Synopsis*
+     void bfd_set_reloc
+        (bfd *abfd, asection *sec, arelent **rel, unsigned int count);
+   *Description*
+Set the relocation pointer and count within section SEC to the values
+REL and COUNT.  The argument ABFD is ignored.
+
+2.3.0.4 `bfd_set_file_flags'
+............................
+
+*Synopsis*
+     bfd_boolean bfd_set_file_flags (bfd *abfd, flagword flags);
+   *Description*
+Set the flag word in the BFD ABFD to the value FLAGS.
+
+   Possible errors are:
+   * `bfd_error_wrong_format' - The target bfd was not of object format.
+
+   * `bfd_error_invalid_operation' - The target bfd was open for
+     reading.
+
+   * `bfd_error_invalid_operation' - The flag word contained a bit
+     which was not applicable to the type of file.  E.g., an attempt
+     was made to set the `D_PAGED' bit on a BFD format which does not
+     support demand paging.
+
+2.3.0.5 `bfd_get_arch_size'
+...........................
+
+*Synopsis*
+     int bfd_get_arch_size (bfd *abfd);
+   *Description*
+Returns the architecture address size, in bits, as determined by the
+object file's format.  For ELF, this information is included in the
+header.
+
+   *Returns*
+Returns the arch size in bits if known, `-1' otherwise.
+
+2.3.0.6 `bfd_get_sign_extend_vma'
+.................................
+
+*Synopsis*
+     int bfd_get_sign_extend_vma (bfd *abfd);
+   *Description*
+Indicates if the target architecture "naturally" sign extends an
+address.  Some architectures implicitly sign extend address values when
+they are converted to types larger than the size of an address.  For
+instance, bfd_get_start_address() will return an address sign extended
+to fill a bfd_vma when this is the case.
+
+   *Returns*
+Returns `1' if the target architecture is known to sign extend
+addresses, `0' if the target architecture is known to not sign extend
+addresses, and `-1' otherwise.
+
+2.3.0.7 `bfd_set_start_address'
+...............................
+
+*Synopsis*
+     bfd_boolean bfd_set_start_address (bfd *abfd, bfd_vma vma);
+   *Description*
+Make VMA the entry point of output BFD ABFD.
+
+   *Returns*
+Returns `TRUE' on success, `FALSE' otherwise.
+
+2.3.0.8 `bfd_get_gp_size'
+.........................
+
+*Synopsis*
+     unsigned int bfd_get_gp_size (bfd *abfd);
+   *Description*
+Return the maximum size of objects to be optimized using the GP
+register under MIPS ECOFF.  This is typically set by the `-G' argument
+to the compiler, assembler or linker.
+
+2.3.0.9 `bfd_set_gp_size'
+.........................
+
+*Synopsis*
+     void bfd_set_gp_size (bfd *abfd, unsigned int i);
+   *Description*
+Set the maximum size of objects to be optimized using the GP register
+under ECOFF or MIPS ELF.  This is typically set by the `-G' argument to
+the compiler, assembler or linker.
+
+2.3.0.10 `bfd_scan_vma'
+.......................
+
+*Synopsis*
+     bfd_vma bfd_scan_vma (const char *string, const char **end, int base);
+   *Description*
+Convert, like `strtoul', a numerical expression STRING into a `bfd_vma'
+integer, and return that integer.  (Though without as many bells and
+whistles as `strtoul'.)  The expression is assumed to be unsigned
+(i.e., positive).  If given a BASE, it is used as the base for
+conversion.  A base of 0 causes the function to interpret the string in
+hex if a leading "0x" or "0X" is found, otherwise in octal if a leading
+zero is found, otherwise in decimal.
+
+   If the value would overflow, the maximum `bfd_vma' value is returned.
+
+2.3.0.11 `bfd_copy_private_header_data'
+.......................................
+
+*Synopsis*
+     bfd_boolean bfd_copy_private_header_data (bfd *ibfd, bfd *obfd);
+   *Description*
+Copy private BFD header information from the BFD IBFD to the the BFD
+OBFD.  This copies information that may require sections to exist, but
+does not require symbol tables.  Return `true' on success, `false' on
+error.  Possible error returns are:
+
+   * `bfd_error_no_memory' - Not enough memory exists to create private
+     data for OBFD.
+
+     #define bfd_copy_private_header_data(ibfd, obfd) \
+          BFD_SEND (obfd, _bfd_copy_private_header_data, \
+                    (ibfd, obfd))
+
+2.3.0.12 `bfd_copy_private_bfd_data'
+....................................
+
+*Synopsis*
+     bfd_boolean bfd_copy_private_bfd_data (bfd *ibfd, bfd *obfd);
+   *Description*
+Copy private BFD information from the BFD IBFD to the the BFD OBFD.
+Return `TRUE' on success, `FALSE' on error.  Possible error returns are:
+
+   * `bfd_error_no_memory' - Not enough memory exists to create private
+     data for OBFD.
+
+     #define bfd_copy_private_bfd_data(ibfd, obfd) \
+          BFD_SEND (obfd, _bfd_copy_private_bfd_data, \
+                    (ibfd, obfd))
+
+2.3.0.13 `bfd_merge_private_bfd_data'
+.....................................
+
+*Synopsis*
+     bfd_boolean bfd_merge_private_bfd_data (bfd *ibfd, bfd *obfd);
+   *Description*
+Merge private BFD information from the BFD IBFD to the the output file
+BFD OBFD when linking.  Return `TRUE' on success, `FALSE' on error.
+Possible error returns are:
+
+   * `bfd_error_no_memory' - Not enough memory exists to create private
+     data for OBFD.
+
+     #define bfd_merge_private_bfd_data(ibfd, obfd) \
+          BFD_SEND (obfd, _bfd_merge_private_bfd_data, \
+                    (ibfd, obfd))
+
+2.3.0.14 `bfd_set_private_flags'
+................................
+
+*Synopsis*
+     bfd_boolean bfd_set_private_flags (bfd *abfd, flagword flags);
+   *Description*
+Set private BFD flag information in the BFD ABFD.  Return `TRUE' on
+success, `FALSE' on error.  Possible error returns are:
+
+   * `bfd_error_no_memory' - Not enough memory exists to create private
+     data for OBFD.
+
+     #define bfd_set_private_flags(abfd, flags) \
+          BFD_SEND (abfd, _bfd_set_private_flags, (abfd, flags))
+
+2.3.0.15 `Other functions'
+..........................
+
+*Description*
+The following functions exist but have not yet been documented.
+     #define bfd_sizeof_headers(abfd, reloc) \
+            BFD_SEND (abfd, _bfd_sizeof_headers, (abfd, reloc))
+
+     #define bfd_find_nearest_line(abfd, sec, syms, off, file, func, line) \
+            BFD_SEND (abfd, _bfd_find_nearest_line, \
+                      (abfd, sec, syms, off, file, func, line))
+
+     #define bfd_debug_info_start(abfd) \
+            BFD_SEND (abfd, _bfd_debug_info_start, (abfd))
+
+     #define bfd_debug_info_end(abfd) \
+            BFD_SEND (abfd, _bfd_debug_info_end, (abfd))
+
+     #define bfd_debug_info_accumulate(abfd, section) \
+            BFD_SEND (abfd, _bfd_debug_info_accumulate, (abfd, section))
+
+     #define bfd_stat_arch_elt(abfd, stat) \
+            BFD_SEND (abfd, _bfd_stat_arch_elt,(abfd, stat))
+
+     #define bfd_update_armap_timestamp(abfd) \
+            BFD_SEND (abfd, _bfd_update_armap_timestamp, (abfd))
+
+     #define bfd_set_arch_mach(abfd, arch, mach)\
+            BFD_SEND ( abfd, _bfd_set_arch_mach, (abfd, arch, mach))
+
+     #define bfd_relax_section(abfd, section, link_info, again) \
+            BFD_SEND (abfd, _bfd_relax_section, (abfd, section, link_info, again))
+
+     #define bfd_gc_sections(abfd, link_info) \
+            BFD_SEND (abfd, _bfd_gc_sections, (abfd, link_info))
+
+     #define bfd_merge_sections(abfd, link_info) \
+            BFD_SEND (abfd, _bfd_merge_sections, (abfd, link_info))
+
+     #define bfd_is_group_section(abfd, sec) \
+            BFD_SEND (abfd, _bfd_is_group_section, (abfd, sec))
+
+     #define bfd_discard_group(abfd, sec) \
+            BFD_SEND (abfd, _bfd_discard_group, (abfd, sec))
+
+     #define bfd_link_hash_table_create(abfd) \
+            BFD_SEND (abfd, _bfd_link_hash_table_create, (abfd))
+
+     #define bfd_link_hash_table_free(abfd, hash) \
+            BFD_SEND (abfd, _bfd_link_hash_table_free, (hash))
+
+     #define bfd_link_add_symbols(abfd, info) \
+            BFD_SEND (abfd, _bfd_link_add_symbols, (abfd, info))
+
+     #define bfd_link_just_syms(abfd, sec, info) \
+            BFD_SEND (abfd, _bfd_link_just_syms, (sec, info))
+
+     #define bfd_final_link(abfd, info) \
+            BFD_SEND (abfd, _bfd_final_link, (abfd, info))
+
+     #define bfd_free_cached_info(abfd) \
+            BFD_SEND (abfd, _bfd_free_cached_info, (abfd))
+
+     #define bfd_get_dynamic_symtab_upper_bound(abfd) \
+            BFD_SEND (abfd, _bfd_get_dynamic_symtab_upper_bound, (abfd))
+
+     #define bfd_print_private_bfd_data(abfd, file)\
+            BFD_SEND (abfd, _bfd_print_private_bfd_data, (abfd, file))
+
+     #define bfd_canonicalize_dynamic_symtab(abfd, asymbols) \
+            BFD_SEND (abfd, _bfd_canonicalize_dynamic_symtab, (abfd, asymbols))
+
+     #define bfd_get_synthetic_symtab(abfd, count, syms, dyncount, dynsyms, ret) \
+            BFD_SEND (abfd, _bfd_get_synthetic_symtab, (abfd, count, syms, \
+                                                        dyncount, dynsyms, ret))
+
+     #define bfd_get_dynamic_reloc_upper_bound(abfd) \
+            BFD_SEND (abfd, _bfd_get_dynamic_reloc_upper_bound, (abfd))
+
+     #define bfd_canonicalize_dynamic_reloc(abfd, arels, asyms) \
+            BFD_SEND (abfd, _bfd_canonicalize_dynamic_reloc, (abfd, arels, asyms))
+
+     extern bfd_byte *bfd_get_relocated_section_contents
+       (bfd *, struct bfd_link_info *, struct bfd_link_order *, bfd_byte *,
+        bfd_boolean, asymbol **);
+
+2.3.0.16 `bfd_alt_mach_code'
+............................
+
+*Synopsis*
+     bfd_boolean bfd_alt_mach_code (bfd *abfd, int alternative);
+   *Description*
+When more than one machine code number is available for the same
+machine type, this function can be used to switch between the preferred
+one (alternative == 0) and any others.  Currently, only ELF supports
+this feature, with up to two alternate machine codes.
+
+     struct bfd_preserve
+     {
+       void *marker;
+       void *tdata;
+       flagword flags;
+       const struct bfd_arch_info *arch_info;
+       struct bfd_section *sections;
+       struct bfd_section **section_tail;
+       unsigned int section_count;
+       struct bfd_hash_table section_htab;
+     };
+   
+2.3.0.17 `bfd_preserve_save'
+............................
+
+*Synopsis*
+     bfd_boolean bfd_preserve_save (bfd *, struct bfd_preserve *);
+   *Description*
+When testing an object for compatibility with a particular target
+back-end, the back-end object_p function needs to set up certain fields
+in the bfd on successfully recognizing the object.  This typically
+happens in a piecemeal fashion, with failures possible at many points.
+On failure, the bfd is supposed to be restored to its initial state,
+which is virtually impossible.  However, restoring a subset of the bfd
+state works in practice.  This function stores the subset and
+reinitializes the bfd.
+
+2.3.0.18 `bfd_preserve_restore'
+...............................
+
+*Synopsis*
+     void bfd_preserve_restore (bfd *, struct bfd_preserve *);
+   *Description*
+This function restores bfd state saved by bfd_preserve_save.  If MARKER
+is non-NULL in struct bfd_preserve then that block and all subsequently
+bfd_alloc'd memory is freed.
+
+2.3.0.19 `bfd_preserve_finish'
+..............................
+
+*Synopsis*
+     void bfd_preserve_finish (bfd *, struct bfd_preserve *);
+   *Description*
+This function should be called when the bfd state saved by
+bfd_preserve_save is no longer needed.  ie. when the back-end object_p
+function returns with success.
+
+2.3.0.20 `struct bfd_iovec'
+...........................
+
+*Description*
+The `struct bfd_iovec' contains the internal file I/O class.  Each
+`BFD' has an instance of this class and all file I/O is routed through
+it (it is assumed that the instance implements all methods listed
+below).
+     struct bfd_iovec
+     {
+       /* To avoid problems with macros, a "b" rather than "f"
+          prefix is prepended to each method name.  */
+       /* Attempt to read/write NBYTES on ABFD's IOSTREAM storing/fetching
+          bytes starting at PTR.  Return the number of bytes actually
+          transfered (a read past end-of-file returns less than NBYTES),
+          or -1 (setting `bfd_error') if an error occurs.  */
+       file_ptr (*bread) (struct bfd *abfd, void *ptr, file_ptr nbytes);
+       file_ptr (*bwrite) (struct bfd *abfd, const void *ptr,
+                           file_ptr nbytes);
+       /* Return the current IOSTREAM file offset, or -1 (setting `bfd_error'
+          if an error occurs.  */
+       file_ptr (*btell) (struct bfd *abfd);
+       /* For the following, on successful completion a value of 0 is returned.
+          Otherwise, a value of -1 is returned (and  `bfd_error' is set).  */
+       int (*bseek) (struct bfd *abfd, file_ptr offset, int whence);
+       int (*bclose) (struct bfd *abfd);
+       int (*bflush) (struct bfd *abfd);
+       int (*bstat) (struct bfd *abfd, struct stat *sb);
+     };
+
+2.3.0.21 `bfd_get_mtime'
+........................
+
+*Synopsis*
+     long bfd_get_mtime (bfd *abfd);
+   *Description*
+Return the file modification time (as read from the file system, or
+from the archive header for archive members).
+
+2.3.0.22 `bfd_get_size'
+.......................
+
+*Synopsis*
+     long bfd_get_size (bfd *abfd);
+   *Description*
+Return the file size (as read from file system) for the file associated
+with BFD ABFD.
+
+   The initial motivation for, and use of, this routine is not so we
+can get the exact size of the object the BFD applies to, since that
+might not be generally possible (archive members for example).  It
+would be ideal if someone could eventually modify it so that such
+results were guaranteed.
+
+   Instead, we want to ask questions like "is this NNN byte sized
+object I'm about to try read from file offset YYY reasonable?"  As as
+example of where we might do this, some object formats use string
+tables for which the first `sizeof (long)' bytes of the table contain
+the size of the table itself, including the size bytes.  If an
+application tries to read what it thinks is one of these string tables,
+without some way to validate the size, and for some reason the size is
+wrong (byte swapping error, wrong location for the string table, etc.),
+the only clue is likely to be a read error when it tries to read the
+table, or a "virtual memory exhausted" error when it tries to allocate
+15 bazillon bytes of space for the 15 bazillon byte table it is about
+to read.  This function at least allows us to answer the question, "is
+the size reasonable?".
+
+* Menu:
+
+* Memory Usage::
+* Initialization::
+* Sections::
+* Symbols::
+* Archives::
+* Formats::
+* Relocations::
+* Core Files::
+* Targets::
+* Architectures::
+* Opening and Closing::
+* Internal::
+* File Caching::
+* Linker Functions::
+* Hash Tables::
+
+
+File: bfd.info,  Node: Memory Usage,  Next: Initialization,  Prev: BFD front end,  Up: BFD front end
+
+2.4 Memory Usage
+================
+
+BFD keeps all of its internal structures in obstacks. There is one
+obstack per open BFD file, into which the current state is stored. When
+a BFD is closed, the obstack is deleted, and so everything which has
+been allocated by BFD for the closing file is thrown away.
+
+   BFD does not free anything created by an application, but pointers
+into `bfd' structures become invalid on a `bfd_close'; for example,
+after a `bfd_close' the vector passed to `bfd_canonicalize_symtab' is
+still around, since it has been allocated by the application, but the
+data that it pointed to are lost.
+
+   The general rule is to not close a BFD until all operations dependent
+upon data from the BFD have been completed, or all the data from within
+the file has been copied. To help with the management of memory, there
+is a function (`bfd_alloc_size') which returns the number of bytes in
+obstacks associated with the supplied BFD. This could be used to select
+the greediest open BFD, close it to reclaim the memory, perform some
+operation and reopen the BFD again, to get a fresh copy of the data
+structures.
+
+
+File: bfd.info,  Node: Initialization,  Next: Sections,  Prev: Memory Usage,  Up: BFD front end
+
+2.5 Initialization
+==================
+
+These are the functions that handle initializing a BFD.
+
+2.5.0.1 `bfd_init'
+..................
+
+*Synopsis*
+     void bfd_init (void);
+   *Description*
+This routine must be called before any other BFD function to initialize
+magical internal data structures.
+
+
+File: bfd.info,  Node: Sections,  Next: Symbols,  Prev: Initialization,  Up: BFD front end
+
+2.6 Sections
+============
+
+The raw data contained within a BFD is maintained through the section
+abstraction.  A single BFD may have any number of sections.  It keeps
+hold of them by pointing to the first; each one points to the next in
+the list.
+
+   Sections are supported in BFD in `section.c'.
+
+* Menu:
+
+* Section Input::
+* Section Output::
+* typedef asection::
+* section prototypes::
+
+
+File: bfd.info,  Node: Section Input,  Next: Section Output,  Prev: Sections,  Up: Sections
+
+2.6.1 Section input
+-------------------
+
+When a BFD is opened for reading, the section structures are created
+and attached to the BFD.
+
+   Each section has a name which describes the section in the outside
+world--for example, `a.out' would contain at least three sections,
+called `.text', `.data' and `.bss'.
+
+   Names need not be unique; for example a COFF file may have several
+sections named `.data'.
+
+   Sometimes a BFD will contain more than the "natural" number of
+sections. A back end may attach other sections containing constructor
+data, or an application may add a section (using `bfd_make_section') to
+the sections attached to an already open BFD. For example, the linker
+creates an extra section `COMMON' for each input file's BFD to hold
+information about common storage.
+
+   The raw data is not necessarily read in when the section descriptor
+is created. Some targets may leave the data in place until a
+`bfd_get_section_contents' call is made. Other back ends may read in
+all the data at once.  For example, an S-record file has to be read
+once to determine the size of the data. An IEEE-695 file doesn't
+contain raw data in sections, but data and relocation expressions
+intermixed, so the data area has to be parsed to get out the data and
+relocations.
+
+
+File: bfd.info,  Node: Section Output,  Next: typedef asection,  Prev: Section Input,  Up: Sections
+
+2.6.2 Section output
+--------------------
+
+To write a new object style BFD, the various sections to be written
+have to be created. They are attached to the BFD in the same way as
+input sections; data is written to the sections using
+`bfd_set_section_contents'.
+
+   Any program that creates or combines sections (e.g., the assembler
+and linker) must use the `asection' fields `output_section' and
+`output_offset' to indicate the file sections to which each section
+must be written.  (If the section is being created from scratch,
+`output_section' should probably point to the section itself and
+`output_offset' should probably be zero.)
+
+   The data to be written comes from input sections attached (via
+`output_section' pointers) to the output sections.  The output section
+structure can be considered a filter for the input section: the output
+section determines the vma of the output data and the name, but the
+input section determines the offset into the output section of the data
+to be written.
+
+   E.g., to create a section "O", starting at 0x100, 0x123 long,
+containing two subsections, "A" at offset 0x0 (i.e., at vma 0x100) and
+"B" at offset 0x20 (i.e., at vma 0x120) the `asection' structures would
+look like:
+
+        section name          "A"
+          output_offset   0x00
+          size            0x20
+          output_section ----------->  section name    "O"
+                                  |    vma             0x100
+        section name          "B" |    size            0x123
+          output_offset   0x20    |
+          size            0x103   |
+          output_section  --------|
+
+2.6.3 Link orders
+-----------------
+
+The data within a section is stored in a "link_order".  These are much
+like the fixups in `gas'.  The link_order abstraction allows a section
+to grow and shrink within itself.
+
+   A link_order knows how big it is, and which is the next link_order
+and where the raw data for it is; it also points to a list of
+relocations which apply to it.
+
+   The link_order is used by the linker to perform relaxing on final
+code.  The compiler creates code which is as big as necessary to make
+it work without relaxing, and the user can select whether to relax.
+Sometimes relaxing takes a lot of time.  The linker runs around the
+relocations to see if any are attached to data which can be shrunk, if
+so it does it on a link_order by link_order basis.
+
+
+File: bfd.info,  Node: typedef asection,  Next: section prototypes,  Prev: Section Output,  Up: Sections
+
+2.6.4 typedef asection
+----------------------
+
+Here is the section structure:
+
+
+     typedef struct bfd_section
+     {
+       /* The name of the section; the name isn't a copy, the pointer is
+          the same as that passed to bfd_make_section.  */
+       const char *name;
+
+       /* A unique sequence number.  */
+       int id;
+
+       /* Which section in the bfd; 0..n-1 as sections are created in a bfd.  */
+       int index;
+
+       /* The next section in the list belonging to the BFD, or NULL.  */
+       struct bfd_section *next;
+
+       /* The field flags contains attributes of the section. Some
+          flags are read in from the object file, and some are
+          synthesized from other information.  */
+       flagword flags;
+
+     #define SEC_NO_FLAGS   0x000
+
+       /* Tells the OS to allocate space for this section when loading.
+          This is clear for a section containing debug information only.  */
+     #define SEC_ALLOC      0x001
+
+       /* Tells the OS to load the section from the file when loading.
+          This is clear for a .bss section.  */
+     #define SEC_LOAD       0x002
+
+       /* The section contains data still to be relocated, so there is
+          some relocation information too.  */
+     #define SEC_RELOC      0x004
+
+       /* A signal to the OS that the section contains read only data.  */
+     #define SEC_READONLY   0x008
+
+       /* The section contains code only.  */
+     #define SEC_CODE       0x010
+
+       /* The section contains data only.  */
+     #define SEC_DATA       0x020
+
+       /* The section will reside in ROM.  */
+     #define SEC_ROM        0x040
+
+       /* The section contains constructor information. This section
+          type is used by the linker to create lists of constructors and
+          destructors used by `g++'. When a back end sees a symbol
+          which should be used in a constructor list, it creates a new
+          section for the type of name (e.g., `__CTOR_LIST__'), attaches
+          the symbol to it, and builds a relocation. To build the lists
+          of constructors, all the linker has to do is catenate all the
+          sections called `__CTOR_LIST__' and relocate the data
+          contained within - exactly the operations it would peform on
+          standard data.  */
+     #define SEC_CONSTRUCTOR 0x080
+
+       /* The section has contents - a data section could be
+          `SEC_ALLOC' | `SEC_HAS_CONTENTS'; a debug section could be
+          `SEC_HAS_CONTENTS'  */
+     #define SEC_HAS_CONTENTS 0x100
+
+       /* An instruction to the linker to not output the section
+          even if it has information which would normally be written.  */
+     #define SEC_NEVER_LOAD 0x200
+
+       /* The section contains thread local data.  */
+     #define SEC_THREAD_LOCAL 0x400
+
+       /* The section has GOT references.  This flag is only for the
+          linker, and is currently only used by the elf32-hppa back end.
+          It will be set if global offset table references were detected
+          in this section, which indicate to the linker that the section
+          contains PIC code, and must be handled specially when doing a
+          static link.  */
+     #define SEC_HAS_GOT_REF 0x800
+
+       /* The section contains common symbols (symbols may be defined
+          multiple times, the value of a symbol is the amount of
+          space it requires, and the largest symbol value is the one
+          used).  Most targets have exactly one of these (which we
+          translate to bfd_com_section_ptr), but ECOFF has two.  */
+     #define SEC_IS_COMMON 0x1000
+
+       /* The section contains only debugging information.  For
+          example, this is set for ELF .debug and .stab sections.
+          strip tests this flag to see if a section can be
+          discarded.  */
+     #define SEC_DEBUGGING 0x2000
+
+       /* The contents of this section are held in memory pointed to
+          by the contents field.  This is checked by bfd_get_section_contents,
+          and the data is retrieved from memory if appropriate.  */
+     #define SEC_IN_MEMORY 0x4000
+
+       /* The contents of this section are to be excluded by the
+          linker for executable and shared objects unless those
+          objects are to be further relocated.  */
+     #define SEC_EXCLUDE 0x8000
+
+       /* The contents of this section are to be sorted based on the sum of
+          the symbol and addend values specified by the associated relocation
+          entries.  Entries without associated relocation entries will be
+          appended to the end of the section in an unspecified order.  */
+     #define SEC_SORT_ENTRIES 0x10000
+
+       /* When linking, duplicate sections of the same name should be
+          discarded, rather than being combined into a single section as
+          is usually done.  This is similar to how common symbols are
+          handled.  See SEC_LINK_DUPLICATES below.  */
+     #define SEC_LINK_ONCE 0x20000
+
+       /* If SEC_LINK_ONCE is set, this bitfield describes how the linker
+          should handle duplicate sections.  */
+     #define SEC_LINK_DUPLICATES 0x40000
+
+       /* This value for SEC_LINK_DUPLICATES means that duplicate
+          sections with the same name should simply be discarded.  */
+     #define SEC_LINK_DUPLICATES_DISCARD 0x0
+
+       /* This value for SEC_LINK_DUPLICATES means that the linker
+          should warn if there are any duplicate sections, although
+          it should still only link one copy.  */
+     #define SEC_LINK_DUPLICATES_ONE_ONLY 0x80000
+
+       /* This value for SEC_LINK_DUPLICATES means that the linker
+          should warn if any duplicate sections are a different size.  */
+     #define SEC_LINK_DUPLICATES_SAME_SIZE 0x100000
+
+       /* This value for SEC_LINK_DUPLICATES means that the linker
+          should warn if any duplicate sections contain different
+          contents.  */
+     #define SEC_LINK_DUPLICATES_SAME_CONTENTS \
+       (SEC_LINK_DUPLICATES_ONE_ONLY | SEC_LINK_DUPLICATES_SAME_SIZE)
+
+       /* This section was created by the linker as part of dynamic
+          relocation or other arcane processing.  It is skipped when
+          going through the first-pass output, trusting that someone
+          else up the line will take care of it later.  */
+     #define SEC_LINKER_CREATED 0x200000
+
+       /* This section should not be subject to garbage collection.  */
+     #define SEC_KEEP 0x400000
+
+       /* This section contains "short" data, and should be placed
+          "near" the GP.  */
+     #define SEC_SMALL_DATA 0x800000
+
+       /* Attempt to merge identical entities in the section.
+          Entity size is given in the entsize field.  */
+     #define SEC_MERGE 0x1000000
+
+       /* If given with SEC_MERGE, entities to merge are zero terminated
+          strings where entsize specifies character size instead of fixed
+          size entries.  */
+     #define SEC_STRINGS 0x2000000
+
+       /* This section contains data about section groups.  */
+     #define SEC_GROUP 0x4000000
+
+       /* The section is a COFF shared library section.  This flag is
+          only for the linker.  If this type of section appears in
+          the input file, the linker must copy it to the output file
+          without changing the vma or size.  FIXME: Although this
+          was originally intended to be general, it really is COFF
+          specific (and the flag was renamed to indicate this).  It
+          might be cleaner to have some more general mechanism to
+          allow the back end to control what the linker does with
+          sections.  */
+     #define SEC_COFF_SHARED_LIBRARY 0x10000000
+
+       /* This section contains data which may be shared with other
+          executables or shared objects. This is for COFF only.  */
+     #define SEC_COFF_SHARED 0x20000000
+
+       /* When a section with this flag is being linked, then if the size of
+          the input section is less than a page, it should not cross a page
+          boundary.  If the size of the input section is one page or more,
+          it should be aligned on a page boundary.  This is for TI
+          TMS320C54X only.  */
+     #define SEC_TIC54X_BLOCK 0x40000000
+
+       /* Conditionally link this section; do not link if there are no
+          references found to any symbol in the section.  This is for TI
+          TMS320C54X only.  */
+     #define SEC_TIC54X_CLINK 0x80000000
+
+       /*  End of section flags.  */
+
+       /* Some internal packed boolean fields.  */
+
+       /* See the vma field.  */
+       unsigned int user_set_vma : 1;
+
+       /* A mark flag used by some of the linker backends.  */
+       unsigned int linker_mark : 1;
+
+       /* Another mark flag used by some of the linker backends.  Set for
+          output sections that have an input section.  */
+       unsigned int linker_has_input : 1;
+
+       /* A mark flag used by some linker backends for garbage collection.  */
+       unsigned int gc_mark : 1;
+
+       /* The following flags are used by the ELF linker. */
+
+       /* Mark sections which have been allocated to segments.  */
+       unsigned int segment_mark : 1;
+
+       /* Type of sec_info information.  */
+       unsigned int sec_info_type:3;
+     #define ELF_INFO_TYPE_NONE      0
+     #define ELF_INFO_TYPE_STABS     1
+     #define ELF_INFO_TYPE_MERGE     2
+     #define ELF_INFO_TYPE_EH_FRAME  3
+     #define ELF_INFO_TYPE_JUST_SYMS 4
+
+       /* Nonzero if this section uses RELA relocations, rather than REL.  */
+       unsigned int use_rela_p:1;
+
+       /* Bits used by various backends.  The generic code doesn't touch
+          these fields.  */
+
+       /* Nonzero if this section has TLS related relocations.  */
+       unsigned int has_tls_reloc:1;
+
+       /* Nonzero if this section has a gp reloc.  */
+       unsigned int has_gp_reloc:1;
+
+       /* Nonzero if this section needs the relax finalize pass.  */
+       unsigned int need_finalize_relax:1;
+
+       /* Whether relocations have been processed.  */
+       unsigned int reloc_done : 1;
+
+       /* End of internal packed boolean fields.  */
+
+       /*  The virtual memory address of the section - where it will be
+           at run time.  The symbols are relocated against this.  The
+           user_set_vma flag is maintained by bfd; if it's not set, the
+           backend can assign addresses (for example, in `a.out', where
+           the default address for `.data' is dependent on the specific
+           target and various flags).  */
+       bfd_vma vma;
+
+       /*  The load address of the section - where it would be in a
+           rom image; really only used for writing section header
+           information.  */
+       bfd_vma lma;
+
+       /* The size of the section in octets, as it will be output.
+          Contains a value even if the section has no contents (e.g., the
+          size of `.bss').  */
+       bfd_size_type size;
+
+       /* For input sections, the original size on disk of the section, in
+          octets.  This field is used by the linker relaxation code.  It is
+          currently only set for sections where the linker relaxation scheme
+          doesn't cache altered section and reloc contents (stabs, eh_frame,
+          SEC_MERGE, some coff relaxing targets), and thus the original size
+          needs to be kept to read the section multiple times.
+          For output sections, rawsize holds the section size calculated on
+          a previous linker relaxation pass.  */
+       bfd_size_type rawsize;
+
+       /* If this section is going to be output, then this value is the
+          offset in *bytes* into the output section of the first byte in the
+          input section (byte ==> smallest addressable unit on the
+          target).  In most cases, if this was going to start at the
+          100th octet (8-bit quantity) in the output section, this value
+          would be 100.  However, if the target byte size is 16 bits
+          (bfd_octets_per_byte is "2"), this value would be 50.  */
+       bfd_vma output_offset;
+
+       /* The output section through which to map on output.  */
+       struct bfd_section *output_section;
+
+       /* The alignment requirement of the section, as an exponent of 2 -
+          e.g., 3 aligns to 2^3 (or 8).  */
+       unsigned int alignment_power;
+
+       /* If an input section, a pointer to a vector of relocation
+          records for the data in this section.  */
+       struct reloc_cache_entry *relocation;
+
+       /* If an output section, a pointer to a vector of pointers to
+          relocation records for the data in this section.  */
+       struct reloc_cache_entry **orelocation;
+
+       /* The number of relocation records in one of the above.  */
+       unsigned reloc_count;
+
+       /* Information below is back end specific - and not always used
+          or updated.  */
+
+       /* File position of section data.  */
+       file_ptr filepos;
+
+       /* File position of relocation info.  */
+       file_ptr rel_filepos;
+
+       /* File position of line data.  */
+       file_ptr line_filepos;
+
+       /* Pointer to data for applications.  */
+       void *userdata;
+
+       /* If the SEC_IN_MEMORY flag is set, this points to the actual
+          contents.  */
+       unsigned char *contents;
+
+       /* Attached line number information.  */
+       alent *lineno;
+
+       /* Number of line number records.  */
+       unsigned int lineno_count;
+
+       /* Entity size for merging purposes.  */
+       unsigned int entsize;
+
+       /* Points to the kept section if this section is a link-once section,
+          and is discarded.  */
+       struct bfd_section *kept_section;
+
+       /* When a section is being output, this value changes as more
+          linenumbers are written out.  */
+       file_ptr moving_line_filepos;
+
+       /* What the section number is in the target world.  */
+       int target_index;
+
+       void *used_by_bfd;
+
+       /* If this is a constructor section then here is a list of the
+          relocations created to relocate items within it.  */
+       struct relent_chain *constructor_chain;
+
+       /* The BFD which owns the section.  */
+       bfd *owner;
+
+       /* A symbol which points at this section only.  */
+       struct bfd_symbol *symbol;
+       struct bfd_symbol **symbol_ptr_ptr;
+
+       struct bfd_link_order *link_order_head;
+       struct bfd_link_order *link_order_tail;
+     } asection;
+
+     /* These sections are global, and are managed by BFD.  The application
+        and target back end are not permitted to change the values in
+        these sections.  New code should use the section_ptr macros rather
+        than referring directly to the const sections.  The const sections
+        may eventually vanish.  */
+     #define BFD_ABS_SECTION_NAME "*ABS*"
+     #define BFD_UND_SECTION_NAME "*UND*"
+     #define BFD_COM_SECTION_NAME "*COM*"
+     #define BFD_IND_SECTION_NAME "*IND*"
+
+     /* The absolute section.  */
+     extern asection bfd_abs_section;
+     #define bfd_abs_section_ptr ((asection *) &bfd_abs_section)
+     #define bfd_is_abs_section(sec) ((sec) == bfd_abs_section_ptr)
+     /* Pointer to the undefined section.  */
+     extern asection bfd_und_section;
+     #define bfd_und_section_ptr ((asection *) &bfd_und_section)
+     #define bfd_is_und_section(sec) ((sec) == bfd_und_section_ptr)
+     /* Pointer to the common section.  */
+     extern asection bfd_com_section;
+     #define bfd_com_section_ptr ((asection *) &bfd_com_section)
+     /* Pointer to the indirect section.  */
+     extern asection bfd_ind_section;
+     #define bfd_ind_section_ptr ((asection *) &bfd_ind_section)
+     #define bfd_is_ind_section(sec) ((sec) == bfd_ind_section_ptr)
+
+     #define bfd_is_const_section(SEC)              \
+      (   ((SEC) == bfd_abs_section_ptr)            \
+       || ((SEC) == bfd_und_section_ptr)            \
+       || ((SEC) == bfd_com_section_ptr)            \
+       || ((SEC) == bfd_ind_section_ptr))
+
+     extern const struct bfd_symbol * const bfd_abs_symbol;
+     extern const struct bfd_symbol * const bfd_com_symbol;
+     extern const struct bfd_symbol * const bfd_und_symbol;
+     extern const struct bfd_symbol * const bfd_ind_symbol;
+
+     /* Macros to handle insertion and deletion of a bfd's sections.  These
+        only handle the list pointers, ie. do not adjust section_count,
+        target_index etc.  */
+     #define bfd_section_list_remove(ABFD, PS) \
+       do                                                   \
+         {                                                  \
+           asection **_ps = PS;                             \
+           asection *_s = *_ps;                             \
+           *_ps = _s->next;                                 \
+           if (_s->next == NULL)                            \
+             (ABFD)->section_tail = _ps;                    \
+         }                                                  \
+       while (0)
+     #define bfd_section_list_insert(ABFD, PS, S) \
+       do                                                   \
+         {                                                  \
+           asection **_ps = PS;                             \
+           asection *_s = S;                                \
+           _s->next = *_ps;                                 \
+           *_ps = _s;                                       \
+           if (_s->next == NULL)                            \
+             (ABFD)->section_tail = &_s->next;              \
+         }                                                  \
+       while (0)
+
+
+File: bfd.info,  Node: section prototypes,  Prev: typedef asection,  Up: Sections
+
+2.6.5 Section prototypes
+------------------------
+
+These are the functions exported by the section handling part of BFD.
+
+2.6.5.1 `bfd_section_list_clear'
+................................
+
+*Synopsis*
+     void bfd_section_list_clear (bfd *);
+   *Description*
+Clears the section list, and also resets the section count and hash
+table entries.
+
+2.6.5.2 `bfd_get_section_by_name'
+.................................
+
+*Synopsis*
+     asection *bfd_get_section_by_name (bfd *abfd, const char *name);
+   *Description*
+Run through ABFD and return the one of the `asection's whose name
+matches NAME, otherwise `NULL'.  *Note Sections::, for more information.
+
+   This should only be used in special cases; the normal way to process
+all sections of a given name is to use `bfd_map_over_sections' and
+`strcmp' on the name (or better yet, base it on the section flags or
+something else) for each section.
+
+2.6.5.3 `bfd_get_section_by_name_if'
+....................................
+
+*Synopsis*
+     asection *bfd_get_section_by_name_if
+        (bfd *abfd,
+         const char *name,
+         bfd_boolean (*func) (bfd *abfd, asection *sect, void *obj),
+         void *obj);
+   *Description*
+Call the provided function FUNC for each section attached to the BFD
+ABFD whose name matches NAME, passing OBJ as an argument. The function
+will be called as if by
+
+            func (abfd, the_section, obj);
+
+   It returns the first section for which FUNC returns true, otherwise
+`NULL'.
+
+2.6.5.4 `bfd_get_unique_section_name'
+.....................................
+
+*Synopsis*
+     char *bfd_get_unique_section_name
+        (bfd *abfd, const char *templat, int *count);
+   *Description*
+Invent a section name that is unique in ABFD by tacking a dot and a
+digit suffix onto the original TEMPLAT.  If COUNT is non-NULL, then it
+specifies the first number tried as a suffix to generate a unique name.
+The value pointed to by COUNT will be incremented in this case.
+
+2.6.5.5 `bfd_make_section_old_way'
+..................................
+
+*Synopsis*
+     asection *bfd_make_section_old_way (bfd *abfd, const char *name);
+   *Description*
+Create a new empty section called NAME and attach it to the end of the
+chain of sections for the BFD ABFD. An attempt to create a section with
+a name which is already in use returns its pointer without changing the
+section chain.
+
+   It has the funny name since this is the way it used to be before it
+was rewritten....
+
+   Possible errors are:
+   * `bfd_error_invalid_operation' - If output has already started for
+     this BFD.
+
+   * `bfd_error_no_memory' - If memory allocation fails.
+
+2.6.5.6 `bfd_make_section_anyway'
+.................................
+
+*Synopsis*
+     asection *bfd_make_section_anyway (bfd *abfd, const char *name);
+   *Description*
+Create a new empty section called NAME and attach it to the end of the
+chain of sections for ABFD.  Create a new section even if there is
+already a section with that name.
+
+   Return `NULL' and set `bfd_error' on error; possible errors are:
+   * `bfd_error_invalid_operation' - If output has already started for
+     ABFD.
+
+   * `bfd_error_no_memory' - If memory allocation fails.
+
+2.6.5.7 `bfd_make_section'
+..........................
+
+*Synopsis*
+     asection *bfd_make_section (bfd *, const char *name);
+   *Description*
+Like `bfd_make_section_anyway', but return `NULL' (without calling
+bfd_set_error ()) without changing the section chain if there is
+already a section named NAME.  If there is an error, return `NULL' and
+set `bfd_error'.
+
+2.6.5.8 `bfd_set_section_flags'
+...............................
+
+*Synopsis*
+     bfd_boolean bfd_set_section_flags
+        (bfd *abfd, asection *sec, flagword flags);
+   *Description*
+Set the attributes of the section SEC in the BFD ABFD to the value
+FLAGS. Return `TRUE' on success, `FALSE' on error. Possible error
+returns are:
+
+   * `bfd_error_invalid_operation' - The section cannot have one or
+     more of the attributes requested. For example, a .bss section in
+     `a.out' may not have the `SEC_HAS_CONTENTS' field set.
+
+2.6.5.9 `bfd_map_over_sections'
+...............................
+
+*Synopsis*
+     void bfd_map_over_sections
+        (bfd *abfd,
+         void (*func) (bfd *abfd, asection *sect, void *obj),
+         void *obj);
+   *Description*
+Call the provided function FUNC for each section attached to the BFD
+ABFD, passing OBJ as an argument. The function will be called as if by
+
+            func (abfd, the_section, obj);
+
+   This is the preferred method for iterating over sections; an
+alternative would be to use a loop:
+
+               section *p;
+               for (p = abfd->sections; p != NULL; p = p->next)
+                  func (abfd, p, ...)
+
+2.6.5.10 `bfd_sections_find_if'
+...............................
+
+*Synopsis*
+     asection *bfd_sections_find_if
+        (bfd *abfd,
+         bfd_boolean (*operation) (bfd *abfd, asection *sect, void *obj),
+         void *obj);
+   *Description*
+Call the provided function OPERATION for each section attached to the
+BFD ABFD, passing OBJ as an argument. The function will be called as if
+by
+
+            operation (abfd, the_section, obj);
+
+   It returns the first section for which OPERATION returns true.
+
+2.6.5.11 `bfd_set_section_size'
+...............................
+
+*Synopsis*
+     bfd_boolean bfd_set_section_size
+        (bfd *abfd, asection *sec, bfd_size_type val);
+   *Description*
+Set SEC to the size VAL. If the operation is ok, then `TRUE' is
+returned, else `FALSE'.
+
+   Possible error returns:
+   * `bfd_error_invalid_operation' - Writing has started to the BFD, so
+     setting the size is invalid.
+
+2.6.5.12 `bfd_set_section_contents'
+...................................
+
+*Synopsis*
+     bfd_boolean bfd_set_section_contents
+        (bfd *abfd, asection *section, const void *data,
+         file_ptr offset, bfd_size_type count);
+   *Description*
+Sets the contents of the section SECTION in BFD ABFD to the data
+starting in memory at DATA. The data is written to the output section
+starting at offset OFFSET for COUNT octets.
+
+   Normally `TRUE' is returned, else `FALSE'. Possible error returns
+are:
+   * `bfd_error_no_contents' - The output section does not have the
+     `SEC_HAS_CONTENTS' attribute, so nothing can be written to it.
+
+   * and some more too
+   This routine is front end to the back end function
+`_bfd_set_section_contents'.
+
+2.6.5.13 `bfd_get_section_contents'
+...................................
+
+*Synopsis*
+     bfd_boolean bfd_get_section_contents
+        (bfd *abfd, asection *section, void *location, file_ptr offset,
+         bfd_size_type count);
+   *Description*
+Read data from SECTION in BFD ABFD into memory starting at LOCATION.
+The data is read at an offset of OFFSET from the start of the input
+section, and is read for COUNT bytes.
+
+   If the contents of a constructor with the `SEC_CONSTRUCTOR' flag set
+are requested or if the section does not have the `SEC_HAS_CONTENTS'
+flag set, then the LOCATION is filled with zeroes. If no errors occur,
+`TRUE' is returned, else `FALSE'.
+
+2.6.5.14 `bfd_malloc_and_get_section'
+.....................................
+
+*Synopsis*
+     bfd_boolean bfd_malloc_and_get_section
+        (bfd *abfd, asection *section, bfd_byte **buf);
+   *Description*
+Read all data from SECTION in BFD ABFD into a buffer, *BUF, malloc'd by
+this function.
+
+2.6.5.15 `bfd_copy_private_section_data'
+........................................
+
+*Synopsis*
+     bfd_boolean bfd_copy_private_section_data
+        (bfd *ibfd, asection *isec, bfd *obfd, asection *osec);
+   *Description*
+Copy private section information from ISEC in the BFD IBFD to the
+section OSEC in the BFD OBFD.  Return `TRUE' on success, `FALSE' on
+error.  Possible error returns are:
+
+   * `bfd_error_no_memory' - Not enough memory exists to create private
+     data for OSEC.
+
+     #define bfd_copy_private_section_data(ibfd, isection, obfd, osection) \
+          BFD_SEND (obfd, _bfd_copy_private_section_data, \
+                    (ibfd, isection, obfd, osection))
+
+2.6.5.16 `_bfd_strip_section_from_output'
+.........................................
+
+*Synopsis*
+     void _bfd_strip_section_from_output
+        (struct bfd_link_info *info, asection *section);
+   *Description*
+Remove SECTION from the output.  If the output section becomes empty,
+remove it from the output bfd.
+
+   This function won't actually do anything except twiddle flags if
+called too late in the linking process, when it's not safe to remove
+sections.
+
+2.6.5.17 `bfd_generic_is_group_section'
+.......................................
+
+*Synopsis*
+     bfd_boolean bfd_generic_is_group_section (bfd *, const asection *sec);
+   *Description*
+Returns TRUE if SEC is a member of a group.
+
+2.6.5.18 `bfd_generic_discard_group'
+....................................
+
+*Synopsis*
+     bfd_boolean bfd_generic_discard_group (bfd *abfd, asection *group);
+   *Description*
+Remove all members of GROUP from the output.
+
+
+File: bfd.info,  Node: Symbols,  Next: Archives,  Prev: Sections,  Up: BFD front end
+
+2.7 Symbols
+===========
+
+BFD tries to maintain as much symbol information as it can when it
+moves information from file to file. BFD passes information to
+applications though the `asymbol' structure. When the application
+requests the symbol table, BFD reads the table in the native form and
+translates parts of it into the internal format. To maintain more than
+the information passed to applications, some targets keep some
+information "behind the scenes" in a structure only the particular back
+end knows about. For example, the coff back end keeps the original
+symbol table structure as well as the canonical structure when a BFD is
+read in. On output, the coff back end can reconstruct the output symbol
+table so that no information is lost, even information unique to coff
+which BFD doesn't know or understand. If a coff symbol table were read,
+but were written through an a.out back end, all the coff specific
+information would be lost. The symbol table of a BFD is not necessarily
+read in until a canonicalize request is made. Then the BFD back end
+fills in a table provided by the application with pointers to the
+canonical information.  To output symbols, the application provides BFD
+with a table of pointers to pointers to `asymbol's. This allows
+applications like the linker to output a symbol as it was read, since
+the "behind the scenes" information will be still available.
+
+* Menu:
+
+* Reading Symbols::
+* Writing Symbols::
+* Mini Symbols::
+* typedef asymbol::
+* symbol handling functions::
+
+
+File: bfd.info,  Node: Reading Symbols,  Next: Writing Symbols,  Prev: Symbols,  Up: Symbols
+
+2.7.1 Reading symbols
+---------------------
+
+There are two stages to reading a symbol table from a BFD: allocating
+storage, and the actual reading process. This is an excerpt from an
+application which reads the symbol table:
+
+              long storage_needed;
+              asymbol **symbol_table;
+              long number_of_symbols;
+              long i;
+
+              storage_needed = bfd_get_symtab_upper_bound (abfd);
+
+              if (storage_needed < 0)
+                FAIL
+
+              if (storage_needed == 0)
+                return;
+
+              symbol_table = xmalloc (storage_needed);
+                ...
+              number_of_symbols =
+                 bfd_canonicalize_symtab (abfd, symbol_table);
+
+              if (number_of_symbols < 0)
+                FAIL
+
+              for (i = 0; i < number_of_symbols; i++)
+                process_symbol (symbol_table[i]);
+
+   All storage for the symbols themselves is in an objalloc connected
+to the BFD; it is freed when the BFD is closed.
+
+
+File: bfd.info,  Node: Writing Symbols,  Next: Mini Symbols,  Prev: Reading Symbols,  Up: Symbols
+
+2.7.2 Writing symbols
+---------------------
+
+Writing of a symbol table is automatic when a BFD open for writing is
+closed. The application attaches a vector of pointers to pointers to
+symbols to the BFD being written, and fills in the symbol count. The
+close and cleanup code reads through the table provided and performs
+all the necessary operations. The BFD output code must always be
+provided with an "owned" symbol: one which has come from another BFD,
+or one which has been created using `bfd_make_empty_symbol'.  Here is an
+example showing the creation of a symbol table with only one element:
+
+            #include "bfd.h"
+            int main (void)
+            {
+              bfd *abfd;
+              asymbol *ptrs[2];
+              asymbol *new;
+
+              abfd = bfd_openw ("foo","a.out-sunos-big");
+              bfd_set_format (abfd, bfd_object);
+              new = bfd_make_empty_symbol (abfd);
+              new->name = "dummy_symbol";
+              new->section = bfd_make_section_old_way (abfd, ".text");
+              new->flags = BSF_GLOBAL;
+              new->value = 0x12345;
+
+              ptrs[0] = new;
+              ptrs[1] = 0;
+
+              bfd_set_symtab (abfd, ptrs, 1);
+              bfd_close (abfd);
+              return 0;
+            }
+
+            ./makesym
+            nm foo
+            00012345 A dummy_symbol
+
+   Many formats cannot represent arbitrary symbol information; for
+instance, the `a.out' object format does not allow an arbitrary number
+of sections. A symbol pointing to a section which is not one  of
+`.text', `.data' or `.bss' cannot be described.
+
+
+File: bfd.info,  Node: Mini Symbols,  Next: typedef asymbol,  Prev: Writing Symbols,  Up: Symbols
+
+2.7.3 Mini Symbols
+------------------
+
+Mini symbols provide read-only access to the symbol table.  They use
+less memory space, but require more time to access.  They can be useful
+for tools like nm or objdump, which may have to handle symbol tables of
+extremely large executables.
+
+   The `bfd_read_minisymbols' function will read the symbols into
+memory in an internal form.  It will return a `void *' pointer to a
+block of memory, a symbol count, and the size of each symbol.  The
+pointer is allocated using `malloc', and should be freed by the caller
+when it is no longer needed.
+
+   The function `bfd_minisymbol_to_symbol' will take a pointer to a
+minisymbol, and a pointer to a structure returned by
+`bfd_make_empty_symbol', and return a `asymbol' structure.  The return
+value may or may not be the same as the value from
+`bfd_make_empty_symbol' which was passed in.
+
+
+File: bfd.info,  Node: typedef asymbol,  Next: symbol handling functions,  Prev: Mini Symbols,  Up: Symbols
+
+2.7.4 typedef asymbol
+---------------------
+
+An `asymbol' has the form:
+
+
+     typedef struct bfd_symbol
+     {
+       /* A pointer to the BFD which owns the symbol. This information
+          is necessary so that a back end can work out what additional
+          information (invisible to the application writer) is carried
+          with the symbol.
+
+          This field is *almost* redundant, since you can use section->owner
+          instead, except that some symbols point to the global sections
+          bfd_{abs,com,und}_section.  This could be fixed by making
+          these globals be per-bfd (or per-target-flavor).  FIXME.  */
+       struct bfd *the_bfd; /* Use bfd_asymbol_bfd(sym) to access this field.  */
+
+       /* The text of the symbol. The name is left alone, and not copied; the
+          application may not alter it.  */
+       const char *name;
+
+       /* The value of the symbol.  This really should be a union of a
+          numeric value with a pointer, since some flags indicate that
+          a pointer to another symbol is stored here.  */
+       symvalue value;
+
+       /* Attributes of a symbol.  */
+     #define BSF_NO_FLAGS    0x00
+
+       /* The symbol has local scope; `static' in `C'. The value
+          is the offset into the section of the data.  */
+     #define BSF_LOCAL      0x01
+
+       /* The symbol has global scope; initialized data in `C'. The
+          value is the offset into the section of the data.  */
+     #define BSF_GLOBAL     0x02
+
+       /* The symbol has global scope and is exported. The value is
+          the offset into the section of the data.  */
+     #define BSF_EXPORT     BSF_GLOBAL /* No real difference.  */
+
+       /* A normal C symbol would be one of:
+          `BSF_LOCAL', `BSF_FORT_COMM',  `BSF_UNDEFINED' or
+          `BSF_GLOBAL'.  */
+
+       /* The symbol is a debugging record. The value has an arbitrary
+          meaning, unless BSF_DEBUGGING_RELOC is also set.  */
+     #define BSF_DEBUGGING  0x08
+
+       /* The symbol denotes a function entry point.  Used in ELF,
+          perhaps others someday.  */
+     #define BSF_FUNCTION    0x10
+
+       /* Used by the linker.  */
+     #define BSF_KEEP        0x20
+     #define BSF_KEEP_G      0x40
+
+       /* A weak global symbol, overridable without warnings by
+          a regular global symbol of the same name.  */
+     #define BSF_WEAK        0x80
+
+       /* This symbol was created to point to a section, e.g. ELF's
+          STT_SECTION symbols.  */
+     #define BSF_SECTION_SYM 0x100
+
+       /* The symbol used to be a common symbol, but now it is
+          allocated.  */
+     #define BSF_OLD_COMMON  0x200
+
+       /* The default value for common data.  */
+     #define BFD_FORT_COMM_DEFAULT_VALUE 0
+
+       /* In some files the type of a symbol sometimes alters its
+          location in an output file - ie in coff a `ISFCN' symbol
+          which is also `C_EXT' symbol appears where it was
+          declared and not at the end of a section.  This bit is set
+          by the target BFD part to convey this information.  */
+     #define BSF_NOT_AT_END    0x400
+
+       /* Signal that the symbol is the label of constructor section.  */
+     #define BSF_CONSTRUCTOR   0x800
+
+       /* Signal that the symbol is a warning symbol.  The name is a
+          warning.  The name of the next symbol is the one to warn about;
+          if a reference is made to a symbol with the same name as the next
+          symbol, a warning is issued by the linker.  */
+     #define BSF_WARNING       0x1000
+
+       /* Signal that the symbol is indirect.  This symbol is an indirect
+          pointer to the symbol with the same name as the next symbol.  */
+     #define BSF_INDIRECT      0x2000
+
+       /* BSF_FILE marks symbols that contain a file name.  This is used
+          for ELF STT_FILE symbols.  */
+     #define BSF_FILE          0x4000
+
+       /* Symbol is from dynamic linking information.  */
+     #define BSF_DYNAMIC       0x8000
+
+       /* The symbol denotes a data object.  Used in ELF, and perhaps
+          others someday.  */
+     #define BSF_OBJECT        0x10000
+
+       /* This symbol is a debugging symbol.  The value is the offset
+          into the section of the data.  BSF_DEBUGGING should be set
+          as well.  */
+     #define BSF_DEBUGGING_RELOC 0x20000
+
+       /* This symbol is thread local.  Used in ELF.  */
+     #define BSF_THREAD_LOCAL  0x40000
+
+       flagword flags;
+
+       /* A pointer to the section to which this symbol is
+          relative.  This will always be non NULL, there are special
+          sections for undefined and absolute symbols.  */
+       struct bfd_section *section;
+
+       /* Back end special data.  */
+       union
+         {
+           void *p;
+           bfd_vma i;
+         }
+       udata;
+     }
+     asymbol;
+
+
+File: bfd.info,  Node: symbol handling functions,  Prev: typedef asymbol,  Up: Symbols
+
+2.7.5 Symbol handling functions
+-------------------------------
+
+2.7.5.1 `bfd_get_symtab_upper_bound'
+....................................
+
+*Description*
+Return the number of bytes required to store a vector of pointers to
+`asymbols' for all the symbols in the BFD ABFD, including a terminal
+NULL pointer. If there are no symbols in the BFD, then return 0.  If an
+error occurs, return -1.
+     #define bfd_get_symtab_upper_bound(abfd) \
+          BFD_SEND (abfd, _bfd_get_symtab_upper_bound, (abfd))
+
+2.7.5.2 `bfd_is_local_label'
+............................
+
+*Synopsis*
+     bfd_boolean bfd_is_local_label (bfd *abfd, asymbol *sym);
+   *Description*
+Return TRUE if the given symbol SYM in the BFD ABFD is a compiler
+generated local label, else return FALSE.
+
+2.7.5.3 `bfd_is_local_label_name'
+.................................
+
+*Synopsis*
+     bfd_boolean bfd_is_local_label_name (bfd *abfd, const char *name);
+   *Description*
+Return TRUE if a symbol with the name NAME in the BFD ABFD is a
+compiler generated local label, else return FALSE.  This just checks
+whether the name has the form of a local label.
+     #define bfd_is_local_label_name(abfd, name) \
+       BFD_SEND (abfd, _bfd_is_local_label_name, (abfd, name))
+
+2.7.5.4 `bfd_is_target_special_symbol'
+......................................
+
+*Synopsis*
+     bfd_boolean bfd_is_target_special_symbol (bfd *abfd, asymbol *sym);
+   *Description*
+Return TRUE iff a symbol SYM in the BFD ABFD is something special to
+the particular target represented by the BFD.  Such symbols should
+normally not be mentioned to the user.
+     #define bfd_is_target_special_symbol(abfd, sym) \
+       BFD_SEND (abfd, _bfd_is_target_special_symbol, (abfd, sym))
+
+2.7.5.5 `bfd_canonicalize_symtab'
+.................................
+
+*Description*
+Read the symbols from the BFD ABFD, and fills in the vector LOCATION
+with pointers to the symbols and a trailing NULL.  Return the actual
+number of symbol pointers, not including the NULL.
+     #define bfd_canonicalize_symtab(abfd, location) \
+       BFD_SEND (abfd, _bfd_canonicalize_symtab, (abfd, location))
+
+2.7.5.6 `bfd_set_symtab'
+........................
+
+*Synopsis*
+     bfd_boolean bfd_set_symtab
+        (bfd *abfd, asymbol **location, unsigned int count);
+   *Description*
+Arrange that when the output BFD ABFD is closed, the table LOCATION of
+COUNT pointers to symbols will be written.
+
+2.7.5.7 `bfd_print_symbol_vandf'
+................................
+
+*Synopsis*
+     void bfd_print_symbol_vandf (bfd *abfd, void *file, asymbol *symbol);
+   *Description*
+Print the value and flags of the SYMBOL supplied to the stream FILE.
+
+2.7.5.8 `bfd_make_empty_symbol'
+...............................
+
+*Description*
+Create a new `asymbol' structure for the BFD ABFD and return a pointer
+to it.
+
+   This routine is necessary because each back end has private
+information surrounding the `asymbol'. Building your own `asymbol' and
+pointing to it will not create the private information, and will cause
+problems later on.
+     #define bfd_make_empty_symbol(abfd) \
+       BFD_SEND (abfd, _bfd_make_empty_symbol, (abfd))
+
+2.7.5.9 `_bfd_generic_make_empty_symbol'
+........................................
+
+*Synopsis*
+     asymbol *_bfd_generic_make_empty_symbol (bfd *);
+   *Description*
+Create a new `asymbol' structure for the BFD ABFD and return a pointer
+to it.  Used by core file routines, binary back-end and anywhere else
+where no private info is needed.
+
+2.7.5.10 `bfd_make_debug_symbol'
+................................
+
+*Description*
+Create a new `asymbol' structure for the BFD ABFD, to be used as a
+debugging symbol.  Further details of its use have yet to be worked out.
+     #define bfd_make_debug_symbol(abfd,ptr,size) \
+       BFD_SEND (abfd, _bfd_make_debug_symbol, (abfd, ptr, size))
+
+2.7.5.11 `bfd_decode_symclass'
+..............................
+
+*Description*
+Return a character corresponding to the symbol class of SYMBOL, or '?'
+for an unknown class.
+
+   *Synopsis*
+     int bfd_decode_symclass (asymbol *symbol);
+   
+2.7.5.12 `bfd_is_undefined_symclass'
+....................................
+
+*Description*
+Returns non-zero if the class symbol returned by bfd_decode_symclass
+represents an undefined symbol.  Returns zero otherwise.
+
+   *Synopsis*
+     bfd_boolean bfd_is_undefined_symclass (int symclass);
+   
+2.7.5.13 `bfd_symbol_info'
+..........................
+
+*Description*
+Fill in the basic info about symbol that nm needs.  Additional info may
+be added by the back-ends after calling this function.
+
+   *Synopsis*
+     void bfd_symbol_info (asymbol *symbol, symbol_info *ret);
+   
+2.7.5.14 `bfd_copy_private_symbol_data'
+.......................................
+
+*Synopsis*
+     bfd_boolean bfd_copy_private_symbol_data
+        (bfd *ibfd, asymbol *isym, bfd *obfd, asymbol *osym);
+   *Description*
+Copy private symbol information from ISYM in the BFD IBFD to the symbol
+OSYM in the BFD OBFD.  Return `TRUE' on success, `FALSE' on error.
+Possible error returns are:
+
+   * `bfd_error_no_memory' - Not enough memory exists to create private
+     data for OSEC.
+
+     #define bfd_copy_private_symbol_data(ibfd, isymbol, obfd, osymbol) \
+       BFD_SEND (obfd, _bfd_copy_private_symbol_data, \
+                 (ibfd, isymbol, obfd, osymbol))
+
+
+File: bfd.info,  Node: Archives,  Next: Formats,  Prev: Symbols,  Up: BFD front end
+
+2.8 Archives
+============
+
+*Description*
+An archive (or library) is just another BFD.  It has a symbol table,
+although there's not much a user program will do with it.
+
+   The big difference between an archive BFD and an ordinary BFD is
+that the archive doesn't have sections.  Instead it has a chain of BFDs
+that are considered its contents.  These BFDs can be manipulated like
+any other.  The BFDs contained in an archive opened for reading will
+all be opened for reading.  You may put either input or output BFDs
+into an archive opened for output; they will be handled correctly when
+the archive is closed.
+
+   Use `bfd_openr_next_archived_file' to step through the contents of
+an archive opened for input.  You don't have to read the entire archive
+if you don't want to!  Read it until you find what you want.
+
+   Archive contents of output BFDs are chained through the `next'
+pointer in a BFD.  The first one is findable through the `archive_head'
+slot of the archive.  Set it with `bfd_set_archive_head' (q.v.).  A
+given BFD may be in only one open output archive at a time.
+
+   As expected, the BFD archive code is more general than the archive
+code of any given environment.  BFD archives may contain files of
+different formats (e.g., a.out and coff) and even different
+architectures.  You may even place archives recursively into archives!
+
+   This can cause unexpected confusion, since some archive formats are
+more expressive than others.  For instance, Intel COFF archives can
+preserve long filenames; SunOS a.out archives cannot.  If you move a
+file from the first to the second format and back again, the filename
+may be truncated.  Likewise, different a.out environments have different
+conventions as to how they truncate filenames, whether they preserve
+directory names in filenames, etc.  When interoperating with native
+tools, be sure your files are homogeneous.
+
+   Beware: most of these formats do not react well to the presence of
+spaces in filenames.  We do the best we can, but can't always handle
+this case due to restrictions in the format of archives.  Many Unix
+utilities are braindead in regards to spaces and such in filenames
+anyway, so this shouldn't be much of a restriction.
+
+   Archives are supported in BFD in `archive.c'.
+
+2.8.0.1 `bfd_get_next_mapent'
+.............................
+
+*Synopsis*
+     symindex bfd_get_next_mapent
+        (bfd *abfd, symindex previous, carsym **sym);
+   *Description*
+Step through archive ABFD's symbol table (if it has one).  Successively
+update SYM with the next symbol's information, returning that symbol's
+(internal) index into the symbol table.
+
+   Supply `BFD_NO_MORE_SYMBOLS' as the PREVIOUS entry to get the first
+one; returns `BFD_NO_MORE_SYMBOLS' when you've already got the last one.
+
+   A `carsym' is a canonical archive symbol.  The only user-visible
+element is its name, a null-terminated string.
+
+2.8.0.2 `bfd_set_archive_head'
+..............................
+
+*Synopsis*
+     bfd_boolean bfd_set_archive_head (bfd *output, bfd *new_head);
+   *Description*
+Set the head of the chain of BFDs contained in the archive OUTPUT to
+NEW_HEAD.
+
+2.8.0.3 `bfd_openr_next_archived_file'
+......................................
+
+*Synopsis*
+     bfd *bfd_openr_next_archived_file (bfd *archive, bfd *previous);
+   *Description*
+Provided a BFD, ARCHIVE, containing an archive and NULL, open an input
+BFD on the first contained element and returns that.  Subsequent calls
+should pass the archive and the previous return value to return a
+created BFD to the next contained element. NULL is returned when there
+are no more.
+
+
+File: bfd.info,  Node: Formats,  Next: Relocations,  Prev: Archives,  Up: BFD front end
+
+2.9 File formats
+================
+
+A format is a BFD concept of high level file contents type. The formats
+supported by BFD are:
+
+   * `bfd_object'
+   The BFD may contain data, symbols, relocations and debug info.
+
+   * `bfd_archive'
+   The BFD contains other BFDs and an optional index.
+
+   * `bfd_core'
+   The BFD contains the result of an executable core dump.
+
+2.9.0.1 `bfd_check_format'
+..........................
+
+*Synopsis*
+     bfd_boolean bfd_check_format (bfd *abfd, bfd_format format);
+   *Description*
+Verify if the file attached to the BFD ABFD is compatible with the
+format FORMAT (i.e., one of `bfd_object', `bfd_archive' or `bfd_core').
+
+   If the BFD has been set to a specific target before the call, only
+the named target and format combination is checked. If the target has
+not been set, or has been set to `default', then all the known target
+backends is interrogated to determine a match.  If the default target
+matches, it is used.  If not, exactly one target must recognize the
+file, or an error results.
+
+   The function returns `TRUE' on success, otherwise `FALSE' with one
+of the following error codes:
+
+   * `bfd_error_invalid_operation' - if `format' is not one of
+     `bfd_object', `bfd_archive' or `bfd_core'.
+
+   * `bfd_error_system_call' - if an error occured during a read - even
+     some file mismatches can cause bfd_error_system_calls.
+
+   * `file_not_recognised' - none of the backends recognised the file
+     format.
+
+   * `bfd_error_file_ambiguously_recognized' - more than one backend
+     recognised the file format.
+
+2.9.0.2 `bfd_check_format_matches'
+..................................
+
+*Synopsis*
+     bfd_boolean bfd_check_format_matches
+        (bfd *abfd, bfd_format format, char ***matching);
+   *Description*
+Like `bfd_check_format', except when it returns FALSE with `bfd_errno'
+set to `bfd_error_file_ambiguously_recognized'.  In that case, if
+MATCHING is not NULL, it will be filled in with a NULL-terminated list
+of the names of the formats that matched, allocated with `malloc'.
+Then the user may choose a format and try again.
+
+   When done with the list that MATCHING points to, the caller should
+free it.
+
+2.9.0.3 `bfd_set_format'
+........................
+
+*Synopsis*
+     bfd_boolean bfd_set_format (bfd *abfd, bfd_format format);
+   *Description*
+This function sets the file format of the BFD ABFD to the format
+FORMAT. If the target set in the BFD does not support the format
+requested, the format is invalid, or the BFD is not open for writing,
+then an error occurs.
+
+2.9.0.4 `bfd_format_string'
+...........................
+
+*Synopsis*
+     const char *bfd_format_string (bfd_format format);
+   *Description*
+Return a pointer to a const string `invalid', `object', `archive',
+`core', or `unknown', depending upon the value of FORMAT.
+
+
+File: bfd.info,  Node: Relocations,  Next: Core Files,  Prev: Formats,  Up: BFD front end
+
+2.10 Relocations
+================
+
+BFD maintains relocations in much the same way it maintains symbols:
+they are left alone until required, then read in en-masse and
+translated into an internal form.  A common routine
+`bfd_perform_relocation' acts upon the canonical form to do the fixup.
+
+   Relocations are maintained on a per section basis, while symbols are
+maintained on a per BFD basis.
+
+   All that a back end has to do to fit the BFD interface is to create
+a `struct reloc_cache_entry' for each relocation in a particular
+section, and fill in the right bits of the structures.
+
+* Menu:
+
+* typedef arelent::
+* howto manager::
+
+
+File: bfd.info,  Node: typedef arelent,  Next: howto manager,  Prev: Relocations,  Up: Relocations
+
+2.10.1 typedef arelent
+----------------------
+
+This is the structure of a relocation entry:
+
+
+     typedef enum bfd_reloc_status
+     {
+       /* No errors detected.  */
+       bfd_reloc_ok,
+
+       /* The relocation was performed, but there was an overflow.  */
+       bfd_reloc_overflow,
+
+       /* The address to relocate was not within the section supplied.  */
+       bfd_reloc_outofrange,
+
+       /* Used by special functions.  */
+       bfd_reloc_continue,
+
+       /* Unsupported relocation size requested.  */
+       bfd_reloc_notsupported,
+
+       /* Unused.  */
+       bfd_reloc_other,
+
+       /* The symbol to relocate against was undefined.  */
+       bfd_reloc_undefined,
+
+       /* The relocation was performed, but may not be ok - presently
+          generated only when linking i960 coff files with i960 b.out
+          symbols.  If this type is returned, the error_message argument
+          to bfd_perform_relocation will be set.  */
+       bfd_reloc_dangerous
+      }
+      bfd_reloc_status_type;
+
+
+     typedef struct reloc_cache_entry
+     {
+       /* A pointer into the canonical table of pointers.  */
+       struct bfd_symbol **sym_ptr_ptr;
+
+       /* offset in section.  */
+       bfd_size_type address;
+
+       /* addend for relocation value.  */
+       bfd_vma addend;
+
+       /* Pointer to how to perform the required relocation.  */
+       reloc_howto_type *howto;
+
+     }
+     arelent;
+   *Description*
+Here is a description of each of the fields within an `arelent':
+
+   * `sym_ptr_ptr'
+   The symbol table pointer points to a pointer to the symbol
+associated with the relocation request.  It is the pointer into the
+table returned by the back end's `canonicalize_symtab' action. *Note
+Symbols::. The symbol is referenced through a pointer to a pointer so
+that tools like the linker can fix up all the symbols of the same name
+by modifying only one pointer. The relocation routine looks in the
+symbol and uses the base of the section the symbol is attached to and
+the value of the symbol as the initial relocation offset. If the symbol
+pointer is zero, then the section provided is looked up.
+
+   * `address'
+   The `address' field gives the offset in bytes from the base of the
+section data which owns the relocation record to the first byte of
+relocatable information. The actual data relocated will be relative to
+this point; for example, a relocation type which modifies the bottom
+two bytes of a four byte word would not touch the first byte pointed to
+in a big endian world.
+
+   * `addend'
+   The `addend' is a value provided by the back end to be added (!)  to
+the relocation offset. Its interpretation is dependent upon the howto.
+For example, on the 68k the code:
+
+             char foo[];
+             main()
+                     {
+                     return foo[0x12345678];
+                     }
+
+   Could be compiled into:
+
+             linkw fp,#-4
+             moveb @#12345678,d0
+             extbl d0
+             unlk fp
+             rts
+
+   This could create a reloc pointing to `foo', but leave the offset in
+the data, something like:
+
+     RELOCATION RECORDS FOR [.text]:
+     offset   type      value
+     00000006 32        _foo
+
+     00000000 4e56 fffc          ; linkw fp,#-4
+     00000004 1039 1234 5678     ; moveb @#12345678,d0
+     0000000a 49c0               ; extbl d0
+     0000000c 4e5e               ; unlk fp
+     0000000e 4e75               ; rts
+
+   Using coff and an 88k, some instructions don't have enough space in
+them to represent the full address range, and pointers have to be
+loaded in two parts. So you'd get something like:
+
+             or.u     r13,r0,hi16(_foo+0x12345678)
+             ld.b     r2,r13,lo16(_foo+0x12345678)
+             jmp      r1
+
+   This should create two relocs, both pointing to `_foo', and with
+0x12340000 in their addend field. The data would consist of:
+
+     RELOCATION RECORDS FOR [.text]:
+     offset   type      value
+     00000002 HVRT16    _foo+0x12340000
+     00000006 LVRT16    _foo+0x12340000
+
+     00000000 5da05678           ; or.u r13,r0,0x5678
+     00000004 1c4d5678           ; ld.b r2,r13,0x5678
+     00000008 f400c001           ; jmp r1
+
+   The relocation routine digs out the value from the data, adds it to
+the addend to get the original offset, and then adds the value of
+`_foo'. Note that all 32 bits have to be kept around somewhere, to cope
+with carry from bit 15 to bit 16.
+
+   One further example is the sparc and the a.out format. The sparc has
+a similar problem to the 88k, in that some instructions don't have room
+for an entire offset, but on the sparc the parts are created in odd
+sized lumps. The designers of the a.out format chose to not use the
+data within the section for storing part of the offset; all the offset
+is kept within the reloc. Anything in the data should be ignored.
+
+             save %sp,-112,%sp
+             sethi %hi(_foo+0x12345678),%g2
+             ldsb [%g2+%lo(_foo+0x12345678)],%i0
+             ret
+             restore
+
+   Both relocs contain a pointer to `foo', and the offsets contain junk.
+
+     RELOCATION RECORDS FOR [.text]:
+     offset   type      value
+     00000004 HI22      _foo+0x12345678
+     00000008 LO10      _foo+0x12345678
+
+     00000000 9de3bf90     ; save %sp,-112,%sp
+     00000004 05000000     ; sethi %hi(_foo+0),%g2
+     00000008 f048a000     ; ldsb [%g2+%lo(_foo+0)],%i0
+     0000000c 81c7e008     ; ret
+     00000010 81e80000     ; restore
+
+   * `howto'
+   The `howto' field can be imagined as a relocation instruction. It is
+a pointer to a structure which contains information on what to do with
+all of the other information in the reloc record and data section. A
+back end would normally have a relocation instruction set and turn
+relocations into pointers to the correct structure on input - but it
+would be possible to create each howto field on demand.
+
+2.10.1.1 `enum complain_overflow'
+.................................
+
+Indicates what sort of overflow checking should be done when performing
+a relocation.
+
+
+     enum complain_overflow
+     {
+       /* Do not complain on overflow.  */
+       complain_overflow_dont,
+
+       /* Complain if the bitfield overflows, whether it is considered
+          as signed or unsigned.  */
+       complain_overflow_bitfield,
+
+       /* Complain if the value overflows when considered as signed
+          number.  */
+       complain_overflow_signed,
+
+       /* Complain if the value overflows when considered as an
+          unsigned number.  */
+       complain_overflow_unsigned
+     };
+
+2.10.1.2 `reloc_howto_type'
+...........................
+
+The `reloc_howto_type' is a structure which contains all the
+information that libbfd needs to know to tie up a back end's data.
+
+     struct bfd_symbol;             /* Forward declaration.  */
+
+     struct reloc_howto_struct
+     {
+       /*  The type field has mainly a documentary use - the back end can
+           do what it wants with it, though normally the back end's
+           external idea of what a reloc number is stored
+           in this field.  For example, a PC relative word relocation
+           in a coff environment has the type 023 - because that's
+           what the outside world calls a R_PCRWORD reloc.  */
+       unsigned int type;
+
+       /*  The value the final relocation is shifted right by.  This drops
+           unwanted data from the relocation.  */
+       unsigned int rightshift;
+
+       /*  The size of the item to be relocated.  This is *not* a
+           power-of-two measure.  To get the number of bytes operated
+           on by a type of relocation, use bfd_get_reloc_size.  */
+       int size;
+
+       /*  The number of bits in the item to be relocated.  This is used
+           when doing overflow checking.  */
+       unsigned int bitsize;
+
+       /*  Notes that the relocation is relative to the location in the
+           data section of the addend.  The relocation function will
+           subtract from the relocation value the address of the location
+           being relocated.  */
+       bfd_boolean pc_relative;
+
+       /*  The bit position of the reloc value in the destination.
+           The relocated value is left shifted by this amount.  */
+       unsigned int bitpos;
+
+       /* What type of overflow error should be checked for when
+          relocating.  */
+       enum complain_overflow complain_on_overflow;
+
+       /* If this field is non null, then the supplied function is
+          called rather than the normal function.  This allows really
+          strange relocation methods to be accommodated (e.g., i960 callj
+          instructions).  */
+       bfd_reloc_status_type (*special_function)
+         (bfd *, arelent *, struct bfd_symbol *, void *, asection *,
+          bfd *, char **);
+
+       /* The textual name of the relocation type.  */
+       char *name;
+
+       /* Some formats record a relocation addend in the section contents
+          rather than with the relocation.  For ELF formats this is the
+          distinction between USE_REL and USE_RELA (though the code checks
+          for USE_REL == 1/0).  The value of this field is TRUE if the
+          addend is recorded with the section contents; when performing a
+          partial link (ld -r) the section contents (the data) will be
+          modified.  The value of this field is FALSE if addends are
+          recorded with the relocation (in arelent.addend); when performing
+          a partial link the relocation will be modified.
+          All relocations for all ELF USE_RELA targets should set this field
+          to FALSE (values of TRUE should be looked on with suspicion).
+          However, the converse is not true: not all relocations of all ELF
+          USE_REL targets set this field to TRUE.  Why this is so is peculiar
+          to each particular target.  For relocs that aren't used in partial
+          links (e.g. GOT stuff) it doesn't matter what this is set to.  */
+       bfd_boolean partial_inplace;
+
+       /* src_mask selects the part of the instruction (or data) to be used
+          in the relocation sum.  If the target relocations don't have an
+          addend in the reloc, eg. ELF USE_REL, src_mask will normally equal
+          dst_mask to extract the addend from the section contents.  If
+          relocations do have an addend in the reloc, eg. ELF USE_RELA, this
+          field should be zero.  Non-zero values for ELF USE_RELA targets are
+          bogus as in those cases the value in the dst_mask part of the
+          section contents should be treated as garbage.  */
+       bfd_vma src_mask;
+
+       /* dst_mask selects which parts of the instruction (or data) are
+          replaced with a relocated value.  */
+       bfd_vma dst_mask;
+
+       /* When some formats create PC relative instructions, they leave
+          the value of the pc of the place being relocated in the offset
+          slot of the instruction, so that a PC relative relocation can
+          be made just by adding in an ordinary offset (e.g., sun3 a.out).
+          Some formats leave the displacement part of an instruction
+          empty (e.g., m88k bcs); this flag signals the fact.  */
+       bfd_boolean pcrel_offset;
+     };
+   
+2.10.1.3 `The HOWTO Macro'
+..........................
+
+*Description*
+The HOWTO define is horrible and will go away.
+     #define HOWTO(C, R, S, B, P, BI, O, SF, NAME, INPLACE, MASKSRC, MASKDST, PC) \
+       { (unsigned) C, R, S, B, P, BI, O, SF, NAME, INPLACE, MASKSRC, MASKDST, PC }
+
+   *Description*
+And will be replaced with the totally magic way. But for the moment, we
+are compatible, so do it this way.
+     #define NEWHOWTO(FUNCTION, NAME, SIZE, REL, IN) \
+       HOWTO (0, 0, SIZE, 0, REL, 0, complain_overflow_dont, FUNCTION, \
+              NAME, FALSE, 0, 0, IN)
+
+   *Description*
+This is used to fill in an empty howto entry in an array.
+     #define EMPTY_HOWTO(C) \
+       HOWTO ((C), 0, 0, 0, FALSE, 0, complain_overflow_dont, NULL, \
+              NULL, FALSE, 0, 0, FALSE)
+
+   *Description*
+Helper routine to turn a symbol into a relocation value.
+     #define HOWTO_PREPARE(relocation, symbol)               \
+       {                                                     \
+         if (symbol != NULL)                                 \
+           {                                                 \
+             if (bfd_is_com_section (symbol->section))       \
+               {                                             \
+                 relocation = 0;                             \
+               }                                             \
+             else                                            \
+               {                                             \
+                 relocation = symbol->value;                 \
+               }                                             \
+           }                                                 \
+       }
+
+2.10.1.4 `bfd_get_reloc_size'
+.............................
+
+*Synopsis*
+     unsigned int bfd_get_reloc_size (reloc_howto_type *);
+   *Description*
+For a reloc_howto_type that operates on a fixed number of bytes, this
+returns the number of bytes operated on.
+
+2.10.1.5 `arelent_chain'
+........................
+
+*Description*
+How relocs are tied together in an `asection':
+     typedef struct relent_chain
+     {
+       arelent relent;
+       struct relent_chain *next;
+     }
+     arelent_chain;
+
+2.10.1.6 `bfd_check_overflow'
+.............................
+
+*Synopsis*
+     bfd_reloc_status_type bfd_check_overflow
+        (enum complain_overflow how,
+         unsigned int bitsize,
+         unsigned int rightshift,
+         unsigned int addrsize,
+         bfd_vma relocation);
+   *Description*
+Perform overflow checking on RELOCATION which has BITSIZE significant
+bits and will be shifted right by RIGHTSHIFT bits, on a machine with
+addresses containing ADDRSIZE significant bits.  The result is either of
+`bfd_reloc_ok' or `bfd_reloc_overflow'.
+
+2.10.1.7 `bfd_perform_relocation'
+.................................
+
+*Synopsis*
+     bfd_reloc_status_type bfd_perform_relocation
+        (bfd *abfd,
+         arelent *reloc_entry,
+         void *data,
+         asection *input_section,
+         bfd *output_bfd,
+         char **error_message);
+   *Description*
+If OUTPUT_BFD is supplied to this function, the generated image will be
+relocatable; the relocations are copied to the output file after they
+have been changed to reflect the new state of the world. There are two
+ways of reflecting the results of partial linkage in an output file: by
+modifying the output data in place, and by modifying the relocation
+record.  Some native formats (e.g., basic a.out and basic coff) have no
+way of specifying an addend in the relocation type, so the addend has
+to go in the output data.  This is no big deal since in these formats
+the output data slot will always be big enough for the addend. Complex
+reloc types with addends were invented to solve just this problem.  The
+ERROR_MESSAGE argument is set to an error message if this return
+`bfd_reloc_dangerous'.
+
+2.10.1.8 `bfd_install_relocation'
+.................................
+
+*Synopsis*
+     bfd_reloc_status_type bfd_install_relocation
+        (bfd *abfd,
+         arelent *reloc_entry,
+         void *data, bfd_vma data_start,
+         asection *input_section,
+         char **error_message);
+   *Description*
+This looks remarkably like `bfd_perform_relocation', except it does not
+expect that the section contents have been filled in.  I.e., it's
+suitable for use when creating, rather than applying a relocation.
+
+   For now, this function should be considered reserved for the
+assembler.
+
+
+File: bfd.info,  Node: howto manager,  Prev: typedef arelent,  Up: Relocations
+
+2.11 The howto manager
+======================
+
+When an application wants to create a relocation, but doesn't know what
+the target machine might call it, it can find out by using this bit of
+code.
+
+2.11.0.1 `bfd_reloc_code_type'
+..............................
+
+*Description*
+The insides of a reloc code.  The idea is that, eventually, there will
+be one enumerator for every type of relocation we ever do.  Pass one of
+these values to `bfd_reloc_type_lookup', and it'll return a howto
+pointer.
+
+   This does mean that the application must determine the correct
+enumerator value; you can't get a howto pointer from a random set of
+attributes.
+
+   Here are the possible values for `enum bfd_reloc_code_real':
+
+ -- : BFD_RELOC_64
+ -- : BFD_RELOC_32
+ -- : BFD_RELOC_26
+ -- : BFD_RELOC_24
+ -- : BFD_RELOC_16
+ -- : BFD_RELOC_14
+ -- : BFD_RELOC_8
+     Basic absolute relocations of N bits.
+
+ -- : BFD_RELOC_64_PCREL
+ -- : BFD_RELOC_32_PCREL
+ -- : BFD_RELOC_24_PCREL
+ -- : BFD_RELOC_16_PCREL
+ -- : BFD_RELOC_12_PCREL
+ -- : BFD_RELOC_8_PCREL
+     PC-relative relocations.  Sometimes these are relative to the
+     address of the relocation itself; sometimes they are relative to
+     the start of the section containing the relocation.  It depends on
+     the specific target.
+
+     The 24-bit relocation is used in some Intel 960 configurations.
+
+ -- : BFD_RELOC_32_SECREL
+     Section relative relocations.  Some targets need this for DWARF2.
+
+ -- : BFD_RELOC_32_GOT_PCREL
+ -- : BFD_RELOC_16_GOT_PCREL
+ -- : BFD_RELOC_8_GOT_PCREL
+ -- : BFD_RELOC_32_GOTOFF
+ -- : BFD_RELOC_16_GOTOFF
+ -- : BFD_RELOC_LO16_GOTOFF
+ -- : BFD_RELOC_HI16_GOTOFF
+ -- : BFD_RELOC_HI16_S_GOTOFF
+ -- : BFD_RELOC_8_GOTOFF
+ -- : BFD_RELOC_64_PLT_PCREL
+ -- : BFD_RELOC_32_PLT_PCREL
+ -- : BFD_RELOC_24_PLT_PCREL
+ -- : BFD_RELOC_16_PLT_PCREL
+ -- : BFD_RELOC_8_PLT_PCREL
+ -- : BFD_RELOC_64_PLTOFF
+ -- : BFD_RELOC_32_PLTOFF
+ -- : BFD_RELOC_16_PLTOFF
+ -- : BFD_RELOC_LO16_PLTOFF
+ -- : BFD_RELOC_HI16_PLTOFF
+ -- : BFD_RELOC_HI16_S_PLTOFF
+ -- : BFD_RELOC_8_PLTOFF
+     For ELF.
+
+ -- : BFD_RELOC_68K_GLOB_DAT
+ -- : BFD_RELOC_68K_JMP_SLOT
+ -- : BFD_RELOC_68K_RELATIVE
+     Relocations used by 68K ELF.
+
+ -- : BFD_RELOC_32_BASEREL
+ -- : BFD_RELOC_16_BASEREL
+ -- : BFD_RELOC_LO16_BASEREL
+ -- : BFD_RELOC_HI16_BASEREL
+ -- : BFD_RELOC_HI16_S_BASEREL
+ -- : BFD_RELOC_8_BASEREL
+ -- : BFD_RELOC_RVA
+     Linkage-table relative.
+
+ -- : BFD_RELOC_8_FFnn
+     Absolute 8-bit relocation, but used to form an address like 0xFFnn.
+
+ -- : BFD_RELOC_32_PCREL_S2
+ -- : BFD_RELOC_16_PCREL_S2
+ -- : BFD_RELOC_23_PCREL_S2
+     These PC-relative relocations are stored as word displacements -
+     i.e., byte displacements shifted right two bits.  The 30-bit word
+     displacement (<<32_PCREL_S2>> - 32 bits, shifted 2) is used on the
+     SPARC.  (SPARC tools generally refer to this as <<WDISP30>>.)  The
+     signed 16-bit displacement is used on the MIPS, and the 23-bit
+     displacement is used on the Alpha.
+
+ -- : BFD_RELOC_HI22
+ -- : BFD_RELOC_LO10
+     High 22 bits and low 10 bits of 32-bit value, placed into lower
+     bits of the target word.  These are used on the SPARC.
+
+ -- : BFD_RELOC_GPREL16
+ -- : BFD_RELOC_GPREL32
+     For systems that allocate a Global Pointer register, these are
+     displacements off that register.  These relocation types are
+     handled specially, because the value the register will have is
+     decided relatively late.
+
+ -- : BFD_RELOC_I960_CALLJ
+     Reloc types used for i960/b.out.
+
+ -- : BFD_RELOC_NONE
+ -- : BFD_RELOC_SPARC_WDISP22
+ -- : BFD_RELOC_SPARC22
+ -- : BFD_RELOC_SPARC13
+ -- : BFD_RELOC_SPARC_GOT10
+ -- : BFD_RELOC_SPARC_GOT13
+ -- : BFD_RELOC_SPARC_GOT22
+ -- : BFD_RELOC_SPARC_PC10
+ -- : BFD_RELOC_SPARC_PC22
+ -- : BFD_RELOC_SPARC_WPLT30
+ -- : BFD_RELOC_SPARC_COPY
+ -- : BFD_RELOC_SPARC_GLOB_DAT
+ -- : BFD_RELOC_SPARC_JMP_SLOT
+ -- : BFD_RELOC_SPARC_RELATIVE
+ -- : BFD_RELOC_SPARC_UA16
+ -- : BFD_RELOC_SPARC_UA32
+ -- : BFD_RELOC_SPARC_UA64
+     SPARC ELF relocations.  There is probably some overlap with other
+     relocation types already defined.
+
+ -- : BFD_RELOC_SPARC_BASE13
+ -- : BFD_RELOC_SPARC_BASE22
+     I think these are specific to SPARC a.out (e.g., Sun 4).
+
+ -- : BFD_RELOC_SPARC_64
+ -- : BFD_RELOC_SPARC_10
+ -- : BFD_RELOC_SPARC_11
+ -- : BFD_RELOC_SPARC_OLO10
+ -- : BFD_RELOC_SPARC_HH22
+ -- : BFD_RELOC_SPARC_HM10
+ -- : BFD_RELOC_SPARC_LM22
+ -- : BFD_RELOC_SPARC_PC_HH22
+ -- : BFD_RELOC_SPARC_PC_HM10
+ -- : BFD_RELOC_SPARC_PC_LM22
+ -- : BFD_RELOC_SPARC_WDISP16
+ -- : BFD_RELOC_SPARC_WDISP19
+ -- : BFD_RELOC_SPARC_7
+ -- : BFD_RELOC_SPARC_6
+ -- : BFD_RELOC_SPARC_5
+ -- : BFD_RELOC_SPARC_DISP64
+ -- : BFD_RELOC_SPARC_PLT32
+ -- : BFD_RELOC_SPARC_PLT64
+ -- : BFD_RELOC_SPARC_HIX22
+ -- : BFD_RELOC_SPARC_LOX10
+ -- : BFD_RELOC_SPARC_H44
+ -- : BFD_RELOC_SPARC_M44
+ -- : BFD_RELOC_SPARC_L44
+ -- : BFD_RELOC_SPARC_REGISTER
+     SPARC64 relocations
+
+ -- : BFD_RELOC_SPARC_REV32
+     SPARC little endian relocation
+
+ -- : BFD_RELOC_SPARC_TLS_GD_HI22
+ -- : BFD_RELOC_SPARC_TLS_GD_LO10
+ -- : BFD_RELOC_SPARC_TLS_GD_ADD
+ -- : BFD_RELOC_SPARC_TLS_GD_CALL
+ -- : BFD_RELOC_SPARC_TLS_LDM_HI22
+ -- : BFD_RELOC_SPARC_TLS_LDM_LO10
+ -- : BFD_RELOC_SPARC_TLS_LDM_ADD
+ -- : BFD_RELOC_SPARC_TLS_LDM_CALL
+ -- : BFD_RELOC_SPARC_TLS_LDO_HIX22
+ -- : BFD_RELOC_SPARC_TLS_LDO_LOX10
+ -- : BFD_RELOC_SPARC_TLS_LDO_ADD
+ -- : BFD_RELOC_SPARC_TLS_IE_HI22
+ -- : BFD_RELOC_SPARC_TLS_IE_LO10
+ -- : BFD_RELOC_SPARC_TLS_IE_LD
+ -- : BFD_RELOC_SPARC_TLS_IE_LDX
+ -- : BFD_RELOC_SPARC_TLS_IE_ADD
+ -- : BFD_RELOC_SPARC_TLS_LE_HIX22
+ -- : BFD_RELOC_SPARC_TLS_LE_LOX10
+ -- : BFD_RELOC_SPARC_TLS_DTPMOD32
+ -- : BFD_RELOC_SPARC_TLS_DTPMOD64
+ -- : BFD_RELOC_SPARC_TLS_DTPOFF32
+ -- : BFD_RELOC_SPARC_TLS_DTPOFF64
+ -- : BFD_RELOC_SPARC_TLS_TPOFF32
+ -- : BFD_RELOC_SPARC_TLS_TPOFF64
+     SPARC TLS relocations
+
+ -- : BFD_RELOC_ALPHA_GPDISP_HI16
+     Alpha ECOFF and ELF relocations.  Some of these treat the symbol or
+     "addend" in some special way.  For GPDISP_HI16 ("gpdisp")
+     relocations, the symbol is ignored when writing; when reading, it
+     will be the absolute section symbol.  The addend is the
+     displacement in bytes of the "lda" instruction from the "ldah"
+     instruction (which is at the address of this reloc).
+
+ -- : BFD_RELOC_ALPHA_GPDISP_LO16
+     For GPDISP_LO16 ("ignore") relocations, the symbol is handled as
+     with GPDISP_HI16 relocs.  The addend is ignored when writing the
+     relocations out, and is filled in with the file's GP value on
+     reading, for convenience.
+
+ -- : BFD_RELOC_ALPHA_GPDISP
+     The ELF GPDISP relocation is exactly the same as the GPDISP_HI16
+     relocation except that there is no accompanying GPDISP_LO16
+     relocation.
+
+ -- : BFD_RELOC_ALPHA_LITERAL
+ -- : BFD_RELOC_ALPHA_ELF_LITERAL
+ -- : BFD_RELOC_ALPHA_LITUSE
+     The Alpha LITERAL/LITUSE relocs are produced by a symbol reference;
+     the assembler turns it into a LDQ instruction to load the address
+     of the symbol, and then fills in a register in the real
+     instruction.
+
+     The LITERAL reloc, at the LDQ instruction, refers to the .lita
+     section symbol.  The addend is ignored when writing, but is filled
+     in with the file's GP value on reading, for convenience, as with
+     the GPDISP_LO16 reloc.
+
+     The ELF_LITERAL reloc is somewhere between 16_GOTOFF and
+     GPDISP_LO16.  It should refer to the symbol to be referenced, as
+     with 16_GOTOFF, but it generates output not based on the position
+     within the .got section, but relative to the GP value chosen for
+     the file during the final link stage.
+
+     The LITUSE reloc, on the instruction using the loaded address,
+     gives information to the linker that it might be able to use to
+     optimize away some literal section references.  The symbol is
+     ignored (read as the absolute section symbol), and the "addend"
+     indicates the type of instruction using the register: 1 - "memory"
+     fmt insn 2 - byte-manipulation (byte offset reg) 3 - jsr (target
+     of branch)
+
+ -- : BFD_RELOC_ALPHA_HINT
+     The HINT relocation indicates a value that should be filled into
+     the "hint" field of a jmp/jsr/ret instruction, for possible branch-
+     prediction logic which may be provided on some processors.
+
+ -- : BFD_RELOC_ALPHA_LINKAGE
+     The LINKAGE relocation outputs a linkage pair in the object file,
+     which is filled by the linker.
+
+ -- : BFD_RELOC_ALPHA_CODEADDR
+     The CODEADDR relocation outputs a STO_CA in the object file, which
+     is filled by the linker.
+
+ -- : BFD_RELOC_ALPHA_GPREL_HI16
+ -- : BFD_RELOC_ALPHA_GPREL_LO16
+     The GPREL_HI/LO relocations together form a 32-bit offset from the
+     GP register.
+
+ -- : BFD_RELOC_ALPHA_BRSGP
+     Like BFD_RELOC_23_PCREL_S2, except that the source and target must
+     share a common GP, and the target address is adjusted for
+     STO_ALPHA_STD_GPLOAD.
+
+ -- : BFD_RELOC_ALPHA_TLSGD
+ -- : BFD_RELOC_ALPHA_TLSLDM
+ -- : BFD_RELOC_ALPHA_DTPMOD64
+ -- : BFD_RELOC_ALPHA_GOTDTPREL16
+ -- : BFD_RELOC_ALPHA_DTPREL64
+ -- : BFD_RELOC_ALPHA_DTPREL_HI16
+ -- : BFD_RELOC_ALPHA_DTPREL_LO16
+ -- : BFD_RELOC_ALPHA_DTPREL16
+ -- : BFD_RELOC_ALPHA_GOTTPREL16
+ -- : BFD_RELOC_ALPHA_TPREL64
+ -- : BFD_RELOC_ALPHA_TPREL_HI16
+ -- : BFD_RELOC_ALPHA_TPREL_LO16
+ -- : BFD_RELOC_ALPHA_TPREL16
+     Alpha thread-local storage relocations.
+
+ -- : BFD_RELOC_MIPS_JMP
+     Bits 27..2 of the relocation address shifted right 2 bits; simple
+     reloc otherwise.
+
+ -- : BFD_RELOC_MIPS16_JMP
+     The MIPS16 jump instruction.
+
+ -- : BFD_RELOC_MIPS16_GPREL
+     MIPS16 GP relative reloc.
+
+ -- : BFD_RELOC_HI16
+     High 16 bits of 32-bit value; simple reloc.
+
+ -- : BFD_RELOC_HI16_S
+     High 16 bits of 32-bit value but the low 16 bits will be sign
+     extended and added to form the final result.  If the low 16 bits
+     form a negative number, we need to add one to the high value to
+     compensate for the borrow when the low bits are added.
+
+ -- : BFD_RELOC_LO16
+     Low 16 bits.
+
+ -- : BFD_RELOC_MIPS16_HI16
+     MIPS16 high 16 bits of 32-bit value.
+
+ -- : BFD_RELOC_MIPS16_HI16_S
+     MIPS16 high 16 bits of 32-bit value but the low 16 bits will be
+     sign extended and added to form the final result.  If the low 16
+     bits form a negative number, we need to add one to the high value
+     to compensate for the borrow when the low bits are added.
+
+ -- : BFD_RELOC_MIPS16_LO16
+     MIPS16 low 16 bits.
+
+ -- : BFD_RELOC_MIPS_LITERAL
+     Relocation against a MIPS literal section.
+
+ -- : BFD_RELOC_MIPS_GOT16
+ -- : BFD_RELOC_MIPS_CALL16
+ -- : BFD_RELOC_MIPS_GOT_HI16
+ -- : BFD_RELOC_MIPS_GOT_LO16
+ -- : BFD_RELOC_MIPS_CALL_HI16
+ -- : BFD_RELOC_MIPS_CALL_LO16
+ -- : BFD_RELOC_MIPS_SUB
+ -- : BFD_RELOC_MIPS_GOT_PAGE
+ -- : BFD_RELOC_MIPS_GOT_OFST
+ -- : BFD_RELOC_MIPS_GOT_DISP
+ -- : BFD_RELOC_MIPS_SHIFT5
+ -- : BFD_RELOC_MIPS_SHIFT6
+ -- : BFD_RELOC_MIPS_INSERT_A
+ -- : BFD_RELOC_MIPS_INSERT_B
+ -- : BFD_RELOC_MIPS_DELETE
+ -- : BFD_RELOC_MIPS_HIGHEST
+ -- : BFD_RELOC_MIPS_HIGHER
+ -- : BFD_RELOC_MIPS_SCN_DISP
+ -- : BFD_RELOC_MIPS_REL16
+ -- : BFD_RELOC_MIPS_RELGOT
+ -- : BFD_RELOC_MIPS_JALR
+ -- : BFD_RELOC_MIPS_TLS_DTPMOD32
+ -- : BFD_RELOC_MIPS_TLS_DTPREL32
+ -- : BFD_RELOC_MIPS_TLS_DTPMOD64
+ -- : BFD_RELOC_MIPS_TLS_DTPREL64
+ -- : BFD_RELOC_MIPS_TLS_GD
+ -- : BFD_RELOC_MIPS_TLS_LDM
+ -- : BFD_RELOC_MIPS_TLS_DTPREL_HI16
+ -- : BFD_RELOC_MIPS_TLS_DTPREL_LO16
+ -- : BFD_RELOC_MIPS_TLS_GOTTPREL
+ -- : BFD_RELOC_MIPS_TLS_TPREL32
+ -- : BFD_RELOC_MIPS_TLS_TPREL64
+ -- : BFD_RELOC_MIPS_TLS_TPREL_HI16
+ -- : BFD_RELOC_MIPS_TLS_TPREL_LO16
+     MIPS ELF relocations.
+
+ -- : BFD_RELOC_FRV_LABEL16
+ -- : BFD_RELOC_FRV_LABEL24
+ -- : BFD_RELOC_FRV_LO16
+ -- : BFD_RELOC_FRV_HI16
+ -- : BFD_RELOC_FRV_GPREL12
+ -- : BFD_RELOC_FRV_GPRELU12
+ -- : BFD_RELOC_FRV_GPREL32
+ -- : BFD_RELOC_FRV_GPRELHI
+ -- : BFD_RELOC_FRV_GPRELLO
+ -- : BFD_RELOC_FRV_GOT12
+ -- : BFD_RELOC_FRV_GOTHI
+ -- : BFD_RELOC_FRV_GOTLO
+ -- : BFD_RELOC_FRV_FUNCDESC
+ -- : BFD_RELOC_FRV_FUNCDESC_GOT12
+ -- : BFD_RELOC_FRV_FUNCDESC_GOTHI
+ -- : BFD_RELOC_FRV_FUNCDESC_GOTLO
+ -- : BFD_RELOC_FRV_FUNCDESC_VALUE
+ -- : BFD_RELOC_FRV_FUNCDESC_GOTOFF12
+ -- : BFD_RELOC_FRV_FUNCDESC_GOTOFFHI
+ -- : BFD_RELOC_FRV_FUNCDESC_GOTOFFLO
+ -- : BFD_RELOC_FRV_GOTOFF12
+ -- : BFD_RELOC_FRV_GOTOFFHI
+ -- : BFD_RELOC_FRV_GOTOFFLO
+ -- : BFD_RELOC_FRV_GETTLSOFF
+ -- : BFD_RELOC_FRV_TLSDESC_VALUE
+ -- : BFD_RELOC_FRV_GOTTLSDESC12
+ -- : BFD_RELOC_FRV_GOTTLSDESCHI
+ -- : BFD_RELOC_FRV_GOTTLSDESCLO
+ -- : BFD_RELOC_FRV_TLSMOFF12
+ -- : BFD_RELOC_FRV_TLSMOFFHI
+ -- : BFD_RELOC_FRV_TLSMOFFLO
+ -- : BFD_RELOC_FRV_GOTTLSOFF12
+ -- : BFD_RELOC_FRV_GOTTLSOFFHI
+ -- : BFD_RELOC_FRV_GOTTLSOFFLO
+ -- : BFD_RELOC_FRV_TLSOFF
+ -- : BFD_RELOC_FRV_TLSDESC_RELAX
+ -- : BFD_RELOC_FRV_GETTLSOFF_RELAX
+ -- : BFD_RELOC_FRV_TLSOFF_RELAX
+ -- : BFD_RELOC_FRV_TLSMOFF
+     Fujitsu Frv Relocations.
+
+ -- : BFD_RELOC_MN10300_GOTOFF24
+     This is a 24bit GOT-relative reloc for the mn10300.
+
+ -- : BFD_RELOC_MN10300_GOT32
+     This is a 32bit GOT-relative reloc for the mn10300, offset by two
+     bytes in the instruction.
+
+ -- : BFD_RELOC_MN10300_GOT24
+     This is a 24bit GOT-relative reloc for the mn10300, offset by two
+     bytes in the instruction.
+
+ -- : BFD_RELOC_MN10300_GOT16
+     This is a 16bit GOT-relative reloc for the mn10300, offset by two
+     bytes in the instruction.
+
+ -- : BFD_RELOC_MN10300_COPY
+     Copy symbol at runtime.
+
+ -- : BFD_RELOC_MN10300_GLOB_DAT
+     Create GOT entry.
+
+ -- : BFD_RELOC_MN10300_JMP_SLOT
+     Create PLT entry.
+
+ -- : BFD_RELOC_MN10300_RELATIVE
+     Adjust by program base.
+
+ -- : BFD_RELOC_386_GOT32
+ -- : BFD_RELOC_386_PLT32
+ -- : BFD_RELOC_386_COPY
+ -- : BFD_RELOC_386_GLOB_DAT
+ -- : BFD_RELOC_386_JUMP_SLOT
+ -- : BFD_RELOC_386_RELATIVE
+ -- : BFD_RELOC_386_GOTOFF
+ -- : BFD_RELOC_386_GOTPC
+ -- : BFD_RELOC_386_TLS_TPOFF
+ -- : BFD_RELOC_386_TLS_IE
+ -- : BFD_RELOC_386_TLS_GOTIE
+ -- : BFD_RELOC_386_TLS_LE
+ -- : BFD_RELOC_386_TLS_GD
+ -- : BFD_RELOC_386_TLS_LDM
+ -- : BFD_RELOC_386_TLS_LDO_32
+ -- : BFD_RELOC_386_TLS_IE_32
+ -- : BFD_RELOC_386_TLS_LE_32
+ -- : BFD_RELOC_386_TLS_DTPMOD32
+ -- : BFD_RELOC_386_TLS_DTPOFF32
+ -- : BFD_RELOC_386_TLS_TPOFF32
+     i386/elf relocations
+
+ -- : BFD_RELOC_X86_64_GOT32
+ -- : BFD_RELOC_X86_64_PLT32
+ -- : BFD_RELOC_X86_64_COPY
+ -- : BFD_RELOC_X86_64_GLOB_DAT
+ -- : BFD_RELOC_X86_64_JUMP_SLOT
+ -- : BFD_RELOC_X86_64_RELATIVE
+ -- : BFD_RELOC_X86_64_GOTPCREL
+ -- : BFD_RELOC_X86_64_32S
+ -- : BFD_RELOC_X86_64_DTPMOD64
+ -- : BFD_RELOC_X86_64_DTPOFF64
+ -- : BFD_RELOC_X86_64_TPOFF64
+ -- : BFD_RELOC_X86_64_TLSGD
+ -- : BFD_RELOC_X86_64_TLSLD
+ -- : BFD_RELOC_X86_64_DTPOFF32
+ -- : BFD_RELOC_X86_64_GOTTPOFF
+ -- : BFD_RELOC_X86_64_TPOFF32
+     x86-64/elf relocations
+
+ -- : BFD_RELOC_NS32K_IMM_8
+ -- : BFD_RELOC_NS32K_IMM_16
+ -- : BFD_RELOC_NS32K_IMM_32
+ -- : BFD_RELOC_NS32K_IMM_8_PCREL
+ -- : BFD_RELOC_NS32K_IMM_16_PCREL
+ -- : BFD_RELOC_NS32K_IMM_32_PCREL
+ -- : BFD_RELOC_NS32K_DISP_8
+ -- : BFD_RELOC_NS32K_DISP_16
+ -- : BFD_RELOC_NS32K_DISP_32
+ -- : BFD_RELOC_NS32K_DISP_8_PCREL
+ -- : BFD_RELOC_NS32K_DISP_16_PCREL
+ -- : BFD_RELOC_NS32K_DISP_32_PCREL
+     ns32k relocations
+
+ -- : BFD_RELOC_PDP11_DISP_8_PCREL
+ -- : BFD_RELOC_PDP11_DISP_6_PCREL
+     PDP11 relocations
+
+ -- : BFD_RELOC_PJ_CODE_HI16
+ -- : BFD_RELOC_PJ_CODE_LO16
+ -- : BFD_RELOC_PJ_CODE_DIR16
+ -- : BFD_RELOC_PJ_CODE_DIR32
+ -- : BFD_RELOC_PJ_CODE_REL16
+ -- : BFD_RELOC_PJ_CODE_REL32
+     Picojava relocs.  Not all of these appear in object files.
+
+ -- : BFD_RELOC_PPC_B26
+ -- : BFD_RELOC_PPC_BA26
+ -- : BFD_RELOC_PPC_TOC16
+ -- : BFD_RELOC_PPC_B16
+ -- : BFD_RELOC_PPC_B16_BRTAKEN
+ -- : BFD_RELOC_PPC_B16_BRNTAKEN
+ -- : BFD_RELOC_PPC_BA16
+ -- : BFD_RELOC_PPC_BA16_BRTAKEN
+ -- : BFD_RELOC_PPC_BA16_BRNTAKEN
+ -- : BFD_RELOC_PPC_COPY
+ -- : BFD_RELOC_PPC_GLOB_DAT
+ -- : BFD_RELOC_PPC_JMP_SLOT
+ -- : BFD_RELOC_PPC_RELATIVE
+ -- : BFD_RELOC_PPC_LOCAL24PC
+ -- : BFD_RELOC_PPC_EMB_NADDR32
+ -- : BFD_RELOC_PPC_EMB_NADDR16
+ -- : BFD_RELOC_PPC_EMB_NADDR16_LO
+ -- : BFD_RELOC_PPC_EMB_NADDR16_HI
+ -- : BFD_RELOC_PPC_EMB_NADDR16_HA
+ -- : BFD_RELOC_PPC_EMB_SDAI16
+ -- : BFD_RELOC_PPC_EMB_SDA2I16
+ -- : BFD_RELOC_PPC_EMB_SDA2REL
+ -- : BFD_RELOC_PPC_EMB_SDA21
+ -- : BFD_RELOC_PPC_EMB_MRKREF
+ -- : BFD_RELOC_PPC_EMB_RELSEC16
+ -- : BFD_RELOC_PPC_EMB_RELST_LO
+ -- : BFD_RELOC_PPC_EMB_RELST_HI
+ -- : BFD_RELOC_PPC_EMB_RELST_HA
+ -- : BFD_RELOC_PPC_EMB_BIT_FLD
+ -- : BFD_RELOC_PPC_EMB_RELSDA
+ -- : BFD_RELOC_PPC64_HIGHER
+ -- : BFD_RELOC_PPC64_HIGHER_S
+ -- : BFD_RELOC_PPC64_HIGHEST
+ -- : BFD_RELOC_PPC64_HIGHEST_S
+ -- : BFD_RELOC_PPC64_TOC16_LO
+ -- : BFD_RELOC_PPC64_TOC16_HI
+ -- : BFD_RELOC_PPC64_TOC16_HA
+ -- : BFD_RELOC_PPC64_TOC
+ -- : BFD_RELOC_PPC64_PLTGOT16
+ -- : BFD_RELOC_PPC64_PLTGOT16_LO
+ -- : BFD_RELOC_PPC64_PLTGOT16_HI
+ -- : BFD_RELOC_PPC64_PLTGOT16_HA
+ -- : BFD_RELOC_PPC64_ADDR16_DS
+ -- : BFD_RELOC_PPC64_ADDR16_LO_DS
+ -- : BFD_RELOC_PPC64_GOT16_DS
+ -- : BFD_RELOC_PPC64_GOT16_LO_DS
+ -- : BFD_RELOC_PPC64_PLT16_LO_DS
+ -- : BFD_RELOC_PPC64_SECTOFF_DS
+ -- : BFD_RELOC_PPC64_SECTOFF_LO_DS
+ -- : BFD_RELOC_PPC64_TOC16_DS
+ -- : BFD_RELOC_PPC64_TOC16_LO_DS
+ -- : BFD_RELOC_PPC64_PLTGOT16_DS
+ -- : BFD_RELOC_PPC64_PLTGOT16_LO_DS
+     Power(rs6000) and PowerPC relocations.
+
+ -- : BFD_RELOC_PPC_TLS
+ -- : BFD_RELOC_PPC_DTPMOD
+ -- : BFD_RELOC_PPC_TPREL16
+ -- : BFD_RELOC_PPC_TPREL16_LO
+ -- : BFD_RELOC_PPC_TPREL16_HI
+ -- : BFD_RELOC_PPC_TPREL16_HA
+ -- : BFD_RELOC_PPC_TPREL
+ -- : BFD_RELOC_PPC_DTPREL16
+ -- : BFD_RELOC_PPC_DTPREL16_LO
+ -- : BFD_RELOC_PPC_DTPREL16_HI
+ -- : BFD_RELOC_PPC_DTPREL16_HA
+ -- : BFD_RELOC_PPC_DTPREL
+ -- : BFD_RELOC_PPC_GOT_TLSGD16
+ -- : BFD_RELOC_PPC_GOT_TLSGD16_LO
+ -- : BFD_RELOC_PPC_GOT_TLSGD16_HI
+ -- : BFD_RELOC_PPC_GOT_TLSGD16_HA
+ -- : BFD_RELOC_PPC_GOT_TLSLD16
+ -- : BFD_RELOC_PPC_GOT_TLSLD16_LO
+ -- : BFD_RELOC_PPC_GOT_TLSLD16_HI
+ -- : BFD_RELOC_PPC_GOT_TLSLD16_HA
+ -- : BFD_RELOC_PPC_GOT_TPREL16
+ -- : BFD_RELOC_PPC_GOT_TPREL16_LO
+ -- : BFD_RELOC_PPC_GOT_TPREL16_HI
+ -- : BFD_RELOC_PPC_GOT_TPREL16_HA
+ -- : BFD_RELOC_PPC_GOT_DTPREL16
+ -- : BFD_RELOC_PPC_GOT_DTPREL16_LO
+ -- : BFD_RELOC_PPC_GOT_DTPREL16_HI
+ -- : BFD_RELOC_PPC_GOT_DTPREL16_HA
+ -- : BFD_RELOC_PPC64_TPREL16_DS
+ -- : BFD_RELOC_PPC64_TPREL16_LO_DS
+ -- : BFD_RELOC_PPC64_TPREL16_HIGHER
+ -- : BFD_RELOC_PPC64_TPREL16_HIGHERA
+ -- : BFD_RELOC_PPC64_TPREL16_HIGHEST
+ -- : BFD_RELOC_PPC64_TPREL16_HIGHESTA
+ -- : BFD_RELOC_PPC64_DTPREL16_DS
+ -- : BFD_RELOC_PPC64_DTPREL16_LO_DS
+ -- : BFD_RELOC_PPC64_DTPREL16_HIGHER
+ -- : BFD_RELOC_PPC64_DTPREL16_HIGHERA
+ -- : BFD_RELOC_PPC64_DTPREL16_HIGHEST
+ -- : BFD_RELOC_PPC64_DTPREL16_HIGHESTA
+     PowerPC and PowerPC64 thread-local storage relocations.
+
+ -- : BFD_RELOC_I370_D12
+     IBM 370/390 relocations
+
+ -- : BFD_RELOC_CTOR
+     The type of reloc used to build a constructor table - at the moment
+     probably a 32 bit wide absolute relocation, but the target can
+     choose.  It generally does map to one of the other relocation
+     types.
+
+ -- : BFD_RELOC_ARM_PCREL_BRANCH
+     ARM 26 bit pc-relative branch.  The lowest two bits must be zero
+     and are not stored in the instruction.
+
+ -- : BFD_RELOC_ARM_PCREL_BLX
+     ARM 26 bit pc-relative branch.  The lowest bit must be zero and is
+     not stored in the instruction.  The 2nd lowest bit comes from a 1
+     bit field in the instruction.
+
+ -- : BFD_RELOC_THUMB_PCREL_BLX
+     Thumb 22 bit pc-relative branch.  The lowest bit must be zero and
+     is not stored in the instruction.  The 2nd lowest bit comes from a
+     1 bit field in the instruction.
+
+ -- : BFD_RELOC_ARM_IMMEDIATE
+ -- : BFD_RELOC_ARM_ADRL_IMMEDIATE
+ -- : BFD_RELOC_ARM_OFFSET_IMM
+ -- : BFD_RELOC_ARM_SHIFT_IMM
+ -- : BFD_RELOC_ARM_SMI
+ -- : BFD_RELOC_ARM_SWI
+ -- : BFD_RELOC_ARM_MULTI
+ -- : BFD_RELOC_ARM_CP_OFF_IMM
+ -- : BFD_RELOC_ARM_CP_OFF_IMM_S2
+ -- : BFD_RELOC_ARM_ADR_IMM
+ -- : BFD_RELOC_ARM_LDR_IMM
+ -- : BFD_RELOC_ARM_LITERAL
+ -- : BFD_RELOC_ARM_IN_POOL
+ -- : BFD_RELOC_ARM_OFFSET_IMM8
+ -- : BFD_RELOC_ARM_HWLITERAL
+ -- : BFD_RELOC_ARM_THUMB_ADD
+ -- : BFD_RELOC_ARM_THUMB_IMM
+ -- : BFD_RELOC_ARM_THUMB_SHIFT
+ -- : BFD_RELOC_ARM_THUMB_OFFSET
+ -- : BFD_RELOC_ARM_GOT12
+ -- : BFD_RELOC_ARM_GOT32
+ -- : BFD_RELOC_ARM_JUMP_SLOT
+ -- : BFD_RELOC_ARM_COPY
+ -- : BFD_RELOC_ARM_GLOB_DAT
+ -- : BFD_RELOC_ARM_PLT32
+ -- : BFD_RELOC_ARM_RELATIVE
+ -- : BFD_RELOC_ARM_GOTOFF
+ -- : BFD_RELOC_ARM_GOTPC
+     These relocs are only used within the ARM assembler.  They are not
+     (at present) written to any object files.
+
+ -- : BFD_RELOC_ARM_TARGET1
+     Pc-relative or absolute relocation depending on target.  Used for
+     entries in .init_array sections.
+
+ -- : BFD_RELOC_ARM_ROSEGREL32
+     Read-only segment base relative address.
+
+ -- : BFD_RELOC_ARM_SBREL32
+     Data segment base relative address.
+
+ -- : BFD_RELOC_ARM_TARGET2
+     This reloc is used for References to RTTI dta from exception
+     handling tables.  The actual definition depends on the target.  It
+     may be a pc-relative or some form of GOT-indirect relocation.
+
+ -- : BFD_RELOC_ARM_PREL31
+     31-bit PC relative address.
+
+ -- : BFD_RELOC_SH_PCDISP8BY2
+ -- : BFD_RELOC_SH_PCDISP12BY2
+ -- : BFD_RELOC_SH_IMM3
+ -- : BFD_RELOC_SH_IMM3U
+ -- : BFD_RELOC_SH_DISP12
+ -- : BFD_RELOC_SH_DISP12BY2
+ -- : BFD_RELOC_SH_DISP12BY4
+ -- : BFD_RELOC_SH_DISP12BY8
+ -- : BFD_RELOC_SH_DISP20
+ -- : BFD_RELOC_SH_DISP20BY8
+ -- : BFD_RELOC_SH_IMM4
+ -- : BFD_RELOC_SH_IMM4BY2
+ -- : BFD_RELOC_SH_IMM4BY4
+ -- : BFD_RELOC_SH_IMM8
+ -- : BFD_RELOC_SH_IMM8BY2
+ -- : BFD_RELOC_SH_IMM8BY4
+ -- : BFD_RELOC_SH_PCRELIMM8BY2
+ -- : BFD_RELOC_SH_PCRELIMM8BY4
+ -- : BFD_RELOC_SH_SWITCH16
+ -- : BFD_RELOC_SH_SWITCH32
+ -- : BFD_RELOC_SH_USES
+ -- : BFD_RELOC_SH_COUNT
+ -- : BFD_RELOC_SH_ALIGN
+ -- : BFD_RELOC_SH_CODE
+ -- : BFD_RELOC_SH_DATA
+ -- : BFD_RELOC_SH_LABEL
+ -- : BFD_RELOC_SH_LOOP_START
+ -- : BFD_RELOC_SH_LOOP_END
+ -- : BFD_RELOC_SH_COPY
+ -- : BFD_RELOC_SH_GLOB_DAT
+ -- : BFD_RELOC_SH_JMP_SLOT
+ -- : BFD_RELOC_SH_RELATIVE
+ -- : BFD_RELOC_SH_GOTPC
+ -- : BFD_RELOC_SH_GOT_LOW16
+ -- : BFD_RELOC_SH_GOT_MEDLOW16
+ -- : BFD_RELOC_SH_GOT_MEDHI16
+ -- : BFD_RELOC_SH_GOT_HI16
+ -- : BFD_RELOC_SH_GOTPLT_LOW16
+ -- : BFD_RELOC_SH_GOTPLT_MEDLOW16
+ -- : BFD_RELOC_SH_GOTPLT_MEDHI16
+ -- : BFD_RELOC_SH_GOTPLT_HI16
+ -- : BFD_RELOC_SH_PLT_LOW16
+ -- : BFD_RELOC_SH_PLT_MEDLOW16
+ -- : BFD_RELOC_SH_PLT_MEDHI16
+ -- : BFD_RELOC_SH_PLT_HI16
+ -- : BFD_RELOC_SH_GOTOFF_LOW16
+ -- : BFD_RELOC_SH_GOTOFF_MEDLOW16
+ -- : BFD_RELOC_SH_GOTOFF_MEDHI16
+ -- : BFD_RELOC_SH_GOTOFF_HI16
+ -- : BFD_RELOC_SH_GOTPC_LOW16
+ -- : BFD_RELOC_SH_GOTPC_MEDLOW16
+ -- : BFD_RELOC_SH_GOTPC_MEDHI16
+ -- : BFD_RELOC_SH_GOTPC_HI16
+ -- : BFD_RELOC_SH_COPY64
+ -- : BFD_RELOC_SH_GLOB_DAT64
+ -- : BFD_RELOC_SH_JMP_SLOT64
+ -- : BFD_RELOC_SH_RELATIVE64
+ -- : BFD_RELOC_SH_GOT10BY4
+ -- : BFD_RELOC_SH_GOT10BY8
+ -- : BFD_RELOC_SH_GOTPLT10BY4
+ -- : BFD_RELOC_SH_GOTPLT10BY8
+ -- : BFD_RELOC_SH_GOTPLT32
+ -- : BFD_RELOC_SH_SHMEDIA_CODE
+ -- : BFD_RELOC_SH_IMMU5
+ -- : BFD_RELOC_SH_IMMS6
+ -- : BFD_RELOC_SH_IMMS6BY32
+ -- : BFD_RELOC_SH_IMMU6
+ -- : BFD_RELOC_SH_IMMS10
+ -- : BFD_RELOC_SH_IMMS10BY2
+ -- : BFD_RELOC_SH_IMMS10BY4
+ -- : BFD_RELOC_SH_IMMS10BY8
+ -- : BFD_RELOC_SH_IMMS16
+ -- : BFD_RELOC_SH_IMMU16
+ -- : BFD_RELOC_SH_IMM_LOW16
+ -- : BFD_RELOC_SH_IMM_LOW16_PCREL
+ -- : BFD_RELOC_SH_IMM_MEDLOW16
+ -- : BFD_RELOC_SH_IMM_MEDLOW16_PCREL
+ -- : BFD_RELOC_SH_IMM_MEDHI16
+ -- : BFD_RELOC_SH_IMM_MEDHI16_PCREL
+ -- : BFD_RELOC_SH_IMM_HI16
+ -- : BFD_RELOC_SH_IMM_HI16_PCREL
+ -- : BFD_RELOC_SH_PT_16
+ -- : BFD_RELOC_SH_TLS_GD_32
+ -- : BFD_RELOC_SH_TLS_LD_32
+ -- : BFD_RELOC_SH_TLS_LDO_32
+ -- : BFD_RELOC_SH_TLS_IE_32
+ -- : BFD_RELOC_SH_TLS_LE_32
+ -- : BFD_RELOC_SH_TLS_DTPMOD32
+ -- : BFD_RELOC_SH_TLS_DTPOFF32
+ -- : BFD_RELOC_SH_TLS_TPOFF32
+     Renesas / SuperH SH relocs.  Not all of these appear in object
+     files.
+
+ -- : BFD_RELOC_THUMB_PCREL_BRANCH9
+ -- : BFD_RELOC_THUMB_PCREL_BRANCH12
+ -- : BFD_RELOC_THUMB_PCREL_BRANCH23
+     Thumb 23-, 12- and 9-bit pc-relative branches.  The lowest bit must
+     be zero and is not stored in the instruction.
+
+ -- : BFD_RELOC_ARC_B22_PCREL
+     ARC Cores relocs.  ARC 22 bit pc-relative branch.  The lowest two
+     bits must be zero and are not stored in the instruction.  The high
+     20 bits are installed in bits 26 through 7 of the instruction.
+
+ -- : BFD_RELOC_ARC_B26
+     ARC 26 bit absolute branch.  The lowest two bits must be zero and
+     are not stored in the instruction.  The high 24 bits are installed
+     in bits 23 through 0.
+
+ -- : BFD_RELOC_D10V_10_PCREL_R
+     Mitsubishi D10V relocs.  This is a 10-bit reloc with the right 2
+     bits assumed to be 0.
+
+ -- : BFD_RELOC_D10V_10_PCREL_L
+     Mitsubishi D10V relocs.  This is a 10-bit reloc with the right 2
+     bits assumed to be 0.  This is the same as the previous reloc
+     except it is in the left container, i.e., shifted left 15 bits.
+
+ -- : BFD_RELOC_D10V_18
+     This is an 18-bit reloc with the right 2 bits assumed to be 0.
+
+ -- : BFD_RELOC_D10V_18_PCREL
+     This is an 18-bit reloc with the right 2 bits assumed to be 0.
+
+ -- : BFD_RELOC_D30V_6
+     Mitsubishi D30V relocs.  This is a 6-bit absolute reloc.
+
+ -- : BFD_RELOC_D30V_9_PCREL
+     This is a 6-bit pc-relative reloc with the right 3 bits assumed to
+     be 0.
+
+ -- : BFD_RELOC_D30V_9_PCREL_R
+     This is a 6-bit pc-relative reloc with the right 3 bits assumed to
+     be 0. Same as the previous reloc but on the right side of the
+     container.
+
+ -- : BFD_RELOC_D30V_15
+     This is a 12-bit absolute reloc with the right 3 bitsassumed to be
+     0.
+
+ -- : BFD_RELOC_D30V_15_PCREL
+     This is a 12-bit pc-relative reloc with the right 3 bits assumed
+     to be 0.
+
+ -- : BFD_RELOC_D30V_15_PCREL_R
+     This is a 12-bit pc-relative reloc with the right 3 bits assumed
+     to be 0. Same as the previous reloc but on the right side of the
+     container.
+
+ -- : BFD_RELOC_D30V_21
+     This is an 18-bit absolute reloc with the right 3 bits assumed to
+     be 0.
+
+ -- : BFD_RELOC_D30V_21_PCREL
+     This is an 18-bit pc-relative reloc with the right 3 bits assumed
+     to be 0.
+
+ -- : BFD_RELOC_D30V_21_PCREL_R
+     This is an 18-bit pc-relative reloc with the right 3 bits assumed
+     to be 0. Same as the previous reloc but on the right side of the
+     container.
+
+ -- : BFD_RELOC_D30V_32
+     This is a 32-bit absolute reloc.
+
+ -- : BFD_RELOC_D30V_32_PCREL
+     This is a 32-bit pc-relative reloc.
+
+ -- : BFD_RELOC_DLX_HI16_S
+     DLX relocs
+
+ -- : BFD_RELOC_DLX_LO16
+     DLX relocs
+
+ -- : BFD_RELOC_DLX_JMP26
+     DLX relocs
+
+ -- : BFD_RELOC_M32R_24
+     Renesas M32R (formerly Mitsubishi M32R) relocs.  This is a 24 bit
+     absolute address.
+
+ -- : BFD_RELOC_M32R_10_PCREL
+     This is a 10-bit pc-relative reloc with the right 2 bits assumed
+     to be 0.
+
+ -- : BFD_RELOC_M32R_18_PCREL
+     This is an 18-bit reloc with the right 2 bits assumed to be 0.
+
+ -- : BFD_RELOC_M32R_26_PCREL
+     This is a 26-bit reloc with the right 2 bits assumed to be 0.
+
+ -- : BFD_RELOC_M32R_HI16_ULO
+     This is a 16-bit reloc containing the high 16 bits of an address
+     used when the lower 16 bits are treated as unsigned.
+
+ -- : BFD_RELOC_M32R_HI16_SLO
+     This is a 16-bit reloc containing the high 16 bits of an address
+     used when the lower 16 bits are treated as signed.
+
+ -- : BFD_RELOC_M32R_LO16
+     This is a 16-bit reloc containing the lower 16 bits of an address.
+
+ -- : BFD_RELOC_M32R_SDA16
+     This is a 16-bit reloc containing the small data area offset for
+     use in add3, load, and store instructions.
+
+ -- : BFD_RELOC_M32R_GOT24
+ -- : BFD_RELOC_M32R_26_PLTREL
+ -- : BFD_RELOC_M32R_COPY
+ -- : BFD_RELOC_M32R_GLOB_DAT
+ -- : BFD_RELOC_M32R_JMP_SLOT
+ -- : BFD_RELOC_M32R_RELATIVE
+ -- : BFD_RELOC_M32R_GOTOFF
+ -- : BFD_RELOC_M32R_GOTOFF_HI_ULO
+ -- : BFD_RELOC_M32R_GOTOFF_HI_SLO
+ -- : BFD_RELOC_M32R_GOTOFF_LO
+ -- : BFD_RELOC_M32R_GOTPC24
+ -- : BFD_RELOC_M32R_GOT16_HI_ULO
+ -- : BFD_RELOC_M32R_GOT16_HI_SLO
+ -- : BFD_RELOC_M32R_GOT16_LO
+ -- : BFD_RELOC_M32R_GOTPC_HI_ULO
+ -- : BFD_RELOC_M32R_GOTPC_HI_SLO
+ -- : BFD_RELOC_M32R_GOTPC_LO
+     For PIC.
+
+ -- : BFD_RELOC_V850_9_PCREL
+     This is a 9-bit reloc
+
+ -- : BFD_RELOC_V850_22_PCREL
+     This is a 22-bit reloc
+
+ -- : BFD_RELOC_V850_SDA_16_16_OFFSET
+     This is a 16 bit offset from the short data area pointer.
+
+ -- : BFD_RELOC_V850_SDA_15_16_OFFSET
+     This is a 16 bit offset (of which only 15 bits are used) from the
+     short data area pointer.
+
+ -- : BFD_RELOC_V850_ZDA_16_16_OFFSET
+     This is a 16 bit offset from the zero data area pointer.
+
+ -- : BFD_RELOC_V850_ZDA_15_16_OFFSET
+     This is a 16 bit offset (of which only 15 bits are used) from the
+     zero data area pointer.
+
+ -- : BFD_RELOC_V850_TDA_6_8_OFFSET
+     This is an 8 bit offset (of which only 6 bits are used) from the
+     tiny data area pointer.
+
+ -- : BFD_RELOC_V850_TDA_7_8_OFFSET
+     This is an 8bit offset (of which only 7 bits are used) from the
+     tiny data area pointer.
+
+ -- : BFD_RELOC_V850_TDA_7_7_OFFSET
+     This is a 7 bit offset from the tiny data area pointer.
+
+ -- : BFD_RELOC_V850_TDA_16_16_OFFSET
+     This is a 16 bit offset from the tiny data area pointer.
+
+ -- : BFD_RELOC_V850_TDA_4_5_OFFSET
+     This is a 5 bit offset (of which only 4 bits are used) from the
+     tiny data area pointer.
+
+ -- : BFD_RELOC_V850_TDA_4_4_OFFSET
+     This is a 4 bit offset from the tiny data area pointer.
+
+ -- : BFD_RELOC_V850_SDA_16_16_SPLIT_OFFSET
+     This is a 16 bit offset from the short data area pointer, with the
+     bits placed non-contiguously in the instruction.
+
+ -- : BFD_RELOC_V850_ZDA_16_16_SPLIT_OFFSET
+     This is a 16 bit offset from the zero data area pointer, with the
+     bits placed non-contiguously in the instruction.
+
+ -- : BFD_RELOC_V850_CALLT_6_7_OFFSET
+     This is a 6 bit offset from the call table base pointer.
+
+ -- : BFD_RELOC_V850_CALLT_16_16_OFFSET
+     This is a 16 bit offset from the call table base pointer.
+
+ -- : BFD_RELOC_V850_LONGCALL
+     Used for relaxing indirect function calls.
+
+ -- : BFD_RELOC_V850_LONGJUMP
+     Used for relaxing indirect jumps.
+
+ -- : BFD_RELOC_V850_ALIGN
+     Used to maintain alignment whilst relaxing.
+
+ -- : BFD_RELOC_V850_LO16_SPLIT_OFFSET
+     This is a variation of BFD_RELOC_LO16 that can be used in v850e
+     ld.bu instructions.
+
+ -- : BFD_RELOC_MN10300_32_PCREL
+     This is a 32bit pcrel reloc for the mn10300, offset by two bytes
+     in the instruction.
+
+ -- : BFD_RELOC_MN10300_16_PCREL
+     This is a 16bit pcrel reloc for the mn10300, offset by two bytes
+     in the instruction.
+
+ -- : BFD_RELOC_TIC30_LDP
+     This is a 8bit DP reloc for the tms320c30, where the most
+     significant 8 bits of a 24 bit word are placed into the least
+     significant 8 bits of the opcode.
+
+ -- : BFD_RELOC_TIC54X_PARTLS7
+     This is a 7bit reloc for the tms320c54x, where the least
+     significant 7 bits of a 16 bit word are placed into the least
+     significant 7 bits of the opcode.
+
+ -- : BFD_RELOC_TIC54X_PARTMS9
+     This is a 9bit DP reloc for the tms320c54x, where the most
+     significant 9 bits of a 16 bit word are placed into the least
+     significant 9 bits of the opcode.
+
+ -- : BFD_RELOC_TIC54X_23
+     This is an extended address 23-bit reloc for the tms320c54x.
+
+ -- : BFD_RELOC_TIC54X_16_OF_23
+     This is a 16-bit reloc for the tms320c54x, where the least
+     significant 16 bits of a 23-bit extended address are placed into
+     the opcode.
+
+ -- : BFD_RELOC_TIC54X_MS7_OF_23
+     This is a reloc for the tms320c54x, where the most significant 7
+     bits of a 23-bit extended address are placed into the opcode.
+
+ -- : BFD_RELOC_FR30_48
+     This is a 48 bit reloc for the FR30 that stores 32 bits.
+
+ -- : BFD_RELOC_FR30_20
+     This is a 32 bit reloc for the FR30 that stores 20 bits split up
+     into two sections.
+
+ -- : BFD_RELOC_FR30_6_IN_4
+     This is a 16 bit reloc for the FR30 that stores a 6 bit word
+     offset in 4 bits.
+
+ -- : BFD_RELOC_FR30_8_IN_8
+     This is a 16 bit reloc for the FR30 that stores an 8 bit byte
+     offset into 8 bits.
+
+ -- : BFD_RELOC_FR30_9_IN_8
+     This is a 16 bit reloc for the FR30 that stores a 9 bit short
+     offset into 8 bits.
+
+ -- : BFD_RELOC_FR30_10_IN_8
+     This is a 16 bit reloc for the FR30 that stores a 10 bit word
+     offset into 8 bits.
+
+ -- : BFD_RELOC_FR30_9_PCREL
+     This is a 16 bit reloc for the FR30 that stores a 9 bit pc relative
+     short offset into 8 bits.
+
+ -- : BFD_RELOC_FR30_12_PCREL
+     This is a 16 bit reloc for the FR30 that stores a 12 bit pc
+     relative short offset into 11 bits.
+
+ -- : BFD_RELOC_MCORE_PCREL_IMM8BY4
+ -- : BFD_RELOC_MCORE_PCREL_IMM11BY2
+ -- : BFD_RELOC_MCORE_PCREL_IMM4BY2
+ -- : BFD_RELOC_MCORE_PCREL_32
+ -- : BFD_RELOC_MCORE_PCREL_JSR_IMM11BY2
+ -- : BFD_RELOC_MCORE_RVA
+     Motorola Mcore relocations.
+
+ -- : BFD_RELOC_MMIX_GETA
+ -- : BFD_RELOC_MMIX_GETA_1
+ -- : BFD_RELOC_MMIX_GETA_2
+ -- : BFD_RELOC_MMIX_GETA_3
+     These are relocations for the GETA instruction.
+
+ -- : BFD_RELOC_MMIX_CBRANCH
+ -- : BFD_RELOC_MMIX_CBRANCH_J
+ -- : BFD_RELOC_MMIX_CBRANCH_1
+ -- : BFD_RELOC_MMIX_CBRANCH_2
+ -- : BFD_RELOC_MMIX_CBRANCH_3
+     These are relocations for a conditional branch instruction.
+
+ -- : BFD_RELOC_MMIX_PUSHJ
+ -- : BFD_RELOC_MMIX_PUSHJ_1
+ -- : BFD_RELOC_MMIX_PUSHJ_2
+ -- : BFD_RELOC_MMIX_PUSHJ_3
+ -- : BFD_RELOC_MMIX_PUSHJ_STUBBABLE
+     These are relocations for the PUSHJ instruction.
+
+ -- : BFD_RELOC_MMIX_JMP
+ -- : BFD_RELOC_MMIX_JMP_1
+ -- : BFD_RELOC_MMIX_JMP_2
+ -- : BFD_RELOC_MMIX_JMP_3
+     These are relocations for the JMP instruction.
+
+ -- : BFD_RELOC_MMIX_ADDR19
+     This is a relocation for a relative address as in a GETA
+     instruction or a branch.
+
+ -- : BFD_RELOC_MMIX_ADDR27
+     This is a relocation for a relative address as in a JMP
+     instruction.
+
+ -- : BFD_RELOC_MMIX_REG_OR_BYTE
+     This is a relocation for an instruction field that may be a general
+     register or a value 0..255.
+
+ -- : BFD_RELOC_MMIX_REG
+     This is a relocation for an instruction field that may be a general
+     register.
+
+ -- : BFD_RELOC_MMIX_BASE_PLUS_OFFSET
+     This is a relocation for two instruction fields holding a register
+     and an offset, the equivalent of the relocation.
+
+ -- : BFD_RELOC_MMIX_LOCAL
+     This relocation is an assertion that the expression is not
+     allocated as a global register.  It does not modify contents.
+
+ -- : BFD_RELOC_AVR_7_PCREL
+     This is a 16 bit reloc for the AVR that stores 8 bit pc relative
+     short offset into 7 bits.
+
+ -- : BFD_RELOC_AVR_13_PCREL
+     This is a 16 bit reloc for the AVR that stores 13 bit pc relative
+     short offset into 12 bits.
+
+ -- : BFD_RELOC_AVR_16_PM
+     This is a 16 bit reloc for the AVR that stores 17 bit value
+     (usually program memory address) into 16 bits.
+
+ -- : BFD_RELOC_AVR_LO8_LDI
+     This is a 16 bit reloc for the AVR that stores 8 bit value (usually
+     data memory address) into 8 bit immediate value of LDI insn.
+
+ -- : BFD_RELOC_AVR_HI8_LDI
+     This is a 16 bit reloc for the AVR that stores 8 bit value (high 8
+     bit of data memory address) into 8 bit immediate value of LDI insn.
+
+ -- : BFD_RELOC_AVR_HH8_LDI
+     This is a 16 bit reloc for the AVR that stores 8 bit value (most
+     high 8 bit of program memory address) into 8 bit immediate value
+     of LDI insn.
+
+ -- : BFD_RELOC_AVR_LO8_LDI_NEG
+     This is a 16 bit reloc for the AVR that stores negated 8 bit value
+     (usually data memory address) into 8 bit immediate value of SUBI
+     insn.
+
+ -- : BFD_RELOC_AVR_HI8_LDI_NEG
+     This is a 16 bit reloc for the AVR that stores negated 8 bit value
+     (high 8 bit of data memory address) into 8 bit immediate value of
+     SUBI insn.
+
+ -- : BFD_RELOC_AVR_HH8_LDI_NEG
+     This is a 16 bit reloc for the AVR that stores negated 8 bit value
+     (most high 8 bit of program memory address) into 8 bit immediate
+     value of LDI or SUBI insn.
+
+ -- : BFD_RELOC_AVR_LO8_LDI_PM
+     This is a 16 bit reloc for the AVR that stores 8 bit value (usually
+     command address) into 8 bit immediate value of LDI insn.
+
+ -- : BFD_RELOC_AVR_HI8_LDI_PM
+     This is a 16 bit reloc for the AVR that stores 8 bit value (high 8
+     bit of command address) into 8 bit immediate value of LDI insn.
+
+ -- : BFD_RELOC_AVR_HH8_LDI_PM
+     This is a 16 bit reloc for the AVR that stores 8 bit value (most
+     high 8 bit of command address) into 8 bit immediate value of LDI
+     insn.
+
+ -- : BFD_RELOC_AVR_LO8_LDI_PM_NEG
+     This is a 16 bit reloc for the AVR that stores negated 8 bit value
+     (usually command address) into 8 bit immediate value of SUBI insn.
+
+ -- : BFD_RELOC_AVR_HI8_LDI_PM_NEG
+     This is a 16 bit reloc for the AVR that stores negated 8 bit value
+     (high 8 bit of 16 bit command address) into 8 bit immediate value
+     of SUBI insn.
+
+ -- : BFD_RELOC_AVR_HH8_LDI_PM_NEG
+     This is a 16 bit reloc for the AVR that stores negated 8 bit value
+     (high 6 bit of 22 bit command address) into 8 bit immediate value
+     of SUBI insn.
+
+ -- : BFD_RELOC_AVR_CALL
+     This is a 32 bit reloc for the AVR that stores 23 bit value into
+     22 bits.
+
+ -- : BFD_RELOC_AVR_LDI
+     This is a 16 bit reloc for the AVR that stores all needed bits for
+     absolute addressing with ldi with overflow check to linktime
+
+ -- : BFD_RELOC_AVR_6
+     This is a 6 bit reloc for the AVR that stores offset for ldd/std
+     instructions
+
+ -- : BFD_RELOC_AVR_6_ADIW
+     This is a 6 bit reloc for the AVR that stores offset for adiw/sbiw
+     instructions
+
+ -- : BFD_RELOC_390_12
+     Direct 12 bit.
+
+ -- : BFD_RELOC_390_GOT12
+     12 bit GOT offset.
+
+ -- : BFD_RELOC_390_PLT32
+     32 bit PC relative PLT address.
+
+ -- : BFD_RELOC_390_COPY
+     Copy symbol at runtime.
+
+ -- : BFD_RELOC_390_GLOB_DAT
+     Create GOT entry.
+
+ -- : BFD_RELOC_390_JMP_SLOT
+     Create PLT entry.
+
+ -- : BFD_RELOC_390_RELATIVE
+     Adjust by program base.
+
+ -- : BFD_RELOC_390_GOTPC
+     32 bit PC relative offset to GOT.
+
+ -- : BFD_RELOC_390_GOT16
+     16 bit GOT offset.
+
+ -- : BFD_RELOC_390_PC16DBL
+     PC relative 16 bit shifted by 1.
+
+ -- : BFD_RELOC_390_PLT16DBL
+     16 bit PC rel. PLT shifted by 1.
+
+ -- : BFD_RELOC_390_PC32DBL
+     PC relative 32 bit shifted by 1.
+
+ -- : BFD_RELOC_390_PLT32DBL
+     32 bit PC rel. PLT shifted by 1.
+
+ -- : BFD_RELOC_390_GOTPCDBL
+     32 bit PC rel. GOT shifted by 1.
+
+ -- : BFD_RELOC_390_GOT64
+     64 bit GOT offset.
+
+ -- : BFD_RELOC_390_PLT64
+     64 bit PC relative PLT address.
+
+ -- : BFD_RELOC_390_GOTENT
+     32 bit rel. offset to GOT entry.
+
+ -- : BFD_RELOC_390_GOTOFF64
+     64 bit offset to GOT.
+
+ -- : BFD_RELOC_390_GOTPLT12
+     12-bit offset to symbol-entry within GOT, with PLT handling.
+
+ -- : BFD_RELOC_390_GOTPLT16
+     16-bit offset to symbol-entry within GOT, with PLT handling.
+
+ -- : BFD_RELOC_390_GOTPLT32
+     32-bit offset to symbol-entry within GOT, with PLT handling.
+
+ -- : BFD_RELOC_390_GOTPLT64
+     64-bit offset to symbol-entry within GOT, with PLT handling.
+
+ -- : BFD_RELOC_390_GOTPLTENT
+     32-bit rel. offset to symbol-entry within GOT, with PLT handling.
+
+ -- : BFD_RELOC_390_PLTOFF16
+     16-bit rel. offset from the GOT to a PLT entry.
+
+ -- : BFD_RELOC_390_PLTOFF32
+     32-bit rel. offset from the GOT to a PLT entry.
+
+ -- : BFD_RELOC_390_PLTOFF64
+     64-bit rel. offset from the GOT to a PLT entry.
+
+ -- : BFD_RELOC_390_TLS_LOAD
+ -- : BFD_RELOC_390_TLS_GDCALL
+ -- : BFD_RELOC_390_TLS_LDCALL
+ -- : BFD_RELOC_390_TLS_GD32
+ -- : BFD_RELOC_390_TLS_GD64
+ -- : BFD_RELOC_390_TLS_GOTIE12
+ -- : BFD_RELOC_390_TLS_GOTIE32
+ -- : BFD_RELOC_390_TLS_GOTIE64
+ -- : BFD_RELOC_390_TLS_LDM32
+ -- : BFD_RELOC_390_TLS_LDM64
+ -- : BFD_RELOC_390_TLS_IE32
+ -- : BFD_RELOC_390_TLS_IE64
+ -- : BFD_RELOC_390_TLS_IEENT
+ -- : BFD_RELOC_390_TLS_LE32
+ -- : BFD_RELOC_390_TLS_LE64
+ -- : BFD_RELOC_390_TLS_LDO32
+ -- : BFD_RELOC_390_TLS_LDO64
+ -- : BFD_RELOC_390_TLS_DTPMOD
+ -- : BFD_RELOC_390_TLS_DTPOFF
+ -- : BFD_RELOC_390_TLS_TPOFF
+     s390 tls relocations.
+
+ -- : BFD_RELOC_390_20
+ -- : BFD_RELOC_390_GOT20
+ -- : BFD_RELOC_390_GOTPLT20
+ -- : BFD_RELOC_390_TLS_GOTIE20
+     Long displacement extension.
+
+ -- : BFD_RELOC_IP2K_FR9
+     Scenix IP2K - 9-bit register number / data address
+
+ -- : BFD_RELOC_IP2K_BANK
+     Scenix IP2K - 4-bit register/data bank number
+
+ -- : BFD_RELOC_IP2K_ADDR16CJP
+     Scenix IP2K - low 13 bits of instruction word address
+
+ -- : BFD_RELOC_IP2K_PAGE3
+     Scenix IP2K - high 3 bits of instruction word address
+
+ -- : BFD_RELOC_IP2K_LO8DATA
+ -- : BFD_RELOC_IP2K_HI8DATA
+ -- : BFD_RELOC_IP2K_EX8DATA
+     Scenix IP2K - ext/low/high 8 bits of data address
+
+ -- : BFD_RELOC_IP2K_LO8INSN
+ -- : BFD_RELOC_IP2K_HI8INSN
+     Scenix IP2K - low/high 8 bits of instruction word address
+
+ -- : BFD_RELOC_IP2K_PC_SKIP
+     Scenix IP2K - even/odd PC modifier to modify snb pcl.0
+
+ -- : BFD_RELOC_IP2K_TEXT
+     Scenix IP2K - 16 bit word address in text section.
+
+ -- : BFD_RELOC_IP2K_FR_OFFSET
+     Scenix IP2K - 7-bit sp or dp offset
+
+ -- : BFD_RELOC_VPE4KMATH_DATA
+ -- : BFD_RELOC_VPE4KMATH_INSN
+     Scenix VPE4K coprocessor - data/insn-space addressing
+
+ -- : BFD_RELOC_VTABLE_INHERIT
+ -- : BFD_RELOC_VTABLE_ENTRY
+     These two relocations are used by the linker to determine which of
+     the entries in a C++ virtual function table are actually used.
+     When the -gc-sections option is given, the linker will zero out
+     the entries that are not used, so that the code for those
+     functions need not be included in the output.
+
+     VTABLE_INHERIT is a zero-space relocation used to describe to the
+     linker the inheritance tree of a C++ virtual function table.  The
+     relocation's symbol should be the parent class' vtable, and the
+     relocation should be located at the child vtable.
+
+     VTABLE_ENTRY is a zero-space relocation that describes the use of a
+     virtual function table entry.  The reloc's symbol should refer to
+     the table of the class mentioned in the code.  Off of that base,
+     an offset describes the entry that is being used.  For Rela hosts,
+     this offset is stored in the reloc's addend.  For Rel hosts, we
+     are forced to put this offset in the reloc's section offset.
+
+ -- : BFD_RELOC_IA64_IMM14
+ -- : BFD_RELOC_IA64_IMM22
+ -- : BFD_RELOC_IA64_IMM64
+ -- : BFD_RELOC_IA64_DIR32MSB
+ -- : BFD_RELOC_IA64_DIR32LSB
+ -- : BFD_RELOC_IA64_DIR64MSB
+ -- : BFD_RELOC_IA64_DIR64LSB
+ -- : BFD_RELOC_IA64_GPREL22
+ -- : BFD_RELOC_IA64_GPREL64I
+ -- : BFD_RELOC_IA64_GPREL32MSB
+ -- : BFD_RELOC_IA64_GPREL32LSB
+ -- : BFD_RELOC_IA64_GPREL64MSB
+ -- : BFD_RELOC_IA64_GPREL64LSB
+ -- : BFD_RELOC_IA64_LTOFF22
+ -- : BFD_RELOC_IA64_LTOFF64I
+ -- : BFD_RELOC_IA64_PLTOFF22
+ -- : BFD_RELOC_IA64_PLTOFF64I
+ -- : BFD_RELOC_IA64_PLTOFF64MSB
+ -- : BFD_RELOC_IA64_PLTOFF64LSB
+ -- : BFD_RELOC_IA64_FPTR64I
+ -- : BFD_RELOC_IA64_FPTR32MSB
+ -- : BFD_RELOC_IA64_FPTR32LSB
+ -- : BFD_RELOC_IA64_FPTR64MSB
+ -- : BFD_RELOC_IA64_FPTR64LSB
+ -- : BFD_RELOC_IA64_PCREL21B
+ -- : BFD_RELOC_IA64_PCREL21BI
+ -- : BFD_RELOC_IA64_PCREL21M
+ -- : BFD_RELOC_IA64_PCREL21F
+ -- : BFD_RELOC_IA64_PCREL22
+ -- : BFD_RELOC_IA64_PCREL60B
+ -- : BFD_RELOC_IA64_PCREL64I
+ -- : BFD_RELOC_IA64_PCREL32MSB
+ -- : BFD_RELOC_IA64_PCREL32LSB
+ -- : BFD_RELOC_IA64_PCREL64MSB
+ -- : BFD_RELOC_IA64_PCREL64LSB
+ -- : BFD_RELOC_IA64_LTOFF_FPTR22
+ -- : BFD_RELOC_IA64_LTOFF_FPTR64I
+ -- : BFD_RELOC_IA64_LTOFF_FPTR32MSB
+ -- : BFD_RELOC_IA64_LTOFF_FPTR32LSB
+ -- : BFD_RELOC_IA64_LTOFF_FPTR64MSB
+ -- : BFD_RELOC_IA64_LTOFF_FPTR64LSB
+ -- : BFD_RELOC_IA64_SEGREL32MSB
+ -- : BFD_RELOC_IA64_SEGREL32LSB
+ -- : BFD_RELOC_IA64_SEGREL64MSB
+ -- : BFD_RELOC_IA64_SEGREL64LSB
+ -- : BFD_RELOC_IA64_SECREL32MSB
+ -- : BFD_RELOC_IA64_SECREL32LSB
+ -- : BFD_RELOC_IA64_SECREL64MSB
+ -- : BFD_RELOC_IA64_SECREL64LSB
+ -- : BFD_RELOC_IA64_REL32MSB
+ -- : BFD_RELOC_IA64_REL32LSB
+ -- : BFD_RELOC_IA64_REL64MSB
+ -- : BFD_RELOC_IA64_REL64LSB
+ -- : BFD_RELOC_IA64_LTV32MSB
+ -- : BFD_RELOC_IA64_LTV32LSB
+ -- : BFD_RELOC_IA64_LTV64MSB
+ -- : BFD_RELOC_IA64_LTV64LSB
+ -- : BFD_RELOC_IA64_IPLTMSB
+ -- : BFD_RELOC_IA64_IPLTLSB
+ -- : BFD_RELOC_IA64_COPY
+ -- : BFD_RELOC_IA64_LTOFF22X
+ -- : BFD_RELOC_IA64_LDXMOV
+ -- : BFD_RELOC_IA64_TPREL14
+ -- : BFD_RELOC_IA64_TPREL22
+ -- : BFD_RELOC_IA64_TPREL64I
+ -- : BFD_RELOC_IA64_TPREL64MSB
+ -- : BFD_RELOC_IA64_TPREL64LSB
+ -- : BFD_RELOC_IA64_LTOFF_TPREL22
+ -- : BFD_RELOC_IA64_DTPMOD64MSB
+ -- : BFD_RELOC_IA64_DTPMOD64LSB
+ -- : BFD_RELOC_IA64_LTOFF_DTPMOD22
+ -- : BFD_RELOC_IA64_DTPREL14
+ -- : BFD_RELOC_IA64_DTPREL22
+ -- : BFD_RELOC_IA64_DTPREL64I
+ -- : BFD_RELOC_IA64_DTPREL32MSB
+ -- : BFD_RELOC_IA64_DTPREL32LSB
+ -- : BFD_RELOC_IA64_DTPREL64MSB
+ -- : BFD_RELOC_IA64_DTPREL64LSB
+ -- : BFD_RELOC_IA64_LTOFF_DTPREL22
+     Intel IA64 Relocations.
+
+ -- : BFD_RELOC_M68HC11_HI8
+     Motorola 68HC11 reloc.  This is the 8 bit high part of an absolute
+     address.
+
+ -- : BFD_RELOC_M68HC11_LO8
+     Motorola 68HC11 reloc.  This is the 8 bit low part of an absolute
+     address.
+
+ -- : BFD_RELOC_M68HC11_3B
+     Motorola 68HC11 reloc.  This is the 3 bit of a value.
+
+ -- : BFD_RELOC_M68HC11_RL_JUMP
+     Motorola 68HC11 reloc.  This reloc marks the beginning of a
+     jump/call instruction.  It is used for linker relaxation to
+     correctly identify beginning of instruction and change some
+     branches to use PC-relative addressing mode.
+
+ -- : BFD_RELOC_M68HC11_RL_GROUP
+     Motorola 68HC11 reloc.  This reloc marks a group of several
+     instructions that gcc generates and for which the linker
+     relaxation pass can modify and/or remove some of them.
+
+ -- : BFD_RELOC_M68HC11_LO16
+     Motorola 68HC11 reloc.  This is the 16-bit lower part of an
+     address.  It is used for 'call' instruction to specify the symbol
+     address without any special transformation (due to memory bank
+     window).
+
+ -- : BFD_RELOC_M68HC11_PAGE
+     Motorola 68HC11 reloc.  This is a 8-bit reloc that specifies the
+     page number of an address.  It is used by 'call' instruction to
+     specify the page number of the symbol.
+
+ -- : BFD_RELOC_M68HC11_24
+     Motorola 68HC11 reloc.  This is a 24-bit reloc that represents the
+     address with a 16-bit value and a 8-bit page number.  The symbol
+     address is transformed to follow the 16K memory bank of 68HC12
+     (seen as mapped in the window).
+
+ -- : BFD_RELOC_M68HC12_5B
+     Motorola 68HC12 reloc.  This is the 5 bits of a value.
+
+ -- : BFD_RELOC_16C_NUM08
+ -- : BFD_RELOC_16C_NUM08_C
+ -- : BFD_RELOC_16C_NUM16
+ -- : BFD_RELOC_16C_NUM16_C
+ -- : BFD_RELOC_16C_NUM32
+ -- : BFD_RELOC_16C_NUM32_C
+ -- : BFD_RELOC_16C_DISP04
+ -- : BFD_RELOC_16C_DISP04_C
+ -- : BFD_RELOC_16C_DISP08
+ -- : BFD_RELOC_16C_DISP08_C
+ -- : BFD_RELOC_16C_DISP16
+ -- : BFD_RELOC_16C_DISP16_C
+ -- : BFD_RELOC_16C_DISP24
+ -- : BFD_RELOC_16C_DISP24_C
+ -- : BFD_RELOC_16C_DISP24a
+ -- : BFD_RELOC_16C_DISP24a_C
+ -- : BFD_RELOC_16C_REG04
+ -- : BFD_RELOC_16C_REG04_C
+ -- : BFD_RELOC_16C_REG04a
+ -- : BFD_RELOC_16C_REG04a_C
+ -- : BFD_RELOC_16C_REG14
+ -- : BFD_RELOC_16C_REG14_C
+ -- : BFD_RELOC_16C_REG16
+ -- : BFD_RELOC_16C_REG16_C
+ -- : BFD_RELOC_16C_REG20
+ -- : BFD_RELOC_16C_REG20_C
+ -- : BFD_RELOC_16C_ABS20
+ -- : BFD_RELOC_16C_ABS20_C
+ -- : BFD_RELOC_16C_ABS24
+ -- : BFD_RELOC_16C_ABS24_C
+ -- : BFD_RELOC_16C_IMM04
+ -- : BFD_RELOC_16C_IMM04_C
+ -- : BFD_RELOC_16C_IMM16
+ -- : BFD_RELOC_16C_IMM16_C
+ -- : BFD_RELOC_16C_IMM20
+ -- : BFD_RELOC_16C_IMM20_C
+ -- : BFD_RELOC_16C_IMM24
+ -- : BFD_RELOC_16C_IMM24_C
+ -- : BFD_RELOC_16C_IMM32
+ -- : BFD_RELOC_16C_IMM32_C
+     NS CR16C Relocations.
+
+ -- : BFD_RELOC_CRX_REL4
+ -- : BFD_RELOC_CRX_REL8
+ -- : BFD_RELOC_CRX_REL8_CMP
+ -- : BFD_RELOC_CRX_REL16
+ -- : BFD_RELOC_CRX_REL24
+ -- : BFD_RELOC_CRX_REL32
+ -- : BFD_RELOC_CRX_REGREL12
+ -- : BFD_RELOC_CRX_REGREL22
+ -- : BFD_RELOC_CRX_REGREL28
+ -- : BFD_RELOC_CRX_REGREL32
+ -- : BFD_RELOC_CRX_ABS16
+ -- : BFD_RELOC_CRX_ABS32
+ -- : BFD_RELOC_CRX_NUM8
+ -- : BFD_RELOC_CRX_NUM16
+ -- : BFD_RELOC_CRX_NUM32
+ -- : BFD_RELOC_CRX_IMM16
+ -- : BFD_RELOC_CRX_IMM32
+ -- : BFD_RELOC_CRX_SWITCH8
+ -- : BFD_RELOC_CRX_SWITCH16
+ -- : BFD_RELOC_CRX_SWITCH32
+     NS CRX Relocations.
+
+ -- : BFD_RELOC_CRIS_BDISP8
+ -- : BFD_RELOC_CRIS_UNSIGNED_5
+ -- : BFD_RELOC_CRIS_SIGNED_6
+ -- : BFD_RELOC_CRIS_UNSIGNED_6
+ -- : BFD_RELOC_CRIS_SIGNED_8
+ -- : BFD_RELOC_CRIS_UNSIGNED_8
+ -- : BFD_RELOC_CRIS_SIGNED_16
+ -- : BFD_RELOC_CRIS_UNSIGNED_16
+ -- : BFD_RELOC_CRIS_LAPCQ_OFFSET
+ -- : BFD_RELOC_CRIS_UNSIGNED_4
+     These relocs are only used within the CRIS assembler.  They are not
+     (at present) written to any object files.
+
+ -- : BFD_RELOC_CRIS_COPY
+ -- : BFD_RELOC_CRIS_GLOB_DAT
+ -- : BFD_RELOC_CRIS_JUMP_SLOT
+ -- : BFD_RELOC_CRIS_RELATIVE
+     Relocs used in ELF shared libraries for CRIS.
+
+ -- : BFD_RELOC_CRIS_32_GOT
+     32-bit offset to symbol-entry within GOT.
+
+ -- : BFD_RELOC_CRIS_16_GOT
+     16-bit offset to symbol-entry within GOT.
+
+ -- : BFD_RELOC_CRIS_32_GOTPLT
+     32-bit offset to symbol-entry within GOT, with PLT handling.
+
+ -- : BFD_RELOC_CRIS_16_GOTPLT
+     16-bit offset to symbol-entry within GOT, with PLT handling.
+
+ -- : BFD_RELOC_CRIS_32_GOTREL
+     32-bit offset to symbol, relative to GOT.
+
+ -- : BFD_RELOC_CRIS_32_PLT_GOTREL
+     32-bit offset to symbol with PLT entry, relative to GOT.
+
+ -- : BFD_RELOC_CRIS_32_PLT_PCREL
+     32-bit offset to symbol with PLT entry, relative to this
+     relocation.
+
+ -- : BFD_RELOC_860_COPY
+ -- : BFD_RELOC_860_GLOB_DAT
+ -- : BFD_RELOC_860_JUMP_SLOT
+ -- : BFD_RELOC_860_RELATIVE
+ -- : BFD_RELOC_860_PC26
+ -- : BFD_RELOC_860_PLT26
+ -- : BFD_RELOC_860_PC16
+ -- : BFD_RELOC_860_LOW0
+ -- : BFD_RELOC_860_SPLIT0
+ -- : BFD_RELOC_860_LOW1
+ -- : BFD_RELOC_860_SPLIT1
+ -- : BFD_RELOC_860_LOW2
+ -- : BFD_RELOC_860_SPLIT2
+ -- : BFD_RELOC_860_LOW3
+ -- : BFD_RELOC_860_LOGOT0
+ -- : BFD_RELOC_860_SPGOT0
+ -- : BFD_RELOC_860_LOGOT1
+ -- : BFD_RELOC_860_SPGOT1
+ -- : BFD_RELOC_860_LOGOTOFF0
+ -- : BFD_RELOC_860_SPGOTOFF0
+ -- : BFD_RELOC_860_LOGOTOFF1
+ -- : BFD_RELOC_860_SPGOTOFF1
+ -- : BFD_RELOC_860_LOGOTOFF2
+ -- : BFD_RELOC_860_LOGOTOFF3
+ -- : BFD_RELOC_860_LOPC
+ -- : BFD_RELOC_860_HIGHADJ
+ -- : BFD_RELOC_860_HAGOT
+ -- : BFD_RELOC_860_HAGOTOFF
+ -- : BFD_RELOC_860_HAPC
+ -- : BFD_RELOC_860_HIGH
+ -- : BFD_RELOC_860_HIGOT
+ -- : BFD_RELOC_860_HIGOTOFF
+     Intel i860 Relocations.
+
+ -- : BFD_RELOC_OPENRISC_ABS_26
+ -- : BFD_RELOC_OPENRISC_REL_26
+     OpenRISC Relocations.
+
+ -- : BFD_RELOC_H8_DIR16A8
+ -- : BFD_RELOC_H8_DIR16R8
+ -- : BFD_RELOC_H8_DIR24A8
+ -- : BFD_RELOC_H8_DIR24R8
+ -- : BFD_RELOC_H8_DIR32A16
+     H8 elf Relocations.
+
+ -- : BFD_RELOC_XSTORMY16_REL_12
+ -- : BFD_RELOC_XSTORMY16_12
+ -- : BFD_RELOC_XSTORMY16_24
+ -- : BFD_RELOC_XSTORMY16_FPTR16
+     Sony Xstormy16 Relocations.
+
+ -- : BFD_RELOC_VAX_GLOB_DAT
+ -- : BFD_RELOC_VAX_JMP_SLOT
+ -- : BFD_RELOC_VAX_RELATIVE
+     Relocations used by VAX ELF.
+
+ -- : BFD_RELOC_MSP430_10_PCREL
+ -- : BFD_RELOC_MSP430_16_PCREL
+ -- : BFD_RELOC_MSP430_16
+ -- : BFD_RELOC_MSP430_16_PCREL_BYTE
+ -- : BFD_RELOC_MSP430_16_BYTE
+ -- : BFD_RELOC_MSP430_2X_PCREL
+ -- : BFD_RELOC_MSP430_RL_PCREL
+     msp430 specific relocation codes
+
+ -- : BFD_RELOC_IQ2000_OFFSET_16
+ -- : BFD_RELOC_IQ2000_OFFSET_21
+ -- : BFD_RELOC_IQ2000_UHI16
+     IQ2000 Relocations.
+
+ -- : BFD_RELOC_XTENSA_RTLD
+     Special Xtensa relocation used only by PLT entries in ELF shared
+     objects to indicate that the runtime linker should set the value
+     to one of its own internal functions or data structures.
+
+ -- : BFD_RELOC_XTENSA_GLOB_DAT
+ -- : BFD_RELOC_XTENSA_JMP_SLOT
+ -- : BFD_RELOC_XTENSA_RELATIVE
+     Xtensa relocations for ELF shared objects.
+
+ -- : BFD_RELOC_XTENSA_PLT
+     Xtensa relocation used in ELF object files for symbols that may
+     require PLT entries.  Otherwise, this is just a generic 32-bit
+     relocation.
+
+ -- : BFD_RELOC_XTENSA_DIFF8
+ -- : BFD_RELOC_XTENSA_DIFF16
+ -- : BFD_RELOC_XTENSA_DIFF32
+     Xtensa relocations to mark the difference of two local symbols.
+     These are only needed to support linker relaxation and can be
+     ignored when not relaxing.  The field is set to the value of the
+     difference assuming no relaxation.  The relocation encodes the
+     position of the first symbol so the linker can determine whether
+     to adjust the field value.
+
+ -- : BFD_RELOC_XTENSA_SLOT0_OP
+ -- : BFD_RELOC_XTENSA_SLOT1_OP
+ -- : BFD_RELOC_XTENSA_SLOT2_OP
+ -- : BFD_RELOC_XTENSA_SLOT3_OP
+ -- : BFD_RELOC_XTENSA_SLOT4_OP
+ -- : BFD_RELOC_XTENSA_SLOT5_OP
+ -- : BFD_RELOC_XTENSA_SLOT6_OP
+ -- : BFD_RELOC_XTENSA_SLOT7_OP
+ -- : BFD_RELOC_XTENSA_SLOT8_OP
+ -- : BFD_RELOC_XTENSA_SLOT9_OP
+ -- : BFD_RELOC_XTENSA_SLOT10_OP
+ -- : BFD_RELOC_XTENSA_SLOT11_OP
+ -- : BFD_RELOC_XTENSA_SLOT12_OP
+ -- : BFD_RELOC_XTENSA_SLOT13_OP
+ -- : BFD_RELOC_XTENSA_SLOT14_OP
+     Generic Xtensa relocations for instruction operands.  Only the slot
+     number is encoded in the relocation.  The relocation applies to the
+     last PC-relative immediate operand, or if there are no PC-relative
+     immediates, to the last immediate operand.
+
+ -- : BFD_RELOC_XTENSA_SLOT0_ALT
+ -- : BFD_RELOC_XTENSA_SLOT1_ALT
+ -- : BFD_RELOC_XTENSA_SLOT2_ALT
+ -- : BFD_RELOC_XTENSA_SLOT3_ALT
+ -- : BFD_RELOC_XTENSA_SLOT4_ALT
+ -- : BFD_RELOC_XTENSA_SLOT5_ALT
+ -- : BFD_RELOC_XTENSA_SLOT6_ALT
+ -- : BFD_RELOC_XTENSA_SLOT7_ALT
+ -- : BFD_RELOC_XTENSA_SLOT8_ALT
+ -- : BFD_RELOC_XTENSA_SLOT9_ALT
+ -- : BFD_RELOC_XTENSA_SLOT10_ALT
+ -- : BFD_RELOC_XTENSA_SLOT11_ALT
+ -- : BFD_RELOC_XTENSA_SLOT12_ALT
+ -- : BFD_RELOC_XTENSA_SLOT13_ALT
+ -- : BFD_RELOC_XTENSA_SLOT14_ALT
+     Alternate Xtensa relocations.  Only the slot is encoded in the
+     relocation.  The meaning of these relocations is opcode-specific.
+
+ -- : BFD_RELOC_XTENSA_OP0
+ -- : BFD_RELOC_XTENSA_OP1
+ -- : BFD_RELOC_XTENSA_OP2
+     Xtensa relocations for backward compatibility.  These have all been
+     replaced by BFD_RELOC_XTENSA_SLOT0_OP.
+
+ -- : BFD_RELOC_XTENSA_ASM_EXPAND
+     Xtensa relocation to mark that the assembler expanded the
+     instructions from an original target.  The expansion size is
+     encoded in the reloc size.
+
+ -- : BFD_RELOC_XTENSA_ASM_SIMPLIFY
+     Xtensa relocation to mark that the linker should simplify
+     assembler-expanded instructions.  This is commonly used internally
+     by the linker after analysis of a BFD_RELOC_XTENSA_ASM_EXPAND.
+
+
+     typedef enum bfd_reloc_code_real bfd_reloc_code_real_type;
+   
+2.11.0.2 `bfd_reloc_type_lookup'
+................................
+
+*Synopsis*
+     reloc_howto_type *bfd_reloc_type_lookup
+        (bfd *abfd, bfd_reloc_code_real_type code);
+   *Description*
+Return a pointer to a howto structure which, when invoked, will perform
+the relocation CODE on data from the architecture noted.
+
+2.11.0.3 `bfd_default_reloc_type_lookup'
+........................................
+
+*Synopsis*
+     reloc_howto_type *bfd_default_reloc_type_lookup
+        (bfd *abfd, bfd_reloc_code_real_type  code);
+   *Description*
+Provides a default relocation lookup routine for any architecture.
+
+2.11.0.4 `bfd_get_reloc_code_name'
+..................................
+
+*Synopsis*
+     const char *bfd_get_reloc_code_name (bfd_reloc_code_real_type code);
+   *Description*
+Provides a printable name for the supplied relocation code.  Useful
+mainly for printing error messages.
+
+2.11.0.5 `bfd_generic_relax_section'
+....................................
+
+*Synopsis*
+     bfd_boolean bfd_generic_relax_section
+        (bfd *abfd,
+         asection *section,
+         struct bfd_link_info *,
+         bfd_boolean *);
+   *Description*
+Provides default handling for relaxing for back ends which don't do
+relaxing.
+
+2.11.0.6 `bfd_generic_gc_sections'
+..................................
+
+*Synopsis*
+     bfd_boolean bfd_generic_gc_sections
+        (bfd *, struct bfd_link_info *);
+   *Description*
+Provides default handling for relaxing for back ends which don't do
+section gc - i.e., does nothing.
+
+2.11.0.7 `bfd_generic_merge_sections'
+.....................................
+
+*Synopsis*
+     bfd_boolean bfd_generic_merge_sections
+        (bfd *, struct bfd_link_info *);
+   *Description*
+Provides default handling for SEC_MERGE section merging for back ends
+which don't have SEC_MERGE support - i.e., does nothing.
+
+2.11.0.8 `bfd_generic_get_relocated_section_contents'
+.....................................................
+
+*Synopsis*
+     bfd_byte *bfd_generic_get_relocated_section_contents
+        (bfd *abfd,
+         struct bfd_link_info *link_info,
+         struct bfd_link_order *link_order,
+         bfd_byte *data,
+         bfd_boolean relocatable,
+         asymbol **symbols);
+   *Description*
+Provides default handling of relocation effort for back ends which
+can't be bothered to do it efficiently.
+
+
+File: bfd.info,  Node: Core Files,  Next: Targets,  Prev: Relocations,  Up: BFD front end
+
+2.12 Core files
+===============
+
+*Description*
+These are functions pertaining to core files.
+
+2.12.0.1 `bfd_core_file_failing_command'
+........................................
+
+*Synopsis*
+     const char *bfd_core_file_failing_command (bfd *abfd);
+   *Description*
+Return a read-only string explaining which program was running when it
+failed and produced the core file ABFD.
+
+2.12.0.2 `bfd_core_file_failing_signal'
+.......................................
+
+*Synopsis*
+     int bfd_core_file_failing_signal (bfd *abfd);
+   *Description*
+Returns the signal number which caused the core dump which generated
+the file the BFD ABFD is attached to.
+
+2.12.0.3 `core_file_matches_executable_p'
+.........................................
+
+*Synopsis*
+     bfd_boolean core_file_matches_executable_p
+        (bfd *core_bfd, bfd *exec_bfd);
+   *Description*
+Return `TRUE' if the core file attached to CORE_BFD was generated by a
+run of the executable file attached to EXEC_BFD, `FALSE' otherwise.
+
+
+File: bfd.info,  Node: Targets,  Next: Architectures,  Prev: Core Files,  Up: BFD front end
+
+2.13 Targets
+============
+
+*Description*
+Each port of BFD to a different machine requires the creation of a
+target back end. All the back end provides to the root part of BFD is a
+structure containing pointers to functions which perform certain low
+level operations on files. BFD translates the applications's requests
+through a pointer into calls to the back end routines.
+
+   When a file is opened with `bfd_openr', its format and target are
+unknown. BFD uses various mechanisms to determine how to interpret the
+file. The operations performed are:
+
+   * Create a BFD by calling the internal routine `_bfd_new_bfd', then
+     call `bfd_find_target' with the target string supplied to
+     `bfd_openr' and the new BFD pointer.
+
+   * If a null target string was provided to `bfd_find_target', look up
+     the environment variable `GNUTARGET' and use that as the target
+     string.
+
+   * If the target string is still `NULL', or the target string is
+     `default', then use the first item in the target vector as the
+     target type, and set `target_defaulted' in the BFD to cause
+     `bfd_check_format' to loop through all the targets.  *Note
+     bfd_target::.  *Note Formats::.
+
+   * Otherwise, inspect the elements in the target vector one by one,
+     until a match on target name is found. When found, use it.
+
+   * Otherwise return the error `bfd_error_invalid_target' to
+     `bfd_openr'.
+
+   * `bfd_openr' attempts to open the file using `bfd_open_file', and
+     returns the BFD.
+   Once the BFD has been opened and the target selected, the file
+format may be determined. This is done by calling `bfd_check_format' on
+the BFD with a suggested format.  If `target_defaulted' has been set,
+each possible target type is tried to see if it recognizes the
+specified format.  `bfd_check_format' returns `TRUE' when the caller
+guesses right.
+
+* Menu:
+
+* bfd_target::
+
+
+File: bfd.info,  Node: bfd_target,  Prev: Targets,  Up: Targets
+
+2.13.1 bfd_target
+-----------------
+
+*Description*
+This structure contains everything that BFD knows about a target. It
+includes things like its byte order, name, and which routines to call
+to do various operations.
+
+   Every BFD points to a target structure with its `xvec' member.
+
+   The macros below are used to dispatch to functions through the
+`bfd_target' vector. They are used in a number of macros further down
+in `bfd.h', and are also used when calling various routines by hand
+inside the BFD implementation.  The ARGLIST argument must be
+parenthesized; it contains all the arguments to the called function.
+
+   They make the documentation (more) unpleasant to read, so if someone
+wants to fix this and not break the above, please do.
+     #define BFD_SEND(bfd, message, arglist) \
+       ((*((bfd)->xvec->message)) arglist)
+
+     #ifdef DEBUG_BFD_SEND
+     #undef BFD_SEND
+     #define BFD_SEND(bfd, message, arglist) \
+       (((bfd) && (bfd)->xvec && (bfd)->xvec->message) ? \
+         ((*((bfd)->xvec->message)) arglist) : \
+         (bfd_assert (__FILE__,__LINE__), NULL))
+     #endif
+   For operations which index on the BFD format:
+     #define BFD_SEND_FMT(bfd, message, arglist) \
+       (((bfd)->xvec->message[(int) ((bfd)->format)]) arglist)
+
+     #ifdef DEBUG_BFD_SEND
+     #undef BFD_SEND_FMT
+     #define BFD_SEND_FMT(bfd, message, arglist) \
+       (((bfd) && (bfd)->xvec && (bfd)->xvec->message) ? \
+        (((bfd)->xvec->message[(int) ((bfd)->format)]) arglist) : \
+        (bfd_assert (__FILE__,__LINE__), NULL))
+     #endif
+   This is the structure which defines the type of BFD this is.  The
+`xvec' member of the struct `bfd' itself points here.  Each module that
+implements access to a different target under BFD, defines one of these.
+
+   FIXME, these names should be rationalised with the names of the
+entry points which call them. Too bad we can't have one macro to define
+them both!
+     enum bfd_flavour
+     {
+       bfd_target_unknown_flavour,
+       bfd_target_aout_flavour,
+       bfd_target_coff_flavour,
+       bfd_target_ecoff_flavour,
+       bfd_target_xcoff_flavour,
+       bfd_target_elf_flavour,
+       bfd_target_ieee_flavour,
+       bfd_target_nlm_flavour,
+       bfd_target_oasys_flavour,
+       bfd_target_tekhex_flavour,
+       bfd_target_srec_flavour,
+       bfd_target_ihex_flavour,
+       bfd_target_som_flavour,
+       bfd_target_os9k_flavour,
+       bfd_target_versados_flavour,
+       bfd_target_msdos_flavour,
+       bfd_target_ovax_flavour,
+       bfd_target_evax_flavour,
+       bfd_target_mmo_flavour,
+       bfd_target_mach_o_flavour,
+       bfd_target_pef_flavour,
+       bfd_target_pef_xlib_flavour,
+       bfd_target_sym_flavour
+     };
+
+     enum bfd_endian { BFD_ENDIAN_BIG, BFD_ENDIAN_LITTLE, BFD_ENDIAN_UNKNOWN };
+
+     /* Forward declaration.  */
+     typedef struct bfd_link_info _bfd_link_info;
+
+     typedef struct bfd_target
+     {
+       /* Identifies the kind of target, e.g., SunOS4, Ultrix, etc.  */
+       char *name;
+
+      /* The "flavour" of a back end is a general indication about
+         the contents of a file.  */
+       enum bfd_flavour flavour;
+
+       /* The order of bytes within the data area of a file.  */
+       enum bfd_endian byteorder;
+
+      /* The order of bytes within the header parts of a file.  */
+       enum bfd_endian header_byteorder;
+
+       /* A mask of all the flags which an executable may have set -
+          from the set `BFD_NO_FLAGS', `HAS_RELOC', ...`D_PAGED'.  */
+       flagword object_flags;
+
+      /* A mask of all the flags which a section may have set - from
+         the set `SEC_NO_FLAGS', `SEC_ALLOC', ...`SET_NEVER_LOAD'.  */
+       flagword section_flags;
+
+      /* The character normally found at the front of a symbol.
+         (if any), perhaps `_'.  */
+       char symbol_leading_char;
+
+      /* The pad character for file names within an archive header.  */
+       char ar_pad_char;
+
+       /* The maximum number of characters in an archive header.  */
+       unsigned short ar_max_namelen;
+
+       /* Entries for byte swapping for data. These are different from the
+          other entry points, since they don't take a BFD as the first argument.
+          Certain other handlers could do the same.  */
+       bfd_uint64_t   (*bfd_getx64) (const void *);
+       bfd_int64_t    (*bfd_getx_signed_64) (const void *);
+       void           (*bfd_putx64) (bfd_uint64_t, void *);
+       bfd_vma        (*bfd_getx32) (const void *);
+       bfd_signed_vma (*bfd_getx_signed_32) (const void *);
+       void           (*bfd_putx32) (bfd_vma, void *);
+       bfd_vma        (*bfd_getx16) (const void *);
+       bfd_signed_vma (*bfd_getx_signed_16) (const void *);
+       void           (*bfd_putx16) (bfd_vma, void *);
+
+       /* Byte swapping for the headers.  */
+       bfd_uint64_t   (*bfd_h_getx64) (const void *);
+       bfd_int64_t    (*bfd_h_getx_signed_64) (const void *);
+       void           (*bfd_h_putx64) (bfd_uint64_t, void *);
+       bfd_vma        (*bfd_h_getx32) (const void *);
+       bfd_signed_vma (*bfd_h_getx_signed_32) (const void *);
+       void           (*bfd_h_putx32) (bfd_vma, void *);
+       bfd_vma        (*bfd_h_getx16) (const void *);
+       bfd_signed_vma (*bfd_h_getx_signed_16) (const void *);
+       void           (*bfd_h_putx16) (bfd_vma, void *);
+
+       /* Format dependent routines: these are vectors of entry points
+          within the target vector structure, one for each format to check.  */
+
+       /* Check the format of a file being read.  Return a `bfd_target *' or zero.  */
+       const struct bfd_target *(*_bfd_check_format[bfd_type_end]) (bfd *);
+
+       /* Set the format of a file being written.  */
+       bfd_boolean (*_bfd_set_format[bfd_type_end]) (bfd *);
+
+       /* Write cached information into a file being written, at `bfd_close'.  */
+       bfd_boolean (*_bfd_write_contents[bfd_type_end]) (bfd *);
+   The general target vector.  These vectors are initialized using the
+BFD_JUMP_TABLE macros.
+
+       /* Generic entry points.  */
+     #define BFD_JUMP_TABLE_GENERIC(NAME) \
+       NAME##_close_and_cleanup, \
+       NAME##_bfd_free_cached_info, \
+       NAME##_new_section_hook, \
+       NAME##_get_section_contents, \
+       NAME##_get_section_contents_in_window
+
+       /* Called when the BFD is being closed to do any necessary cleanup.  */
+       bfd_boolean (*_close_and_cleanup) (bfd *);
+       /* Ask the BFD to free all cached information.  */
+       bfd_boolean (*_bfd_free_cached_info) (bfd *);
+       /* Called when a new section is created.  */
+       bfd_boolean (*_new_section_hook) (bfd *, sec_ptr);
+       /* Read the contents of a section.  */
+       bfd_boolean (*_bfd_get_section_contents)
+         (bfd *, sec_ptr, void *, file_ptr, bfd_size_type);
+       bfd_boolean (*_bfd_get_section_contents_in_window)
+         (bfd *, sec_ptr, bfd_window *, file_ptr, bfd_size_type);
+
+       /* Entry points to copy private data.  */
+     #define BFD_JUMP_TABLE_COPY(NAME) \
+       NAME##_bfd_copy_private_bfd_data, \
+       NAME##_bfd_merge_private_bfd_data, \
+       NAME##_bfd_copy_private_section_data, \
+       NAME##_bfd_copy_private_symbol_data, \
+       NAME##_bfd_copy_private_header_data, \
+       NAME##_bfd_set_private_flags, \
+       NAME##_bfd_print_private_bfd_data
+
+       /* Called to copy BFD general private data from one object file
+          to another.  */
+       bfd_boolean (*_bfd_copy_private_bfd_data) (bfd *, bfd *);
+       /* Called to merge BFD general private data from one object file
+          to a common output file when linking.  */
+       bfd_boolean (*_bfd_merge_private_bfd_data) (bfd *, bfd *);
+       /* Called to copy BFD private section data from one object file
+          to another.  */
+       bfd_boolean (*_bfd_copy_private_section_data)
+         (bfd *, sec_ptr, bfd *, sec_ptr);
+       /* Called to copy BFD private symbol data from one symbol
+          to another.  */
+       bfd_boolean (*_bfd_copy_private_symbol_data)
+         (bfd *, asymbol *, bfd *, asymbol *);
+       /* Called to copy BFD private header data from one object file
+          to another.  */
+       bfd_boolean (*_bfd_copy_private_header_data)
+         (bfd *, bfd *);
+       /* Called to set private backend flags.  */
+       bfd_boolean (*_bfd_set_private_flags) (bfd *, flagword);
+
+       /* Called to print private BFD data.  */
+       bfd_boolean (*_bfd_print_private_bfd_data) (bfd *, void *);
+
+       /* Core file entry points.  */
+     #define BFD_JUMP_TABLE_CORE(NAME) \
+       NAME##_core_file_failing_command, \
+       NAME##_core_file_failing_signal, \
+       NAME##_core_file_matches_executable_p
+
+       char *      (*_core_file_failing_command) (bfd *);
+       int         (*_core_file_failing_signal) (bfd *);
+       bfd_boolean (*_core_file_matches_executable_p) (bfd *, bfd *);
+
+       /* Archive entry points.  */
+     #define BFD_JUMP_TABLE_ARCHIVE(NAME) \
+       NAME##_slurp_armap, \
+       NAME##_slurp_extended_name_table, \
+       NAME##_construct_extended_name_table, \
+       NAME##_truncate_arname, \
+       NAME##_write_armap, \
+       NAME##_read_ar_hdr, \
+       NAME##_openr_next_archived_file, \
+       NAME##_get_elt_at_index, \
+       NAME##_generic_stat_arch_elt, \
+       NAME##_update_armap_timestamp
+
+       bfd_boolean (*_bfd_slurp_armap) (bfd *);
+       bfd_boolean (*_bfd_slurp_extended_name_table) (bfd *);
+       bfd_boolean (*_bfd_construct_extended_name_table)
+         (bfd *, char **, bfd_size_type *, const char **);
+       void        (*_bfd_truncate_arname) (bfd *, const char *, char *);
+       bfd_boolean (*write_armap)
+         (bfd *, unsigned int, struct orl *, unsigned int, int);
+       void *      (*_bfd_read_ar_hdr_fn) (bfd *);
+       bfd *       (*openr_next_archived_file) (bfd *, bfd *);
+     #define bfd_get_elt_at_index(b,i) BFD_SEND (b, _bfd_get_elt_at_index, (b,i))
+       bfd *       (*_bfd_get_elt_at_index) (bfd *, symindex);
+       int         (*_bfd_stat_arch_elt) (bfd *, struct stat *);
+       bfd_boolean (*_bfd_update_armap_timestamp) (bfd *);
+
+       /* Entry points used for symbols.  */
+     #define BFD_JUMP_TABLE_SYMBOLS(NAME) \
+       NAME##_get_symtab_upper_bound, \
+       NAME##_canonicalize_symtab, \
+       NAME##_make_empty_symbol, \
+       NAME##_print_symbol, \
+       NAME##_get_symbol_info, \
+       NAME##_bfd_is_local_label_name, \
+       NAME##_bfd_is_target_special_symbol, \
+       NAME##_get_lineno, \
+       NAME##_find_nearest_line, \
+       NAME##_bfd_make_debug_symbol, \
+       NAME##_read_minisymbols, \
+       NAME##_minisymbol_to_symbol
+
+       long        (*_bfd_get_symtab_upper_bound) (bfd *);
+       long        (*_bfd_canonicalize_symtab)
+         (bfd *, struct bfd_symbol **);
+       struct bfd_symbol *
+                   (*_bfd_make_empty_symbol) (bfd *);
+       void        (*_bfd_print_symbol)
+         (bfd *, void *, struct bfd_symbol *, bfd_print_symbol_type);
+     #define bfd_print_symbol(b,p,s,e) BFD_SEND (b, _bfd_print_symbol, (b,p,s,e))
+       void        (*_bfd_get_symbol_info)
+         (bfd *, struct bfd_symbol *, symbol_info *);
+     #define bfd_get_symbol_info(b,p,e) BFD_SEND (b, _bfd_get_symbol_info, (b,p,e))
+       bfd_boolean (*_bfd_is_local_label_name) (bfd *, const char *);
+       bfd_boolean (*_bfd_is_target_special_symbol) (bfd *, asymbol *);
+       alent *     (*_get_lineno) (bfd *, struct bfd_symbol *);
+       bfd_boolean (*_bfd_find_nearest_line)
+         (bfd *, struct bfd_section *, struct bfd_symbol **, bfd_vma,
+          const char **, const char **, unsigned int *);
+      /* Back-door to allow format-aware applications to create debug symbols
+         while using BFD for everything else.  Currently used by the assembler
+         when creating COFF files.  */
+       asymbol *   (*_bfd_make_debug_symbol)
+         (bfd *, void *, unsigned long size);
+     #define bfd_read_minisymbols(b, d, m, s) \
+       BFD_SEND (b, _read_minisymbols, (b, d, m, s))
+       long        (*_read_minisymbols)
+         (bfd *, bfd_boolean, void **, unsigned int *);
+     #define bfd_minisymbol_to_symbol(b, d, m, f) \
+       BFD_SEND (b, _minisymbol_to_symbol, (b, d, m, f))
+       asymbol *   (*_minisymbol_to_symbol)
+         (bfd *, bfd_boolean, const void *, asymbol *);
+
+       /* Routines for relocs.  */
+     #define BFD_JUMP_TABLE_RELOCS(NAME) \
+       NAME##_get_reloc_upper_bound, \
+       NAME##_canonicalize_reloc, \
+       NAME##_bfd_reloc_type_lookup
+
+       long        (*_get_reloc_upper_bound) (bfd *, sec_ptr);
+       long        (*_bfd_canonicalize_reloc)
+         (bfd *, sec_ptr, arelent **, struct bfd_symbol **);
+       /* See documentation on reloc types.  */
+       reloc_howto_type *
+                   (*reloc_type_lookup) (bfd *, bfd_reloc_code_real_type);
+
+       /* Routines used when writing an object file.  */
+     #define BFD_JUMP_TABLE_WRITE(NAME) \
+       NAME##_set_arch_mach, \
+       NAME##_set_section_contents
+
+       bfd_boolean (*_bfd_set_arch_mach)
+         (bfd *, enum bfd_architecture, unsigned long);
+       bfd_boolean (*_bfd_set_section_contents)
+         (bfd *, sec_ptr, const void *, file_ptr, bfd_size_type);
+
+       /* Routines used by the linker.  */
+     #define BFD_JUMP_TABLE_LINK(NAME) \
+       NAME##_sizeof_headers, \
+       NAME##_bfd_get_relocated_section_contents, \
+       NAME##_bfd_relax_section, \
+       NAME##_bfd_link_hash_table_create, \
+       NAME##_bfd_link_hash_table_free, \
+       NAME##_bfd_link_add_symbols, \
+       NAME##_bfd_link_just_syms, \
+       NAME##_bfd_final_link, \
+       NAME##_bfd_link_split_section, \
+       NAME##_bfd_gc_sections, \
+       NAME##_bfd_merge_sections, \
+       NAME##_bfd_is_group_section, \
+       NAME##_bfd_discard_group, \
+       NAME##_section_already_linked \
+
+       int         (*_bfd_sizeof_headers) (bfd *, bfd_boolean);
+       bfd_byte *  (*_bfd_get_relocated_section_contents)
+         (bfd *, struct bfd_link_info *, struct bfd_link_order *,
+          bfd_byte *, bfd_boolean, struct bfd_symbol **);
+
+       bfd_boolean (*_bfd_relax_section)
+         (bfd *, struct bfd_section *, struct bfd_link_info *, bfd_boolean *);
+
+       /* Create a hash table for the linker.  Different backends store
+          different information in this table.  */
+       struct bfd_link_hash_table *
+                   (*_bfd_link_hash_table_create) (bfd *);
+
+       /* Release the memory associated with the linker hash table.  */
+       void        (*_bfd_link_hash_table_free) (struct bfd_link_hash_table *);
+
+       /* Add symbols from this object file into the hash table.  */
+       bfd_boolean (*_bfd_link_add_symbols) (bfd *, struct bfd_link_info *);
+
+       /* Indicate that we are only retrieving symbol values from this section.  */
+       void        (*_bfd_link_just_syms) (asection *, struct bfd_link_info *);
+
+       /* Do a link based on the link_order structures attached to each
+          section of the BFD.  */
+       bfd_boolean (*_bfd_final_link) (bfd *, struct bfd_link_info *);
+
+       /* Should this section be split up into smaller pieces during linking.  */
+       bfd_boolean (*_bfd_link_split_section) (bfd *, struct bfd_section *);
+
+       /* Remove sections that are not referenced from the output.  */
+       bfd_boolean (*_bfd_gc_sections) (bfd *, struct bfd_link_info *);
+
+       /* Attempt to merge SEC_MERGE sections.  */
+       bfd_boolean (*_bfd_merge_sections) (bfd *, struct bfd_link_info *);
+
+       /* Is this section a member of a group?  */
+       bfd_boolean (*_bfd_is_group_section) (bfd *, const struct bfd_section *);
+
+       /* Discard members of a group.  */
+       bfd_boolean (*_bfd_discard_group) (bfd *, struct bfd_section *);
+
+       /* Check if SEC has been already linked during a reloceatable or
+          final link.  */
+       void (*_section_already_linked) (bfd *, struct bfd_section *);
+
+       /* Routines to handle dynamic symbols and relocs.  */
+     #define BFD_JUMP_TABLE_DYNAMIC(NAME) \
+       NAME##_get_dynamic_symtab_upper_bound, \
+       NAME##_canonicalize_dynamic_symtab, \
+       NAME##_get_synthetic_symtab, \
+       NAME##_get_dynamic_reloc_upper_bound, \
+       NAME##_canonicalize_dynamic_reloc
+
+       /* Get the amount of memory required to hold the dynamic symbols.  */
+       long        (*_bfd_get_dynamic_symtab_upper_bound) (bfd *);
+       /* Read in the dynamic symbols.  */
+       long        (*_bfd_canonicalize_dynamic_symtab)
+         (bfd *, struct bfd_symbol **);
+       /* Create synthetized symbols.  */
+       long        (*_bfd_get_synthetic_symtab)
+         (bfd *, long, struct bfd_symbol **, long, struct bfd_symbol **,
+          struct bfd_symbol **);
+       /* Get the amount of memory required to hold the dynamic relocs.  */
+       long        (*_bfd_get_dynamic_reloc_upper_bound) (bfd *);
+       /* Read in the dynamic relocs.  */
+       long        (*_bfd_canonicalize_dynamic_reloc)
+         (bfd *, arelent **, struct bfd_symbol **);
+   A pointer to an alternative bfd_target in case the current one is not
+satisfactory.  This can happen when the target cpu supports both big
+and little endian code, and target chosen by the linker has the wrong
+endianness.  The function open_output() in ld/ldlang.c uses this field
+to find an alternative output format that is suitable.
+       /* Opposite endian version of this target.  */
+       const struct bfd_target * alternative_target;
+
+       /* Data for use by back-end routines, which isn't
+          generic enough to belong in this structure.  */
+       const void *backend_data;
+
+     } bfd_target;
+
+2.13.1.1 `bfd_set_default_target'
+.................................
+
+*Synopsis*
+     bfd_boolean bfd_set_default_target (const char *name);
+   *Description*
+Set the default target vector to use when recognizing a BFD.  This
+takes the name of the target, which may be a BFD target name or a
+configuration triplet.
+
+2.13.1.2 `bfd_find_target'
+..........................
+
+*Synopsis*
+     const bfd_target *bfd_find_target (const char *target_name, bfd *abfd);
+   *Description*
+Return a pointer to the transfer vector for the object target named
+TARGET_NAME.  If TARGET_NAME is `NULL', choose the one in the
+environment variable `GNUTARGET'; if that is null or not defined, then
+choose the first entry in the target list.  Passing in the string
+"default" or setting the environment variable to "default" will cause
+the first entry in the target list to be returned, and
+"target_defaulted" will be set in the BFD.  This causes
+`bfd_check_format' to loop over all the targets to find the one that
+matches the file being read.
+
+2.13.1.3 `bfd_target_list'
+..........................
+
+*Synopsis*
+     const char ** bfd_target_list (void);
+   *Description*
+Return a freshly malloced NULL-terminated vector of the names of all
+the valid BFD targets. Do not modify the names.
+
+2.13.1.4 `bfd_seach_for_target'
+...............................
+
+*Synopsis*
+     const bfd_target *bfd_search_for_target
+        (int (*search_func) (const bfd_target *, void *),
+         void *);
+   *Description*
+Return a pointer to the first transfer vector in the list of transfer
+vectors maintained by BFD that produces a non-zero result when passed
+to the function SEARCH_FUNC.  The parameter DATA is passed, unexamined,
+to the search function.
+
+
+File: bfd.info,  Node: Architectures,  Next: Opening and Closing,  Prev: Targets,  Up: BFD front end
+
+2.14 Architectures
+==================
+
+BFD keeps one atom in a BFD describing the architecture of the data
+attached to the BFD: a pointer to a `bfd_arch_info_type'.
+
+   Pointers to structures can be requested independently of a BFD so
+that an architecture's information can be interrogated without access
+to an open BFD.
+
+   The architecture information is provided by each architecture
+package.  The set of default architectures is selected by the macro
+`SELECT_ARCHITECTURES'.  This is normally set up in the
+`config/TARGET.mt' file of your choice.  If the name is not defined,
+then all the architectures supported are included.
+
+   When BFD starts up, all the architectures are called with an
+initialize method.  It is up to the architecture back end to insert as
+many items into the list of architectures as it wants to; generally
+this would be one for each machine and one for the default case (an
+item with a machine field of 0).
+
+   BFD's idea of an architecture is implemented in `archures.c'.
+
+2.14.1 bfd_architecture
+-----------------------
+
+*Description*
+This enum gives the object file's CPU architecture, in a global
+sense--i.e., what processor family does it belong to?  Another field
+indicates which processor within the family is in use.  The machine
+gives a number which distinguishes different versions of the
+architecture, containing, for example, 2 and 3 for Intel i960 KA and
+i960 KB, and 68020 and 68030 for Motorola 68020 and 68030.
+     enum bfd_architecture
+     {
+       bfd_arch_unknown,   /* File arch not known.  */
+       bfd_arch_obscure,   /* Arch known, not one of these.  */
+       bfd_arch_m68k,      /* Motorola 68xxx */
+     #define bfd_mach_m68000 1
+     #define bfd_mach_m68008 2
+     #define bfd_mach_m68010 3
+     #define bfd_mach_m68020 4
+     #define bfd_mach_m68030 5
+     #define bfd_mach_m68040 6
+     #define bfd_mach_m68060 7
+     #define bfd_mach_cpu32  8
+     #define bfd_mach_mcf5200  9
+     #define bfd_mach_mcf5206e 10
+     #define bfd_mach_mcf5307  11
+     #define bfd_mach_mcf5407  12
+     #define bfd_mach_mcf528x  13
+     #define bfd_mach_mcfv4e   14
+     #define bfd_mach_mcf521x   15
+     #define bfd_mach_mcf5249   16
+     #define bfd_mach_mcf547x   17
+     #define bfd_mach_mcf548x   18
+       bfd_arch_vax,       /* DEC Vax */
+       bfd_arch_i960,      /* Intel 960 */
+         /* The order of the following is important.
+            lower number indicates a machine type that
+            only accepts a subset of the instructions
+            available to machines with higher numbers.
+            The exception is the "ca", which is
+            incompatible with all other machines except
+            "core".  */
+
+     #define bfd_mach_i960_core      1
+     #define bfd_mach_i960_ka_sa     2
+     #define bfd_mach_i960_kb_sb     3
+     #define bfd_mach_i960_mc        4
+     #define bfd_mach_i960_xa        5
+     #define bfd_mach_i960_ca        6
+     #define bfd_mach_i960_jx        7
+     #define bfd_mach_i960_hx        8
+
+       bfd_arch_or32,      /* OpenRISC 32 */
+
+       bfd_arch_a29k,      /* AMD 29000 */
+       bfd_arch_sparc,     /* SPARC */
+     #define bfd_mach_sparc                 1
+     /* The difference between v8plus and v9 is that v9 is a true 64 bit env.  */
+     #define bfd_mach_sparc_sparclet        2
+     #define bfd_mach_sparc_sparclite       3
+     #define bfd_mach_sparc_v8plus          4
+     #define bfd_mach_sparc_v8plusa         5 /* with ultrasparc add'ns.  */
+     #define bfd_mach_sparc_sparclite_le    6
+     #define bfd_mach_sparc_v9              7
+     #define bfd_mach_sparc_v9a             8 /* with ultrasparc add'ns.  */
+     #define bfd_mach_sparc_v8plusb         9 /* with cheetah add'ns.  */
+     #define bfd_mach_sparc_v9b             10 /* with cheetah add'ns.  */
+     /* Nonzero if MACH has the v9 instruction set.  */
+     #define bfd_mach_sparc_v9_p(mach) \
+       ((mach) >= bfd_mach_sparc_v8plus && (mach) <= bfd_mach_sparc_v9b \
+        && (mach) != bfd_mach_sparc_sparclite_le)
+     /* Nonzero if MACH is a 64 bit sparc architecture.  */
+     #define bfd_mach_sparc_64bit_p(mach) \
+       ((mach) >= bfd_mach_sparc_v9 && (mach) != bfd_mach_sparc_v8plusb)
+       bfd_arch_mips,      /* MIPS Rxxxx */
+     #define bfd_mach_mips3000              3000
+     #define bfd_mach_mips3900              3900
+     #define bfd_mach_mips4000              4000
+     #define bfd_mach_mips4010              4010
+     #define bfd_mach_mips4100              4100
+     #define bfd_mach_mips4111              4111
+     #define bfd_mach_mips4120              4120
+     #define bfd_mach_mips4300              4300
+     #define bfd_mach_mips4400              4400
+     #define bfd_mach_mips4600              4600
+     #define bfd_mach_mips4650              4650
+     #define bfd_mach_mips5000              5000
+     #define bfd_mach_mips5400              5400
+     #define bfd_mach_mips5500              5500
+     #define bfd_mach_mips6000              6000
+     #define bfd_mach_mips7000              7000
+     #define bfd_mach_mips8000              8000
+     #define bfd_mach_mips9000              9000
+     #define bfd_mach_mips10000             10000
+     #define bfd_mach_mips12000             12000
+     #define bfd_mach_mips16                16
+     #define bfd_mach_mips5                 5
+     #define bfd_mach_mips_sb1              12310201 /* octal 'SB', 01 */
+     #define bfd_mach_mipsisa32             32
+     #define bfd_mach_mipsisa32r2           33
+     #define bfd_mach_mipsisa64             64
+     #define bfd_mach_mipsisa64r2           65
+       bfd_arch_i386,      /* Intel 386 */
+     #define bfd_mach_i386_i386 1
+     #define bfd_mach_i386_i8086 2
+     #define bfd_mach_i386_i386_intel_syntax 3
+     #define bfd_mach_x86_64 64
+     #define bfd_mach_x86_64_intel_syntax 65
+       bfd_arch_we32k,     /* AT&T WE32xxx */
+       bfd_arch_tahoe,     /* CCI/Harris Tahoe */
+       bfd_arch_i860,      /* Intel 860 */
+       bfd_arch_i370,      /* IBM 360/370 Mainframes */
+       bfd_arch_romp,      /* IBM ROMP PC/RT */
+       bfd_arch_alliant,   /* Alliant */
+       bfd_arch_convex,    /* Convex */
+       bfd_arch_m88k,      /* Motorola 88xxx */
+       bfd_arch_m98k,      /* Motorola 98xxx */
+       bfd_arch_pyramid,   /* Pyramid Technology */
+       bfd_arch_h8300,     /* Renesas H8/300 (formerly Hitachi H8/300) */
+     #define bfd_mach_h8300    1
+     #define bfd_mach_h8300h   2
+     #define bfd_mach_h8300s   3
+     #define bfd_mach_h8300hn  4
+     #define bfd_mach_h8300sn  5
+     #define bfd_mach_h8300sx  6
+     #define bfd_mach_h8300sxn 7
+       bfd_arch_pdp11,     /* DEC PDP-11 */
+       bfd_arch_powerpc,   /* PowerPC */
+     #define bfd_mach_ppc           32
+     #define bfd_mach_ppc64         64
+     #define bfd_mach_ppc_403       403
+     #define bfd_mach_ppc_403gc     4030
+     #define bfd_mach_ppc_505       505
+     #define bfd_mach_ppc_601       601
+     #define bfd_mach_ppc_602       602
+     #define bfd_mach_ppc_603       603
+     #define bfd_mach_ppc_ec603e    6031
+     #define bfd_mach_ppc_604       604
+     #define bfd_mach_ppc_620       620
+     #define bfd_mach_ppc_630       630
+     #define bfd_mach_ppc_750       750
+     #define bfd_mach_ppc_860       860
+     #define bfd_mach_ppc_a35       35
+     #define bfd_mach_ppc_rs64ii    642
+     #define bfd_mach_ppc_rs64iii   643
+     #define bfd_mach_ppc_7400      7400
+     #define bfd_mach_ppc_e500      500
+       bfd_arch_rs6000,    /* IBM RS/6000 */
+     #define bfd_mach_rs6k          6000
+     #define bfd_mach_rs6k_rs1      6001
+     #define bfd_mach_rs6k_rsc      6003
+     #define bfd_mach_rs6k_rs2      6002
+       bfd_arch_hppa,      /* HP PA RISC */
+     #define bfd_mach_hppa10        10
+     #define bfd_mach_hppa11        11
+     #define bfd_mach_hppa20        20
+     #define bfd_mach_hppa20w       25
+       bfd_arch_d10v,      /* Mitsubishi D10V */
+     #define bfd_mach_d10v          1
+     #define bfd_mach_d10v_ts2      2
+     #define bfd_mach_d10v_ts3      3
+       bfd_arch_d30v,      /* Mitsubishi D30V */
+       bfd_arch_dlx,       /* DLX */
+       bfd_arch_m68hc11,   /* Motorola 68HC11 */
+       bfd_arch_m68hc12,   /* Motorola 68HC12 */
+     #define bfd_mach_m6812_default 0
+     #define bfd_mach_m6812         1
+     #define bfd_mach_m6812s        2
+       bfd_arch_z8k,       /* Zilog Z8000 */
+     #define bfd_mach_z8001         1
+     #define bfd_mach_z8002         2
+       bfd_arch_h8500,     /* Renesas H8/500 (formerly Hitachi H8/500) */
+       bfd_arch_sh,        /* Renesas / SuperH SH (formerly Hitachi SH) */
+     #define bfd_mach_sh            1
+     #define bfd_mach_sh2        0x20
+     #define bfd_mach_sh_dsp     0x2d
+     #define bfd_mach_sh2a       0x2a
+     #define bfd_mach_sh2a_nofpu 0x2b
+     #define bfd_mach_sh2a_nofpu_or_sh4_nommu_nofpu 0x2a1
+     #define bfd_mach_sh2a_nofpu_or_sh3_nommu 0x2a2
+     #define bfd_mach_sh2a_or_sh4  0x2a3
+     #define bfd_mach_sh2a_or_sh3e 0x2a4
+     #define bfd_mach_sh2e       0x2e
+     #define bfd_mach_sh3        0x30
+     #define bfd_mach_sh3_nommu  0x31
+     #define bfd_mach_sh3_dsp    0x3d
+     #define bfd_mach_sh3e       0x3e
+     #define bfd_mach_sh4        0x40
+     #define bfd_mach_sh4_nofpu  0x41
+     #define bfd_mach_sh4_nommu_nofpu  0x42
+     #define bfd_mach_sh4a       0x4a
+     #define bfd_mach_sh4a_nofpu 0x4b
+     #define bfd_mach_sh4al_dsp  0x4d
+     #define bfd_mach_sh5        0x50
+       bfd_arch_alpha,     /* Dec Alpha */
+     #define bfd_mach_alpha_ev4  0x10
+     #define bfd_mach_alpha_ev5  0x20
+     #define bfd_mach_alpha_ev6  0x30
+       bfd_arch_arm,       /* Advanced Risc Machines ARM.  */
+     #define bfd_mach_arm_unknown   0
+     #define bfd_mach_arm_2         1
+     #define bfd_mach_arm_2a        2
+     #define bfd_mach_arm_3         3
+     #define bfd_mach_arm_3M        4
+     #define bfd_mach_arm_4         5
+     #define bfd_mach_arm_4T        6
+     #define bfd_mach_arm_5         7
+     #define bfd_mach_arm_5T        8
+     #define bfd_mach_arm_5TE       9
+     #define bfd_mach_arm_XScale    10
+     #define bfd_mach_arm_ep9312    11
+     #define bfd_mach_arm_iWMMXt    12
+       bfd_arch_ns32k,     /* National Semiconductors ns32000 */
+       bfd_arch_w65,       /* WDC 65816 */
+       bfd_arch_tic30,     /* Texas Instruments TMS320C30 */
+       bfd_arch_tic4x,     /* Texas Instruments TMS320C3X/4X */
+     #define bfd_mach_tic3x         30
+     #define bfd_mach_tic4x         40
+       bfd_arch_tic54x,    /* Texas Instruments TMS320C54X */
+       bfd_arch_tic80,     /* TI TMS320c80 (MVP) */
+       bfd_arch_v850,      /* NEC V850 */
+     #define bfd_mach_v850          1
+     #define bfd_mach_v850e         'E'
+     #define bfd_mach_v850e1        '1'
+       bfd_arch_arc,       /* ARC Cores */
+     #define bfd_mach_arc_5         5
+     #define bfd_mach_arc_6         6
+     #define bfd_mach_arc_7         7
+     #define bfd_mach_arc_8         8
+       bfd_arch_m32r,      /* Renesas M32R (formerly Mitsubishi M32R/D) */
+     #define bfd_mach_m32r          1 /* For backwards compatibility.  */
+     #define bfd_mach_m32rx         'x'
+     #define bfd_mach_m32r2         '2'
+       bfd_arch_mn10200,   /* Matsushita MN10200 */
+       bfd_arch_mn10300,   /* Matsushita MN10300 */
+     #define bfd_mach_mn10300               300
+     #define bfd_mach_am33          330
+     #define bfd_mach_am33_2        332
+       bfd_arch_fr30,
+     #define bfd_mach_fr30          0x46523330
+       bfd_arch_frv,
+     #define bfd_mach_frv           1
+     #define bfd_mach_frvsimple     2
+     #define bfd_mach_fr300         300
+     #define bfd_mach_fr400         400
+     #define bfd_mach_fr450         450
+     #define bfd_mach_frvtomcat     499     /* fr500 prototype */
+     #define bfd_mach_fr500         500
+     #define bfd_mach_fr550         550
+       bfd_arch_mcore,
+       bfd_arch_ia64,      /* HP/Intel ia64 */
+     #define bfd_mach_ia64_elf64    64
+     #define bfd_mach_ia64_elf32    32
+       bfd_arch_ip2k,      /* Ubicom IP2K microcontrollers. */
+     #define bfd_mach_ip2022        1
+     #define bfd_mach_ip2022ext     2
+      bfd_arch_iq2000,     /* Vitesse IQ2000.  */
+     #define bfd_mach_iq2000        1
+     #define bfd_mach_iq10          2
+       bfd_arch_pj,
+       bfd_arch_avr,       /* Atmel AVR microcontrollers.  */
+     #define bfd_mach_avr1          1
+     #define bfd_mach_avr2          2
+     #define bfd_mach_avr3          3
+     #define bfd_mach_avr4          4
+     #define bfd_mach_avr5          5
+       bfd_arch_cr16c,       /* National Semiconductor CompactRISC. */
+     #define bfd_mach_cr16c         1
+       bfd_arch_crx,       /*  National Semiconductor CRX.  */
+     #define bfd_mach_crx           1
+       bfd_arch_cris,      /* Axis CRIS */
+     #define bfd_mach_cris_v0_v10   255
+     #define bfd_mach_cris_v32      32
+     #define bfd_mach_cris_v10_v32  1032
+       bfd_arch_s390,      /* IBM s390 */
+     #define bfd_mach_s390_31       31
+     #define bfd_mach_s390_64       64
+       bfd_arch_openrisc,  /* OpenRISC */
+       bfd_arch_mmix,      /* Donald Knuth's educational processor.  */
+       bfd_arch_xstormy16,
+     #define bfd_mach_xstormy16     1
+       bfd_arch_msp430,    /* Texas Instruments MSP430 architecture.  */
+     #define bfd_mach_msp11          11
+     #define bfd_mach_msp110         110
+     #define bfd_mach_msp12          12
+     #define bfd_mach_msp13          13
+     #define bfd_mach_msp14          14
+     #define bfd_mach_msp15          15
+     #define bfd_mach_msp16          16
+     #define bfd_mach_msp31          31
+     #define bfd_mach_msp32          32
+     #define bfd_mach_msp33          33
+     #define bfd_mach_msp41          41
+     #define bfd_mach_msp42          42
+     #define bfd_mach_msp43          43
+     #define bfd_mach_msp44          44
+       bfd_arch_xtensa,    /* Tensilica's Xtensa cores.  */
+     #define bfd_mach_xtensa        1
+        bfd_arch_maxq,     /* Dallas MAXQ 10/20 */
+     #define bfd_mach_maxq10    10
+     #define bfd_mach_maxq20    20
+       bfd_arch_last
+       };
+
+2.14.2 bfd_arch_info
+--------------------
+
+*Description*
+This structure contains information on architectures for use within BFD.
+
+     typedef struct bfd_arch_info
+     {
+       int bits_per_word;
+       int bits_per_address;
+       int bits_per_byte;
+       enum bfd_architecture arch;
+       unsigned long mach;
+       const char *arch_name;
+       const char *printable_name;
+       unsigned int section_align_power;
+       /* TRUE if this is the default machine for the architecture.
+          The default arch should be the first entry for an arch so that
+          all the entries for that arch can be accessed via `next'.  */
+       bfd_boolean the_default;
+       const struct bfd_arch_info * (*compatible)
+         (const struct bfd_arch_info *a, const struct bfd_arch_info *b);
+
+       bfd_boolean (*scan) (const struct bfd_arch_info *, const char *);
+
+       const struct bfd_arch_info *next;
+     }
+     bfd_arch_info_type;
+
+2.14.2.1 `bfd_printable_name'
+.............................
+
+*Synopsis*
+     const char *bfd_printable_name (bfd *abfd);
+   *Description*
+Return a printable string representing the architecture and machine
+from the pointer to the architecture info structure.
+
+2.14.2.2 `bfd_scan_arch'
+........................
+
+*Synopsis*
+     const bfd_arch_info_type *bfd_scan_arch (const char *string);
+   *Description*
+Figure out if BFD supports any cpu which could be described with the
+name STRING.  Return a pointer to an `arch_info' structure if a machine
+is found, otherwise NULL.
+
+2.14.2.3 `bfd_arch_list'
+........................
+
+*Synopsis*
+     const char **bfd_arch_list (void);
+   *Description*
+Return a freshly malloced NULL-terminated vector of the names of all
+the valid BFD architectures.  Do not modify the names.
+
+2.14.2.4 `bfd_arch_get_compatible'
+..................................
+
+*Synopsis*
+     const bfd_arch_info_type *bfd_arch_get_compatible
+        (const bfd *abfd, const bfd *bbfd, bfd_boolean accept_unknowns);
+   *Description*
+Determine whether two BFDs' architectures and machine types are
+compatible.  Calculates the lowest common denominator between the two
+architectures and machine types implied by the BFDs and returns a
+pointer to an `arch_info' structure describing the compatible machine.
+
+2.14.2.5 `bfd_default_arch_struct'
+..................................
+
+*Description*
+The `bfd_default_arch_struct' is an item of `bfd_arch_info_type' which
+has been initialized to a fairly generic state.  A BFD starts life by
+pointing to this structure, until the correct back end has determined
+the real architecture of the file.
+     extern const bfd_arch_info_type bfd_default_arch_struct;
+
+2.14.2.6 `bfd_set_arch_info'
+............................
+
+*Synopsis*
+     void bfd_set_arch_info (bfd *abfd, const bfd_arch_info_type *arg);
+   *Description*
+Set the architecture info of ABFD to ARG.
+
+2.14.2.7 `bfd_default_set_arch_mach'
+....................................
+
+*Synopsis*
+     bfd_boolean bfd_default_set_arch_mach
+        (bfd *abfd, enum bfd_architecture arch, unsigned long mach);
+   *Description*
+Set the architecture and machine type in BFD ABFD to ARCH and MACH.
+Find the correct pointer to a structure and insert it into the
+`arch_info' pointer.
+
+2.14.2.8 `bfd_get_arch'
+.......................
+
+*Synopsis*
+     enum bfd_architecture bfd_get_arch (bfd *abfd);
+   *Description*
+Return the enumerated type which describes the BFD ABFD's architecture.
+
+2.14.2.9 `bfd_get_mach'
+.......................
+
+*Synopsis*
+     unsigned long bfd_get_mach (bfd *abfd);
+   *Description*
+Return the long type which describes the BFD ABFD's machine.
+
+2.14.2.10 `bfd_arch_bits_per_byte'
+..................................
+
+*Synopsis*
+     unsigned int bfd_arch_bits_per_byte (bfd *abfd);
+   *Description*
+Return the number of bits in one of the BFD ABFD's architecture's bytes.
+
+2.14.2.11 `bfd_arch_bits_per_address'
+.....................................
+
+*Synopsis*
+     unsigned int bfd_arch_bits_per_address (bfd *abfd);
+   *Description*
+Return the number of bits in one of the BFD ABFD's architecture's
+addresses.
+
+2.14.2.12 `bfd_default_compatible'
+..................................
+
+*Synopsis*
+     const bfd_arch_info_type *bfd_default_compatible
+        (const bfd_arch_info_type *a, const bfd_arch_info_type *b);
+   *Description*
+The default function for testing for compatibility.
+
+2.14.2.13 `bfd_default_scan'
+............................
+
+*Synopsis*
+     bfd_boolean bfd_default_scan
+        (const struct bfd_arch_info *info, const char *string);
+   *Description*
+The default function for working out whether this is an architecture
+hit and a machine hit.
+
+2.14.2.14 `bfd_get_arch_info'
+.............................
+
+*Synopsis*
+     const bfd_arch_info_type *bfd_get_arch_info (bfd *abfd);
+   *Description*
+Return the architecture info struct in ABFD.
+
+2.14.2.15 `bfd_lookup_arch'
+...........................
+
+*Synopsis*
+     const bfd_arch_info_type *bfd_lookup_arch
+        (enum bfd_architecture arch, unsigned long machine);
+   *Description*
+Look for the architecture info structure which matches the arguments
+ARCH and MACHINE. A machine of 0 matches the machine/architecture
+structure which marks itself as the default.
+
+2.14.2.16 `bfd_printable_arch_mach'
+...................................
+
+*Synopsis*
+     const char *bfd_printable_arch_mach
+        (enum bfd_architecture arch, unsigned long machine);
+   *Description*
+Return a printable string representing the architecture and machine
+type.
+
+   This routine is depreciated.
+
+2.14.2.17 `bfd_octets_per_byte'
+...............................
+
+*Synopsis*
+     unsigned int bfd_octets_per_byte (bfd *abfd);
+   *Description*
+Return the number of octets (8-bit quantities) per target byte (minimum
+addressable unit).  In most cases, this will be one, but some DSP
+targets have 16, 32, or even 48 bits per byte.
+
+2.14.2.18 `bfd_arch_mach_octets_per_byte'
+.........................................
+
+*Synopsis*
+     unsigned int bfd_arch_mach_octets_per_byte
+        (enum bfd_architecture arch, unsigned long machine);
+   *Description*
+See bfd_octets_per_byte.
+
+   This routine is provided for those cases where a bfd * is not
+available
+
+
+File: bfd.info,  Node: Opening and Closing,  Next: Internal,  Prev: Architectures,  Up: BFD front end
+
+2.15 Opening and closing BFDs
+=============================
+
+2.15.0.1 `bfd_openr'
+....................
+
+*Synopsis*
+     bfd *bfd_openr (const char *filename, const char *target);
+   *Description*
+Open the file FILENAME (using `fopen') with the target TARGET.  Return
+a pointer to the created BFD.
+
+   Calls `bfd_find_target', so TARGET is interpreted as by that
+function.
+
+   If `NULL' is returned then an error has occured.   Possible errors
+are `bfd_error_no_memory', `bfd_error_invalid_target' or `system_call'
+error.
+
+2.15.0.2 `bfd_fdopenr'
+......................
+
+*Synopsis*
+     bfd *bfd_fdopenr (const char *filename, const char *target, int fd);
+   *Description*
+`bfd_fdopenr' is to `bfd_fopenr' much like `fdopen' is to `fopen'.  It
+opens a BFD on a file already described by the FD supplied.
+
+   When the file is later `bfd_close'd, the file descriptor will be
+closed.  If the caller desires that this file descriptor be cached by
+BFD (opened as needed, closed as needed to free descriptors for other
+opens), with the supplied FD used as an initial file descriptor (but
+subject to closure at any time), call bfd_set_cacheable(bfd, 1) on the
+returned BFD.  The default is to assume no caching; the file descriptor
+will remain open until `bfd_close', and will not be affected by BFD
+operations on other files.
+
+   Possible errors are `bfd_error_no_memory',
+`bfd_error_invalid_target' and `bfd_error_system_call'.
+
+2.15.0.3 `bfd_openstreamr'
+..........................
+
+*Synopsis*
+     bfd *bfd_openstreamr (const char *, const char *, void *);
+   *Description*
+Open a BFD for read access on an existing stdio stream.  When the BFD
+is passed to `bfd_close', the stream will be closed.
+
+2.15.0.4 `bfd_openr_iovec'
+..........................
+
+*Synopsis*
+     bfd *bfd_openr_iovec (const char *filename, const char *target,
+         void *(*open) (struct bfd *nbfd,
+         void *open_closure),
+         void *open_closure,
+         file_ptr (*pread) (struct bfd *nbfd,
+         void *stream,
+         void *buf,
+         file_ptr nbytes,
+         file_ptr offset),
+         int (*close) (struct bfd *nbfd,
+         void *stream));
+   *Description*
+Create and return a BFD backed by a read-only STREAM.  The STREAM is
+created using OPEN, accessed using PREAD and destroyed using CLOSE.
+
+   Calls `bfd_find_target', so TARGET is interpreted as by that
+function.
+
+   Calls OPEN (which can call `bfd_zalloc' and `bfd_get_filename') to
+obtain the read-only stream backing the BFD.  OPEN either succeeds
+returning the non-`NULL' STREAM, or fails returning `NULL' (setting
+`bfd_error').
+
+   Calls PREAD to request NBYTES of data from STREAM starting at OFFSET
+(e.g., via a call to `bfd_read').  PREAD either succeeds returning the
+number of bytes read (which can be less than NBYTES when end-of-file),
+or fails returning -1 (setting `bfd_error').
+
+   Calls CLOSE when the BFD is later closed using `bfd_close'.  CLOSE
+either succeeds returning 0, or fails returning -1 (setting
+`bfd_error').
+
+   If `bfd_openr_iovec' returns `NULL' then an error has occurred.
+Possible errors are `bfd_error_no_memory', `bfd_error_invalid_target'
+and `bfd_error_system_call'.
+
+2.15.0.5 `bfd_openw'
+....................
+
+*Synopsis*
+     bfd *bfd_openw (const char *filename, const char *target);
+   *Description*
+Create a BFD, associated with file FILENAME, using the file format
+TARGET, and return a pointer to it.
+
+   Possible errors are `bfd_error_system_call', `bfd_error_no_memory',
+`bfd_error_invalid_target'.
+
+2.15.0.6 `bfd_close'
+....................
+
+*Synopsis*
+     bfd_boolean bfd_close (bfd *abfd);
+   *Description*
+Close a BFD. If the BFD was open for writing, then pending operations
+are completed and the file written out and closed.  If the created file
+is executable, then `chmod' is called to mark it as such.
+
+   All memory attached to the BFD is released.
+
+   The file descriptor associated with the BFD is closed (even if it
+was passed in to BFD by `bfd_fdopenr').
+
+   *Returns*
+`TRUE' is returned if all is ok, otherwise `FALSE'.
+
+2.15.0.7 `bfd_close_all_done'
+.............................
+
+*Synopsis*
+     bfd_boolean bfd_close_all_done (bfd *);
+   *Description*
+Close a BFD.  Differs from `bfd_close' since it does not complete any
+pending operations.  This routine would be used if the application had
+just used BFD for swapping and didn't want to use any of the writing
+code.
+
+   If the created file is executable, then `chmod' is called to mark it
+as such.
+
+   All memory attached to the BFD is released.
+
+   *Returns*
+`TRUE' is returned if all is ok, otherwise `FALSE'.
+
+2.15.0.8 `bfd_create'
+.....................
+
+*Synopsis*
+     bfd *bfd_create (const char *filename, bfd *templ);
+   *Description*
+Create a new BFD in the manner of `bfd_openw', but without opening a
+file. The new BFD takes the target from the target used by TEMPLATE.
+The format is always set to `bfd_object'.
+
+2.15.0.9 `bfd_make_writable'
+............................
+
+*Synopsis*
+     bfd_boolean bfd_make_writable (bfd *abfd);
+   *Description*
+Takes a BFD as created by `bfd_create' and converts it into one like as
+returned by `bfd_openw'.  It does this by converting the BFD to
+BFD_IN_MEMORY.  It's assumed that you will call `bfd_make_readable' on
+this bfd later.
+
+   *Returns*
+`TRUE' is returned if all is ok, otherwise `FALSE'.
+
+2.15.0.10 `bfd_make_readable'
+.............................
+
+*Synopsis*
+     bfd_boolean bfd_make_readable (bfd *abfd);
+   *Description*
+Takes a BFD as created by `bfd_create' and `bfd_make_writable' and
+converts it into one like as returned by `bfd_openr'.  It does this by
+writing the contents out to the memory buffer, then reversing the
+direction.
+
+   *Returns*
+`TRUE' is returned if all is ok, otherwise `FALSE'.
+
+2.15.0.11 `bfd_alloc'
+.....................
+
+*Synopsis*
+     void *bfd_alloc (bfd *abfd, bfd_size_type wanted);
+   *Description*
+Allocate a block of WANTED bytes of memory attached to `abfd' and
+return a pointer to it.
+
+2.15.0.12 `bfd_zalloc'
+......................
+
+*Synopsis*
+     void *bfd_zalloc (bfd *abfd, bfd_size_type wanted);
+   *Description*
+Allocate a block of WANTED bytes of zeroed memory attached to `abfd'
+and return a pointer to it.
+
+2.15.0.13 `bfd_calc_gnu_debuglink_crc32'
+........................................
+
+*Synopsis*
+     unsigned long bfd_calc_gnu_debuglink_crc32
+        (unsigned long crc, const unsigned char *buf, bfd_size_type len);
+   *Description*
+Computes a CRC value as used in the .gnu_debuglink section.  Advances
+the previously computed CRC value by computing and adding in the crc32
+for LEN bytes of BUF.
+
+   *Returns*
+Return the updated CRC32 value.
+
+2.15.0.14 `get_debug_link_info'
+...............................
+
+*Synopsis*
+     char *get_debug_link_info (bfd *abfd, unsigned long *crc32_out);
+   *Description*
+fetch the filename and CRC32 value for any separate debuginfo
+associated with ABFD. Return NULL if no such info found, otherwise
+return filename and update CRC32_OUT.
+
+2.15.0.15 `separate_debug_file_exists'
+......................................
+
+*Synopsis*
+     bfd_boolean separate_debug_file_exists
+        (char *name, unsigned long crc32);
+   *Description*
+Checks to see if NAME is a file and if its contents match CRC32.
+
+2.15.0.16 `find_separate_debug_file'
+....................................
+
+*Synopsis*
+     char *find_separate_debug_file (bfd *abfd);
+   *Description*
+Searches ABFD for a reference to separate debugging information, scans
+various locations in the filesystem, including the file tree rooted at
+DEBUG_FILE_DIRECTORY, and returns a filename of such debugging
+information if the file is found and has matching CRC32.  Returns NULL
+if no reference to debugging file exists, or file cannot be found.
+
+2.15.0.17 `bfd_follow_gnu_debuglink'
+....................................
+
+*Synopsis*
+     char *bfd_follow_gnu_debuglink (bfd *abfd, const char *dir);
+   *Description*
+Takes a BFD and searches it for a .gnu_debuglink section.  If this
+section is found, it examines the section for the name and checksum of
+a '.debug' file containing auxiliary debugging information.  It then
+searches the filesystem for this .debug file in some standard
+locations, including the directory tree rooted at DIR, and if found
+returns the full filename.
+
+   If DIR is NULL, it will search a default path configured into libbfd
+at build time.  [XXX this feature is not currently implemented].
+
+   *Returns*
+`NULL' on any errors or failure to locate the .debug file, otherwise a
+pointer to a heap-allocated string containing the filename.  The caller
+is responsible for freeing this string.
+
+2.15.0.18 `bfd_create_gnu_debuglink_section'
+............................................
+
+*Synopsis*
+     struct bfd_section *bfd_create_gnu_debuglink_section
+        (bfd *abfd, const char *filename);
+   *Description*
+Takes a BFD and adds a .gnu_debuglink section to it.  The section is
+sized to be big enough to contain a link to the specified FILENAME.
+
+   *Returns*
+A pointer to the new section is returned if all is ok.  Otherwise
+`NULL' is returned and bfd_error is set.
+
+2.15.0.19 `bfd_fill_in_gnu_debuglink_section'
+.............................................
+
+*Synopsis*
+     bfd_boolean bfd_fill_in_gnu_debuglink_section
+        (bfd *abfd, struct bfd_section *sect, const char *filename);
+   *Description*
+Takes a BFD and containing a .gnu_debuglink section SECT and fills in
+the contents of the section to contain a link to the specified
+FILENAME.  The filename should be relative to the current directory.
+
+   *Returns*
+`TRUE' is returned if all is ok.  Otherwise `FALSE' is returned and
+bfd_error is set.
+
+
+File: bfd.info,  Node: Internal,  Next: File Caching,  Prev: Opening and Closing,  Up: BFD front end
+
+2.16 Internal functions
+=======================
+
+*Description*
+These routines are used within BFD.  They are not intended for export,
+but are documented here for completeness.
+
+2.16.0.1 `bfd_write_bigendian_4byte_int'
+........................................
+
+*Synopsis*
+     bfd_boolean bfd_write_bigendian_4byte_int (bfd *, unsigned int);
+   *Description*
+Write a 4 byte integer I to the output BFD ABFD, in big endian order
+regardless of what else is going on.  This is useful in archives.
+
+2.16.0.2 `bfd_put_size'
+.......................
+
+2.16.0.3 `bfd_get_size'
+.......................
+
+*Description*
+These macros as used for reading and writing raw data in sections; each
+access (except for bytes) is vectored through the target format of the
+BFD and mangled accordingly. The mangling performs any necessary endian
+translations and removes alignment restrictions.  Note that types
+accepted and returned by these macros are identical so they can be
+swapped around in macros--for example, `libaout.h' defines `GET_WORD'
+to either `bfd_get_32' or `bfd_get_64'.
+
+   In the put routines, VAL must be a `bfd_vma'.  If we are on a system
+without prototypes, the caller is responsible for making sure that is
+true, with a cast if necessary.  We don't cast them in the macro
+definitions because that would prevent `lint' or `gcc -Wall' from
+detecting sins such as passing a pointer.  To detect calling these with
+less than a `bfd_vma', use `gcc -Wconversion' on a host with 64 bit
+`bfd_vma''s.
+
+     /* Byte swapping macros for user section data.  */
+
+     #define bfd_put_8(abfd, val, ptr) \
+       ((void) (*((unsigned char *) (ptr)) = (val) & 0xff))
+     #define bfd_put_signed_8 \
+       bfd_put_8
+     #define bfd_get_8(abfd, ptr) \
+       (*(unsigned char *) (ptr) & 0xff)
+     #define bfd_get_signed_8(abfd, ptr) \
+       (((*(unsigned char *) (ptr) & 0xff) ^ 0x80) - 0x80)
+
+     #define bfd_put_16(abfd, val, ptr) \
+       BFD_SEND (abfd, bfd_putx16, ((val),(ptr)))
+     #define bfd_put_signed_16 \
+       bfd_put_16
+     #define bfd_get_16(abfd, ptr) \
+       BFD_SEND (abfd, bfd_getx16, (ptr))
+     #define bfd_get_signed_16(abfd, ptr) \
+       BFD_SEND (abfd, bfd_getx_signed_16, (ptr))
+
+     #define bfd_put_32(abfd, val, ptr) \
+       BFD_SEND (abfd, bfd_putx32, ((val),(ptr)))
+     #define bfd_put_signed_32 \
+       bfd_put_32
+     #define bfd_get_32(abfd, ptr) \
+       BFD_SEND (abfd, bfd_getx32, (ptr))
+     #define bfd_get_signed_32(abfd, ptr) \
+       BFD_SEND (abfd, bfd_getx_signed_32, (ptr))
+
+     #define bfd_put_64(abfd, val, ptr) \
+       BFD_SEND (abfd, bfd_putx64, ((val), (ptr)))
+     #define bfd_put_signed_64 \
+       bfd_put_64
+     #define bfd_get_64(abfd, ptr) \
+       BFD_SEND (abfd, bfd_getx64, (ptr))
+     #define bfd_get_signed_64(abfd, ptr) \
+       BFD_SEND (abfd, bfd_getx_signed_64, (ptr))
+
+     #define bfd_get(bits, abfd, ptr)                       \
+       ((bits) == 8 ? (bfd_vma) bfd_get_8 (abfd, ptr)       \
+        : (bits) == 16 ? bfd_get_16 (abfd, ptr)             \
+        : (bits) == 32 ? bfd_get_32 (abfd, ptr)             \
+        : (bits) == 64 ? bfd_get_64 (abfd, ptr)             \
+        : (abort (), (bfd_vma) - 1))
+
+     #define bfd_put(bits, abfd, val, ptr)                  \
+       ((bits) == 8 ? bfd_put_8  (abfd, val, ptr)           \
+        : (bits) == 16 ? bfd_put_16 (abfd, val, ptr)                \
+        : (bits) == 32 ? bfd_put_32 (abfd, val, ptr)                \
+        : (bits) == 64 ? bfd_put_64 (abfd, val, ptr)                \
+        : (abort (), (void) 0))
+
+2.16.0.4 `bfd_h_put_size'
+.........................
+
+*Description*
+These macros have the same function as their `bfd_get_x' brethren,
+except that they are used for removing information for the header
+records of object files. Believe it or not, some object files keep
+their header records in big endian order and their data in little
+endian order.
+
+     /* Byte swapping macros for file header data.  */
+
+     #define bfd_h_put_8(abfd, val, ptr) \
+       bfd_put_8 (abfd, val, ptr)
+     #define bfd_h_put_signed_8(abfd, val, ptr) \
+       bfd_put_8 (abfd, val, ptr)
+     #define bfd_h_get_8(abfd, ptr) \
+       bfd_get_8 (abfd, ptr)
+     #define bfd_h_get_signed_8(abfd, ptr) \
+       bfd_get_signed_8 (abfd, ptr)
+
+     #define bfd_h_put_16(abfd, val, ptr) \
+       BFD_SEND (abfd, bfd_h_putx16, (val, ptr))
+     #define bfd_h_put_signed_16 \
+       bfd_h_put_16
+     #define bfd_h_get_16(abfd, ptr) \
+       BFD_SEND (abfd, bfd_h_getx16, (ptr))
+     #define bfd_h_get_signed_16(abfd, ptr) \
+       BFD_SEND (abfd, bfd_h_getx_signed_16, (ptr))
+
+     #define bfd_h_put_32(abfd, val, ptr) \
+       BFD_SEND (abfd, bfd_h_putx32, (val, ptr))
+     #define bfd_h_put_signed_32 \
+       bfd_h_put_32
+     #define bfd_h_get_32(abfd, ptr) \
+       BFD_SEND (abfd, bfd_h_getx32, (ptr))
+     #define bfd_h_get_signed_32(abfd, ptr) \
+       BFD_SEND (abfd, bfd_h_getx_signed_32, (ptr))
+
+     #define bfd_h_put_64(abfd, val, ptr) \
+       BFD_SEND (abfd, bfd_h_putx64, (val, ptr))
+     #define bfd_h_put_signed_64 \
+       bfd_h_put_64
+     #define bfd_h_get_64(abfd, ptr) \
+       BFD_SEND (abfd, bfd_h_getx64, (ptr))
+     #define bfd_h_get_signed_64(abfd, ptr) \
+       BFD_SEND (abfd, bfd_h_getx_signed_64, (ptr))
+
+     /* Aliases for the above, which should eventually go away.  */
+
+     #define H_PUT_64  bfd_h_put_64
+     #define H_PUT_32  bfd_h_put_32
+     #define H_PUT_16  bfd_h_put_16
+     #define H_PUT_8   bfd_h_put_8
+     #define H_PUT_S64 bfd_h_put_signed_64
+     #define H_PUT_S32 bfd_h_put_signed_32
+     #define H_PUT_S16 bfd_h_put_signed_16
+     #define H_PUT_S8  bfd_h_put_signed_8
+     #define H_GET_64  bfd_h_get_64
+     #define H_GET_32  bfd_h_get_32
+     #define H_GET_16  bfd_h_get_16
+     #define H_GET_8   bfd_h_get_8
+     #define H_GET_S64 bfd_h_get_signed_64
+     #define H_GET_S32 bfd_h_get_signed_32
+     #define H_GET_S16 bfd_h_get_signed_16
+     #define H_GET_S8  bfd_h_get_signed_8
+
+2.16.0.5 `bfd_log2'
+...................
+
+*Synopsis*
+     unsigned int bfd_log2 (bfd_vma x);
+   *Description*
+Return the log base 2 of the value supplied, rounded up.  E.g., an X of
+1025 returns 11.  A X of 0 returns 0.
+
+
+File: bfd.info,  Node: File Caching,  Next: Linker Functions,  Prev: Internal,  Up: BFD front end
+
+2.17 File caching
+=================
+
+The file caching mechanism is embedded within BFD and allows the
+application to open as many BFDs as it wants without regard to the
+underlying operating system's file descriptor limit (often as low as 20
+open files).  The module in `cache.c' maintains a least recently used
+list of `BFD_CACHE_MAX_OPEN' files, and exports the name
+`bfd_cache_lookup', which runs around and makes sure that the required
+BFD is open. If not, then it chooses a file to close, closes it and
+opens the one wanted, returning its file handle.
+
+2.17.0.1 `BFD_CACHE_MAX_OPEN macro'
+...................................
+
+*Description*
+The maximum number of files which the cache will keep open at one time.
+     #define BFD_CACHE_MAX_OPEN 10
+
+2.17.0.2 `bfd_last_cache'
+.........................
+
+*Synopsis*
+     extern bfd *bfd_last_cache;
+   *Description*
+Zero, or a pointer to the topmost BFD on the chain.  This is used by
+the `bfd_cache_lookup' macro in `libbfd.h' to determine when it can
+avoid a function call.
+
+2.17.0.3 `bfd_cache_lookup'
+...........................
+
+*Description*
+Check to see if the required BFD is the same as the last one looked up.
+If so, then it can use the stream in the BFD with impunity, since it
+can't have changed since the last lookup; otherwise, it has to perform
+the complicated lookup function.
+     #define bfd_cache_lookup(x) \
+         ((x) == bfd_last_cache ? \
+           (FILE *) (bfd_last_cache->iostream): \
+            bfd_cache_lookup_worker (x))
+
+2.17.0.4 `bfd_cache_init'
+.........................
+
+*Synopsis*
+     bfd_boolean bfd_cache_init (bfd *abfd);
+   *Description*
+Add a newly opened BFD to the cache.
+
+2.17.0.5 `bfd_cache_close'
+..........................
+
+*Synopsis*
+     bfd_boolean bfd_cache_close (bfd *abfd);
+   *Description*
+Remove the BFD ABFD from the cache. If the attached file is open, then
+close it too.
+
+   *Returns*
+`FALSE' is returned if closing the file fails, `TRUE' is returned if
+all is well.
+
+2.17.0.6 `bfd_cache_close_all'
+..............................
+
+*Synopsis*
+     bfd_boolean bfd_cache_close_all (void);
+   *Description*
+Remove all BFDs from the cache. If the attached file is open, then
+close it too.
+
+   *Returns*
+`FALSE' is returned if closing one of the file fails, `TRUE' is
+returned if all is well.
+
+2.17.0.7 `bfd_open_file'
+........................
+
+*Synopsis*
+     FILE* bfd_open_file (bfd *abfd);
+   *Description*
+Call the OS to open a file for ABFD.  Return the `FILE *' (possibly
+`NULL') that results from this operation.  Set up the BFD so that
+future accesses know the file is open. If the `FILE *' returned is
+`NULL', then it won't have been put in the cache, so it won't have to
+be removed from it.
+
+2.17.0.8 `bfd_cache_lookup_worker'
+..................................
+
+*Synopsis*
+     FILE *bfd_cache_lookup_worker (bfd *abfd);
+   *Description*
+Called when the macro `bfd_cache_lookup' fails to find a quick answer.
+Find a file descriptor for ABFD.  If necessary, it open it.  If there
+are already more than `BFD_CACHE_MAX_OPEN' files open, it tries to
+close one first, to avoid running out of file descriptors.  It will
+abort rather than returning NULL if it is unable to (re)open the ABFD.
+
+
+File: bfd.info,  Node: Linker Functions,  Next: Hash Tables,  Prev: File Caching,  Up: BFD front end
+
+2.18 Linker Functions
+=====================
+
+The linker uses three special entry points in the BFD target vector.
+It is not necessary to write special routines for these entry points
+when creating a new BFD back end, since generic versions are provided.
+However, writing them can speed up linking and make it use
+significantly less runtime memory.
+
+   The first routine creates a hash table used by the other routines.
+The second routine adds the symbols from an object file to the hash
+table.  The third routine takes all the object files and links them
+together to create the output file.  These routines are designed so
+that the linker proper does not need to know anything about the symbols
+in the object files that it is linking.  The linker merely arranges the
+sections as directed by the linker script and lets BFD handle the
+details of symbols and relocs.
+
+   The second routine and third routines are passed a pointer to a
+`struct bfd_link_info' structure (defined in `bfdlink.h') which holds
+information relevant to the link, including the linker hash table
+(which was created by the first routine) and a set of callback
+functions to the linker proper.
+
+   The generic linker routines are in `linker.c', and use the header
+file `genlink.h'.  As of this writing, the only back ends which have
+implemented versions of these routines are a.out (in `aoutx.h') and
+ECOFF (in `ecoff.c').  The a.out routines are used as examples
+throughout this section.
+
+* Menu:
+
+* Creating a Linker Hash Table::
+* Adding Symbols to the Hash Table::
+* Performing the Final Link::
+
+
+File: bfd.info,  Node: Creating a Linker Hash Table,  Next: Adding Symbols to the Hash Table,  Prev: Linker Functions,  Up: Linker Functions
+
+2.18.1 Creating a linker hash table
+-----------------------------------
+
+The linker routines must create a hash table, which must be derived
+from `struct bfd_link_hash_table' described in `bfdlink.c'.  *Note Hash
+Tables::, for information on how to create a derived hash table.  This
+entry point is called using the target vector of the linker output file.
+
+   The `_bfd_link_hash_table_create' entry point must allocate and
+initialize an instance of the desired hash table.  If the back end does
+not require any additional information to be stored with the entries in
+the hash table, the entry point may simply create a `struct
+bfd_link_hash_table'.  Most likely, however, some additional
+information will be needed.
+
+   For example, with each entry in the hash table the a.out linker
+keeps the index the symbol has in the final output file (this index
+number is used so that when doing a relocatable link the symbol index
+used in the output file can be quickly filled in when copying over a
+reloc).  The a.out linker code defines the required structures and
+functions for a hash table derived from `struct bfd_link_hash_table'.
+The a.out linker hash table is created by the function
+`NAME(aout,link_hash_table_create)'; it simply allocates space for the
+hash table, initializes it, and returns a pointer to it.
+
+   When writing the linker routines for a new back end, you will
+generally not know exactly which fields will be required until you have
+finished.  You should simply create a new hash table which defines no
+additional fields, and then simply add fields as they become necessary.
+
+
+File: bfd.info,  Node: Adding Symbols to the Hash Table,  Next: Performing the Final Link,  Prev: Creating a Linker Hash Table,  Up: Linker Functions
+
+2.18.2 Adding symbols to the hash table
+---------------------------------------
+
+The linker proper will call the `_bfd_link_add_symbols' entry point for
+each object file or archive which is to be linked (typically these are
+the files named on the command line, but some may also come from the
+linker script).  The entry point is responsible for examining the file.
+For an object file, BFD must add any relevant symbol information to
+the hash table.  For an archive, BFD must determine which elements of
+the archive should be used and adding them to the link.
+
+   The a.out version of this entry point is
+`NAME(aout,link_add_symbols)'.
+
+* Menu:
+
+* Differing file formats::
+* Adding symbols from an object file::
+* Adding symbols from an archive::
+
+
+File: bfd.info,  Node: Differing file formats,  Next: Adding symbols from an object file,  Prev: Adding Symbols to the Hash Table,  Up: Adding Symbols to the Hash Table
+
+2.18.2.1 Differing file formats
+...............................
+
+Normally all the files involved in a link will be of the same format,
+but it is also possible to link together different format object files,
+and the back end must support that.  The `_bfd_link_add_symbols' entry
+point is called via the target vector of the file to be added.  This
+has an important consequence: the function may not assume that the hash
+table is the type created by the corresponding
+`_bfd_link_hash_table_create' vector.  All the `_bfd_link_add_symbols'
+function can assume about the hash table is that it is derived from
+`struct bfd_link_hash_table'.
+
+   Sometimes the `_bfd_link_add_symbols' function must store some
+information in the hash table entry to be used by the `_bfd_final_link'
+function.  In such a case the `creator' field of the hash table must be
+checked to make sure that the hash table was created by an object file
+of the same format.
+
+   The `_bfd_final_link' routine must be prepared to handle a hash
+entry without any extra information added by the
+`_bfd_link_add_symbols' function.  A hash entry without extra
+information will also occur when the linker script directs the linker
+to create a symbol.  Note that, regardless of how a hash table entry is
+added, all the fields will be initialized to some sort of null value by
+the hash table entry initialization function.
+
+   See `ecoff_link_add_externals' for an example of how to check the
+`creator' field before saving information (in this case, the ECOFF
+external symbol debugging information) in a hash table entry.
+
+
+File: bfd.info,  Node: Adding symbols from an object file,  Next: Adding symbols from an archive,  Prev: Differing file formats,  Up: Adding Symbols to the Hash Table
+
+2.18.2.2 Adding symbols from an object file
+...........................................
+
+When the `_bfd_link_add_symbols' routine is passed an object file, it
+must add all externally visible symbols in that object file to the hash
+table.  The actual work of adding the symbol to the hash table is
+normally handled by the function `_bfd_generic_link_add_one_symbol'.
+The `_bfd_link_add_symbols' routine is responsible for reading all the
+symbols from the object file and passing the correct information to
+`_bfd_generic_link_add_one_symbol'.
+
+   The `_bfd_link_add_symbols' routine should not use
+`bfd_canonicalize_symtab' to read the symbols.  The point of providing
+this routine is to avoid the overhead of converting the symbols into
+generic `asymbol' structures.
+
+   `_bfd_generic_link_add_one_symbol' handles the details of combining
+common symbols, warning about multiple definitions, and so forth.  It
+takes arguments which describe the symbol to add, notably symbol flags,
+a section, and an offset.  The symbol flags include such things as
+`BSF_WEAK' or `BSF_INDIRECT'.  The section is a section in the object
+file, or something like `bfd_und_section_ptr' for an undefined symbol
+or `bfd_com_section_ptr' for a common symbol.
+
+   If the `_bfd_final_link' routine is also going to need to read the
+symbol information, the `_bfd_link_add_symbols' routine should save it
+somewhere attached to the object file BFD.  However, the information
+should only be saved if the `keep_memory' field of the `info' argument
+is TRUE, so that the `-no-keep-memory' linker switch is effective.
+
+   The a.out function which adds symbols from an object file is
+`aout_link_add_object_symbols', and most of the interesting work is in
+`aout_link_add_symbols'.  The latter saves pointers to the hash tables
+entries created by `_bfd_generic_link_add_one_symbol' indexed by symbol
+number, so that the `_bfd_final_link' routine does not have to call the
+hash table lookup routine to locate the entry.
+
+
+File: bfd.info,  Node: Adding symbols from an archive,  Prev: Adding symbols from an object file,  Up: Adding Symbols to the Hash Table
+
+2.18.2.3 Adding symbols from an archive
+.......................................
+
+When the `_bfd_link_add_symbols' routine is passed an archive, it must
+look through the symbols defined by the archive and decide which
+elements of the archive should be included in the link.  For each such
+element it must call the `add_archive_element' linker callback, and it
+must add the symbols from the object file to the linker hash table.
+
+   In most cases the work of looking through the symbols in the archive
+should be done by the `_bfd_generic_link_add_archive_symbols' function.
+This function builds a hash table from the archive symbol table and
+looks through the list of undefined symbols to see which elements
+should be included.  `_bfd_generic_link_add_archive_symbols' is passed
+a function to call to make the final decision about adding an archive
+element to the link and to do the actual work of adding the symbols to
+the linker hash table.
+
+   The function passed to `_bfd_generic_link_add_archive_symbols' must
+read the symbols of the archive element and decide whether the archive
+element should be included in the link.  If the element is to be
+included, the `add_archive_element' linker callback routine must be
+called with the element as an argument, and the elements symbols must
+be added to the linker hash table just as though the element had itself
+been passed to the `_bfd_link_add_symbols' function.
+
+   When the a.out `_bfd_link_add_symbols' function receives an archive,
+it calls `_bfd_generic_link_add_archive_symbols' passing
+`aout_link_check_archive_element' as the function argument.
+`aout_link_check_archive_element' calls `aout_link_check_ar_symbols'.
+If the latter decides to add the element (an element is only added if
+it provides a real, non-common, definition for a previously undefined
+or common symbol) it calls the `add_archive_element' callback and then
+`aout_link_check_archive_element' calls `aout_link_add_symbols' to
+actually add the symbols to the linker hash table.
+
+   The ECOFF back end is unusual in that it does not normally call
+`_bfd_generic_link_add_archive_symbols', because ECOFF archives already
+contain a hash table of symbols.  The ECOFF back end searches the
+archive itself to avoid the overhead of creating a new hash table.
+
+
+File: bfd.info,  Node: Performing the Final Link,  Prev: Adding Symbols to the Hash Table,  Up: Linker Functions
+
+2.18.3 Performing the final link
+--------------------------------
+
+When all the input files have been processed, the linker calls the
+`_bfd_final_link' entry point of the output BFD.  This routine is
+responsible for producing the final output file, which has several
+aspects.  It must relocate the contents of the input sections and copy
+the data into the output sections.  It must build an output symbol
+table including any local symbols from the input files and the global
+symbols from the hash table.  When producing relocatable output, it must
+modify the input relocs and write them into the output file.  There may
+also be object format dependent work to be done.
+
+   The linker will also call the `write_object_contents' entry point
+when the BFD is closed.  The two entry points must work together in
+order to produce the correct output file.
+
+   The details of how this works are inevitably dependent upon the
+specific object file format.  The a.out `_bfd_final_link' routine is
+`NAME(aout,final_link)'.
+
+* Menu:
+
+* Information provided by the linker::
+* Relocating the section contents::
+* Writing the symbol table::
+
+
+File: bfd.info,  Node: Information provided by the linker,  Next: Relocating the section contents,  Prev: Performing the Final Link,  Up: Performing the Final Link
+
+2.18.3.1 Information provided by the linker
+...........................................
+
+Before the linker calls the `_bfd_final_link' entry point, it sets up
+some data structures for the function to use.
+
+   The `input_bfds' field of the `bfd_link_info' structure will point
+to a list of all the input files included in the link.  These files are
+linked through the `link_next' field of the `bfd' structure.
+
+   Each section in the output file will have a list of `link_order'
+structures attached to the `link_order_head' field (the `link_order'
+structure is defined in `bfdlink.h').  These structures describe how to
+create the contents of the output section in terms of the contents of
+various input sections, fill constants, and, eventually, other types of
+information.  They also describe relocs that must be created by the BFD
+backend, but do not correspond to any input file; this is used to
+support -Ur, which builds constructors while generating a relocatable
+object file.
+
+
+File: bfd.info,  Node: Relocating the section contents,  Next: Writing the symbol table,  Prev: Information provided by the linker,  Up: Performing the Final Link
+
+2.18.3.2 Relocating the section contents
+........................................
+
+The `_bfd_final_link' function should look through the `link_order'
+structures attached to each section of the output file.  Each
+`link_order' structure should either be handled specially, or it should
+be passed to the function `_bfd_default_link_order' which will do the
+right thing (`_bfd_default_link_order' is defined in `linker.c').
+
+   For efficiency, a `link_order' of type `bfd_indirect_link_order'
+whose associated section belongs to a BFD of the same format as the
+output BFD must be handled specially.  This type of `link_order'
+describes part of an output section in terms of a section belonging to
+one of the input files.  The `_bfd_final_link' function should read the
+contents of the section and any associated relocs, apply the relocs to
+the section contents, and write out the modified section contents.  If
+performing a relocatable link, the relocs themselves must also be
+modified and written out.
+
+   The functions `_bfd_relocate_contents' and
+`_bfd_final_link_relocate' provide some general support for performing
+the actual relocations, notably overflow checking.  Their arguments
+include information about the symbol the relocation is against and a
+`reloc_howto_type' argument which describes the relocation to perform.
+These functions are defined in `reloc.c'.
+
+   The a.out function which handles reading, relocating, and writing
+section contents is `aout_link_input_section'.  The actual relocation
+is done in `aout_link_input_section_std' and
+`aout_link_input_section_ext'.
+
+
+File: bfd.info,  Node: Writing the symbol table,  Prev: Relocating the section contents,  Up: Performing the Final Link
+
+2.18.3.3 Writing the symbol table
+.................................
+
+The `_bfd_final_link' function must gather all the symbols in the input
+files and write them out.  It must also write out all the symbols in
+the global hash table.  This must be controlled by the `strip' and
+`discard' fields of the `bfd_link_info' structure.
+
+   The local symbols of the input files will not have been entered into
+the linker hash table.  The `_bfd_final_link' routine must consider
+each input file and include the symbols in the output file.  It may be
+convenient to do this when looking through the `link_order' structures,
+or it may be done by stepping through the `input_bfds' list.
+
+   The `_bfd_final_link' routine must also traverse the global hash
+table to gather all the externally visible symbols.  It is possible
+that most of the externally visible symbols may be written out when
+considering the symbols of each input file, but it is still necessary
+to traverse the hash table since the linker script may have defined
+some symbols that are not in any of the input files.
+
+   The `strip' field of the `bfd_link_info' structure controls which
+symbols are written out.  The possible values are listed in
+`bfdlink.h'.  If the value is `strip_some', then the `keep_hash' field
+of the `bfd_link_info' structure is a hash table of symbols to keep;
+each symbol should be looked up in this hash table, and only symbols
+which are present should be included in the output file.
+
+   If the `strip' field of the `bfd_link_info' structure permits local
+symbols to be written out, the `discard' field is used to further
+controls which local symbols are included in the output file.  If the
+value is `discard_l', then all local symbols which begin with a certain
+prefix are discarded; this is controlled by the
+`bfd_is_local_label_name' entry point.
+
+   The a.out backend handles symbols by calling
+`aout_link_write_symbols' on each input BFD and then traversing the
+global hash table with the function `aout_link_write_other_symbol'.  It
+builds a string table while writing out the symbols, which is written
+to the output file at the end of `NAME(aout,final_link)'.
+
+2.18.3.4 `bfd_link_split_section'
+.................................
+
+*Synopsis*
+     bfd_boolean bfd_link_split_section (bfd *abfd, asection *sec);
+   *Description*
+Return nonzero if SEC should be split during a reloceatable or final
+link.
+     #define bfd_link_split_section(abfd, sec) \
+            BFD_SEND (abfd, _bfd_link_split_section, (abfd, sec))
+
+2.18.3.5 `bfd_section_already_linked'
+.....................................
+
+*Synopsis*
+     void bfd_section_already_linked (bfd *abfd, asection *sec);
+   *Description*
+Check if SEC has been already linked during a reloceatable or final
+link.
+     #define bfd_section_already_linked(abfd, sec) \
+            BFD_SEND (abfd, _section_already_linked, (abfd, sec))
+
+
+File: bfd.info,  Node: Hash Tables,  Prev: Linker Functions,  Up: BFD front end
+
+2.19 Hash Tables
+================
+
+BFD provides a simple set of hash table functions.  Routines are
+provided to initialize a hash table, to free a hash table, to look up a
+string in a hash table and optionally create an entry for it, and to
+traverse a hash table.  There is currently no routine to delete an
+string from a hash table.
+
+   The basic hash table does not permit any data to be stored with a
+string.  However, a hash table is designed to present a base class from
+which other types of hash tables may be derived.  These derived types
+may store additional information with the string.  Hash tables were
+implemented in this way, rather than simply providing a data pointer in
+a hash table entry, because they were designed for use by the linker
+back ends.  The linker may create thousands of hash table entries, and
+the overhead of allocating private data and storing and following
+pointers becomes noticeable.
+
+   The basic hash table code is in `hash.c'.
+
+* Menu:
+
+* Creating and Freeing a Hash Table::
+* Looking Up or Entering a String::
+* Traversing a Hash Table::
+* Deriving a New Hash Table Type::
+
+
+File: bfd.info,  Node: Creating and Freeing a Hash Table,  Next: Looking Up or Entering a String,  Prev: Hash Tables,  Up: Hash Tables
+
+2.19.1 Creating and freeing a hash table
+----------------------------------------
+
+To create a hash table, create an instance of a `struct bfd_hash_table'
+(defined in `bfd.h') and call `bfd_hash_table_init' (if you know
+approximately how many entries you will need, the function
+`bfd_hash_table_init_n', which takes a SIZE argument, may be used).
+`bfd_hash_table_init' returns `FALSE' if some sort of error occurs.
+
+   The function `bfd_hash_table_init' take as an argument a function to
+use to create new entries.  For a basic hash table, use the function
+`bfd_hash_newfunc'.  *Note Deriving a New Hash Table Type::, for why
+you would want to use a different value for this argument.
+
+   `bfd_hash_table_init' will create an objalloc which will be used to
+allocate new entries.  You may allocate memory on this objalloc using
+`bfd_hash_allocate'.
+
+   Use `bfd_hash_table_free' to free up all the memory that has been
+allocated for a hash table.  This will not free up the `struct
+bfd_hash_table' itself, which you must provide.
+
+   Use `bfd_hash_set_default_size' to set the default size of hash
+table to use.
+
+
+File: bfd.info,  Node: Looking Up or Entering a String,  Next: Traversing a Hash Table,  Prev: Creating and Freeing a Hash Table,  Up: Hash Tables
+
+2.19.2 Looking up or entering a string
+--------------------------------------
+
+The function `bfd_hash_lookup' is used both to look up a string in the
+hash table and to create a new entry.
+
+   If the CREATE argument is `FALSE', `bfd_hash_lookup' will look up a
+string.  If the string is found, it will returns a pointer to a `struct
+bfd_hash_entry'.  If the string is not found in the table
+`bfd_hash_lookup' will return `NULL'.  You should not modify any of the
+fields in the returns `struct bfd_hash_entry'.
+
+   If the CREATE argument is `TRUE', the string will be entered into
+the hash table if it is not already there.  Either way a pointer to a
+`struct bfd_hash_entry' will be returned, either to the existing
+structure or to a newly created one.  In this case, a `NULL' return
+means that an error occurred.
+
+   If the CREATE argument is `TRUE', and a new entry is created, the
+COPY argument is used to decide whether to copy the string onto the
+hash table objalloc or not.  If COPY is passed as `FALSE', you must be
+careful not to deallocate or modify the string as long as the hash table
+exists.
+
+
+File: bfd.info,  Node: Traversing a Hash Table,  Next: Deriving a New Hash Table Type,  Prev: Looking Up or Entering a String,  Up: Hash Tables
+
+2.19.3 Traversing a hash table
+------------------------------
+
+The function `bfd_hash_traverse' may be used to traverse a hash table,
+calling a function on each element.  The traversal is done in a random
+order.
+
+   `bfd_hash_traverse' takes as arguments a function and a generic
+`void *' pointer.  The function is called with a hash table entry (a
+`struct bfd_hash_entry *') and the generic pointer passed to
+`bfd_hash_traverse'.  The function must return a `boolean' value, which
+indicates whether to continue traversing the hash table.  If the
+function returns `FALSE', `bfd_hash_traverse' will stop the traversal
+and return immediately.
+
+
+File: bfd.info,  Node: Deriving a New Hash Table Type,  Prev: Traversing a Hash Table,  Up: Hash Tables
+
+2.19.4 Deriving a new hash table type
+-------------------------------------
+
+Many uses of hash tables want to store additional information which
+each entry in the hash table.  Some also find it convenient to store
+additional information with the hash table itself.  This may be done
+using a derived hash table.
+
+   Since C is not an object oriented language, creating a derived hash
+table requires sticking together some boilerplate routines with a few
+differences specific to the type of hash table you want to create.
+
+   An example of a derived hash table is the linker hash table.  The
+structures for this are defined in `bfdlink.h'.  The functions are in
+`linker.c'.
+
+   You may also derive a hash table from an already derived hash table.
+For example, the a.out linker backend code uses a hash table derived
+from the linker hash table.
+
+* Menu:
+
+* Define the Derived Structures::
+* Write the Derived Creation Routine::
+* Write Other Derived Routines::
+
+
+File: bfd.info,  Node: Define the Derived Structures,  Next: Write the Derived Creation Routine,  Prev: Deriving a New Hash Table Type,  Up: Deriving a New Hash Table Type
+
+2.19.4.1 Define the derived structures
+......................................
+
+You must define a structure for an entry in the hash table, and a
+structure for the hash table itself.
+
+   The first field in the structure for an entry in the hash table must
+be of the type used for an entry in the hash table you are deriving
+from.  If you are deriving from a basic hash table this is `struct
+bfd_hash_entry', which is defined in `bfd.h'.  The first field in the
+structure for the hash table itself must be of the type of the hash
+table you are deriving from itself.  If you are deriving from a basic
+hash table, this is `struct bfd_hash_table'.
+
+   For example, the linker hash table defines `struct
+bfd_link_hash_entry' (in `bfdlink.h').  The first field, `root', is of
+type `struct bfd_hash_entry'.  Similarly, the first field in `struct
+bfd_link_hash_table', `table', is of type `struct bfd_hash_table'.
+
+
+File: bfd.info,  Node: Write the Derived Creation Routine,  Next: Write Other Derived Routines,  Prev: Define the Derived Structures,  Up: Deriving a New Hash Table Type
+
+2.19.4.2 Write the derived creation routine
+...........................................
+
+You must write a routine which will create and initialize an entry in
+the hash table.  This routine is passed as the function argument to
+`bfd_hash_table_init'.
+
+   In order to permit other hash tables to be derived from the hash
+table you are creating, this routine must be written in a standard way.
+
+   The first argument to the creation routine is a pointer to a hash
+table entry.  This may be `NULL', in which case the routine should
+allocate the right amount of space.  Otherwise the space has already
+been allocated by a hash table type derived from this one.
+
+   After allocating space, the creation routine must call the creation
+routine of the hash table type it is derived from, passing in a pointer
+to the space it just allocated.  This will initialize any fields used
+by the base hash table.
+
+   Finally the creation routine must initialize any local fields for
+the new hash table type.
+
+   Here is a boilerplate example of a creation routine.  FUNCTION_NAME
+is the name of the routine.  ENTRY_TYPE is the type of an entry in the
+hash table you are creating.  BASE_NEWFUNC is the name of the creation
+routine of the hash table type your hash table is derived from.
+
+     struct bfd_hash_entry *
+     FUNCTION_NAME (entry, table, string)
+          struct bfd_hash_entry *entry;
+          struct bfd_hash_table *table;
+          const char *string;
+     {
+       struct ENTRY_TYPE *ret = (ENTRY_TYPE *) entry;
+
+      /* Allocate the structure if it has not already been allocated by a
+         derived class.  */
+       if (ret == (ENTRY_TYPE *) NULL)
+         {
+           ret = ((ENTRY_TYPE *)
+                  bfd_hash_allocate (table, sizeof (ENTRY_TYPE)));
+           if (ret == (ENTRY_TYPE *) NULL)
+             return NULL;
+         }
+
+      /* Call the allocation method of the base class.  */
+       ret = ((ENTRY_TYPE *)
+             BASE_NEWFUNC ((struct bfd_hash_entry *) ret, table, string));
+
+      /* Initialize the local fields here.  */
+
+       return (struct bfd_hash_entry *) ret;
+     }
+   *Description*
+The creation routine for the linker hash table, which is in `linker.c',
+looks just like this example.  FUNCTION_NAME is
+`_bfd_link_hash_newfunc'.  ENTRY_TYPE is `struct bfd_link_hash_entry'.
+BASE_NEWFUNC is `bfd_hash_newfunc', the creation routine for a basic
+hash table.
+
+   `_bfd_link_hash_newfunc' also initializes the local fields in a
+linker hash table entry: `type', `written' and `next'.
+
+
+File: bfd.info,  Node: Write Other Derived Routines,  Prev: Write the Derived Creation Routine,  Up: Deriving a New Hash Table Type
+
+2.19.4.3 Write other derived routines
+.....................................
+
+You will want to write other routines for your new hash table, as well.
+
+   You will want an initialization routine which calls the
+initialization routine of the hash table you are deriving from and
+initializes any other local fields.  For the linker hash table, this is
+`_bfd_link_hash_table_init' in `linker.c'.
+
+   You will want a lookup routine which calls the lookup routine of the
+hash table you are deriving from and casts the result.  The linker hash
+table uses `bfd_link_hash_lookup' in `linker.c' (this actually takes an
+additional argument which it uses to decide how to return the looked up
+value).
+
+   You may want a traversal routine.  This should just call the
+traversal routine of the hash table you are deriving from with
+appropriate casts.  The linker hash table uses `bfd_link_hash_traverse'
+in `linker.c'.
+
+   These routines may simply be defined as macros.  For example, the
+a.out backend linker hash table, which is derived from the linker hash
+table, uses macros for the lookup and traversal routines.  These are
+`aout_link_hash_lookup' and `aout_link_hash_traverse' in aoutx.h.
+
+
+File: bfd.info,  Node: BFD back ends,  Next: GNU Free Documentation License,  Prev: BFD front end,  Up: Top
+
+3 BFD back ends
+***************
+
+* Menu:
+
+* What to Put Where::
+* aout ::	a.out backends
+* coff ::	coff backends
+* elf  ::	elf backends
+* mmo  ::	mmo backend
+
+
+File: bfd.info,  Node: What to Put Where,  Next: aout,  Prev: BFD back ends,  Up: BFD back ends
+
+   All of BFD lives in one directory.
+
+
+File: bfd.info,  Node: aout,  Next: coff,  Prev: What to Put Where,  Up: BFD back ends
+
+3.1 a.out backends
+==================
+
+*Description*
+BFD supports a number of different flavours of a.out format, though the
+major differences are only the sizes of the structures on disk, and the
+shape of the relocation information.
+
+   The support is split into a basic support file `aoutx.h' and other
+files which derive functions from the base. One derivation file is
+`aoutf1.h' (for a.out flavour 1), and adds to the basic a.out functions
+support for sun3, sun4, 386 and 29k a.out files, to create a target
+jump vector for a specific target.
+
+   This information is further split out into more specific files for
+each machine, including `sunos.c' for sun3 and sun4, `newsos3.c' for
+the Sony NEWS, and `demo64.c' for a demonstration of a 64 bit a.out
+format.
+
+   The base file `aoutx.h' defines general mechanisms for reading and
+writing records to and from disk and various other methods which BFD
+requires. It is included by `aout32.c' and `aout64.c' to form the names
+`aout_32_swap_exec_header_in', `aout_64_swap_exec_header_in', etc.
+
+   As an example, this is what goes on to make the back end for a sun4,
+from `aout32.c':
+
+            #define ARCH_SIZE 32
+            #include "aoutx.h"
+
+   Which exports names:
+
+            ...
+            aout_32_canonicalize_reloc
+            aout_32_find_nearest_line
+            aout_32_get_lineno
+            aout_32_get_reloc_upper_bound
+            ...
+
+   from `sunos.c':
+
+            #define TARGET_NAME "a.out-sunos-big"
+            #define VECNAME    sunos_big_vec
+            #include "aoutf1.h"
+
+   requires all the names from `aout32.c', and produces the jump vector
+
+            sunos_big_vec
+
+   The file `host-aout.c' is a special case.  It is for a large set of
+hosts that use "more or less standard" a.out files, and for which
+cross-debugging is not interesting.  It uses the standard 32-bit a.out
+support routines, but determines the file offsets and addresses of the
+text, data, and BSS sections, the machine architecture and machine
+type, and the entry point address, in a host-dependent manner.  Once
+these values have been determined, generic code is used to handle the
+object file.
+
+   When porting it to run on a new system, you must supply:
+
+             HOST_PAGE_SIZE
+             HOST_SEGMENT_SIZE
+             HOST_MACHINE_ARCH       (optional)
+             HOST_MACHINE_MACHINE    (optional)
+             HOST_TEXT_START_ADDR
+             HOST_STACK_END_ADDR
+
+   in the file `../include/sys/h-XXX.h' (for your host).  These values,
+plus the structures and macros defined in `a.out.h' on your host
+system, will produce a BFD target that will access ordinary a.out files
+on your host. To configure a new machine to use `host-aout.c', specify:
+
+            TDEFAULTS = -DDEFAULT_VECTOR=host_aout_big_vec
+            TDEPFILES= host-aout.o trad-core.o
+
+   in the `config/XXX.mt' file, and modify `configure.in' to use the
+`XXX.mt' file (by setting "`bfd_target=XXX'") when your configuration
+is selected.
+
+3.1.1 Relocations
+-----------------
+
+*Description*
+The file `aoutx.h' provides for both the _standard_ and _extended_
+forms of a.out relocation records.
+
+   The standard records contain only an address, a symbol index, and a
+type field. The extended records (used on 29ks and sparcs) also have a
+full integer for an addend.
+
+3.1.2 Internal entry points
+---------------------------
+
+*Description*
+`aoutx.h' exports several routines for accessing the contents of an
+a.out file, which are gathered and exported in turn by various format
+specific files (eg sunos.c).
+
+3.1.2.1 `aout_SIZE_swap_exec_header_in'
+.......................................
+
+*Synopsis*
+     void aout_SIZE_swap_exec_header_in,
+        (bfd *abfd,
+         struct external_exec *raw_bytes,
+         struct internal_exec *execp);
+   *Description*
+Swap the information in an executable header RAW_BYTES taken from a raw
+byte stream memory image into the internal exec header structure EXECP.
+
+3.1.2.2 `aout_SIZE_swap_exec_header_out'
+........................................
+
+*Synopsis*
+     void aout_SIZE_swap_exec_header_out
+        (bfd *abfd,
+         struct internal_exec *execp,
+         struct external_exec *raw_bytes);
+   *Description*
+Swap the information in an internal exec header structure EXECP into
+the buffer RAW_BYTES ready for writing to disk.
+
+3.1.2.3 `aout_SIZE_some_aout_object_p'
+......................................
+
+*Synopsis*
+     const bfd_target *aout_SIZE_some_aout_object_p
+        (bfd *abfd,
+         const bfd_target *(*callback_to_real_object_p) ());
+   *Description*
+Some a.out variant thinks that the file open in ABFD checking is an
+a.out file.  Do some more checking, and set up for access if it really
+is.  Call back to the calling environment's "finish up" function just
+before returning, to handle any last-minute setup.
+
+3.1.2.4 `aout_SIZE_mkobject'
+............................
+
+*Synopsis*
+     bfd_boolean aout_SIZE_mkobject, (bfd *abfd);
+   *Description*
+Initialize BFD ABFD for use with a.out files.
+
+3.1.2.5 `aout_SIZE_machine_type'
+................................
+
+*Synopsis*
+     enum machine_type  aout_SIZE_machine_type
+        (enum bfd_architecture arch,
+         unsigned long machine));
+   *Description*
+Keep track of machine architecture and machine type for a.out's. Return
+the `machine_type' for a particular architecture and machine, or
+`M_UNKNOWN' if that exact architecture and machine can't be represented
+in a.out format.
+
+   If the architecture is understood, machine type 0 (default) is
+always understood.
+
+3.1.2.6 `aout_SIZE_set_arch_mach'
+.................................
+
+*Synopsis*
+     bfd_boolean aout_SIZE_set_arch_mach,
+        (bfd *,
+         enum bfd_architecture arch,
+         unsigned long machine));
+   *Description*
+Set the architecture and the machine of the BFD ABFD to the values ARCH
+and MACHINE.  Verify that ABFD's format can support the architecture
+required.
+
+3.1.2.7 `aout_SIZE_new_section_hook'
+....................................
+
+*Synopsis*
+     bfd_boolean aout_SIZE_new_section_hook,
+        (bfd *abfd,
+         asection *newsect));
+   *Description*
+Called by the BFD in response to a `bfd_make_section' request.
+
+
+File: bfd.info,  Node: coff,  Next: elf,  Prev: aout,  Up: BFD back ends
+
+3.2 coff backends
+=================
+
+BFD supports a number of different flavours of coff format.  The major
+differences between formats are the sizes and alignments of fields in
+structures on disk, and the occasional extra field.
+
+   Coff in all its varieties is implemented with a few common files and
+a number of implementation specific files. For example, The 88k bcs
+coff format is implemented in the file `coff-m88k.c'. This file
+`#include's `coff/m88k.h' which defines the external structure of the
+coff format for the 88k, and `coff/internal.h' which defines the
+internal structure. `coff-m88k.c' also defines the relocations used by
+the 88k format *Note Relocations::.
+
+   The Intel i960 processor version of coff is implemented in
+`coff-i960.c'. This file has the same structure as `coff-m88k.c',
+except that it includes `coff/i960.h' rather than `coff-m88k.h'.
+
+3.2.1 Porting to a new version of coff
+--------------------------------------
+
+The recommended method is to select from the existing implementations
+the version of coff which is most like the one you want to use.  For
+example, we'll say that i386 coff is the one you select, and that your
+coff flavour is called foo.  Copy `i386coff.c' to `foocoff.c', copy
+`../include/coff/i386.h' to `../include/coff/foo.h', and add the lines
+to `targets.c' and `Makefile.in' so that your new back end is used.
+Alter the shapes of the structures in `../include/coff/foo.h' so that
+they match what you need. You will probably also have to add `#ifdef's
+to the code in `coff/internal.h' and `coffcode.h' if your version of
+coff is too wild.
+
+   You can verify that your new BFD backend works quite simply by
+building `objdump' from the `binutils' directory, and making sure that
+its version of what's going on and your host system's idea (assuming it
+has the pretty standard coff dump utility, usually called `att-dump' or
+just `dump') are the same.  Then clean up your code, and send what
+you've done to Cygnus. Then your stuff will be in the next release, and
+you won't have to keep integrating it.
+
+3.2.2 How the coff backend works
+--------------------------------
+
+3.2.2.1 File layout
+...................
+
+The Coff backend is split into generic routines that are applicable to
+any Coff target and routines that are specific to a particular target.
+The target-specific routines are further split into ones which are
+basically the same for all Coff targets except that they use the
+external symbol format or use different values for certain constants.
+
+   The generic routines are in `coffgen.c'.  These routines work for
+any Coff target.  They use some hooks into the target specific code;
+the hooks are in a `bfd_coff_backend_data' structure, one of which
+exists for each target.
+
+   The essentially similar target-specific routines are in
+`coffcode.h'.  This header file includes executable C code.  The
+various Coff targets first include the appropriate Coff header file,
+make any special defines that are needed, and then include `coffcode.h'.
+
+   Some of the Coff targets then also have additional routines in the
+target source file itself.
+
+   For example, `coff-i960.c' includes `coff/internal.h' and
+`coff/i960.h'.  It then defines a few constants, such as `I960', and
+includes `coffcode.h'.  Since the i960 has complex relocation types,
+`coff-i960.c' also includes some code to manipulate the i960 relocs.
+This code is not in `coffcode.h' because it would not be used by any
+other target.
+
+3.2.2.2 Bit twiddling
+.....................
+
+Each flavour of coff supported in BFD has its own header file
+describing the external layout of the structures. There is also an
+internal description of the coff layout, in `coff/internal.h'. A major
+function of the coff backend is swapping the bytes and twiddling the
+bits to translate the external form of the structures into the normal
+internal form. This is all performed in the `bfd_swap'_thing_direction
+routines. Some elements are different sizes between different versions
+of coff; it is the duty of the coff version specific include file to
+override the definitions of various packing routines in `coffcode.h'.
+E.g., the size of line number entry in coff is sometimes 16 bits, and
+sometimes 32 bits. `#define'ing `PUT_LNSZ_LNNO' and `GET_LNSZ_LNNO'
+will select the correct one. No doubt, some day someone will find a
+version of coff which has a varying field size not catered to at the
+moment. To port BFD, that person will have to add more `#defines'.
+Three of the bit twiddling routines are exported to `gdb';
+`coff_swap_aux_in', `coff_swap_sym_in' and `coff_swap_lineno_in'. `GDB'
+reads the symbol table on its own, but uses BFD to fix things up.  More
+of the bit twiddlers are exported for `gas'; `coff_swap_aux_out',
+`coff_swap_sym_out', `coff_swap_lineno_out', `coff_swap_reloc_out',
+`coff_swap_filehdr_out', `coff_swap_aouthdr_out',
+`coff_swap_scnhdr_out'. `Gas' currently keeps track of all the symbol
+table and reloc drudgery itself, thereby saving the internal BFD
+overhead, but uses BFD to swap things on the way out, making cross
+ports much safer.  Doing so also allows BFD (and thus the linker) to
+use the same header files as `gas', which makes one avenue to disaster
+disappear.
+
+3.2.2.3 Symbol reading
+......................
+
+The simple canonical form for symbols used by BFD is not rich enough to
+keep all the information available in a coff symbol table. The back end
+gets around this problem by keeping the original symbol table around,
+"behind the scenes".
+
+   When a symbol table is requested (through a call to
+`bfd_canonicalize_symtab'), a request gets through to
+`coff_get_normalized_symtab'. This reads the symbol table from the coff
+file and swaps all the structures inside into the internal form. It
+also fixes up all the pointers in the table (represented in the file by
+offsets from the first symbol in the table) into physical pointers to
+elements in the new internal table. This involves some work since the
+meanings of fields change depending upon context: a field that is a
+pointer to another structure in the symbol table at one moment may be
+the size in bytes of a structure at the next.  Another pass is made
+over the table. All symbols which mark file names (`C_FILE' symbols)
+are modified so that the internal string points to the value in the
+auxent (the real filename) rather than the normal text associated with
+the symbol (`".file"').
+
+   At this time the symbol names are moved around. Coff stores all
+symbols less than nine characters long physically within the symbol
+table; longer strings are kept at the end of the file in the string
+table. This pass moves all strings into memory and replaces them with
+pointers to the strings.
+
+   The symbol table is massaged once again, this time to create the
+canonical table used by the BFD application. Each symbol is inspected
+in turn, and a decision made (using the `sclass' field) about the
+various flags to set in the `asymbol'.  *Note Symbols::. The generated
+canonical table shares strings with the hidden internal symbol table.
+
+   Any linenumbers are read from the coff file too, and attached to the
+symbols which own the functions the linenumbers belong to.
+
+3.2.2.4 Symbol writing
+......................
+
+Writing a symbol to a coff file which didn't come from a coff file will
+lose any debugging information. The `asymbol' structure remembers the
+BFD from which the symbol was taken, and on output the back end makes
+sure that the same destination target as source target is present.
+
+   When the symbols have come from a coff file then all the debugging
+information is preserved.
+
+   Symbol tables are provided for writing to the back end in a vector
+of pointers to pointers. This allows applications like the linker to
+accumulate and output large symbol tables without having to do too much
+byte copying.
+
+   This function runs through the provided symbol table and patches
+each symbol marked as a file place holder (`C_FILE') to point to the
+next file place holder in the list. It also marks each `offset' field
+in the list with the offset from the first symbol of the current symbol.
+
+   Another function of this procedure is to turn the canonical value
+form of BFD into the form used by coff. Internally, BFD expects symbol
+values to be offsets from a section base; so a symbol physically at
+0x120, but in a section starting at 0x100, would have the value 0x20.
+Coff expects symbols to contain their final value, so symbols have
+their values changed at this point to reflect their sum with their
+owning section.  This transformation uses the `output_section' field of
+the `asymbol''s `asection' *Note Sections::.
+
+   * `coff_mangle_symbols'
+   This routine runs though the provided symbol table and uses the
+offsets generated by the previous pass and the pointers generated when
+the symbol table was read in to create the structured hierarchy
+required by coff. It changes each pointer to a symbol into the index
+into the symbol table of the asymbol.
+
+   * `coff_write_symbols'
+   This routine runs through the symbol table and patches up the
+symbols from their internal form into the coff way, calls the bit
+twiddlers, and writes out the table to the file.
+
+3.2.2.5 `coff_symbol_type'
+..........................
+
+*Description*
+The hidden information for an `asymbol' is described in a
+`combined_entry_type':
+
+
+     typedef struct coff_ptr_struct
+     {
+       /* Remembers the offset from the first symbol in the file for
+          this symbol. Generated by coff_renumber_symbols. */
+       unsigned int offset;
+
+       /* Should the value of this symbol be renumbered.  Used for
+          XCOFF C_BSTAT symbols.  Set by coff_slurp_symbol_table.  */
+       unsigned int fix_value : 1;
+
+       /* Should the tag field of this symbol be renumbered.
+          Created by coff_pointerize_aux. */
+       unsigned int fix_tag : 1;
+
+       /* Should the endidx field of this symbol be renumbered.
+          Created by coff_pointerize_aux. */
+       unsigned int fix_end : 1;
+
+       /* Should the x_csect.x_scnlen field be renumbered.
+          Created by coff_pointerize_aux. */
+       unsigned int fix_scnlen : 1;
+
+       /* Fix up an XCOFF C_BINCL/C_EINCL symbol.  The value is the
+          index into the line number entries.  Set by coff_slurp_symbol_table.  */
+       unsigned int fix_line : 1;
+
+       /* The container for the symbol structure as read and translated
+          from the file. */
+       union
+       {
+         union internal_auxent auxent;
+         struct internal_syment syment;
+       } u;
+     } combined_entry_type;
+
+
+     /* Each canonical asymbol really looks like this: */
+
+     typedef struct coff_symbol_struct
+     {
+       /* The actual symbol which the rest of BFD works with */
+       asymbol symbol;
+
+       /* A pointer to the hidden information for this symbol */
+       combined_entry_type *native;
+
+       /* A pointer to the linenumber information for this symbol */
+       struct lineno_cache_entry *lineno;
+
+       /* Have the line numbers been relocated yet ? */
+       bfd_boolean done_lineno;
+     } coff_symbol_type;
+   
+3.2.2.6 `bfd_coff_backend_data'
+...............................
+
+     /* COFF symbol classifications.  */
+
+     enum coff_symbol_classification
+     {
+       /* Global symbol.  */
+       COFF_SYMBOL_GLOBAL,
+       /* Common symbol.  */
+       COFF_SYMBOL_COMMON,
+       /* Undefined symbol.  */
+       COFF_SYMBOL_UNDEFINED,
+       /* Local symbol.  */
+       COFF_SYMBOL_LOCAL,
+       /* PE section symbol.  */
+       COFF_SYMBOL_PE_SECTION
+     };
+Special entry points for gdb to swap in coff symbol table parts:
+     typedef struct
+     {
+       void (*_bfd_coff_swap_aux_in)
+         PARAMS ((bfd *, PTR, int, int, int, int, PTR));
+
+       void (*_bfd_coff_swap_sym_in)
+         PARAMS ((bfd *, PTR, PTR));
+
+       void (*_bfd_coff_swap_lineno_in)
+         PARAMS ((bfd *, PTR, PTR));
+
+       unsigned int (*_bfd_coff_swap_aux_out)
+         PARAMS ((bfd *, PTR, int, int, int, int, PTR));
+
+       unsigned int (*_bfd_coff_swap_sym_out)
+         PARAMS ((bfd *, PTR, PTR));
+
+       unsigned int (*_bfd_coff_swap_lineno_out)
+         PARAMS ((bfd *, PTR, PTR));
+
+       unsigned int (*_bfd_coff_swap_reloc_out)
+         PARAMS ((bfd *, PTR, PTR));
+
+       unsigned int (*_bfd_coff_swap_filehdr_out)
+         PARAMS ((bfd *, PTR, PTR));
+
+       unsigned int (*_bfd_coff_swap_aouthdr_out)
+         PARAMS ((bfd *, PTR, PTR));
+
+       unsigned int (*_bfd_coff_swap_scnhdr_out)
+         PARAMS ((bfd *, PTR, PTR));
+
+       unsigned int _bfd_filhsz;
+       unsigned int _bfd_aoutsz;
+       unsigned int _bfd_scnhsz;
+       unsigned int _bfd_symesz;
+       unsigned int _bfd_auxesz;
+       unsigned int _bfd_relsz;
+       unsigned int _bfd_linesz;
+       unsigned int _bfd_filnmlen;
+       bfd_boolean _bfd_coff_long_filenames;
+       bfd_boolean _bfd_coff_long_section_names;
+       unsigned int _bfd_coff_default_section_alignment_power;
+       bfd_boolean _bfd_coff_force_symnames_in_strings;
+       unsigned int _bfd_coff_debug_string_prefix_length;
+
+       void (*_bfd_coff_swap_filehdr_in)
+         PARAMS ((bfd *, PTR, PTR));
+
+       void (*_bfd_coff_swap_aouthdr_in)
+         PARAMS ((bfd *, PTR, PTR));
+
+       void (*_bfd_coff_swap_scnhdr_in)
+         PARAMS ((bfd *, PTR, PTR));
+
+       void (*_bfd_coff_swap_reloc_in)
+         PARAMS ((bfd *abfd, PTR, PTR));
+
+       bfd_boolean (*_bfd_coff_bad_format_hook)
+         PARAMS ((bfd *, PTR));
+
+       bfd_boolean (*_bfd_coff_set_arch_mach_hook)
+         PARAMS ((bfd *, PTR));
+
+       PTR (*_bfd_coff_mkobject_hook)
+         PARAMS ((bfd *, PTR, PTR));
+
+       bfd_boolean (*_bfd_styp_to_sec_flags_hook)
+         PARAMS ((bfd *, PTR, const char *, asection *, flagword *));
+
+       void (*_bfd_set_alignment_hook)
+         PARAMS ((bfd *, asection *, PTR));
+
+       bfd_boolean (*_bfd_coff_slurp_symbol_table)
+         PARAMS ((bfd *));
+
+       bfd_boolean (*_bfd_coff_symname_in_debug)
+         PARAMS ((bfd *, struct internal_syment *));
+
+       bfd_boolean (*_bfd_coff_pointerize_aux_hook)
+         PARAMS ((bfd *, combined_entry_type *, combined_entry_type *,
+                 unsigned int, combined_entry_type *));
+
+       bfd_boolean (*_bfd_coff_print_aux)
+         PARAMS ((bfd *, FILE *, combined_entry_type *, combined_entry_type *,
+                 combined_entry_type *, unsigned int));
+
+       void (*_bfd_coff_reloc16_extra_cases)
+         PARAMS ((bfd *, struct bfd_link_info *, struct bfd_link_order *, arelent *,
+                bfd_byte *, unsigned int *, unsigned int *));
+
+       int (*_bfd_coff_reloc16_estimate)
+         PARAMS ((bfd *, asection *, arelent *, unsigned int,
+                 struct bfd_link_info *));
+
+       enum coff_symbol_classification (*_bfd_coff_classify_symbol)
+         PARAMS ((bfd *, struct internal_syment *));
+
+       bfd_boolean (*_bfd_coff_compute_section_file_positions)
+         PARAMS ((bfd *));
+
+       bfd_boolean (*_bfd_coff_start_final_link)
+         PARAMS ((bfd *, struct bfd_link_info *));
+
+       bfd_boolean (*_bfd_coff_relocate_section)
+         PARAMS ((bfd *, struct bfd_link_info *, bfd *, asection *, bfd_byte *,
+                 struct internal_reloc *, struct internal_syment *, asection **));
+
+       reloc_howto_type *(*_bfd_coff_rtype_to_howto)
+         PARAMS ((bfd *, asection *, struct internal_reloc *,
+                 struct coff_link_hash_entry *, struct internal_syment *,
+                 bfd_vma *));
+
+       bfd_boolean (*_bfd_coff_adjust_symndx)
+         PARAMS ((bfd *, struct bfd_link_info *, bfd *, asection *,
+                 struct internal_reloc *, bfd_boolean *));
+
+       bfd_boolean (*_bfd_coff_link_add_one_symbol)
+         PARAMS ((struct bfd_link_info *, bfd *, const char *, flagword,
+                 asection *, bfd_vma, const char *, bfd_boolean, bfd_boolean,
+                 struct bfd_link_hash_entry **));
+
+       bfd_boolean (*_bfd_coff_link_output_has_begun)
+         PARAMS ((bfd *, struct coff_final_link_info *));
+
+       bfd_boolean (*_bfd_coff_final_link_postscript)
+         PARAMS ((bfd *, struct coff_final_link_info *));
+
+     } bfd_coff_backend_data;
+
+     #define coff_backend_info(abfd) \
+       ((bfd_coff_backend_data *) (abfd)->xvec->backend_data)
+
+     #define bfd_coff_swap_aux_in(a,e,t,c,ind,num,i) \
+       ((coff_backend_info (a)->_bfd_coff_swap_aux_in) (a,e,t,c,ind,num,i))
+
+     #define bfd_coff_swap_sym_in(a,e,i) \
+       ((coff_backend_info (a)->_bfd_coff_swap_sym_in) (a,e,i))
+
+     #define bfd_coff_swap_lineno_in(a,e,i) \
+       ((coff_backend_info ( a)->_bfd_coff_swap_lineno_in) (a,e,i))
+
+     #define bfd_coff_swap_reloc_out(abfd, i, o) \
+       ((coff_backend_info (abfd)->_bfd_coff_swap_reloc_out) (abfd, i, o))
+
+     #define bfd_coff_swap_lineno_out(abfd, i, o) \
+       ((coff_backend_info (abfd)->_bfd_coff_swap_lineno_out) (abfd, i, o))
+
+     #define bfd_coff_swap_aux_out(a,i,t,c,ind,num,o) \
+       ((coff_backend_info (a)->_bfd_coff_swap_aux_out) (a,i,t,c,ind,num,o))
+
+     #define bfd_coff_swap_sym_out(abfd, i,o) \
+       ((coff_backend_info (abfd)->_bfd_coff_swap_sym_out) (abfd, i, o))
+
+     #define bfd_coff_swap_scnhdr_out(abfd, i,o) \
+       ((coff_backend_info (abfd)->_bfd_coff_swap_scnhdr_out) (abfd, i, o))
+
+     #define bfd_coff_swap_filehdr_out(abfd, i,o) \
+       ((coff_backend_info (abfd)->_bfd_coff_swap_filehdr_out) (abfd, i, o))
+
+     #define bfd_coff_swap_aouthdr_out(abfd, i,o) \
+       ((coff_backend_info (abfd)->_bfd_coff_swap_aouthdr_out) (abfd, i, o))
+
+     #define bfd_coff_filhsz(abfd) (coff_backend_info (abfd)->_bfd_filhsz)
+     #define bfd_coff_aoutsz(abfd) (coff_backend_info (abfd)->_bfd_aoutsz)
+     #define bfd_coff_scnhsz(abfd) (coff_backend_info (abfd)->_bfd_scnhsz)
+     #define bfd_coff_symesz(abfd) (coff_backend_info (abfd)->_bfd_symesz)
+     #define bfd_coff_auxesz(abfd) (coff_backend_info (abfd)->_bfd_auxesz)
+     #define bfd_coff_relsz(abfd)  (coff_backend_info (abfd)->_bfd_relsz)
+     #define bfd_coff_linesz(abfd) (coff_backend_info (abfd)->_bfd_linesz)
+     #define bfd_coff_filnmlen(abfd) (coff_backend_info (abfd)->_bfd_filnmlen)
+     #define bfd_coff_long_filenames(abfd) \
+       (coff_backend_info (abfd)->_bfd_coff_long_filenames)
+     #define bfd_coff_long_section_names(abfd) \
+       (coff_backend_info (abfd)->_bfd_coff_long_section_names)
+     #define bfd_coff_default_section_alignment_power(abfd) \
+       (coff_backend_info (abfd)->_bfd_coff_default_section_alignment_power)
+     #define bfd_coff_swap_filehdr_in(abfd, i,o) \
+       ((coff_backend_info (abfd)->_bfd_coff_swap_filehdr_in) (abfd, i, o))
+
+     #define bfd_coff_swap_aouthdr_in(abfd, i,o) \
+       ((coff_backend_info (abfd)->_bfd_coff_swap_aouthdr_in) (abfd, i, o))
+
+     #define bfd_coff_swap_scnhdr_in(abfd, i,o) \
+       ((coff_backend_info (abfd)->_bfd_coff_swap_scnhdr_in) (abfd, i, o))
+
+     #define bfd_coff_swap_reloc_in(abfd, i, o) \
+       ((coff_backend_info (abfd)->_bfd_coff_swap_reloc_in) (abfd, i, o))
+
+     #define bfd_coff_bad_format_hook(abfd, filehdr) \
+       ((coff_backend_info (abfd)->_bfd_coff_bad_format_hook) (abfd, filehdr))
+
+     #define bfd_coff_set_arch_mach_hook(abfd, filehdr)\
+       ((coff_backend_info (abfd)->_bfd_coff_set_arch_mach_hook) (abfd, filehdr))
+     #define bfd_coff_mkobject_hook(abfd, filehdr, aouthdr)\
+       ((coff_backend_info (abfd)->_bfd_coff_mkobject_hook)\
+        (abfd, filehdr, aouthdr))
+
+     #define bfd_coff_styp_to_sec_flags_hook(abfd, scnhdr, name, section, flags_ptr)\
+       ((coff_backend_info (abfd)->_bfd_styp_to_sec_flags_hook)\
+        (abfd, scnhdr, name, section, flags_ptr))
+
+     #define bfd_coff_set_alignment_hook(abfd, sec, scnhdr)\
+       ((coff_backend_info (abfd)->_bfd_set_alignment_hook) (abfd, sec, scnhdr))
+
+     #define bfd_coff_slurp_symbol_table(abfd)\
+       ((coff_backend_info (abfd)->_bfd_coff_slurp_symbol_table) (abfd))
+
+     #define bfd_coff_symname_in_debug(abfd, sym)\
+       ((coff_backend_info (abfd)->_bfd_coff_symname_in_debug) (abfd, sym))
+
+     #define bfd_coff_force_symnames_in_strings(abfd)\
+       (coff_backend_info (abfd)->_bfd_coff_force_symnames_in_strings)
+
+     #define bfd_coff_debug_string_prefix_length(abfd)\
+       (coff_backend_info (abfd)->_bfd_coff_debug_string_prefix_length)
+
+     #define bfd_coff_print_aux(abfd, file, base, symbol, aux, indaux)\
+       ((coff_backend_info (abfd)->_bfd_coff_print_aux)\
+        (abfd, file, base, symbol, aux, indaux))
+
+     #define bfd_coff_reloc16_extra_cases(abfd, link_info, link_order,\
+                                          reloc, data, src_ptr, dst_ptr)\
+       ((coff_backend_info (abfd)->_bfd_coff_reloc16_extra_cases)\
+        (abfd, link_info, link_order, reloc, data, src_ptr, dst_ptr))
+
+     #define bfd_coff_reloc16_estimate(abfd, section, reloc, shrink, link_info)\
+       ((coff_backend_info (abfd)->_bfd_coff_reloc16_estimate)\
+        (abfd, section, reloc, shrink, link_info))
+
+     #define bfd_coff_classify_symbol(abfd, sym)\
+       ((coff_backend_info (abfd)->_bfd_coff_classify_symbol)\
+        (abfd, sym))
+
+     #define bfd_coff_compute_section_file_positions(abfd)\
+       ((coff_backend_info (abfd)->_bfd_coff_compute_section_file_positions)\
+        (abfd))
+
+     #define bfd_coff_start_final_link(obfd, info)\
+       ((coff_backend_info (obfd)->_bfd_coff_start_final_link)\
+        (obfd, info))
+     #define bfd_coff_relocate_section(obfd,info,ibfd,o,con,rel,isyms,secs)\
+       ((coff_backend_info (ibfd)->_bfd_coff_relocate_section)\
+        (obfd, info, ibfd, o, con, rel, isyms, secs))
+     #define bfd_coff_rtype_to_howto(abfd, sec, rel, h, sym, addendp)\
+       ((coff_backend_info (abfd)->_bfd_coff_rtype_to_howto)\
+        (abfd, sec, rel, h, sym, addendp))
+     #define bfd_coff_adjust_symndx(obfd, info, ibfd, sec, rel, adjustedp)\
+       ((coff_backend_info (abfd)->_bfd_coff_adjust_symndx)\
+        (obfd, info, ibfd, sec, rel, adjustedp))
+     #define bfd_coff_link_add_one_symbol(info, abfd, name, flags, section,\
+                                          value, string, cp, coll, hashp)\
+       ((coff_backend_info (abfd)->_bfd_coff_link_add_one_symbol)\
+        (info, abfd, name, flags, section, value, string, cp, coll, hashp))
+
+     #define bfd_coff_link_output_has_begun(a,p) \
+       ((coff_backend_info (a)->_bfd_coff_link_output_has_begun) (a,p))
+     #define bfd_coff_final_link_postscript(a,p) \
+       ((coff_backend_info (a)->_bfd_coff_final_link_postscript) (a,p))
+
+3.2.2.7 Writing relocations
+...........................
+
+To write relocations, the back end steps though the canonical
+relocation table and create an `internal_reloc'. The symbol index to
+use is removed from the `offset' field in the symbol table supplied.
+The address comes directly from the sum of the section base address and
+the relocation offset; the type is dug directly from the howto field.
+Then the `internal_reloc' is swapped into the shape of an
+`external_reloc' and written out to disk.
+
+3.2.2.8 Reading linenumbers
+...........................
+
+Creating the linenumber table is done by reading in the entire coff
+linenumber table, and creating another table for internal use.
+
+   A coff linenumber table is structured so that each function is
+marked as having a line number of 0. Each line within the function is
+an offset from the first line in the function. The base of the line
+number information for the table is stored in the symbol associated
+with the function.
+
+   Note: The PE format uses line number 0 for a flag indicating a new
+source file.
+
+   The information is copied from the external to the internal table,
+and each symbol which marks a function is marked by pointing its...
+
+   How does this work ?
+
+3.2.2.9 Reading relocations
+...........................
+
+Coff relocations are easily transformed into the internal BFD form
+(`arelent').
+
+   Reading a coff relocation table is done in the following stages:
+
+   * Read the entire coff relocation table into memory.
+
+   * Process each relocation in turn; first swap it from the external
+     to the internal form.
+
+   * Turn the symbol referenced in the relocation's symbol index into a
+     pointer into the canonical symbol table.  This table is the same
+     as the one returned by a call to `bfd_canonicalize_symtab'. The
+     back end will call that routine and save the result if a
+     canonicalization hasn't been done.
+
+   * The reloc index is turned into a pointer to a howto structure, in
+     a back end specific way. For instance, the 386 and 960 use the
+     `r_type' to directly produce an index into a howto table vector;
+     the 88k subtracts a number from the `r_type' field and creates an
+     addend field.
+
+
+File: bfd.info,  Node: elf,  Next: mmo,  Prev: coff,  Up: BFD back ends
+
+3.3
+===
+
+ELF backends
+
+   BFD support for ELF formats is being worked on.  Currently, the best
+supported back ends are for sparc and i386 (running svr4 or Solaris 2).
+
+   Documentation of the internals of the support code still needs to be
+written.  The code is changing quickly enough that we haven't bothered
+yet.
+
+3.3.0.1 `bfd_elf_find_section'
+..............................
+
+*Synopsis*
+     struct elf_internal_shdr *bfd_elf_find_section (bfd *abfd, char *name);
+   *Description*
+Helper functions for GDB to locate the string tables.  Since BFD hides
+string tables from callers, GDB needs to use an internal hook to find
+them.  Sun's .stabstr, in particular, isn't even pointed to by the
+.stab section, so ordinary mechanisms wouldn't work to find it, even if
+we had some.
+
+
+File: bfd.info,  Node: mmo,  Prev: elf,  Up: BFD back ends
+
+3.4 mmo backend
+===============
+
+The mmo object format is used exclusively together with Professor
+Donald E. Knuth's educational 64-bit processor MMIX.  The simulator
+`mmix' which is available at
+`http://www-cs-faculty.stanford.edu/~knuth/programs/mmix.tar.gz'
+understands this format.  That package also includes a combined
+assembler and linker called `mmixal'.  The mmo format has no advantages
+feature-wise compared to e.g. ELF.  It is a simple non-relocatable
+object format with no support for archives or debugging information,
+except for symbol value information and line numbers (which is not yet
+implemented in BFD).  See
+`http://www-cs-faculty.stanford.edu/~knuth/mmix.html' for more
+information about MMIX.  The ELF format is used for intermediate object
+files in the BFD implementation.
+
+* Menu:
+
+* File layout::
+* Symbol-table::
+* mmo section mapping::
+
+
+File: bfd.info,  Node: File layout,  Next: Symbol-table,  Prev: mmo,  Up: mmo
+
+3.4.1 File layout
+-----------------
+
+The mmo file contents is not partitioned into named sections as with
+e.g. ELF.  Memory areas is formed by specifying the location of the
+data that follows.  Only the memory area `0x0000...00' to `0x01ff...ff'
+is executable, so it is used for code (and constants) and the area
+`0x2000...00' to `0x20ff...ff' is used for writable data.  *Note mmo
+section mapping::.
+
+   There is provision for specifying "special data" of 65536 different
+types.  We use type 80 (decimal), arbitrarily chosen the same as the
+ELF `e_machine' number for MMIX, filling it with section information
+normally found in ELF objects. *Note mmo section mapping::.
+
+   Contents is entered as 32-bit words, xor:ed over previous contents,
+always zero-initialized.  A word that starts with the byte `0x98' forms
+a command called a `lopcode', where the next byte distinguished between
+the thirteen lopcodes.  The two remaining bytes, called the `Y' and `Z'
+fields, or the `YZ' field (a 16-bit big-endian number), are used for
+various purposes different for each lopcode.  As documented in
+`http://www-cs-faculty.stanford.edu/~knuth/mmixal-intro.ps.gz', the
+lopcodes are:
+
+`lop_quote'
+     0x98000001.  The next word is contents, regardless of whether it
+     starts with 0x98 or not.
+
+`lop_loc'
+     0x9801YYZZ, where `Z' is 1 or 2.  This is a location directive,
+     setting the location for the next data to the next 32-bit word
+     (for Z = 1) or 64-bit word (for Z = 2), plus Y * 2^56.  Normally
+     `Y' is 0 for the text segment and 2 for the data segment.
+
+`lop_skip'
+     0x9802YYZZ.  Increase the current location by `YZ' bytes.
+
+`lop_fixo'
+     0x9803YYZZ, where `Z' is 1 or 2.  Store the current location as 64
+     bits into the location pointed to by the next 32-bit (Z = 1) or
+     64-bit (Z = 2) word, plus Y * 2^56.
+
+`lop_fixr'
+     0x9804YYZZ.  `YZ' is stored into the current location plus 2 - 4 *
+     YZ.
+
+`lop_fixrx'
+     0x980500ZZ.  `Z' is 16 or 24.  A value `L' derived from the
+     following 32-bit word are used in a manner similar to `YZ' in
+     lop_fixr: it is xor:ed into the current location minus 4 * L.  The
+     first byte of the word is 0 or 1.  If it is 1, then L = (LOWEST 24
+     BITS OF WORD) - 2^Z, if 0, then L = (LOWEST 24 BITS OF WORD).
+
+`lop_file'
+     0x9806YYZZ.  `Y' is the file number, `Z' is count of 32-bit words.
+     Set the file number to `Y' and the line counter to 0.  The next Z
+     * 4 bytes contain the file name, padded with zeros if the count is
+     not a multiple of four.  The same `Y' may occur multiple times,
+     but `Z' must be 0 for all but the first occurrence.
+
+`lop_line'
+     0x9807YYZZ.  `YZ' is the line number.  Together with lop_file, it
+     forms the source location for the next 32-bit word.  Note that for
+     each non-lopcode 32-bit word, line numbers are assumed incremented
+     by one.
+
+`lop_spec'
+     0x9808YYZZ.  `YZ' is the type number.  Data until the next lopcode
+     other than lop_quote forms special data of type `YZ'.  *Note mmo
+     section mapping::.
+
+     Other types than 80, (or type 80 with a content that does not
+     parse) is stored in sections named `.MMIX.spec_data.N' where N is
+     the `YZ'-type.  The flags for such a sections say not to allocate
+     or load the data.  The vma is 0.  Contents of multiple occurrences
+     of special data N is concatenated to the data of the previous
+     lop_spec Ns.  The location in data or code at which the lop_spec
+     occurred is lost.
+
+`lop_pre'
+     0x980901ZZ.  The first lopcode in a file.  The `Z' field forms the
+     length of header information in 32-bit words, where the first word
+     tells the time in seconds since `00:00:00 GMT Jan 1 1970'.
+
+`lop_post'
+     0x980a00ZZ.  Z > 32.  This lopcode follows after all
+     content-generating lopcodes in a program.  The `Z' field denotes
+     the value of `rG' at the beginning of the program.  The following
+     256 - Z big-endian 64-bit words are loaded into global registers
+     `$G' ... `$255'.
+
+`lop_stab'
+     0x980b0000.  The next-to-last lopcode in a program.  Must follow
+     immediately after the lop_post lopcode and its data.  After this
+     lopcode follows all symbols in a compressed format (*note
+     Symbol-table::).
+
+`lop_end'
+     0x980cYYZZ.  The last lopcode in a program.  It must follow the
+     lop_stab lopcode and its data.  The `YZ' field contains the number
+     of 32-bit words of symbol table information after the preceding
+     lop_stab lopcode.
+
+   Note that the lopcode "fixups"; `lop_fixr', `lop_fixrx' and
+`lop_fixo' are not generated by BFD, but are handled.  They are
+generated by `mmixal'.
+
+   This trivial one-label, one-instruction file:
+
+      :Main TRAP 1,2,3
+
+   can be represented this way in mmo:
+
+      0x98090101 - lop_pre, one 32-bit word with timestamp.
+      <timestamp>
+      0x98010002 - lop_loc, text segment, using a 64-bit address.
+                   Note that mmixal does not emit this for the file above.
+      0x00000000 - Address, high 32 bits.
+      0x00000000 - Address, low 32 bits.
+      0x98060002 - lop_file, 2 32-bit words for file-name.
+      0x74657374 - "test"
+      0x2e730000 - ".s\0\0"
+      0x98070001 - lop_line, line 1.
+      0x00010203 - TRAP 1,2,3
+      0x980a00ff - lop_post, setting $255 to 0.
+      0x00000000
+      0x00000000
+      0x980b0000 - lop_stab for ":Main" = 0, serial 1.
+      0x203a4040   *Note Symbol-table::.
+      0x10404020
+      0x4d206120
+      0x69016e00
+      0x81000000
+      0x980c0005 - lop_end; symbol table contained five 32-bit words.
+
+
+File: bfd.info,  Node: Symbol-table,  Next: mmo section mapping,  Prev: File layout,  Up: mmo
+
+3.4.2 Symbol table format
+-------------------------
+
+From mmixal.w (or really, the generated mmixal.tex) in
+`http://www-cs-faculty.stanford.edu/~knuth/programs/mmix.tar.gz'):
+"Symbols are stored and retrieved by means of a `ternary search trie',
+following ideas of Bentley and Sedgewick. (See ACM-SIAM Symp. on
+Discrete Algorithms `8' (1997), 360-369; R.Sedgewick, `Algorithms in C'
+(Reading, Mass.  Addison-Wesley, 1998), `15.4'.)  Each trie node stores
+a character, and there are branches to subtries for the cases where a
+given character is less than, equal to, or greater than the character
+in the trie.  There also is a pointer to a symbol table entry if a
+symbol ends at the current node."
+
+   So it's a tree encoded as a stream of bytes.  The stream of bytes
+acts on a single virtual global symbol, adding and removing characters
+and signalling complete symbol points.  Here, we read the stream and
+create symbols at the completion points.
+
+   First, there's a control byte `m'.  If any of the listed bits in `m'
+is nonzero, we execute what stands at the right, in the listed order:
+
+      (MMO3_LEFT)
+      0x40 - Traverse left trie.
+             (Read a new command byte and recurse.)
+
+      (MMO3_SYMBITS)
+      0x2f - Read the next byte as a character and store it in the
+             current character position; increment character position.
+             Test the bits of `m':
+
+             (MMO3_WCHAR)
+             0x80 - The character is 16-bit (so read another byte,
+                    merge into current character.
+
+             (MMO3_TYPEBITS)
+             0xf  - We have a complete symbol; parse the type, value
+                    and serial number and do what should be done
+                    with a symbol.  The type and length information
+                    is in j = (m & 0xf).
+
+                    (MMO3_REGQUAL_BITS)
+                    j == 0xf: A register variable.  The following
+                              byte tells which register.
+                    j <= 8:   An absolute symbol.  Read j bytes as the
+                              big-endian number the symbol equals.
+                              A j = 2 with two zero bytes denotes an
+                              unknown symbol.
+                    j > 8:    As with j <= 8, but add (0x20 << 56)
+                              to the value in the following j - 8
+                              bytes.
+
+                    Then comes the serial number, as a variant of
+                    uleb128, but better named ubeb128:
+                    Read bytes and shift the previous value left 7
+                    (multiply by 128).  Add in the new byte, repeat
+                    until a byte has bit 7 set.  The serial number
+                    is the computed value minus 128.
+
+             (MMO3_MIDDLE)
+             0x20 - Traverse middle trie.  (Read a new command byte
+                    and recurse.)  Decrement character position.
+
+      (MMO3_RIGHT)
+      0x10 - Traverse right trie.  (Read a new command byte and
+             recurse.)
+
+   Let's look again at the `lop_stab' for the trivial file (*note File
+layout::).
+
+      0x980b0000 - lop_stab for ":Main" = 0, serial 1.
+      0x203a4040
+      0x10404020
+      0x4d206120
+      0x69016e00
+      0x81000000
+
+   This forms the trivial trie (note that the path between ":" and "M"
+is redundant):
+
+      203a     ":"
+      40       /
+      40      /
+      10      \
+      40      /
+      40     /
+      204d  "M"
+      2061  "a"
+      2069  "i"
+      016e  "n" is the last character in a full symbol, and
+            with a value represented in one byte.
+      00    The value is 0.
+      81    The serial number is 1.
+
+
+File: bfd.info,  Node: mmo section mapping,  Prev: Symbol-table,  Up: mmo
+
+3.4.3 mmo section mapping
+-------------------------
+
+The implementation in BFD uses special data type 80 (decimal) to
+encapsulate and describe named sections, containing e.g. debug
+information.  If needed, any datum in the encapsulation will be quoted
+using lop_quote.  First comes a 32-bit word holding the number of
+32-bit words containing the zero-terminated zero-padded segment name.
+After the name there's a 32-bit word holding flags describing the
+section type.  Then comes a 64-bit big-endian word with the section
+length (in bytes), then another with the section start address.
+Depending on the type of section, the contents might follow,
+zero-padded to 32-bit boundary.  For a loadable section (such as data
+or code), the contents might follow at some later point, not
+necessarily immediately, as a lop_loc with the same start address as in
+the section description, followed by the contents.  This in effect
+forms a descriptor that must be emitted before the actual contents.
+Sections described this way must not overlap.
+
+   For areas that don't have such descriptors, synthetic sections are
+formed by BFD.  Consecutive contents in the two memory areas
+`0x0000...00' to `0x01ff...ff' and `0x2000...00' to `0x20ff...ff' are
+entered in sections named `.text' and `.data' respectively.  If an area
+is not otherwise described, but would together with a neighboring lower
+area be less than `0x40000000' bytes long, it is joined with the lower
+area and the gap is zero-filled.  For other cases, a new section is
+formed, named `.MMIX.sec.N'.  Here, N is a number, a running count
+through the mmo file, starting at 0.
+
+   A loadable section specified as:
+
+      .section secname,"ax"
+      TETRA 1,2,3,4,-1,-2009
+      BYTE 80
+
+   and linked to address `0x4', is represented by the sequence:
+
+      0x98080050 - lop_spec 80
+      0x00000002 - two 32-bit words for the section name
+      0x7365636e - "secn"
+      0x616d6500 - "ame\0"
+      0x00000033 - flags CODE, READONLY, LOAD, ALLOC
+      0x00000000 - high 32 bits of section length
+      0x0000001c - section length is 28 bytes; 6 * 4 + 1 + alignment to 32 bits
+      0x00000000 - high 32 bits of section address
+      0x00000004 - section address is 4
+      0x98010002 - 64 bits with address of following data
+      0x00000000 - high 32 bits of address
+      0x00000004 - low 32 bits: data starts at address 4
+      0x00000001 - 1
+      0x00000002 - 2
+      0x00000003 - 3
+      0x00000004 - 4
+      0xffffffff - -1
+      0xfffff827 - -2009
+      0x50000000 - 80 as a byte, padded with zeros.
+
+   Note that the lop_spec wrapping does not include the section
+contents.  Compare this to a non-loaded section specified as:
+
+      .section thirdsec
+      TETRA 200001,100002
+      BYTE 38,40
+
+   This, when linked to address `0x200000000000001c', is represented by:
+
+      0x98080050 - lop_spec 80
+      0x00000002 - two 32-bit words for the section name
+      0x7365636e - "thir"
+      0x616d6500 - "dsec"
+      0x00000010 - flag READONLY
+      0x00000000 - high 32 bits of section length
+      0x0000000c - section length is 12 bytes; 2 * 4 + 2 + alignment to 32 bits
+      0x20000000 - high 32 bits of address
+      0x0000001c - low 32 bits of address 0x200000000000001c
+      0x00030d41 - 200001
+      0x000186a2 - 100002
+      0x26280000 - 38, 40 as bytes, padded with zeros
+
+   For the latter example, the section contents must not be loaded in
+memory, and is therefore specified as part of the special data.  The
+address is usually unimportant but might provide information for e.g.
+the DWARF 2 debugging format.
+
+
+File: bfd.info,  Node: GNU Free Documentation License,  Next: Index,  Prev: BFD back ends,  Up: Top
+
+Appendix A GNU Free Documentation License
+*****************************************
+
+                        Version 1.1, March 2000
+
+     Copyright (C) 2000, 2003 Free Software Foundation, Inc.
+     59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+
+     Everyone is permitted to copy and distribute verbatim copies
+     of this license document, but changing it is not allowed.
+
+
+  0. PREAMBLE
+
+     The purpose of this License is to make a manual, textbook, or other
+     written document "free" in the sense of freedom: to assure everyone
+     the effective freedom to copy and redistribute it, with or without
+     modifying it, either commercially or noncommercially.  Secondarily,
+     this License preserves for the author and publisher a way to get
+     credit for their work, while not being considered responsible for
+     modifications made by others.
+
+     This License is a kind of "copyleft", which means that derivative
+     works of the document must themselves be free in the same sense.
+     It complements the GNU General Public License, which is a copyleft
+     license designed for free software.
+
+     We have designed this License in order to use it for manuals for
+     free software, because free software needs free documentation: a
+     free program should come with manuals providing the same freedoms
+     that the software does.  But this License is not limited to
+     software manuals; it can be used for any textual work, regardless
+     of subject matter or whether it is published as a printed book.
+     We recommend this License principally for works whose purpose is
+     instruction or reference.
+
+
+  1. APPLICABILITY AND DEFINITIONS
+
+     This License applies to any manual or other work that contains a
+     notice placed by the copyright holder saying it can be distributed
+     under the terms of this License.  The "Document", below, refers to
+     any such manual or work.  Any member of the public is a licensee,
+     and is addressed as "you."
+
+     A "Modified Version" of the Document means any work containing the
+     Document or a portion of it, either copied verbatim, or with
+     modifications and/or translated into another language.
+
+     A "Secondary Section" is a named appendix or a front-matter
+     section of the Document that deals exclusively with the
+     relationship of the publishers or authors of the Document to the
+     Document's overall subject (or to related matters) and contains
+     nothing that could fall directly within that overall subject.
+     (For example, if the Document is in part a textbook of
+     mathematics, a Secondary Section may not explain any mathematics.)
+     The relationship could be a matter of historical connection with
+     the subject or with related matters, or of legal, commercial,
+     philosophical, ethical or political position regarding them.
+
+     The "Invariant Sections" are certain Secondary Sections whose
+     titles are designated, as being those of Invariant Sections, in
+     the notice that says that the Document is released under this
+     License.
+
+     The "Cover Texts" are certain short passages of text that are
+     listed, as Front-Cover Texts or Back-Cover Texts, in the notice
+     that says that the Document is released under this License.
+
+     A "Transparent" copy of the Document means a machine-readable copy,
+     represented in a format whose specification is available to the
+     general public, whose contents can be viewed and edited directly
+     and straightforwardly with generic text editors or (for images
+     composed of pixels) generic paint programs or (for drawings) some
+     widely available drawing editor, and that is suitable for input to
+     text formatters or for automatic translation to a variety of
+     formats suitable for input to text formatters.  A copy made in an
+     otherwise Transparent file format whose markup has been designed
+     to thwart or discourage subsequent modification by readers is not
+     Transparent.  A copy that is not "Transparent" is called "Opaque."
+
+     Examples of suitable formats for Transparent copies include plain
+     ASCII without markup, Texinfo input format, LaTeX input format,
+     SGML or XML using a publicly available DTD, and
+     standard-conforming simple HTML designed for human modification.
+     Opaque formats include PostScript, PDF, proprietary formats that
+     can be read and edited only by proprietary word processors, SGML
+     or XML for which the DTD and/or processing tools are not generally
+     available, and the machine-generated HTML produced by some word
+     processors for output purposes only.
+
+     The "Title Page" means, for a printed book, the title page itself,
+     plus such following pages as are needed to hold, legibly, the
+     material this License requires to appear in the title page.  For
+     works in formats which do not have any title page as such, "Title
+     Page" means the text near the most prominent appearance of the
+     work's title, preceding the beginning of the body of the text.
+
+  2. VERBATIM COPYING
+
+     You may copy and distribute the Document in any medium, either
+     commercially or noncommercially, provided that this License, the
+     copyright notices, and the license notice saying this License
+     applies to the Document are reproduced in all copies, and that you
+     add no other conditions whatsoever to those of this License.  You
+     may not use technical measures to obstruct or control the reading
+     or further copying of the copies you make or distribute.  However,
+     you may accept compensation in exchange for copies.  If you
+     distribute a large enough number of copies you must also follow
+     the conditions in section 3.
+
+     You may also lend copies, under the same conditions stated above,
+     and you may publicly display copies.
+
+  3. COPYING IN QUANTITY
+
+     If you publish printed copies of the Document numbering more than
+     100, and the Document's license notice requires Cover Texts, you
+     must enclose the copies in covers that carry, clearly and legibly,
+     all these Cover Texts: Front-Cover Texts on the front cover, and
+     Back-Cover Texts on the back cover.  Both covers must also clearly
+     and legibly identify you as the publisher of these copies.  The
+     front cover must present the full title with all words of the
+     title equally prominent and visible.  You may add other material
+     on the covers in addition.  Copying with changes limited to the
+     covers, as long as they preserve the title of the Document and
+     satisfy these conditions, can be treated as verbatim copying in
+     other respects.
+
+     If the required texts for either cover are too voluminous to fit
+     legibly, you should put the first ones listed (as many as fit
+     reasonably) on the actual cover, and continue the rest onto
+     adjacent pages.
+
+     If you publish or distribute Opaque copies of the Document
+     numbering more than 100, you must either include a
+     machine-readable Transparent copy along with each Opaque copy, or
+     state in or with each Opaque copy a publicly-accessible
+     computer-network location containing a complete Transparent copy
+     of the Document, free of added material, which the general
+     network-using public has access to download anonymously at no
+     charge using public-standard network protocols.  If you use the
+     latter option, you must take reasonably prudent steps, when you
+     begin distribution of Opaque copies in quantity, to ensure that
+     this Transparent copy will remain thus accessible at the stated
+     location until at least one year after the last time you
+     distribute an Opaque copy (directly or through your agents or
+     retailers) of that edition to the public.
+
+     It is requested, but not required, that you contact the authors of
+     the Document well before redistributing any large number of
+     copies, to give them a chance to provide you with an updated
+     version of the Document.
+
+  4. MODIFICATIONS
+
+     You may copy and distribute a Modified Version of the Document
+     under the conditions of sections 2 and 3 above, provided that you
+     release the Modified Version under precisely this License, with
+     the Modified Version filling the role of the Document, thus
+     licensing distribution and modification of the Modified Version to
+     whoever possesses a copy of it.  In addition, you must do these
+     things in the Modified Version:
+
+     A. Use in the Title Page (and on the covers, if any) a title
+     distinct    from that of the Document, and from those of previous
+     versions    (which should, if there were any, be listed in the
+     History section    of the Document).  You may use the same title
+     as a previous version    if the original publisher of that version
+     gives permission.
+     B. List on the Title Page, as authors, one or more persons or
+     entities    responsible for authorship of the modifications in the
+     Modified    Version, together with at least five of the principal
+     authors of the    Document (all of its principal authors, if it
+     has less than five).
+     C. State on the Title page the name of the publisher of the
+     Modified Version, as the publisher.
+     D. Preserve all the copyright notices of the Document.
+     E. Add an appropriate copyright notice for your modifications
+     adjacent to the other copyright notices.
+     F. Include, immediately after the copyright notices, a license
+     notice    giving the public permission to use the Modified Version
+     under the    terms of this License, in the form shown in the
+     Addendum below.
+     G. Preserve in that license notice the full lists of Invariant
+     Sections    and required Cover Texts given in the Document's
+     license notice.
+     H. Include an unaltered copy of this License.
+     I. Preserve the section entitled "History", and its title, and add
+     to    it an item stating at least the title, year, new authors, and
+       publisher of the Modified Version as given on the Title Page.
+     If    there is no section entitled "History" in the Document,
+     create one    stating the title, year, authors, and publisher of
+     the Document as    given on its Title Page, then add an item
+     describing the Modified    Version as stated in the previous
+     sentence.
+     J. Preserve the network location, if any, given in the Document for
+       public access to a Transparent copy of the Document, and
+     likewise    the network locations given in the Document for
+     previous versions    it was based on.  These may be placed in the
+     "History" section.     You may omit a network location for a work
+     that was published at    least four years before the Document
+     itself, or if the original    publisher of the version it refers
+     to gives permission.
+     K. In any section entitled "Acknowledgements" or "Dedications",
+     preserve the section's title, and preserve in the section all the
+      substance and tone of each of the contributor acknowledgements
+     and/or dedications given therein.
+     L. Preserve all the Invariant Sections of the Document,
+     unaltered in their text and in their titles.  Section numbers
+     or the equivalent are not considered part of the section titles.
+     M. Delete any section entitled "Endorsements."  Such a section
+     may not be included in the Modified Version.
+     N. Do not retitle any existing section as "Endorsements"    or to
+     conflict in title with any Invariant Section.
+
+     If the Modified Version includes new front-matter sections or
+     appendices that qualify as Secondary Sections and contain no
+     material copied from the Document, you may at your option
+     designate some or all of these sections as invariant.  To do this,
+     add their titles to the list of Invariant Sections in the Modified
+     Version's license notice.  These titles must be distinct from any
+     other section titles.
+
+     You may add a section entitled "Endorsements", provided it contains
+     nothing but endorsements of your Modified Version by various
+     parties-for example, statements of peer review or that the text has
+     been approved by an organization as the authoritative definition
+     of a standard.
+
+     You may add a passage of up to five words as a Front-Cover Text,
+     and a passage of up to 25 words as a Back-Cover Text, to the end
+     of the list of Cover Texts in the Modified Version.  Only one
+     passage of Front-Cover Text and one of Back-Cover Text may be
+     added by (or through arrangements made by) any one entity.  If the
+     Document already includes a cover text for the same cover,
+     previously added by you or by arrangement made by the same entity
+     you are acting on behalf of, you may not add another; but you may
+     replace the old one, on explicit permission from the previous
+     publisher that added the old one.
+
+     The author(s) and publisher(s) of the Document do not by this
+     License give permission to use their names for publicity for or to
+     assert or imply endorsement of any Modified Version.
+
+  5. COMBINING DOCUMENTS
+
+     You may combine the Document with other documents released under
+     this License, under the terms defined in section 4 above for
+     modified versions, provided that you include in the combination
+     all of the Invariant Sections of all of the original documents,
+     unmodified, and list them all as Invariant Sections of your
+     combined work in its license notice.
+
+     The combined work need only contain one copy of this License, and
+     multiple identical Invariant Sections may be replaced with a single
+     copy.  If there are multiple Invariant Sections with the same name
+     but different contents, make the title of each such section unique
+     by adding at the end of it, in parentheses, the name of the
+     original author or publisher of that section if known, or else a
+     unique number.  Make the same adjustment to the section titles in
+     the list of Invariant Sections in the license notice of the
+     combined work.
+
+     In the combination, you must combine any sections entitled
+     "History" in the various original documents, forming one section
+     entitled "History"; likewise combine any sections entitled
+     "Acknowledgements", and any sections entitled "Dedications."  You
+     must delete all sections entitled "Endorsements."
+
+  6. COLLECTIONS OF DOCUMENTS
+
+     You may make a collection consisting of the Document and other
+     documents released under this License, and replace the individual
+     copies of this License in the various documents with a single copy
+     that is included in the collection, provided that you follow the
+     rules of this License for verbatim copying of each of the
+     documents in all other respects.
+
+     You may extract a single document from such a collection, and
+     distribute it individually under this License, provided you insert
+     a copy of this License into the extracted document, and follow
+     this License in all other respects regarding verbatim copying of
+     that document.
+
+  7. AGGREGATION WITH INDEPENDENT WORKS
+
+     A compilation of the Document or its derivatives with other
+     separate and independent documents or works, in or on a volume of
+     a storage or distribution medium, does not as a whole count as a
+     Modified Version of the Document, provided no compilation
+     copyright is claimed for the compilation.  Such a compilation is
+     called an "aggregate", and this License does not apply to the
+     other self-contained works thus compiled with the Document, on
+     account of their being thus compiled, if they are not themselves
+     derivative works of the Document.
+
+     If the Cover Text requirement of section 3 is applicable to these
+     copies of the Document, then if the Document is less than one
+     quarter of the entire aggregate, the Document's Cover Texts may be
+     placed on covers that surround only the Document within the
+     aggregate.  Otherwise they must appear on covers around the whole
+     aggregate.
+
+  8. TRANSLATION
+
+     Translation is considered a kind of modification, so you may
+     distribute translations of the Document under the terms of section
+     4.  Replacing Invariant Sections with translations requires special
+     permission from their copyright holders, but you may include
+     translations of some or all Invariant Sections in addition to the
+     original versions of these Invariant Sections.  You may include a
+     translation of this License provided that you also include the
+     original English version of this License.  In case of a
+     disagreement between the translation and the original English
+     version of this License, the original English version will prevail.
+
+  9. TERMINATION
+
+     You may not copy, modify, sublicense, or distribute the Document
+     except as expressly provided for under this License.  Any other
+     attempt to copy, modify, sublicense or distribute the Document is
+     void, and will automatically terminate your rights under this
+     License.  However, parties who have received copies, or rights,
+     from you under this License will not have their licenses
+     terminated so long as such parties remain in full compliance.
+
+ 10. FUTURE REVISIONS OF THIS LICENSE
+
+     The Free Software Foundation may publish new, revised versions of
+     the GNU Free Documentation License from time to time.  Such new
+     versions will be similar in spirit to the present version, but may
+     differ in detail to address new problems or concerns.  See
+     http://www.gnu.org/copyleft/.
+
+     Each version of the License is given a distinguishing version
+     number.  If the Document specifies that a particular numbered
+     version of this License "or any later version" applies to it, you
+     have the option of following the terms and conditions either of
+     that specified version or of any later version that has been
+     published (not as a draft) by the Free Software Foundation.  If
+     the Document does not specify a version number of this License,
+     you may choose any version ever published (not as a draft) by the
+     Free Software Foundation.
+
+
+ADDENDUM: How to use this License for your documents
+====================================================
+
+To use this License in a document you have written, include a copy of
+the License in the document and put the following copyright and license
+notices just after the title page:
+
+     Copyright (C)  YEAR  YOUR NAME.
+     Permission is granted to copy, distribute and/or modify this document
+     under the terms of the GNU Free Documentation License, Version 1.1
+     or any later version published by the Free Software Foundation;
+     with the Invariant Sections being LIST THEIR TITLES, with the
+     Front-Cover Texts being LIST, and with the Back-Cover Texts being LIST.
+     A copy of the license is included in the section entitled "GNU
+     Free Documentation License."
+
+   If you have no Invariant Sections, write "with no Invariant Sections"
+instead of saying which ones are invariant.  If you have no Front-Cover
+Texts, write "no Front-Cover Texts" instead of "Front-Cover Texts being
+LIST"; likewise for Back-Cover Texts.
+
+   If your document contains nontrivial examples of program code, we
+recommend releasing these examples in parallel under your choice of
+free software license, such as the GNU General Public License, to
+permit their use in free software.
+
+
+File: bfd.info,  Node: Index,  Prev: GNU Free Documentation License,  Up: Top
+
+Index
+*****
+
+ [index ]
+* Menu:
+
+* _bfd_final_link_relocate:              Relocating the section contents.
+                                                             (line   22)
+* _bfd_generic_link_add_archive_symbols: Adding symbols from an archive.
+                                                             (line   12)
+* _bfd_generic_link_add_one_symbol:      Adding symbols from an object file.
+                                                             (line   19)
+* _bfd_generic_make_empty_symbol:        symbol handling functions.
+                                                             (line   92)
+* _bfd_link_add_symbols in target vector: Adding Symbols to the Hash Table.
+                                                             (line    6)
+* _bfd_link_final_link in target vector: Performing the Final Link.
+                                                             (line    6)
+* _bfd_link_hash_table_create in target vector: Creating a Linker Hash Table.
+                                                             (line    6)
+* _bfd_relocate_contents:                Relocating the section contents.
+                                                             (line   22)
+* _bfd_strip_section_from_output:        section prototypes. (line  242)
+* aout_SIZE_machine_type:                aout.               (line  146)
+* aout_SIZE_mkobject:                    aout.               (line  138)
+* aout_SIZE_new_section_hook:            aout.               (line  175)
+* aout_SIZE_set_arch_mach:               aout.               (line  162)
+* aout_SIZE_some_aout_object_p:          aout.               (line  125)
+* aout_SIZE_swap_exec_header_in:         aout.               (line  101)
+* aout_SIZE_swap_exec_header_out:        aout.               (line  113)
+* arelent_chain:                         typedef arelent.    (line  338)
+* BFD:                                   Overview.           (line    6)
+* BFD canonical format:                  Canonical format.   (line   11)
+* bfd_alloc:                             Opening and Closing.
+                                                             (line  179)
+* bfd_alt_mach_code:                     BFD front end.      (line  588)
+* bfd_arch_bits_per_address:             Architectures.      (line  453)
+* bfd_arch_bits_per_byte:                Architectures.      (line  445)
+* bfd_arch_get_compatible:               Architectures.      (line  388)
+* bfd_arch_list:                         Architectures.      (line  379)
+* bfd_arch_mach_octets_per_byte:         Architectures.      (line  522)
+* bfd_cache_close:                       File Caching.       (line   53)
+* bfd_cache_close_all:                   File Caching.       (line   66)
+* bfd_cache_init:                        File Caching.       (line   45)
+* bfd_cache_lookup:                      File Caching.       (line   32)
+* bfd_cache_lookup_worker:               File Caching.       (line   91)
+* BFD_CACHE_MAX_OPEN macro:              File Caching.       (line   15)
+* bfd_calc_gnu_debuglink_crc32:          Opening and Closing.
+                                                             (line  197)
+* bfd_canonicalize_reloc:                BFD front end.      (line  315)
+* bfd_canonicalize_symtab:               symbol handling functions.
+                                                             (line   50)
+* bfd_check_format:                      Formats.            (line   18)
+* bfd_check_format_matches:              Formats.            (line   49)
+* bfd_check_overflow:                    typedef arelent.    (line  350)
+* bfd_close:                             Opening and Closing.
+                                                             (line  104)
+* bfd_close_all_done:                    Opening and Closing.
+                                                             (line  122)
+* bfd_coff_backend_data:                 coff.               (line  246)
+* bfd_copy_private_bfd_data:             BFD front end.      (line  454)
+* bfd_copy_private_header_data:          BFD front end.      (line  436)
+* bfd_copy_private_section_data:         section prototypes. (line  224)
+* bfd_copy_private_symbol_data:          symbol handling functions.
+                                                             (line  140)
+* bfd_core_file_failing_command:         Core Files.         (line    9)
+* bfd_core_file_failing_signal:          Core Files.         (line   18)
+* bfd_create:                            Opening and Closing.
+                                                             (line  141)
+* bfd_create_gnu_debuglink_section:      Opening and Closing.
+                                                             (line  263)
+* bfd_decode_symclass:                   symbol handling functions.
+                                                             (line  111)
+* bfd_default_arch_struct:               Architectures.      (line  400)
+* bfd_default_compatible:                Architectures.      (line  462)
+* bfd_default_reloc_type_lookup:         howto manager.      (line 1704)
+* bfd_default_scan:                      Architectures.      (line  471)
+* bfd_default_set_arch_mach:             Architectures.      (line  418)
+* bfd_elf_find_section:                  elf.                (line   15)
+* bfd_errmsg:                            BFD front end.      (line  243)
+* bfd_fdopenr:                           Opening and Closing.
+                                                             (line   22)
+* bfd_fill_in_gnu_debuglink_section:     Opening and Closing.
+                                                             (line  277)
+* bfd_find_target:                       bfd_target.         (line  420)
+* bfd_follow_gnu_debuglink:              Opening and Closing.
+                                                             (line  242)
+* bfd_format_string:                     Formats.            (line   76)
+* bfd_generic_discard_group:             section prototypes. (line  264)
+* bfd_generic_gc_sections:               howto manager.      (line 1735)
+* bfd_generic_get_relocated_section_contents: howto manager. (line 1755)
+* bfd_generic_is_group_section:          section prototypes. (line  256)
+* bfd_generic_merge_sections:            howto manager.      (line 1745)
+* bfd_generic_relax_section:             howto manager.      (line 1722)
+* bfd_get_arch:                          Architectures.      (line  429)
+* bfd_get_arch_info:                     Architectures.      (line  481)
+* bfd_get_arch_size:                     BFD front end.      (line  359)
+* bfd_get_error:                         BFD front end.      (line  226)
+* bfd_get_error_handler:                 BFD front end.      (line  294)
+* bfd_get_gp_size:                       BFD front end.      (line  400)
+* bfd_get_mach:                          Architectures.      (line  437)
+* bfd_get_mtime:                         BFD front end.      (line  676)
+* bfd_get_next_mapent:                   Archives.           (line   49)
+* bfd_get_reloc_code_name:               howto manager.      (line 1713)
+* bfd_get_reloc_size:                    typedef arelent.    (line  329)
+* bfd_get_reloc_upper_bound:             BFD front end.      (line  305)
+* bfd_get_section_by_name:               section prototypes. (line   17)
+* bfd_get_section_by_name_if:            section prototypes. (line   31)
+* bfd_get_section_contents:              section prototypes. (line  197)
+* bfd_get_sign_extend_vma:               BFD front end.      (line  372)
+* bfd_get_size <1>:                      Internal.           (line   22)
+* bfd_get_size:                          BFD front end.      (line  685)
+* bfd_get_symtab_upper_bound:            symbol handling functions.
+                                                             (line    6)
+* bfd_get_unique_section_name:           section prototypes. (line   50)
+* bfd_h_put_size:                        Internal.           (line   94)
+* bfd_hash_allocate:                     Creating and Freeing a Hash Table.
+                                                             (line   17)
+* bfd_hash_lookup:                       Looking Up or Entering a String.
+                                                             (line    6)
+* bfd_hash_newfunc:                      Creating and Freeing a Hash Table.
+                                                             (line   12)
+* bfd_hash_set_default_size:             Creating and Freeing a Hash Table.
+                                                             (line   25)
+* bfd_hash_table_free:                   Creating and Freeing a Hash Table.
+                                                             (line   21)
+* bfd_hash_table_init:                   Creating and Freeing a Hash Table.
+                                                             (line    6)
+* bfd_hash_table_init_n:                 Creating and Freeing a Hash Table.
+                                                             (line    6)
+* bfd_hash_traverse:                     Traversing a Hash Table.
+                                                             (line    6)
+* bfd_init:                              Initialization.     (line    8)
+* bfd_install_relocation:                typedef arelent.    (line  391)
+* bfd_is_local_label:                    symbol handling functions.
+                                                             (line   17)
+* bfd_is_local_label_name:               symbol handling functions.
+                                                             (line   26)
+* bfd_is_target_special_symbol:          symbol handling functions.
+                                                             (line   38)
+* bfd_is_undefined_symclass:             symbol handling functions.
+                                                             (line  120)
+* bfd_last_cache:                        File Caching.       (line   22)
+* bfd_link_split_section:                Writing the symbol table.
+                                                             (line   44)
+* bfd_log2:                              Internal.           (line  161)
+* bfd_lookup_arch:                       Architectures.      (line  489)
+* bfd_make_debug_symbol:                 symbol handling functions.
+                                                             (line  102)
+* bfd_make_empty_symbol:                 symbol handling functions.
+                                                             (line   78)
+* bfd_make_readable:                     Opening and Closing.
+                                                             (line  165)
+* bfd_make_section:                      section prototypes. (line   98)
+* bfd_make_section_anyway:               section prototypes. (line   82)
+* bfd_make_section_old_way:              section prototypes. (line   62)
+* bfd_make_writable:                     Opening and Closing.
+                                                             (line  151)
+* bfd_malloc_and_get_section:            section prototypes. (line  214)
+* bfd_map_over_sections:                 section prototypes. (line  124)
+* bfd_merge_private_bfd_data:            BFD front end.      (line  470)
+* bfd_octets_per_byte:                   Architectures.      (line  512)
+* bfd_open_file:                         File Caching.       (line   79)
+* bfd_openr:                             Opening and Closing.
+                                                             (line    6)
+* bfd_openr_iovec:                       Opening and Closing.
+                                                             (line   52)
+* bfd_openr_next_archived_file:          Archives.           (line   75)
+* bfd_openstreamr:                       Opening and Closing.
+                                                             (line   43)
+* bfd_openw:                             Opening and Closing.
+                                                             (line   92)
+* bfd_perform_relocation:                typedef arelent.    (line  366)
+* bfd_perror:                            BFD front end.      (line  252)
+* bfd_preserve_finish:                   BFD front end.      (line  636)
+* bfd_preserve_restore:                  BFD front end.      (line  626)
+* bfd_preserve_save:                     BFD front end.      (line  610)
+* bfd_print_symbol_vandf:                symbol handling functions.
+                                                             (line   70)
+* bfd_printable_arch_mach:               Architectures.      (line  500)
+* bfd_printable_name:                    Architectures.      (line  360)
+* bfd_put_size:                          Internal.           (line   19)
+* BFD_RELOC_12_PCREL:                    howto manager.      (line   39)
+* BFD_RELOC_14:                          howto manager.      (line   31)
+* BFD_RELOC_16:                          howto manager.      (line   30)
+* BFD_RELOC_16_BASEREL:                  howto manager.      (line   80)
+* BFD_RELOC_16_GOT_PCREL:                howto manager.      (line   52)
+* BFD_RELOC_16_GOTOFF:                   howto manager.      (line   55)
+* BFD_RELOC_16_PCREL:                    howto manager.      (line   38)
+* BFD_RELOC_16_PCREL_S2:                 howto manager.      (line   92)
+* BFD_RELOC_16_PLT_PCREL:                howto manager.      (line   63)
+* BFD_RELOC_16_PLTOFF:                   howto manager.      (line   67)
+* BFD_RELOC_16C_ABS20:                   howto manager.      (line 1464)
+* BFD_RELOC_16C_ABS20_C:                 howto manager.      (line 1465)
+* BFD_RELOC_16C_ABS24:                   howto manager.      (line 1466)
+* BFD_RELOC_16C_ABS24_C:                 howto manager.      (line 1467)
+* BFD_RELOC_16C_DISP04:                  howto manager.      (line 1444)
+* BFD_RELOC_16C_DISP04_C:                howto manager.      (line 1445)
+* BFD_RELOC_16C_DISP08:                  howto manager.      (line 1446)
+* BFD_RELOC_16C_DISP08_C:                howto manager.      (line 1447)
+* BFD_RELOC_16C_DISP16:                  howto manager.      (line 1448)
+* BFD_RELOC_16C_DISP16_C:                howto manager.      (line 1449)
+* BFD_RELOC_16C_DISP24:                  howto manager.      (line 1450)
+* BFD_RELOC_16C_DISP24_C:                howto manager.      (line 1451)
+* BFD_RELOC_16C_DISP24a:                 howto manager.      (line 1452)
+* BFD_RELOC_16C_DISP24a_C:               howto manager.      (line 1453)
+* BFD_RELOC_16C_IMM04:                   howto manager.      (line 1468)
+* BFD_RELOC_16C_IMM04_C:                 howto manager.      (line 1469)
+* BFD_RELOC_16C_IMM16:                   howto manager.      (line 1470)
+* BFD_RELOC_16C_IMM16_C:                 howto manager.      (line 1471)
+* BFD_RELOC_16C_IMM20:                   howto manager.      (line 1472)
+* BFD_RELOC_16C_IMM20_C:                 howto manager.      (line 1473)
+* BFD_RELOC_16C_IMM24:                   howto manager.      (line 1474)
+* BFD_RELOC_16C_IMM24_C:                 howto manager.      (line 1475)
+* BFD_RELOC_16C_IMM32:                   howto manager.      (line 1476)
+* BFD_RELOC_16C_IMM32_C:                 howto manager.      (line 1477)
+* BFD_RELOC_16C_NUM08:                   howto manager.      (line 1438)
+* BFD_RELOC_16C_NUM08_C:                 howto manager.      (line 1439)
+* BFD_RELOC_16C_NUM16:                   howto manager.      (line 1440)
+* BFD_RELOC_16C_NUM16_C:                 howto manager.      (line 1441)
+* BFD_RELOC_16C_NUM32:                   howto manager.      (line 1442)
+* BFD_RELOC_16C_NUM32_C:                 howto manager.      (line 1443)
+* BFD_RELOC_16C_REG04:                   howto manager.      (line 1454)
+* BFD_RELOC_16C_REG04_C:                 howto manager.      (line 1455)
+* BFD_RELOC_16C_REG04a:                  howto manager.      (line 1456)
+* BFD_RELOC_16C_REG04a_C:                howto manager.      (line 1457)
+* BFD_RELOC_16C_REG14:                   howto manager.      (line 1458)
+* BFD_RELOC_16C_REG14_C:                 howto manager.      (line 1459)
+* BFD_RELOC_16C_REG16:                   howto manager.      (line 1460)
+* BFD_RELOC_16C_REG16_C:                 howto manager.      (line 1461)
+* BFD_RELOC_16C_REG20:                   howto manager.      (line 1462)
+* BFD_RELOC_16C_REG20_C:                 howto manager.      (line 1463)
+* BFD_RELOC_23_PCREL_S2:                 howto manager.      (line   93)
+* BFD_RELOC_24:                          howto manager.      (line   29)
+* BFD_RELOC_24_PCREL:                    howto manager.      (line   37)
+* BFD_RELOC_24_PLT_PCREL:                howto manager.      (line   62)
+* BFD_RELOC_26:                          howto manager.      (line   28)
+* BFD_RELOC_32:                          howto manager.      (line   27)
+* BFD_RELOC_32_BASEREL:                  howto manager.      (line   79)
+* BFD_RELOC_32_GOT_PCREL:                howto manager.      (line   51)
+* BFD_RELOC_32_GOTOFF:                   howto manager.      (line   54)
+* BFD_RELOC_32_PCREL:                    howto manager.      (line   36)
+* BFD_RELOC_32_PCREL_S2:                 howto manager.      (line   91)
+* BFD_RELOC_32_PLT_PCREL:                howto manager.      (line   61)
+* BFD_RELOC_32_PLTOFF:                   howto manager.      (line   66)
+* BFD_RELOC_32_SECREL:                   howto manager.      (line   48)
+* BFD_RELOC_386_COPY:                    howto manager.      (line  422)
+* BFD_RELOC_386_GLOB_DAT:                howto manager.      (line  423)
+* BFD_RELOC_386_GOT32:                   howto manager.      (line  420)
+* BFD_RELOC_386_GOTOFF:                  howto manager.      (line  426)
+* BFD_RELOC_386_GOTPC:                   howto manager.      (line  427)
+* BFD_RELOC_386_JUMP_SLOT:               howto manager.      (line  424)
+* BFD_RELOC_386_PLT32:                   howto manager.      (line  421)
+* BFD_RELOC_386_RELATIVE:                howto manager.      (line  425)
+* BFD_RELOC_386_TLS_DTPMOD32:            howto manager.      (line  437)
+* BFD_RELOC_386_TLS_DTPOFF32:            howto manager.      (line  438)
+* BFD_RELOC_386_TLS_GD:                  howto manager.      (line  432)
+* BFD_RELOC_386_TLS_GOTIE:               howto manager.      (line  430)
+* BFD_RELOC_386_TLS_IE:                  howto manager.      (line  429)
+* BFD_RELOC_386_TLS_IE_32:               howto manager.      (line  435)
+* BFD_RELOC_386_TLS_LDM:                 howto manager.      (line  433)
+* BFD_RELOC_386_TLS_LDO_32:              howto manager.      (line  434)
+* BFD_RELOC_386_TLS_LE:                  howto manager.      (line  431)
+* BFD_RELOC_386_TLS_LE_32:               howto manager.      (line  436)
+* BFD_RELOC_386_TLS_TPOFF:               howto manager.      (line  428)
+* BFD_RELOC_386_TLS_TPOFF32:             howto manager.      (line  439)
+* BFD_RELOC_390_12:                      howto manager.      (line 1155)
+* BFD_RELOC_390_20:                      howto manager.      (line 1255)
+* BFD_RELOC_390_COPY:                    howto manager.      (line 1164)
+* BFD_RELOC_390_GLOB_DAT:                howto manager.      (line 1167)
+* BFD_RELOC_390_GOT12:                   howto manager.      (line 1158)
+* BFD_RELOC_390_GOT16:                   howto manager.      (line 1179)
+* BFD_RELOC_390_GOT20:                   howto manager.      (line 1256)
+* BFD_RELOC_390_GOT64:                   howto manager.      (line 1197)
+* BFD_RELOC_390_GOTENT:                  howto manager.      (line 1203)
+* BFD_RELOC_390_GOTOFF64:                howto manager.      (line 1206)
+* BFD_RELOC_390_GOTPC:                   howto manager.      (line 1176)
+* BFD_RELOC_390_GOTPCDBL:                howto manager.      (line 1194)
+* BFD_RELOC_390_GOTPLT12:                howto manager.      (line 1209)
+* BFD_RELOC_390_GOTPLT16:                howto manager.      (line 1212)
+* BFD_RELOC_390_GOTPLT20:                howto manager.      (line 1257)
+* BFD_RELOC_390_GOTPLT32:                howto manager.      (line 1215)
+* BFD_RELOC_390_GOTPLT64:                howto manager.      (line 1218)
+* BFD_RELOC_390_GOTPLTENT:               howto manager.      (line 1221)
+* BFD_RELOC_390_JMP_SLOT:                howto manager.      (line 1170)
+* BFD_RELOC_390_PC16DBL:                 howto manager.      (line 1182)
+* BFD_RELOC_390_PC32DBL:                 howto manager.      (line 1188)
+* BFD_RELOC_390_PLT16DBL:                howto manager.      (line 1185)
+* BFD_RELOC_390_PLT32:                   howto manager.      (line 1161)
+* BFD_RELOC_390_PLT32DBL:                howto manager.      (line 1191)
+* BFD_RELOC_390_PLT64:                   howto manager.      (line 1200)
+* BFD_RELOC_390_PLTOFF16:                howto manager.      (line 1224)
+* BFD_RELOC_390_PLTOFF32:                howto manager.      (line 1227)
+* BFD_RELOC_390_PLTOFF64:                howto manager.      (line 1230)
+* BFD_RELOC_390_RELATIVE:                howto manager.      (line 1173)
+* BFD_RELOC_390_TLS_DTPMOD:              howto manager.      (line 1250)
+* BFD_RELOC_390_TLS_DTPOFF:              howto manager.      (line 1251)
+* BFD_RELOC_390_TLS_GD32:                howto manager.      (line 1236)
+* BFD_RELOC_390_TLS_GD64:                howto manager.      (line 1237)
+* BFD_RELOC_390_TLS_GDCALL:              howto manager.      (line 1234)
+* BFD_RELOC_390_TLS_GOTIE12:             howto manager.      (line 1238)
+* BFD_RELOC_390_TLS_GOTIE20:             howto manager.      (line 1258)
+* BFD_RELOC_390_TLS_GOTIE32:             howto manager.      (line 1239)
+* BFD_RELOC_390_TLS_GOTIE64:             howto manager.      (line 1240)
+* BFD_RELOC_390_TLS_IE32:                howto manager.      (line 1243)
+* BFD_RELOC_390_TLS_IE64:                howto manager.      (line 1244)
+* BFD_RELOC_390_TLS_IEENT:               howto manager.      (line 1245)
+* BFD_RELOC_390_TLS_LDCALL:              howto manager.      (line 1235)
+* BFD_RELOC_390_TLS_LDM32:               howto manager.      (line 1241)
+* BFD_RELOC_390_TLS_LDM64:               howto manager.      (line 1242)
+* BFD_RELOC_390_TLS_LDO32:               howto manager.      (line 1248)
+* BFD_RELOC_390_TLS_LDO64:               howto manager.      (line 1249)
+* BFD_RELOC_390_TLS_LE32:                howto manager.      (line 1246)
+* BFD_RELOC_390_TLS_LE64:                howto manager.      (line 1247)
+* BFD_RELOC_390_TLS_LOAD:                howto manager.      (line 1233)
+* BFD_RELOC_390_TLS_TPOFF:               howto manager.      (line 1252)
+* BFD_RELOC_64:                          howto manager.      (line   26)
+* BFD_RELOC_64_PCREL:                    howto manager.      (line   35)
+* BFD_RELOC_64_PLT_PCREL:                howto manager.      (line   60)
+* BFD_RELOC_64_PLTOFF:                   howto manager.      (line   65)
+* BFD_RELOC_68K_GLOB_DAT:                howto manager.      (line   74)
+* BFD_RELOC_68K_JMP_SLOT:                howto manager.      (line   75)
+* BFD_RELOC_68K_RELATIVE:                howto manager.      (line   76)
+* BFD_RELOC_8:                           howto manager.      (line   32)
+* BFD_RELOC_860_COPY:                    howto manager.      (line 1543)
+* BFD_RELOC_860_GLOB_DAT:                howto manager.      (line 1544)
+* BFD_RELOC_860_HAGOT:                   howto manager.      (line 1569)
+* BFD_RELOC_860_HAGOTOFF:                howto manager.      (line 1570)
+* BFD_RELOC_860_HAPC:                    howto manager.      (line 1571)
+* BFD_RELOC_860_HIGH:                    howto manager.      (line 1572)
+* BFD_RELOC_860_HIGHADJ:                 howto manager.      (line 1568)
+* BFD_RELOC_860_HIGOT:                   howto manager.      (line 1573)
+* BFD_RELOC_860_HIGOTOFF:                howto manager.      (line 1574)
+* BFD_RELOC_860_JUMP_SLOT:               howto manager.      (line 1545)
+* BFD_RELOC_860_LOGOT0:                  howto manager.      (line 1557)
+* BFD_RELOC_860_LOGOT1:                  howto manager.      (line 1559)
+* BFD_RELOC_860_LOGOTOFF0:               howto manager.      (line 1561)
+* BFD_RELOC_860_LOGOTOFF1:               howto manager.      (line 1563)
+* BFD_RELOC_860_LOGOTOFF2:               howto manager.      (line 1565)
+* BFD_RELOC_860_LOGOTOFF3:               howto manager.      (line 1566)
+* BFD_RELOC_860_LOPC:                    howto manager.      (line 1567)
+* BFD_RELOC_860_LOW0:                    howto manager.      (line 1550)
+* BFD_RELOC_860_LOW1:                    howto manager.      (line 1552)
+* BFD_RELOC_860_LOW2:                    howto manager.      (line 1554)
+* BFD_RELOC_860_LOW3:                    howto manager.      (line 1556)
+* BFD_RELOC_860_PC16:                    howto manager.      (line 1549)
+* BFD_RELOC_860_PC26:                    howto manager.      (line 1547)
+* BFD_RELOC_860_PLT26:                   howto manager.      (line 1548)
+* BFD_RELOC_860_RELATIVE:                howto manager.      (line 1546)
+* BFD_RELOC_860_SPGOT0:                  howto manager.      (line 1558)
+* BFD_RELOC_860_SPGOT1:                  howto manager.      (line 1560)
+* BFD_RELOC_860_SPGOTOFF0:               howto manager.      (line 1562)
+* BFD_RELOC_860_SPGOTOFF1:               howto manager.      (line 1564)
+* BFD_RELOC_860_SPLIT0:                  howto manager.      (line 1551)
+* BFD_RELOC_860_SPLIT1:                  howto manager.      (line 1553)
+* BFD_RELOC_860_SPLIT2:                  howto manager.      (line 1555)
+* BFD_RELOC_8_BASEREL:                   howto manager.      (line   84)
+* BFD_RELOC_8_FFnn:                      howto manager.      (line   88)
+* BFD_RELOC_8_GOT_PCREL:                 howto manager.      (line   53)
+* BFD_RELOC_8_GOTOFF:                    howto manager.      (line   59)
+* BFD_RELOC_8_PCREL:                     howto manager.      (line   40)
+* BFD_RELOC_8_PLT_PCREL:                 howto manager.      (line   64)
+* BFD_RELOC_8_PLTOFF:                    howto manager.      (line   71)
+* BFD_RELOC_ALPHA_BRSGP:                 howto manager.      (line  259)
+* BFD_RELOC_ALPHA_CODEADDR:              howto manager.      (line  250)
+* BFD_RELOC_ALPHA_DTPMOD64:              howto manager.      (line  266)
+* BFD_RELOC_ALPHA_DTPREL16:              howto manager.      (line  271)
+* BFD_RELOC_ALPHA_DTPREL64:              howto manager.      (line  268)
+* BFD_RELOC_ALPHA_DTPREL_HI16:           howto manager.      (line  269)
+* BFD_RELOC_ALPHA_DTPREL_LO16:           howto manager.      (line  270)
+* BFD_RELOC_ALPHA_ELF_LITERAL:           howto manager.      (line  215)
+* BFD_RELOC_ALPHA_GOTDTPREL16:           howto manager.      (line  267)
+* BFD_RELOC_ALPHA_GOTTPREL16:            howto manager.      (line  272)
+* BFD_RELOC_ALPHA_GPDISP:                howto manager.      (line  209)
+* BFD_RELOC_ALPHA_GPDISP_HI16:           howto manager.      (line  195)
+* BFD_RELOC_ALPHA_GPDISP_LO16:           howto manager.      (line  203)
+* BFD_RELOC_ALPHA_GPREL_HI16:            howto manager.      (line  254)
+* BFD_RELOC_ALPHA_GPREL_LO16:            howto manager.      (line  255)
+* BFD_RELOC_ALPHA_HINT:                  howto manager.      (line  241)
+* BFD_RELOC_ALPHA_LINKAGE:               howto manager.      (line  246)
+* BFD_RELOC_ALPHA_LITERAL:               howto manager.      (line  214)
+* BFD_RELOC_ALPHA_LITUSE:                howto manager.      (line  216)
+* BFD_RELOC_ALPHA_TLSGD:                 howto manager.      (line  264)
+* BFD_RELOC_ALPHA_TLSLDM:                howto manager.      (line  265)
+* BFD_RELOC_ALPHA_TPREL16:               howto manager.      (line  276)
+* BFD_RELOC_ALPHA_TPREL64:               howto manager.      (line  273)
+* BFD_RELOC_ALPHA_TPREL_HI16:            howto manager.      (line  274)
+* BFD_RELOC_ALPHA_TPREL_LO16:            howto manager.      (line  275)
+* BFD_RELOC_ARC_B22_PCREL:               howto manager.      (line  754)
+* BFD_RELOC_ARC_B26:                     howto manager.      (line  759)
+* BFD_RELOC_ARM_ADR_IMM:                 howto manager.      (line  615)
+* BFD_RELOC_ARM_ADRL_IMMEDIATE:          howto manager.      (line  607)
+* BFD_RELOC_ARM_COPY:                    howto manager.      (line  628)
+* BFD_RELOC_ARM_CP_OFF_IMM:              howto manager.      (line  613)
+* BFD_RELOC_ARM_CP_OFF_IMM_S2:           howto manager.      (line  614)
+* BFD_RELOC_ARM_GLOB_DAT:                howto manager.      (line  629)
+* BFD_RELOC_ARM_GOT12:                   howto manager.      (line  625)
+* BFD_RELOC_ARM_GOT32:                   howto manager.      (line  626)
+* BFD_RELOC_ARM_GOTOFF:                  howto manager.      (line  632)
+* BFD_RELOC_ARM_GOTPC:                   howto manager.      (line  633)
+* BFD_RELOC_ARM_HWLITERAL:               howto manager.      (line  620)
+* BFD_RELOC_ARM_IMMEDIATE:               howto manager.      (line  606)
+* BFD_RELOC_ARM_IN_POOL:                 howto manager.      (line  618)
+* BFD_RELOC_ARM_JUMP_SLOT:               howto manager.      (line  627)
+* BFD_RELOC_ARM_LDR_IMM:                 howto manager.      (line  616)
+* BFD_RELOC_ARM_LITERAL:                 howto manager.      (line  617)
+* BFD_RELOC_ARM_MULTI:                   howto manager.      (line  612)
+* BFD_RELOC_ARM_OFFSET_IMM:              howto manager.      (line  608)
+* BFD_RELOC_ARM_OFFSET_IMM8:             howto manager.      (line  619)
+* BFD_RELOC_ARM_PCREL_BLX:               howto manager.      (line  596)
+* BFD_RELOC_ARM_PCREL_BRANCH:            howto manager.      (line  592)
+* BFD_RELOC_ARM_PLT32:                   howto manager.      (line  630)
+* BFD_RELOC_ARM_PREL31:                  howto manager.      (line  652)
+* BFD_RELOC_ARM_RELATIVE:                howto manager.      (line  631)
+* BFD_RELOC_ARM_ROSEGREL32:              howto manager.      (line  641)
+* BFD_RELOC_ARM_SBREL32:                 howto manager.      (line  644)
+* BFD_RELOC_ARM_SHIFT_IMM:               howto manager.      (line  609)
+* BFD_RELOC_ARM_SMI:                     howto manager.      (line  610)
+* BFD_RELOC_ARM_SWI:                     howto manager.      (line  611)
+* BFD_RELOC_ARM_TARGET1:                 howto manager.      (line  637)
+* BFD_RELOC_ARM_TARGET2:                 howto manager.      (line  647)
+* BFD_RELOC_ARM_THUMB_ADD:               howto manager.      (line  621)
+* BFD_RELOC_ARM_THUMB_IMM:               howto manager.      (line  622)
+* BFD_RELOC_ARM_THUMB_OFFSET:            howto manager.      (line  624)
+* BFD_RELOC_ARM_THUMB_SHIFT:             howto manager.      (line  623)
+* BFD_RELOC_AVR_13_PCREL:                howto manager.      (line 1076)
+* BFD_RELOC_AVR_16_PM:                   howto manager.      (line 1080)
+* BFD_RELOC_AVR_6:                       howto manager.      (line 1147)
+* BFD_RELOC_AVR_6_ADIW:                  howto manager.      (line 1151)
+* BFD_RELOC_AVR_7_PCREL:                 howto manager.      (line 1072)
+* BFD_RELOC_AVR_CALL:                    howto manager.      (line 1139)
+* BFD_RELOC_AVR_HH8_LDI:                 howto manager.      (line 1092)
+* BFD_RELOC_AVR_HH8_LDI_NEG:             howto manager.      (line 1107)
+* BFD_RELOC_AVR_HH8_LDI_PM:              howto manager.      (line 1120)
+* BFD_RELOC_AVR_HH8_LDI_PM_NEG:          howto manager.      (line 1134)
+* BFD_RELOC_AVR_HI8_LDI:                 howto manager.      (line 1088)
+* BFD_RELOC_AVR_HI8_LDI_NEG:             howto manager.      (line 1102)
+* BFD_RELOC_AVR_HI8_LDI_PM:              howto manager.      (line 1116)
+* BFD_RELOC_AVR_HI8_LDI_PM_NEG:          howto manager.      (line 1129)
+* BFD_RELOC_AVR_LDI:                     howto manager.      (line 1143)
+* BFD_RELOC_AVR_LO8_LDI:                 howto manager.      (line 1084)
+* BFD_RELOC_AVR_LO8_LDI_NEG:             howto manager.      (line 1097)
+* BFD_RELOC_AVR_LO8_LDI_PM:              howto manager.      (line 1112)
+* BFD_RELOC_AVR_LO8_LDI_PM_NEG:          howto manager.      (line 1125)
+* bfd_reloc_code_type:                   howto manager.      (line   10)
+* BFD_RELOC_CRIS_16_GOT:                 howto manager.      (line 1524)
+* BFD_RELOC_CRIS_16_GOTPLT:              howto manager.      (line 1530)
+* BFD_RELOC_CRIS_32_GOT:                 howto manager.      (line 1521)
+* BFD_RELOC_CRIS_32_GOTPLT:              howto manager.      (line 1527)
+* BFD_RELOC_CRIS_32_GOTREL:              howto manager.      (line 1533)
+* BFD_RELOC_CRIS_32_PLT_GOTREL:          howto manager.      (line 1536)
+* BFD_RELOC_CRIS_32_PLT_PCREL:           howto manager.      (line 1539)
+* BFD_RELOC_CRIS_BDISP8:                 howto manager.      (line 1502)
+* BFD_RELOC_CRIS_COPY:                   howto manager.      (line 1515)
+* BFD_RELOC_CRIS_GLOB_DAT:               howto manager.      (line 1516)
+* BFD_RELOC_CRIS_JUMP_SLOT:              howto manager.      (line 1517)
+* BFD_RELOC_CRIS_LAPCQ_OFFSET:           howto manager.      (line 1510)
+* BFD_RELOC_CRIS_RELATIVE:               howto manager.      (line 1518)
+* BFD_RELOC_CRIS_SIGNED_16:              howto manager.      (line 1508)
+* BFD_RELOC_CRIS_SIGNED_6:               howto manager.      (line 1504)
+* BFD_RELOC_CRIS_SIGNED_8:               howto manager.      (line 1506)
+* BFD_RELOC_CRIS_UNSIGNED_16:            howto manager.      (line 1509)
+* BFD_RELOC_CRIS_UNSIGNED_4:             howto manager.      (line 1511)
+* BFD_RELOC_CRIS_UNSIGNED_5:             howto manager.      (line 1503)
+* BFD_RELOC_CRIS_UNSIGNED_6:             howto manager.      (line 1505)
+* BFD_RELOC_CRIS_UNSIGNED_8:             howto manager.      (line 1507)
+* BFD_RELOC_CRX_ABS16:                   howto manager.      (line 1490)
+* BFD_RELOC_CRX_ABS32:                   howto manager.      (line 1491)
+* BFD_RELOC_CRX_IMM16:                   howto manager.      (line 1495)
+* BFD_RELOC_CRX_IMM32:                   howto manager.      (line 1496)
+* BFD_RELOC_CRX_NUM16:                   howto manager.      (line 1493)
+* BFD_RELOC_CRX_NUM32:                   howto manager.      (line 1494)
+* BFD_RELOC_CRX_NUM8:                    howto manager.      (line 1492)
+* BFD_RELOC_CRX_REGREL12:                howto manager.      (line 1486)
+* BFD_RELOC_CRX_REGREL22:                howto manager.      (line 1487)
+* BFD_RELOC_CRX_REGREL28:                howto manager.      (line 1488)
+* BFD_RELOC_CRX_REGREL32:                howto manager.      (line 1489)
+* BFD_RELOC_CRX_REL16:                   howto manager.      (line 1483)
+* BFD_RELOC_CRX_REL24:                   howto manager.      (line 1484)
+* BFD_RELOC_CRX_REL32:                   howto manager.      (line 1485)
+* BFD_RELOC_CRX_REL4:                    howto manager.      (line 1480)
+* BFD_RELOC_CRX_REL8:                    howto manager.      (line 1481)
+* BFD_RELOC_CRX_REL8_CMP:                howto manager.      (line 1482)
+* BFD_RELOC_CRX_SWITCH16:                howto manager.      (line 1498)
+* BFD_RELOC_CRX_SWITCH32:                howto manager.      (line 1499)
+* BFD_RELOC_CRX_SWITCH8:                 howto manager.      (line 1497)
+* BFD_RELOC_CTOR:                        howto manager.      (line  586)
+* BFD_RELOC_D10V_10_PCREL_L:             howto manager.      (line  768)
+* BFD_RELOC_D10V_10_PCREL_R:             howto manager.      (line  764)
+* BFD_RELOC_D10V_18:                     howto manager.      (line  773)
+* BFD_RELOC_D10V_18_PCREL:               howto manager.      (line  776)
+* BFD_RELOC_D30V_15:                     howto manager.      (line  791)
+* BFD_RELOC_D30V_15_PCREL:               howto manager.      (line  795)
+* BFD_RELOC_D30V_15_PCREL_R:             howto manager.      (line  799)
+* BFD_RELOC_D30V_21:                     howto manager.      (line  804)
+* BFD_RELOC_D30V_21_PCREL:               howto manager.      (line  808)
+* BFD_RELOC_D30V_21_PCREL_R:             howto manager.      (line  812)
+* BFD_RELOC_D30V_32:                     howto manager.      (line  817)
+* BFD_RELOC_D30V_32_PCREL:               howto manager.      (line  820)
+* BFD_RELOC_D30V_6:                      howto manager.      (line  779)
+* BFD_RELOC_D30V_9_PCREL:                howto manager.      (line  782)
+* BFD_RELOC_D30V_9_PCREL_R:              howto manager.      (line  786)
+* BFD_RELOC_DLX_HI16_S:                  howto manager.      (line  823)
+* BFD_RELOC_DLX_JMP26:                   howto manager.      (line  829)
+* BFD_RELOC_DLX_LO16:                    howto manager.      (line  826)
+* BFD_RELOC_FR30_10_IN_8:                howto manager.      (line 1002)
+* BFD_RELOC_FR30_12_PCREL:               howto manager.      (line 1010)
+* BFD_RELOC_FR30_20:                     howto manager.      (line  986)
+* BFD_RELOC_FR30_48:                     howto manager.      (line  983)
+* BFD_RELOC_FR30_6_IN_4:                 howto manager.      (line  990)
+* BFD_RELOC_FR30_8_IN_8:                 howto manager.      (line  994)
+* BFD_RELOC_FR30_9_IN_8:                 howto manager.      (line  998)
+* BFD_RELOC_FR30_9_PCREL:                howto manager.      (line 1006)
+* BFD_RELOC_FRV_FUNCDESC:                howto manager.      (line  364)
+* BFD_RELOC_FRV_FUNCDESC_GOT12:          howto manager.      (line  365)
+* BFD_RELOC_FRV_FUNCDESC_GOTHI:          howto manager.      (line  366)
+* BFD_RELOC_FRV_FUNCDESC_GOTLO:          howto manager.      (line  367)
+* BFD_RELOC_FRV_FUNCDESC_GOTOFF12:       howto manager.      (line  369)
+* BFD_RELOC_FRV_FUNCDESC_GOTOFFHI:       howto manager.      (line  370)
+* BFD_RELOC_FRV_FUNCDESC_GOTOFFLO:       howto manager.      (line  371)
+* BFD_RELOC_FRV_FUNCDESC_VALUE:          howto manager.      (line  368)
+* BFD_RELOC_FRV_GETTLSOFF:               howto manager.      (line  375)
+* BFD_RELOC_FRV_GETTLSOFF_RELAX:         howto manager.      (line  388)
+* BFD_RELOC_FRV_GOT12:                   howto manager.      (line  361)
+* BFD_RELOC_FRV_GOTHI:                   howto manager.      (line  362)
+* BFD_RELOC_FRV_GOTLO:                   howto manager.      (line  363)
+* BFD_RELOC_FRV_GOTOFF12:                howto manager.      (line  372)
+* BFD_RELOC_FRV_GOTOFFHI:                howto manager.      (line  373)
+* BFD_RELOC_FRV_GOTOFFLO:                howto manager.      (line  374)
+* BFD_RELOC_FRV_GOTTLSDESC12:            howto manager.      (line  377)
+* BFD_RELOC_FRV_GOTTLSDESCHI:            howto manager.      (line  378)
+* BFD_RELOC_FRV_GOTTLSDESCLO:            howto manager.      (line  379)
+* BFD_RELOC_FRV_GOTTLSOFF12:             howto manager.      (line  383)
+* BFD_RELOC_FRV_GOTTLSOFFHI:             howto manager.      (line  384)
+* BFD_RELOC_FRV_GOTTLSOFFLO:             howto manager.      (line  385)
+* BFD_RELOC_FRV_GPREL12:                 howto manager.      (line  356)
+* BFD_RELOC_FRV_GPREL32:                 howto manager.      (line  358)
+* BFD_RELOC_FRV_GPRELHI:                 howto manager.      (line  359)
+* BFD_RELOC_FRV_GPRELLO:                 howto manager.      (line  360)
+* BFD_RELOC_FRV_GPRELU12:                howto manager.      (line  357)
+* BFD_RELOC_FRV_HI16:                    howto manager.      (line  355)
+* BFD_RELOC_FRV_LABEL16:                 howto manager.      (line  352)
+* BFD_RELOC_FRV_LABEL24:                 howto manager.      (line  353)
+* BFD_RELOC_FRV_LO16:                    howto manager.      (line  354)
+* BFD_RELOC_FRV_TLSDESC_RELAX:           howto manager.      (line  387)
+* BFD_RELOC_FRV_TLSDESC_VALUE:           howto manager.      (line  376)
+* BFD_RELOC_FRV_TLSMOFF:                 howto manager.      (line  390)
+* BFD_RELOC_FRV_TLSMOFF12:               howto manager.      (line  380)
+* BFD_RELOC_FRV_TLSMOFFHI:               howto manager.      (line  381)
+* BFD_RELOC_FRV_TLSMOFFLO:               howto manager.      (line  382)
+* BFD_RELOC_FRV_TLSOFF:                  howto manager.      (line  386)
+* BFD_RELOC_FRV_TLSOFF_RELAX:            howto manager.      (line  389)
+* BFD_RELOC_GPREL16:                     howto manager.      (line  106)
+* BFD_RELOC_GPREL32:                     howto manager.      (line  107)
+* BFD_RELOC_H8_DIR16A8:                  howto manager.      (line 1581)
+* BFD_RELOC_H8_DIR16R8:                  howto manager.      (line 1582)
+* BFD_RELOC_H8_DIR24A8:                  howto manager.      (line 1583)
+* BFD_RELOC_H8_DIR24R8:                  howto manager.      (line 1584)
+* BFD_RELOC_H8_DIR32A16:                 howto manager.      (line 1585)
+* BFD_RELOC_HI16:                        howto manager.      (line  289)
+* BFD_RELOC_HI16_BASEREL:                howto manager.      (line   82)
+* BFD_RELOC_HI16_GOTOFF:                 howto manager.      (line   57)
+* BFD_RELOC_HI16_PLTOFF:                 howto manager.      (line   69)
+* BFD_RELOC_HI16_S:                      howto manager.      (line  292)
+* BFD_RELOC_HI16_S_BASEREL:              howto manager.      (line   83)
+* BFD_RELOC_HI16_S_GOTOFF:               howto manager.      (line   58)
+* BFD_RELOC_HI16_S_PLTOFF:               howto manager.      (line   70)
+* BFD_RELOC_HI22:                        howto manager.      (line  101)
+* BFD_RELOC_I370_D12:                    howto manager.      (line  583)
+* BFD_RELOC_I960_CALLJ:                  howto manager.      (line  113)
+* BFD_RELOC_IA64_COPY:                   howto manager.      (line 1374)
+* BFD_RELOC_IA64_DIR32LSB:               howto manager.      (line 1319)
+* BFD_RELOC_IA64_DIR32MSB:               howto manager.      (line 1318)
+* BFD_RELOC_IA64_DIR64LSB:               howto manager.      (line 1321)
+* BFD_RELOC_IA64_DIR64MSB:               howto manager.      (line 1320)
+* BFD_RELOC_IA64_DTPMOD64LSB:            howto manager.      (line 1384)
+* BFD_RELOC_IA64_DTPMOD64MSB:            howto manager.      (line 1383)
+* BFD_RELOC_IA64_DTPREL14:               howto manager.      (line 1386)
+* BFD_RELOC_IA64_DTPREL22:               howto manager.      (line 1387)
+* BFD_RELOC_IA64_DTPREL32LSB:            howto manager.      (line 1390)
+* BFD_RELOC_IA64_DTPREL32MSB:            howto manager.      (line 1389)
+* BFD_RELOC_IA64_DTPREL64I:              howto manager.      (line 1388)
+* BFD_RELOC_IA64_DTPREL64LSB:            howto manager.      (line 1392)
+* BFD_RELOC_IA64_DTPREL64MSB:            howto manager.      (line 1391)
+* BFD_RELOC_IA64_FPTR32LSB:              howto manager.      (line 1336)
+* BFD_RELOC_IA64_FPTR32MSB:              howto manager.      (line 1335)
+* BFD_RELOC_IA64_FPTR64I:                howto manager.      (line 1334)
+* BFD_RELOC_IA64_FPTR64LSB:              howto manager.      (line 1338)
+* BFD_RELOC_IA64_FPTR64MSB:              howto manager.      (line 1337)
+* BFD_RELOC_IA64_GPREL22:                howto manager.      (line 1322)
+* BFD_RELOC_IA64_GPREL32LSB:             howto manager.      (line 1325)
+* BFD_RELOC_IA64_GPREL32MSB:             howto manager.      (line 1324)
+* BFD_RELOC_IA64_GPREL64I:               howto manager.      (line 1323)
+* BFD_RELOC_IA64_GPREL64LSB:             howto manager.      (line 1327)
+* BFD_RELOC_IA64_GPREL64MSB:             howto manager.      (line 1326)
+* BFD_RELOC_IA64_IMM14:                  howto manager.      (line 1315)
+* BFD_RELOC_IA64_IMM22:                  howto manager.      (line 1316)
+* BFD_RELOC_IA64_IMM64:                  howto manager.      (line 1317)
+* BFD_RELOC_IA64_IPLTLSB:                howto manager.      (line 1373)
+* BFD_RELOC_IA64_IPLTMSB:                howto manager.      (line 1372)
+* BFD_RELOC_IA64_LDXMOV:                 howto manager.      (line 1376)
+* BFD_RELOC_IA64_LTOFF22:                howto manager.      (line 1328)
+* BFD_RELOC_IA64_LTOFF22X:               howto manager.      (line 1375)
+* BFD_RELOC_IA64_LTOFF64I:               howto manager.      (line 1329)
+* BFD_RELOC_IA64_LTOFF_DTPMOD22:         howto manager.      (line 1385)
+* BFD_RELOC_IA64_LTOFF_DTPREL22:         howto manager.      (line 1393)
+* BFD_RELOC_IA64_LTOFF_FPTR22:           howto manager.      (line 1350)
+* BFD_RELOC_IA64_LTOFF_FPTR32LSB:        howto manager.      (line 1353)
+* BFD_RELOC_IA64_LTOFF_FPTR32MSB:        howto manager.      (line 1352)
+* BFD_RELOC_IA64_LTOFF_FPTR64I:          howto manager.      (line 1351)
+* BFD_RELOC_IA64_LTOFF_FPTR64LSB:        howto manager.      (line 1355)
+* BFD_RELOC_IA64_LTOFF_FPTR64MSB:        howto manager.      (line 1354)
+* BFD_RELOC_IA64_LTOFF_TPREL22:          howto manager.      (line 1382)
+* BFD_RELOC_IA64_LTV32LSB:               howto manager.      (line 1369)
+* BFD_RELOC_IA64_LTV32MSB:               howto manager.      (line 1368)
+* BFD_RELOC_IA64_LTV64LSB:               howto manager.      (line 1371)
+* BFD_RELOC_IA64_LTV64MSB:               howto manager.      (line 1370)
+* BFD_RELOC_IA64_PCREL21B:               howto manager.      (line 1339)
+* BFD_RELOC_IA64_PCREL21BI:              howto manager.      (line 1340)
+* BFD_RELOC_IA64_PCREL21F:               howto manager.      (line 1342)
+* BFD_RELOC_IA64_PCREL21M:               howto manager.      (line 1341)
+* BFD_RELOC_IA64_PCREL22:                howto manager.      (line 1343)
+* BFD_RELOC_IA64_PCREL32LSB:             howto manager.      (line 1347)
+* BFD_RELOC_IA64_PCREL32MSB:             howto manager.      (line 1346)
+* BFD_RELOC_IA64_PCREL60B:               howto manager.      (line 1344)
+* BFD_RELOC_IA64_PCREL64I:               howto manager.      (line 1345)
+* BFD_RELOC_IA64_PCREL64LSB:             howto manager.      (line 1349)
+* BFD_RELOC_IA64_PCREL64MSB:             howto manager.      (line 1348)
+* BFD_RELOC_IA64_PLTOFF22:               howto manager.      (line 1330)
+* BFD_RELOC_IA64_PLTOFF64I:              howto manager.      (line 1331)
+* BFD_RELOC_IA64_PLTOFF64LSB:            howto manager.      (line 1333)
+* BFD_RELOC_IA64_PLTOFF64MSB:            howto manager.      (line 1332)
+* BFD_RELOC_IA64_REL32LSB:               howto manager.      (line 1365)
+* BFD_RELOC_IA64_REL32MSB:               howto manager.      (line 1364)
+* BFD_RELOC_IA64_REL64LSB:               howto manager.      (line 1367)
+* BFD_RELOC_IA64_REL64MSB:               howto manager.      (line 1366)
+* BFD_RELOC_IA64_SECREL32LSB:            howto manager.      (line 1361)
+* BFD_RELOC_IA64_SECREL32MSB:            howto manager.      (line 1360)
+* BFD_RELOC_IA64_SECREL64LSB:            howto manager.      (line 1363)
+* BFD_RELOC_IA64_SECREL64MSB:            howto manager.      (line 1362)
+* BFD_RELOC_IA64_SEGREL32LSB:            howto manager.      (line 1357)
+* BFD_RELOC_IA64_SEGREL32MSB:            howto manager.      (line 1356)
+* BFD_RELOC_IA64_SEGREL64LSB:            howto manager.      (line 1359)
+* BFD_RELOC_IA64_SEGREL64MSB:            howto manager.      (line 1358)
+* BFD_RELOC_IA64_TPREL14:                howto manager.      (line 1377)
+* BFD_RELOC_IA64_TPREL22:                howto manager.      (line 1378)
+* BFD_RELOC_IA64_TPREL64I:               howto manager.      (line 1379)
+* BFD_RELOC_IA64_TPREL64LSB:             howto manager.      (line 1381)
+* BFD_RELOC_IA64_TPREL64MSB:             howto manager.      (line 1380)
+* BFD_RELOC_IP2K_ADDR16CJP:              howto manager.      (line 1267)
+* BFD_RELOC_IP2K_BANK:                   howto manager.      (line 1264)
+* BFD_RELOC_IP2K_EX8DATA:                howto manager.      (line 1275)
+* BFD_RELOC_IP2K_FR9:                    howto manager.      (line 1261)
+* BFD_RELOC_IP2K_FR_OFFSET:              howto manager.      (line 1288)
+* BFD_RELOC_IP2K_HI8DATA:                howto manager.      (line 1274)
+* BFD_RELOC_IP2K_HI8INSN:                howto manager.      (line 1279)
+* BFD_RELOC_IP2K_LO8DATA:                howto manager.      (line 1273)
+* BFD_RELOC_IP2K_LO8INSN:                howto manager.      (line 1278)
+* BFD_RELOC_IP2K_PAGE3:                  howto manager.      (line 1270)
+* BFD_RELOC_IP2K_PC_SKIP:                howto manager.      (line 1282)
+* BFD_RELOC_IP2K_TEXT:                   howto manager.      (line 1285)
+* BFD_RELOC_IQ2000_OFFSET_16:            howto manager.      (line 1608)
+* BFD_RELOC_IQ2000_OFFSET_21:            howto manager.      (line 1609)
+* BFD_RELOC_IQ2000_UHI16:                howto manager.      (line 1610)
+* BFD_RELOC_LO10:                        howto manager.      (line  102)
+* BFD_RELOC_LO16:                        howto manager.      (line  298)
+* BFD_RELOC_LO16_BASEREL:                howto manager.      (line   81)
+* BFD_RELOC_LO16_GOTOFF:                 howto manager.      (line   56)
+* BFD_RELOC_LO16_PLTOFF:                 howto manager.      (line   68)
+* BFD_RELOC_M32R_10_PCREL:               howto manager.      (line  836)
+* BFD_RELOC_M32R_18_PCREL:               howto manager.      (line  840)
+* BFD_RELOC_M32R_24:                     howto manager.      (line  832)
+* BFD_RELOC_M32R_26_PCREL:               howto manager.      (line  843)
+* BFD_RELOC_M32R_26_PLTREL:              howto manager.      (line  862)
+* BFD_RELOC_M32R_COPY:                   howto manager.      (line  863)
+* BFD_RELOC_M32R_GLOB_DAT:               howto manager.      (line  864)
+* BFD_RELOC_M32R_GOT16_HI_SLO:           howto manager.      (line  873)
+* BFD_RELOC_M32R_GOT16_HI_ULO:           howto manager.      (line  872)
+* BFD_RELOC_M32R_GOT16_LO:               howto manager.      (line  874)
+* BFD_RELOC_M32R_GOT24:                  howto manager.      (line  861)
+* BFD_RELOC_M32R_GOTOFF:                 howto manager.      (line  867)
+* BFD_RELOC_M32R_GOTOFF_HI_SLO:          howto manager.      (line  869)
+* BFD_RELOC_M32R_GOTOFF_HI_ULO:          howto manager.      (line  868)
+* BFD_RELOC_M32R_GOTOFF_LO:              howto manager.      (line  870)
+* BFD_RELOC_M32R_GOTPC24:                howto manager.      (line  871)
+* BFD_RELOC_M32R_GOTPC_HI_SLO:           howto manager.      (line  876)
+* BFD_RELOC_M32R_GOTPC_HI_ULO:           howto manager.      (line  875)
+* BFD_RELOC_M32R_GOTPC_LO:               howto manager.      (line  877)
+* BFD_RELOC_M32R_HI16_SLO:               howto manager.      (line  850)
+* BFD_RELOC_M32R_HI16_ULO:               howto manager.      (line  846)
+* BFD_RELOC_M32R_JMP_SLOT:               howto manager.      (line  865)
+* BFD_RELOC_M32R_LO16:                   howto manager.      (line  854)
+* BFD_RELOC_M32R_RELATIVE:               howto manager.      (line  866)
+* BFD_RELOC_M32R_SDA16:                  howto manager.      (line  857)
+* BFD_RELOC_M68HC11_24:                  howto manager.      (line 1429)
+* BFD_RELOC_M68HC11_3B:                  howto manager.      (line 1404)
+* BFD_RELOC_M68HC11_HI8:                 howto manager.      (line 1396)
+* BFD_RELOC_M68HC11_LO16:                howto manager.      (line 1418)
+* BFD_RELOC_M68HC11_LO8:                 howto manager.      (line 1400)
+* BFD_RELOC_M68HC11_PAGE:                howto manager.      (line 1424)
+* BFD_RELOC_M68HC11_RL_GROUP:            howto manager.      (line 1413)
+* BFD_RELOC_M68HC11_RL_JUMP:             howto manager.      (line 1407)
+* BFD_RELOC_M68HC12_5B:                  howto manager.      (line 1435)
+* BFD_RELOC_MCORE_PCREL_32:              howto manager.      (line 1017)
+* BFD_RELOC_MCORE_PCREL_IMM11BY2:        howto manager.      (line 1015)
+* BFD_RELOC_MCORE_PCREL_IMM4BY2:         howto manager.      (line 1016)
+* BFD_RELOC_MCORE_PCREL_IMM8BY4:         howto manager.      (line 1014)
+* BFD_RELOC_MCORE_PCREL_JSR_IMM11BY2:    howto manager.      (line 1018)
+* BFD_RELOC_MCORE_RVA:                   howto manager.      (line 1019)
+* BFD_RELOC_MIPS16_GPREL:                howto manager.      (line  286)
+* BFD_RELOC_MIPS16_HI16:                 howto manager.      (line  301)
+* BFD_RELOC_MIPS16_HI16_S:               howto manager.      (line  304)
+* BFD_RELOC_MIPS16_JMP:                  howto manager.      (line  283)
+* BFD_RELOC_MIPS16_LO16:                 howto manager.      (line  310)
+* BFD_RELOC_MIPS_CALL16:                 howto manager.      (line  317)
+* BFD_RELOC_MIPS_CALL_HI16:              howto manager.      (line  320)
+* BFD_RELOC_MIPS_CALL_LO16:              howto manager.      (line  321)
+* BFD_RELOC_MIPS_DELETE:                 howto manager.      (line  330)
+* BFD_RELOC_MIPS_GOT16:                  howto manager.      (line  316)
+* BFD_RELOC_MIPS_GOT_DISP:               howto manager.      (line  325)
+* BFD_RELOC_MIPS_GOT_HI16:               howto manager.      (line  318)
+* BFD_RELOC_MIPS_GOT_LO16:               howto manager.      (line  319)
+* BFD_RELOC_MIPS_GOT_OFST:               howto manager.      (line  324)
+* BFD_RELOC_MIPS_GOT_PAGE:               howto manager.      (line  323)
+* BFD_RELOC_MIPS_HIGHER:                 howto manager.      (line  332)
+* BFD_RELOC_MIPS_HIGHEST:                howto manager.      (line  331)
+* BFD_RELOC_MIPS_INSERT_A:               howto manager.      (line  328)
+* BFD_RELOC_MIPS_INSERT_B:               howto manager.      (line  329)
+* BFD_RELOC_MIPS_JALR:                   howto manager.      (line  336)
+* BFD_RELOC_MIPS_JMP:                    howto manager.      (line  279)
+* BFD_RELOC_MIPS_LITERAL:                howto manager.      (line  313)
+* BFD_RELOC_MIPS_REL16:                  howto manager.      (line  334)
+* BFD_RELOC_MIPS_RELGOT:                 howto manager.      (line  335)
+* BFD_RELOC_MIPS_SCN_DISP:               howto manager.      (line  333)
+* BFD_RELOC_MIPS_SHIFT5:                 howto manager.      (line  326)
+* BFD_RELOC_MIPS_SHIFT6:                 howto manager.      (line  327)
+* BFD_RELOC_MIPS_SUB:                    howto manager.      (line  322)
+* BFD_RELOC_MIPS_TLS_DTPMOD32:           howto manager.      (line  337)
+* BFD_RELOC_MIPS_TLS_DTPMOD64:           howto manager.      (line  339)
+* BFD_RELOC_MIPS_TLS_DTPREL32:           howto manager.      (line  338)
+* BFD_RELOC_MIPS_TLS_DTPREL64:           howto manager.      (line  340)
+* BFD_RELOC_MIPS_TLS_DTPREL_HI16:        howto manager.      (line  343)
+* BFD_RELOC_MIPS_TLS_DTPREL_LO16:        howto manager.      (line  344)
+* BFD_RELOC_MIPS_TLS_GD:                 howto manager.      (line  341)
+* BFD_RELOC_MIPS_TLS_GOTTPREL:           howto manager.      (line  345)
+* BFD_RELOC_MIPS_TLS_LDM:                howto manager.      (line  342)
+* BFD_RELOC_MIPS_TLS_TPREL32:            howto manager.      (line  346)
+* BFD_RELOC_MIPS_TLS_TPREL64:            howto manager.      (line  347)
+* BFD_RELOC_MIPS_TLS_TPREL_HI16:         howto manager.      (line  348)
+* BFD_RELOC_MIPS_TLS_TPREL_LO16:         howto manager.      (line  349)
+* BFD_RELOC_MMIX_ADDR19:                 howto manager.      (line 1048)
+* BFD_RELOC_MMIX_ADDR27:                 howto manager.      (line 1052)
+* BFD_RELOC_MMIX_BASE_PLUS_OFFSET:       howto manager.      (line 1064)
+* BFD_RELOC_MMIX_CBRANCH:                howto manager.      (line 1028)
+* BFD_RELOC_MMIX_CBRANCH_1:              howto manager.      (line 1030)
+* BFD_RELOC_MMIX_CBRANCH_2:              howto manager.      (line 1031)
+* BFD_RELOC_MMIX_CBRANCH_3:              howto manager.      (line 1032)
+* BFD_RELOC_MMIX_CBRANCH_J:              howto manager.      (line 1029)
+* BFD_RELOC_MMIX_GETA:                   howto manager.      (line 1022)
+* BFD_RELOC_MMIX_GETA_1:                 howto manager.      (line 1023)
+* BFD_RELOC_MMIX_GETA_2:                 howto manager.      (line 1024)
+* BFD_RELOC_MMIX_GETA_3:                 howto manager.      (line 1025)
+* BFD_RELOC_MMIX_JMP:                    howto manager.      (line 1042)
+* BFD_RELOC_MMIX_JMP_1:                  howto manager.      (line 1043)
+* BFD_RELOC_MMIX_JMP_2:                  howto manager.      (line 1044)
+* BFD_RELOC_MMIX_JMP_3:                  howto manager.      (line 1045)
+* BFD_RELOC_MMIX_LOCAL:                  howto manager.      (line 1068)
+* BFD_RELOC_MMIX_PUSHJ:                  howto manager.      (line 1035)
+* BFD_RELOC_MMIX_PUSHJ_1:                howto manager.      (line 1036)
+* BFD_RELOC_MMIX_PUSHJ_2:                howto manager.      (line 1037)
+* BFD_RELOC_MMIX_PUSHJ_3:                howto manager.      (line 1038)
+* BFD_RELOC_MMIX_PUSHJ_STUBBABLE:        howto manager.      (line 1039)
+* BFD_RELOC_MMIX_REG:                    howto manager.      (line 1060)
+* BFD_RELOC_MMIX_REG_OR_BYTE:            howto manager.      (line 1056)
+* BFD_RELOC_MN10300_16_PCREL:            howto manager.      (line  952)
+* BFD_RELOC_MN10300_32_PCREL:            howto manager.      (line  948)
+* BFD_RELOC_MN10300_COPY:                howto manager.      (line  408)
+* BFD_RELOC_MN10300_GLOB_DAT:            howto manager.      (line  411)
+* BFD_RELOC_MN10300_GOT16:               howto manager.      (line  404)
+* BFD_RELOC_MN10300_GOT24:               howto manager.      (line  400)
+* BFD_RELOC_MN10300_GOT32:               howto manager.      (line  396)
+* BFD_RELOC_MN10300_GOTOFF24:            howto manager.      (line  393)
+* BFD_RELOC_MN10300_JMP_SLOT:            howto manager.      (line  414)
+* BFD_RELOC_MN10300_RELATIVE:            howto manager.      (line  417)
+* BFD_RELOC_MSP430_10_PCREL:             howto manager.      (line 1599)
+* BFD_RELOC_MSP430_16:                   howto manager.      (line 1601)
+* BFD_RELOC_MSP430_16_BYTE:              howto manager.      (line 1603)
+* BFD_RELOC_MSP430_16_PCREL:             howto manager.      (line 1600)
+* BFD_RELOC_MSP430_16_PCREL_BYTE:        howto manager.      (line 1602)
+* BFD_RELOC_MSP430_2X_PCREL:             howto manager.      (line 1604)
+* BFD_RELOC_MSP430_RL_PCREL:             howto manager.      (line 1605)
+* BFD_RELOC_NONE:                        howto manager.      (line  116)
+* BFD_RELOC_NS32K_DISP_16:               howto manager.      (line  467)
+* BFD_RELOC_NS32K_DISP_16_PCREL:         howto manager.      (line  470)
+* BFD_RELOC_NS32K_DISP_32:               howto manager.      (line  468)
+* BFD_RELOC_NS32K_DISP_32_PCREL:         howto manager.      (line  471)
+* BFD_RELOC_NS32K_DISP_8:                howto manager.      (line  466)
+* BFD_RELOC_NS32K_DISP_8_PCREL:          howto manager.      (line  469)
+* BFD_RELOC_NS32K_IMM_16:                howto manager.      (line  461)
+* BFD_RELOC_NS32K_IMM_16_PCREL:          howto manager.      (line  464)
+* BFD_RELOC_NS32K_IMM_32:                howto manager.      (line  462)
+* BFD_RELOC_NS32K_IMM_32_PCREL:          howto manager.      (line  465)
+* BFD_RELOC_NS32K_IMM_8:                 howto manager.      (line  460)
+* BFD_RELOC_NS32K_IMM_8_PCREL:           howto manager.      (line  463)
+* BFD_RELOC_OPENRISC_ABS_26:             howto manager.      (line 1577)
+* BFD_RELOC_OPENRISC_REL_26:             howto manager.      (line 1578)
+* BFD_RELOC_PDP11_DISP_6_PCREL:          howto manager.      (line  475)
+* BFD_RELOC_PDP11_DISP_8_PCREL:          howto manager.      (line  474)
+* BFD_RELOC_PJ_CODE_DIR16:               howto manager.      (line  480)
+* BFD_RELOC_PJ_CODE_DIR32:               howto manager.      (line  481)
+* BFD_RELOC_PJ_CODE_HI16:                howto manager.      (line  478)
+* BFD_RELOC_PJ_CODE_LO16:                howto manager.      (line  479)
+* BFD_RELOC_PJ_CODE_REL16:               howto manager.      (line  482)
+* BFD_RELOC_PJ_CODE_REL32:               howto manager.      (line  483)
+* BFD_RELOC_PPC64_ADDR16_DS:             howto manager.      (line  528)
+* BFD_RELOC_PPC64_ADDR16_LO_DS:          howto manager.      (line  529)
+* BFD_RELOC_PPC64_DTPREL16_DS:           howto manager.      (line  575)
+* BFD_RELOC_PPC64_DTPREL16_HIGHER:       howto manager.      (line  577)
+* BFD_RELOC_PPC64_DTPREL16_HIGHERA:      howto manager.      (line  578)
+* BFD_RELOC_PPC64_DTPREL16_HIGHEST:      howto manager.      (line  579)
+* BFD_RELOC_PPC64_DTPREL16_HIGHESTA:     howto manager.      (line  580)
+* BFD_RELOC_PPC64_DTPREL16_LO_DS:        howto manager.      (line  576)
+* BFD_RELOC_PPC64_GOT16_DS:              howto manager.      (line  530)
+* BFD_RELOC_PPC64_GOT16_LO_DS:           howto manager.      (line  531)
+* BFD_RELOC_PPC64_HIGHER:                howto manager.      (line  516)
+* BFD_RELOC_PPC64_HIGHER_S:              howto manager.      (line  517)
+* BFD_RELOC_PPC64_HIGHEST:               howto manager.      (line  518)
+* BFD_RELOC_PPC64_HIGHEST_S:             howto manager.      (line  519)
+* BFD_RELOC_PPC64_PLT16_LO_DS:           howto manager.      (line  532)
+* BFD_RELOC_PPC64_PLTGOT16:              howto manager.      (line  524)
+* BFD_RELOC_PPC64_PLTGOT16_DS:           howto manager.      (line  537)
+* BFD_RELOC_PPC64_PLTGOT16_HA:           howto manager.      (line  527)
+* BFD_RELOC_PPC64_PLTGOT16_HI:           howto manager.      (line  526)
+* BFD_RELOC_PPC64_PLTGOT16_LO:           howto manager.      (line  525)
+* BFD_RELOC_PPC64_PLTGOT16_LO_DS:        howto manager.      (line  538)
+* BFD_RELOC_PPC64_SECTOFF_DS:            howto manager.      (line  533)
+* BFD_RELOC_PPC64_SECTOFF_LO_DS:         howto manager.      (line  534)
+* BFD_RELOC_PPC64_TOC:                   howto manager.      (line  523)
+* BFD_RELOC_PPC64_TOC16_DS:              howto manager.      (line  535)
+* BFD_RELOC_PPC64_TOC16_HA:              howto manager.      (line  522)
+* BFD_RELOC_PPC64_TOC16_HI:              howto manager.      (line  521)
+* BFD_RELOC_PPC64_TOC16_LO:              howto manager.      (line  520)
+* BFD_RELOC_PPC64_TOC16_LO_DS:           howto manager.      (line  536)
+* BFD_RELOC_PPC64_TPREL16_DS:            howto manager.      (line  569)
+* BFD_RELOC_PPC64_TPREL16_HIGHER:        howto manager.      (line  571)
+* BFD_RELOC_PPC64_TPREL16_HIGHERA:       howto manager.      (line  572)
+* BFD_RELOC_PPC64_TPREL16_HIGHEST:       howto manager.      (line  573)
+* BFD_RELOC_PPC64_TPREL16_HIGHESTA:      howto manager.      (line  574)
+* BFD_RELOC_PPC64_TPREL16_LO_DS:         howto manager.      (line  570)
+* BFD_RELOC_PPC_B16:                     howto manager.      (line  489)
+* BFD_RELOC_PPC_B16_BRNTAKEN:            howto manager.      (line  491)
+* BFD_RELOC_PPC_B16_BRTAKEN:             howto manager.      (line  490)
+* BFD_RELOC_PPC_B26:                     howto manager.      (line  486)
+* BFD_RELOC_PPC_BA16:                    howto manager.      (line  492)
+* BFD_RELOC_PPC_BA16_BRNTAKEN:           howto manager.      (line  494)
+* BFD_RELOC_PPC_BA16_BRTAKEN:            howto manager.      (line  493)
+* BFD_RELOC_PPC_BA26:                    howto manager.      (line  487)
+* BFD_RELOC_PPC_COPY:                    howto manager.      (line  495)
+* BFD_RELOC_PPC_DTPMOD:                  howto manager.      (line  542)
+* BFD_RELOC_PPC_DTPREL:                  howto manager.      (line  552)
+* BFD_RELOC_PPC_DTPREL16:                howto manager.      (line  548)
+* BFD_RELOC_PPC_DTPREL16_HA:             howto manager.      (line  551)
+* BFD_RELOC_PPC_DTPREL16_HI:             howto manager.      (line  550)
+* BFD_RELOC_PPC_DTPREL16_LO:             howto manager.      (line  549)
+* BFD_RELOC_PPC_EMB_BIT_FLD:             howto manager.      (line  514)
+* BFD_RELOC_PPC_EMB_MRKREF:              howto manager.      (line  509)
+* BFD_RELOC_PPC_EMB_NADDR16:             howto manager.      (line  501)
+* BFD_RELOC_PPC_EMB_NADDR16_HA:          howto manager.      (line  504)
+* BFD_RELOC_PPC_EMB_NADDR16_HI:          howto manager.      (line  503)
+* BFD_RELOC_PPC_EMB_NADDR16_LO:          howto manager.      (line  502)
+* BFD_RELOC_PPC_EMB_NADDR32:             howto manager.      (line  500)
+* BFD_RELOC_PPC_EMB_RELSDA:              howto manager.      (line  515)
+* BFD_RELOC_PPC_EMB_RELSEC16:            howto manager.      (line  510)
+* BFD_RELOC_PPC_EMB_RELST_HA:            howto manager.      (line  513)
+* BFD_RELOC_PPC_EMB_RELST_HI:            howto manager.      (line  512)
+* BFD_RELOC_PPC_EMB_RELST_LO:            howto manager.      (line  511)
+* BFD_RELOC_PPC_EMB_SDA21:               howto manager.      (line  508)
+* BFD_RELOC_PPC_EMB_SDA2I16:             howto manager.      (line  506)
+* BFD_RELOC_PPC_EMB_SDA2REL:             howto manager.      (line  507)
+* BFD_RELOC_PPC_EMB_SDAI16:              howto manager.      (line  505)
+* BFD_RELOC_PPC_GLOB_DAT:                howto manager.      (line  496)
+* BFD_RELOC_PPC_GOT_DTPREL16:            howto manager.      (line  565)
+* BFD_RELOC_PPC_GOT_DTPREL16_HA:         howto manager.      (line  568)
+* BFD_RELOC_PPC_GOT_DTPREL16_HI:         howto manager.      (line  567)
+* BFD_RELOC_PPC_GOT_DTPREL16_LO:         howto manager.      (line  566)
+* BFD_RELOC_PPC_GOT_TLSGD16:             howto manager.      (line  553)
+* BFD_RELOC_PPC_GOT_TLSGD16_HA:          howto manager.      (line  556)
+* BFD_RELOC_PPC_GOT_TLSGD16_HI:          howto manager.      (line  555)
+* BFD_RELOC_PPC_GOT_TLSGD16_LO:          howto manager.      (line  554)
+* BFD_RELOC_PPC_GOT_TLSLD16:             howto manager.      (line  557)
+* BFD_RELOC_PPC_GOT_TLSLD16_HA:          howto manager.      (line  560)
+* BFD_RELOC_PPC_GOT_TLSLD16_HI:          howto manager.      (line  559)
+* BFD_RELOC_PPC_GOT_TLSLD16_LO:          howto manager.      (line  558)
+* BFD_RELOC_PPC_GOT_TPREL16:             howto manager.      (line  561)
+* BFD_RELOC_PPC_GOT_TPREL16_HA:          howto manager.      (line  564)
+* BFD_RELOC_PPC_GOT_TPREL16_HI:          howto manager.      (line  563)
+* BFD_RELOC_PPC_GOT_TPREL16_LO:          howto manager.      (line  562)
+* BFD_RELOC_PPC_JMP_SLOT:                howto manager.      (line  497)
+* BFD_RELOC_PPC_LOCAL24PC:               howto manager.      (line  499)
+* BFD_RELOC_PPC_RELATIVE:                howto manager.      (line  498)
+* BFD_RELOC_PPC_TLS:                     howto manager.      (line  541)
+* BFD_RELOC_PPC_TOC16:                   howto manager.      (line  488)
+* BFD_RELOC_PPC_TPREL:                   howto manager.      (line  547)
+* BFD_RELOC_PPC_TPREL16:                 howto manager.      (line  543)
+* BFD_RELOC_PPC_TPREL16_HA:              howto manager.      (line  546)
+* BFD_RELOC_PPC_TPREL16_HI:              howto manager.      (line  545)
+* BFD_RELOC_PPC_TPREL16_LO:              howto manager.      (line  544)
+* BFD_RELOC_RVA:                         howto manager.      (line   85)
+* BFD_RELOC_SH_ALIGN:                    howto manager.      (line  677)
+* BFD_RELOC_SH_CODE:                     howto manager.      (line  678)
+* BFD_RELOC_SH_COPY:                     howto manager.      (line  683)
+* BFD_RELOC_SH_COPY64:                   howto manager.      (line  708)
+* BFD_RELOC_SH_COUNT:                    howto manager.      (line  676)
+* BFD_RELOC_SH_DATA:                     howto manager.      (line  679)
+* BFD_RELOC_SH_DISP12:                   howto manager.      (line  659)
+* BFD_RELOC_SH_DISP12BY2:                howto manager.      (line  660)
+* BFD_RELOC_SH_DISP12BY4:                howto manager.      (line  661)
+* BFD_RELOC_SH_DISP12BY8:                howto manager.      (line  662)
+* BFD_RELOC_SH_DISP20:                   howto manager.      (line  663)
+* BFD_RELOC_SH_DISP20BY8:                howto manager.      (line  664)
+* BFD_RELOC_SH_GLOB_DAT:                 howto manager.      (line  684)
+* BFD_RELOC_SH_GLOB_DAT64:               howto manager.      (line  709)
+* BFD_RELOC_SH_GOT10BY4:                 howto manager.      (line  712)
+* BFD_RELOC_SH_GOT10BY8:                 howto manager.      (line  713)
+* BFD_RELOC_SH_GOT_HI16:                 howto manager.      (line  691)
+* BFD_RELOC_SH_GOT_LOW16:                howto manager.      (line  688)
+* BFD_RELOC_SH_GOT_MEDHI16:              howto manager.      (line  690)
+* BFD_RELOC_SH_GOT_MEDLOW16:             howto manager.      (line  689)
+* BFD_RELOC_SH_GOTOFF_HI16:              howto manager.      (line  703)
+* BFD_RELOC_SH_GOTOFF_LOW16:             howto manager.      (line  700)
+* BFD_RELOC_SH_GOTOFF_MEDHI16:           howto manager.      (line  702)
+* BFD_RELOC_SH_GOTOFF_MEDLOW16:          howto manager.      (line  701)
+* BFD_RELOC_SH_GOTPC:                    howto manager.      (line  687)
+* BFD_RELOC_SH_GOTPC_HI16:               howto manager.      (line  707)
+* BFD_RELOC_SH_GOTPC_LOW16:              howto manager.      (line  704)
+* BFD_RELOC_SH_GOTPC_MEDHI16:            howto manager.      (line  706)
+* BFD_RELOC_SH_GOTPC_MEDLOW16:           howto manager.      (line  705)
+* BFD_RELOC_SH_GOTPLT10BY4:              howto manager.      (line  714)
+* BFD_RELOC_SH_GOTPLT10BY8:              howto manager.      (line  715)
+* BFD_RELOC_SH_GOTPLT32:                 howto manager.      (line  716)
+* BFD_RELOC_SH_GOTPLT_HI16:              howto manager.      (line  695)
+* BFD_RELOC_SH_GOTPLT_LOW16:             howto manager.      (line  692)
+* BFD_RELOC_SH_GOTPLT_MEDHI16:           howto manager.      (line  694)
+* BFD_RELOC_SH_GOTPLT_MEDLOW16:          howto manager.      (line  693)
+* BFD_RELOC_SH_IMM3:                     howto manager.      (line  657)
+* BFD_RELOC_SH_IMM3U:                    howto manager.      (line  658)
+* BFD_RELOC_SH_IMM4:                     howto manager.      (line  665)
+* BFD_RELOC_SH_IMM4BY2:                  howto manager.      (line  666)
+* BFD_RELOC_SH_IMM4BY4:                  howto manager.      (line  667)
+* BFD_RELOC_SH_IMM8:                     howto manager.      (line  668)
+* BFD_RELOC_SH_IMM8BY2:                  howto manager.      (line  669)
+* BFD_RELOC_SH_IMM8BY4:                  howto manager.      (line  670)
+* BFD_RELOC_SH_IMM_HI16:                 howto manager.      (line  734)
+* BFD_RELOC_SH_IMM_HI16_PCREL:           howto manager.      (line  735)
+* BFD_RELOC_SH_IMM_LOW16:                howto manager.      (line  728)
+* BFD_RELOC_SH_IMM_LOW16_PCREL:          howto manager.      (line  729)
+* BFD_RELOC_SH_IMM_MEDHI16:              howto manager.      (line  732)
+* BFD_RELOC_SH_IMM_MEDHI16_PCREL:        howto manager.      (line  733)
+* BFD_RELOC_SH_IMM_MEDLOW16:             howto manager.      (line  730)
+* BFD_RELOC_SH_IMM_MEDLOW16_PCREL:       howto manager.      (line  731)
+* BFD_RELOC_SH_IMMS10:                   howto manager.      (line  722)
+* BFD_RELOC_SH_IMMS10BY2:                howto manager.      (line  723)
+* BFD_RELOC_SH_IMMS10BY4:                howto manager.      (line  724)
+* BFD_RELOC_SH_IMMS10BY8:                howto manager.      (line  725)
+* BFD_RELOC_SH_IMMS16:                   howto manager.      (line  726)
+* BFD_RELOC_SH_IMMS6:                    howto manager.      (line  719)
+* BFD_RELOC_SH_IMMS6BY32:                howto manager.      (line  720)
+* BFD_RELOC_SH_IMMU16:                   howto manager.      (line  727)
+* BFD_RELOC_SH_IMMU5:                    howto manager.      (line  718)
+* BFD_RELOC_SH_IMMU6:                    howto manager.      (line  721)
+* BFD_RELOC_SH_JMP_SLOT:                 howto manager.      (line  685)
+* BFD_RELOC_SH_JMP_SLOT64:               howto manager.      (line  710)
+* BFD_RELOC_SH_LABEL:                    howto manager.      (line  680)
+* BFD_RELOC_SH_LOOP_END:                 howto manager.      (line  682)
+* BFD_RELOC_SH_LOOP_START:               howto manager.      (line  681)
+* BFD_RELOC_SH_PCDISP12BY2:              howto manager.      (line  656)
+* BFD_RELOC_SH_PCDISP8BY2:               howto manager.      (line  655)
+* BFD_RELOC_SH_PCRELIMM8BY2:             howto manager.      (line  671)
+* BFD_RELOC_SH_PCRELIMM8BY4:             howto manager.      (line  672)
+* BFD_RELOC_SH_PLT_HI16:                 howto manager.      (line  699)
+* BFD_RELOC_SH_PLT_LOW16:                howto manager.      (line  696)
+* BFD_RELOC_SH_PLT_MEDHI16:              howto manager.      (line  698)
+* BFD_RELOC_SH_PLT_MEDLOW16:             howto manager.      (line  697)
+* BFD_RELOC_SH_PT_16:                    howto manager.      (line  736)
+* BFD_RELOC_SH_RELATIVE:                 howto manager.      (line  686)
+* BFD_RELOC_SH_RELATIVE64:               howto manager.      (line  711)
+* BFD_RELOC_SH_SHMEDIA_CODE:             howto manager.      (line  717)
+* BFD_RELOC_SH_SWITCH16:                 howto manager.      (line  673)
+* BFD_RELOC_SH_SWITCH32:                 howto manager.      (line  674)
+* BFD_RELOC_SH_TLS_DTPMOD32:             howto manager.      (line  742)
+* BFD_RELOC_SH_TLS_DTPOFF32:             howto manager.      (line  743)
+* BFD_RELOC_SH_TLS_GD_32:                howto manager.      (line  737)
+* BFD_RELOC_SH_TLS_IE_32:                howto manager.      (line  740)
+* BFD_RELOC_SH_TLS_LD_32:                howto manager.      (line  738)
+* BFD_RELOC_SH_TLS_LDO_32:               howto manager.      (line  739)
+* BFD_RELOC_SH_TLS_LE_32:                howto manager.      (line  741)
+* BFD_RELOC_SH_TLS_TPOFF32:              howto manager.      (line  744)
+* BFD_RELOC_SH_USES:                     howto manager.      (line  675)
+* BFD_RELOC_SPARC13:                     howto manager.      (line  119)
+* BFD_RELOC_SPARC22:                     howto manager.      (line  118)
+* BFD_RELOC_SPARC_10:                    howto manager.      (line  141)
+* BFD_RELOC_SPARC_11:                    howto manager.      (line  142)
+* BFD_RELOC_SPARC_5:                     howto manager.      (line  154)
+* BFD_RELOC_SPARC_6:                     howto manager.      (line  153)
+* BFD_RELOC_SPARC_64:                    howto manager.      (line  140)
+* BFD_RELOC_SPARC_7:                     howto manager.      (line  152)
+* BFD_RELOC_SPARC_BASE13:                howto manager.      (line  136)
+* BFD_RELOC_SPARC_BASE22:                howto manager.      (line  137)
+* BFD_RELOC_SPARC_COPY:                  howto manager.      (line  126)
+* BFD_RELOC_SPARC_DISP64:                howto manager.      (line  155)
+* BFD_RELOC_SPARC_GLOB_DAT:              howto manager.      (line  127)
+* BFD_RELOC_SPARC_GOT10:                 howto manager.      (line  120)
+* BFD_RELOC_SPARC_GOT13:                 howto manager.      (line  121)
+* BFD_RELOC_SPARC_GOT22:                 howto manager.      (line  122)
+* BFD_RELOC_SPARC_H44:                   howto manager.      (line  160)
+* BFD_RELOC_SPARC_HH22:                  howto manager.      (line  144)
+* BFD_RELOC_SPARC_HIX22:                 howto manager.      (line  158)
+* BFD_RELOC_SPARC_HM10:                  howto manager.      (line  145)
+* BFD_RELOC_SPARC_JMP_SLOT:              howto manager.      (line  128)
+* BFD_RELOC_SPARC_L44:                   howto manager.      (line  162)
+* BFD_RELOC_SPARC_LM22:                  howto manager.      (line  146)
+* BFD_RELOC_SPARC_LOX10:                 howto manager.      (line  159)
+* BFD_RELOC_SPARC_M44:                   howto manager.      (line  161)
+* BFD_RELOC_SPARC_OLO10:                 howto manager.      (line  143)
+* BFD_RELOC_SPARC_PC10:                  howto manager.      (line  123)
+* BFD_RELOC_SPARC_PC22:                  howto manager.      (line  124)
+* BFD_RELOC_SPARC_PC_HH22:               howto manager.      (line  147)
+* BFD_RELOC_SPARC_PC_HM10:               howto manager.      (line  148)
+* BFD_RELOC_SPARC_PC_LM22:               howto manager.      (line  149)
+* BFD_RELOC_SPARC_PLT32:                 howto manager.      (line  156)
+* BFD_RELOC_SPARC_PLT64:                 howto manager.      (line  157)
+* BFD_RELOC_SPARC_REGISTER:              howto manager.      (line  163)
+* BFD_RELOC_SPARC_RELATIVE:              howto manager.      (line  129)
+* BFD_RELOC_SPARC_REV32:                 howto manager.      (line  166)
+* BFD_RELOC_SPARC_TLS_DTPMOD32:          howto manager.      (line  187)
+* BFD_RELOC_SPARC_TLS_DTPMOD64:          howto manager.      (line  188)
+* BFD_RELOC_SPARC_TLS_DTPOFF32:          howto manager.      (line  189)
+* BFD_RELOC_SPARC_TLS_DTPOFF64:          howto manager.      (line  190)
+* BFD_RELOC_SPARC_TLS_GD_ADD:            howto manager.      (line  171)
+* BFD_RELOC_SPARC_TLS_GD_CALL:           howto manager.      (line  172)
+* BFD_RELOC_SPARC_TLS_GD_HI22:           howto manager.      (line  169)
+* BFD_RELOC_SPARC_TLS_GD_LO10:           howto manager.      (line  170)
+* BFD_RELOC_SPARC_TLS_IE_ADD:            howto manager.      (line  184)
+* BFD_RELOC_SPARC_TLS_IE_HI22:           howto manager.      (line  180)
+* BFD_RELOC_SPARC_TLS_IE_LD:             howto manager.      (line  182)
+* BFD_RELOC_SPARC_TLS_IE_LDX:            howto manager.      (line  183)
+* BFD_RELOC_SPARC_TLS_IE_LO10:           howto manager.      (line  181)
+* BFD_RELOC_SPARC_TLS_LDM_ADD:           howto manager.      (line  175)
+* BFD_RELOC_SPARC_TLS_LDM_CALL:          howto manager.      (line  176)
+* BFD_RELOC_SPARC_TLS_LDM_HI22:          howto manager.      (line  173)
+* BFD_RELOC_SPARC_TLS_LDM_LO10:          howto manager.      (line  174)
+* BFD_RELOC_SPARC_TLS_LDO_ADD:           howto manager.      (line  179)
+* BFD_RELOC_SPARC_TLS_LDO_HIX22:         howto manager.      (line  177)
+* BFD_RELOC_SPARC_TLS_LDO_LOX10:         howto manager.      (line  178)
+* BFD_RELOC_SPARC_TLS_LE_HIX22:          howto manager.      (line  185)
+* BFD_RELOC_SPARC_TLS_LE_LOX10:          howto manager.      (line  186)
+* BFD_RELOC_SPARC_TLS_TPOFF32:           howto manager.      (line  191)
+* BFD_RELOC_SPARC_TLS_TPOFF64:           howto manager.      (line  192)
+* BFD_RELOC_SPARC_UA16:                  howto manager.      (line  130)
+* BFD_RELOC_SPARC_UA32:                  howto manager.      (line  131)
+* BFD_RELOC_SPARC_UA64:                  howto manager.      (line  132)
+* BFD_RELOC_SPARC_WDISP16:               howto manager.      (line  150)
+* BFD_RELOC_SPARC_WDISP19:               howto manager.      (line  151)
+* BFD_RELOC_SPARC_WDISP22:               howto manager.      (line  117)
+* BFD_RELOC_SPARC_WPLT30:                howto manager.      (line  125)
+* BFD_RELOC_THUMB_PCREL_BLX:             howto manager.      (line  601)
+* BFD_RELOC_THUMB_PCREL_BRANCH12:        howto manager.      (line  749)
+* BFD_RELOC_THUMB_PCREL_BRANCH23:        howto manager.      (line  750)
+* BFD_RELOC_THUMB_PCREL_BRANCH9:         howto manager.      (line  748)
+* BFD_RELOC_TIC30_LDP:                   howto manager.      (line  956)
+* BFD_RELOC_TIC54X_16_OF_23:             howto manager.      (line  974)
+* BFD_RELOC_TIC54X_23:                   howto manager.      (line  971)
+* BFD_RELOC_TIC54X_MS7_OF_23:            howto manager.      (line  979)
+* BFD_RELOC_TIC54X_PARTLS7:              howto manager.      (line  961)
+* BFD_RELOC_TIC54X_PARTMS9:              howto manager.      (line  966)
+* bfd_reloc_type_lookup:                 howto manager.      (line 1693)
+* BFD_RELOC_V850_22_PCREL:               howto manager.      (line  883)
+* BFD_RELOC_V850_9_PCREL:                howto manager.      (line  880)
+* BFD_RELOC_V850_ALIGN:                  howto manager.      (line  941)
+* BFD_RELOC_V850_CALLT_16_16_OFFSET:     howto manager.      (line  932)
+* BFD_RELOC_V850_CALLT_6_7_OFFSET:       howto manager.      (line  929)
+* BFD_RELOC_V850_LO16_SPLIT_OFFSET:      howto manager.      (line  944)
+* BFD_RELOC_V850_LONGCALL:               howto manager.      (line  935)
+* BFD_RELOC_V850_LONGJUMP:               howto manager.      (line  938)
+* BFD_RELOC_V850_SDA_15_16_OFFSET:       howto manager.      (line  889)
+* BFD_RELOC_V850_SDA_16_16_OFFSET:       howto manager.      (line  886)
+* BFD_RELOC_V850_SDA_16_16_SPLIT_OFFSET: howto manager.      (line  921)
+* BFD_RELOC_V850_TDA_16_16_OFFSET:       howto manager.      (line  911)
+* BFD_RELOC_V850_TDA_4_4_OFFSET:         howto manager.      (line  918)
+* BFD_RELOC_V850_TDA_4_5_OFFSET:         howto manager.      (line  914)
+* BFD_RELOC_V850_TDA_6_8_OFFSET:         howto manager.      (line  900)
+* BFD_RELOC_V850_TDA_7_7_OFFSET:         howto manager.      (line  908)
+* BFD_RELOC_V850_TDA_7_8_OFFSET:         howto manager.      (line  904)
+* BFD_RELOC_V850_ZDA_15_16_OFFSET:       howto manager.      (line  896)
+* BFD_RELOC_V850_ZDA_16_16_OFFSET:       howto manager.      (line  893)
+* BFD_RELOC_V850_ZDA_16_16_SPLIT_OFFSET: howto manager.      (line  925)
+* BFD_RELOC_VAX_GLOB_DAT:                howto manager.      (line 1594)
+* BFD_RELOC_VAX_JMP_SLOT:                howto manager.      (line 1595)
+* BFD_RELOC_VAX_RELATIVE:                howto manager.      (line 1596)
+* BFD_RELOC_VPE4KMATH_DATA:              howto manager.      (line 1291)
+* BFD_RELOC_VPE4KMATH_INSN:              howto manager.      (line 1292)
+* BFD_RELOC_VTABLE_ENTRY:                howto manager.      (line 1296)
+* BFD_RELOC_VTABLE_INHERIT:              howto manager.      (line 1295)
+* BFD_RELOC_X86_64_32S:                  howto manager.      (line  449)
+* BFD_RELOC_X86_64_COPY:                 howto manager.      (line  444)
+* BFD_RELOC_X86_64_DTPMOD64:             howto manager.      (line  450)
+* BFD_RELOC_X86_64_DTPOFF32:             howto manager.      (line  455)
+* BFD_RELOC_X86_64_DTPOFF64:             howto manager.      (line  451)
+* BFD_RELOC_X86_64_GLOB_DAT:             howto manager.      (line  445)
+* BFD_RELOC_X86_64_GOT32:                howto manager.      (line  442)
+* BFD_RELOC_X86_64_GOTPCREL:             howto manager.      (line  448)
+* BFD_RELOC_X86_64_GOTTPOFF:             howto manager.      (line  456)
+* BFD_RELOC_X86_64_JUMP_SLOT:            howto manager.      (line  446)
+* BFD_RELOC_X86_64_PLT32:                howto manager.      (line  443)
+* BFD_RELOC_X86_64_RELATIVE:             howto manager.      (line  447)
+* BFD_RELOC_X86_64_TLSGD:                howto manager.      (line  453)
+* BFD_RELOC_X86_64_TLSLD:                howto manager.      (line  454)
+* BFD_RELOC_X86_64_TPOFF32:              howto manager.      (line  457)
+* BFD_RELOC_X86_64_TPOFF64:              howto manager.      (line  452)
+* BFD_RELOC_XSTORMY16_12:                howto manager.      (line 1589)
+* BFD_RELOC_XSTORMY16_24:                howto manager.      (line 1590)
+* BFD_RELOC_XSTORMY16_FPTR16:            howto manager.      (line 1591)
+* BFD_RELOC_XSTORMY16_REL_12:            howto manager.      (line 1588)
+* BFD_RELOC_XTENSA_ASM_EXPAND:           howto manager.      (line 1682)
+* BFD_RELOC_XTENSA_ASM_SIMPLIFY:         howto manager.      (line 1687)
+* BFD_RELOC_XTENSA_DIFF16:               howto manager.      (line 1629)
+* BFD_RELOC_XTENSA_DIFF32:               howto manager.      (line 1630)
+* BFD_RELOC_XTENSA_DIFF8:                howto manager.      (line 1628)
+* BFD_RELOC_XTENSA_GLOB_DAT:             howto manager.      (line 1618)
+* BFD_RELOC_XTENSA_JMP_SLOT:             howto manager.      (line 1619)
+* BFD_RELOC_XTENSA_OP0:                  howto manager.      (line 1676)
+* BFD_RELOC_XTENSA_OP1:                  howto manager.      (line 1677)
+* BFD_RELOC_XTENSA_OP2:                  howto manager.      (line 1678)
+* BFD_RELOC_XTENSA_PLT:                  howto manager.      (line 1623)
+* BFD_RELOC_XTENSA_RELATIVE:             howto manager.      (line 1620)
+* BFD_RELOC_XTENSA_RTLD:                 howto manager.      (line 1613)
+* BFD_RELOC_XTENSA_SLOT0_ALT:            howto manager.      (line 1658)
+* BFD_RELOC_XTENSA_SLOT0_OP:             howto manager.      (line 1638)
+* BFD_RELOC_XTENSA_SLOT10_ALT:           howto manager.      (line 1668)
+* BFD_RELOC_XTENSA_SLOT10_OP:            howto manager.      (line 1648)
+* BFD_RELOC_XTENSA_SLOT11_ALT:           howto manager.      (line 1669)
+* BFD_RELOC_XTENSA_SLOT11_OP:            howto manager.      (line 1649)
+* BFD_RELOC_XTENSA_SLOT12_ALT:           howto manager.      (line 1670)
+* BFD_RELOC_XTENSA_SLOT12_OP:            howto manager.      (line 1650)
+* BFD_RELOC_XTENSA_SLOT13_ALT:           howto manager.      (line 1671)
+* BFD_RELOC_XTENSA_SLOT13_OP:            howto manager.      (line 1651)
+* BFD_RELOC_XTENSA_SLOT14_ALT:           howto manager.      (line 1672)
+* BFD_RELOC_XTENSA_SLOT14_OP:            howto manager.      (line 1652)
+* BFD_RELOC_XTENSA_SLOT1_ALT:            howto manager.      (line 1659)
+* BFD_RELOC_XTENSA_SLOT1_OP:             howto manager.      (line 1639)
+* BFD_RELOC_XTENSA_SLOT2_ALT:            howto manager.      (line 1660)
+* BFD_RELOC_XTENSA_SLOT2_OP:             howto manager.      (line 1640)
+* BFD_RELOC_XTENSA_SLOT3_ALT:            howto manager.      (line 1661)
+* BFD_RELOC_XTENSA_SLOT3_OP:             howto manager.      (line 1641)
+* BFD_RELOC_XTENSA_SLOT4_ALT:            howto manager.      (line 1662)
+* BFD_RELOC_XTENSA_SLOT4_OP:             howto manager.      (line 1642)
+* BFD_RELOC_XTENSA_SLOT5_ALT:            howto manager.      (line 1663)
+* BFD_RELOC_XTENSA_SLOT5_OP:             howto manager.      (line 1643)
+* BFD_RELOC_XTENSA_SLOT6_ALT:            howto manager.      (line 1664)
+* BFD_RELOC_XTENSA_SLOT6_OP:             howto manager.      (line 1644)
+* BFD_RELOC_XTENSA_SLOT7_ALT:            howto manager.      (line 1665)
+* BFD_RELOC_XTENSA_SLOT7_OP:             howto manager.      (line 1645)
+* BFD_RELOC_XTENSA_SLOT8_ALT:            howto manager.      (line 1666)
+* BFD_RELOC_XTENSA_SLOT8_OP:             howto manager.      (line 1646)
+* BFD_RELOC_XTENSA_SLOT9_ALT:            howto manager.      (line 1667)
+* BFD_RELOC_XTENSA_SLOT9_OP:             howto manager.      (line 1647)
+* bfd_scan_arch:                         Architectures.      (line  369)
+* bfd_scan_vma:                          BFD front end.      (line  420)
+* bfd_seach_for_target:                  bfd_target.         (line  445)
+* bfd_section_already_linked:            Writing the symbol table.
+                                                             (line   55)
+* bfd_section_list_clear:                section prototypes. (line    8)
+* bfd_sections_find_if:                  section prototypes. (line  145)
+* bfd_set_arch_info:                     Architectures.      (line  410)
+* bfd_set_archive_head:                  Archives.           (line   66)
+* bfd_set_default_target:                bfd_target.         (line  410)
+* bfd_set_error:                         BFD front end.      (line  235)
+* bfd_set_error_handler:                 BFD front end.      (line  275)
+* bfd_set_error_program_name:            BFD front end.      (line  284)
+* bfd_set_file_flags:                    BFD front end.      (line  340)
+* bfd_set_format:                        Formats.            (line   65)
+* bfd_set_gp_size:                       BFD front end.      (line  410)
+* bfd_set_private_flags:                 BFD front end.      (line  487)
+* bfd_set_reloc:                         BFD front end.      (line  330)
+* bfd_set_section_contents:              section prototypes. (line  176)
+* bfd_set_section_flags:                 section prototypes. (line  109)
+* bfd_set_section_size:                  section prototypes. (line  162)
+* bfd_set_start_address:                 BFD front end.      (line  389)
+* bfd_set_symtab:                        symbol handling functions.
+                                                             (line   60)
+* bfd_symbol_info:                       symbol handling functions.
+                                                             (line  130)
+* bfd_target_list:                       bfd_target.         (line  436)
+* bfd_write_bigendian_4byte_int:         Internal.           (line   10)
+* bfd_zalloc:                            Opening and Closing.
+                                                             (line  188)
+* coff_symbol_type:                      coff.               (line  186)
+* core_file_matches_executable_p:        Core Files.         (line   27)
+* find_separate_debug_file:              Opening and Closing.
+                                                             (line  230)
+* get_debug_link_info:                   Opening and Closing.
+                                                             (line  211)
+* Hash tables:                           Hash Tables.        (line    6)
+* internal object-file format:           Canonical format.   (line   11)
+* Linker:                                Linker Functions.   (line    6)
+* Other functions:                       BFD front end.      (line  502)
+* separate_debug_file_exists:            Opening and Closing.
+                                                             (line  221)
+* struct bfd_iovec:                      BFD front end.      (line  646)
+* target vector (_bfd_final_link):       Performing the Final Link.
+                                                             (line    6)
+* target vector (_bfd_link_add_symbols): Adding Symbols to the Hash Table.
+                                                             (line    6)
+* target vector (_bfd_link_hash_table_create): Creating a Linker Hash Table.
+                                                             (line    6)
+* The HOWTO Macro:                       typedef arelent.    (line  290)
+* what is it?:                           Overview.           (line    6)
+
+
 
 Tag Table:
-(Indirect)
-Node: Top724
-Node: Overview1056
-Node: History2107
-Node: How It Works3053
-Node: What BFD Version 2 Can Do4595
-Node: BFD information loss5910
-Node: Canonical format8442
-Node: BFD front end12814
-Node: Memory Usage38041
-Node: Initialization39269
-Node: Sections39665
-Node: Section Input40148
-Node: Section Output41513
-Node: typedef asection43999
-Node: section prototypes61598
-Node: Symbols70581
-Node: Reading Symbols72176
-Node: Writing Symbols73283
-Node: Mini Symbols74992
-Node: typedef asymbol75966
-Node: symbol handling functions80884
-Node: Archives86226
-Node: Formats89903
-Node: Relocations92794
-Node: typedef arelent93521
-Node: howto manager109239
-Node: Core Files165412
-Node: Targets166491
-Node: bfd_target168461
-Node: Architectures187781
-Node: Opening and Closing208078
-Node: Internal217791
-Node: File Caching224063
-Node: Linker Functions227370
-Node: Creating a Linker Hash Table229043
-Node: Adding Symbols to the Hash Table230781
-Node: Differing file formats231681
-Node: Adding symbols from an object file233429
-Node: Adding symbols from an archive235580
-Node: Performing the Final Link237994
-Node: Information provided by the linker239236
-Node: Relocating the section contents240386
-Node: Writing the symbol table242137
-Node: Hash Tables245130
-Node: Creating and Freeing a Hash Table246328
-Node: Looking Up or Entering a String247578
-Node: Traversing a Hash Table248831
-Node: Deriving a New Hash Table Type249620
-Node: Define the Derived Structures250686
-Node: Write the Derived Creation Routine251767
-Node: Write Other Derived Routines254461
-Node: BFD back ends255776
-Node: What to Put Where256046
-Node: aout256184
-Node: coff262435
-Node: elf287111
-Node: mmo287965
-Node: File layout288893
-Node: Symbol-table294540
-Node: mmo section mapping298309
-Node: GNU Free Documentation License301961
-Node: Index321681
+Node: Top758
+Node: Overview1090
+Node: History2141
+Node: How It Works3087
+Node: What BFD Version 2 Can Do4629
+Node: BFD information loss5944
+Node: Canonical format8476
+Node: BFD front end12848
+Node: Memory Usage38075
+Node: Initialization39303
+Node: Sections39699
+Node: Section Input40182
+Node: Section Output41547
+Node: typedef asection44033
+Node: section prototypes61632
+Node: Symbols70615
+Node: Reading Symbols72210
+Node: Writing Symbols73317
+Node: Mini Symbols75026
+Node: typedef asymbol76000
+Node: symbol handling functions80918
+Node: Archives86260
+Node: Formats89937
+Node: Relocations92828
+Node: typedef arelent93555
+Node: howto manager109273
+Node: Core Files165446
+Node: Targets166525
+Node: bfd_target168495
+Node: Architectures187815
+Node: Opening and Closing208112
+Node: Internal217825
+Node: File Caching224097
+Node: Linker Functions227404
+Node: Creating a Linker Hash Table229077
+Node: Adding Symbols to the Hash Table230815
+Node: Differing file formats231715
+Node: Adding symbols from an object file233463
+Node: Adding symbols from an archive235614
+Node: Performing the Final Link238028
+Node: Information provided by the linker239270
+Node: Relocating the section contents240420
+Node: Writing the symbol table242171
+Node: Hash Tables245164
+Node: Creating and Freeing a Hash Table246362
+Node: Looking Up or Entering a String247612
+Node: Traversing a Hash Table248865
+Node: Deriving a New Hash Table Type249654
+Node: Define the Derived Structures250720
+Node: Write the Derived Creation Routine251801
+Node: Write Other Derived Routines254495
+Node: BFD back ends255810
+Node: What to Put Where256080
+Node: aout256218
+Node: coff262469
+Node: elf287145
+Node: mmo287999
+Node: File layout288927
+Node: Symbol-table294574
+Node: mmo section mapping298343
+Node: GNU Free Documentation License301995
+Node: Index321715
 
 End Tag Table
diff -urN binutils-2.16.1/bfd/doc/bfd.info-1 binutils-2.16.1-STEP/bfd/doc/bfd.info-1
--- binutils-2.16.1/bfd/doc/bfd.info-1	2005-06-13 07:32:58.000000000 +1200
+++ binutils-2.16.1-STEP/bfd/doc/bfd.info-1	1970-01-01 12:00:00.000000000 +1200
@@ -1,8006 +0,0 @@
-This is ../.././bfd/doc/bfd.info, produced by makeinfo version 4.7 from
-../.././bfd/doc/bfd.texinfo.
-
-START-INFO-DIR-ENTRY
-* Bfd: (bfd).                   The Binary File Descriptor library.
-END-INFO-DIR-ENTRY
-
-   This file documents the BFD library.
-
-   Copyright (C) 1991, 2000, 2001, 2003 Free Software Foundation, Inc.
-
-   Permission is granted to copy, distribute and/or modify this document
-     under the terms of the GNU Free Documentation License, Version 1.1
-     or any later version published by the Free Software Foundation;
-   with no Invariant Sections, with no Front-Cover Texts, and with no
-    Back-Cover Texts.  A copy of the license is included in the
-section entitled "GNU Free Documentation License".
-
-
-File: bfd.info,  Node: Top,  Next: Overview,  Prev: (dir),  Up: (dir)
-
-   This file documents the binary file descriptor library libbfd.
-
-* Menu:
-
-* Overview::			Overview of BFD
-* BFD front end::		BFD front end
-* BFD back ends::		BFD back ends
-* GNU Free Documentation License::  GNU Free Documentation License
-* Index::			Index
-
-
-File: bfd.info,  Node: Overview,  Next: BFD front end,  Prev: Top,  Up: Top
-
-1 Introduction
-**************
-
-BFD is a package which allows applications to use the same routines to
-operate on object files whatever the object file format.  A new object
-file format can be supported simply by creating a new BFD back end and
-adding it to the library.
-
-   BFD is split into two parts: the front end, and the back ends (one
-for each object file format).
-   * The front end of BFD provides the interface to the user. It manages
-     memory and various canonical data structures. The front end also
-     decides which back end to use and when to call back end routines.
-
-   * The back ends provide BFD its view of the real world. Each back
-     end provides a set of calls which the BFD front end can use to
-     maintain its canonical form. The back ends also may keep around
-     information for their own use, for greater efficiency.
-
-* Menu:
-
-* History::			History
-* How It Works::		How It Works
-* What BFD Version 2 Can Do::	What BFD Version 2 Can Do
-
-
-File: bfd.info,  Node: History,  Next: How It Works,  Prev: Overview,  Up: Overview
-
-1.1 History
-===========
-
-One spur behind BFD was the desire, on the part of the GNU 960 team at
-Intel Oregon, for interoperability of applications on their COFF and
-b.out file formats.  Cygnus was providing GNU support for the team, and
-was contracted to provide the required functionality.
-
-   The name came from a conversation David Wallace was having with
-Richard Stallman about the library: RMS said that it would be quite
-hard--David said "BFD".  Stallman was right, but the name stuck.
-
-   At the same time, Ready Systems wanted much the same thing, but for
-different object file formats: IEEE-695, Oasys, Srecords, a.out and 68k
-coff.
-
-   BFD was first implemented by members of Cygnus Support; Steve
-Chamberlain (`sac@cygnus.com'), John Gilmore (`gnu@cygnus.com'), K.
-Richard Pixley (`rich@cygnus.com') and David Henkel-Wallace
-(`gumby@cygnus.com').
-
-
-File: bfd.info,  Node: How It Works,  Next: What BFD Version 2 Can Do,  Prev: History,  Up: Overview
-
-1.2 How To Use BFD
-==================
-
-To use the library, include `bfd.h' and link with `libbfd.a'.
-
-   BFD provides a common interface to the parts of an object file for a
-calling application.
-
-   When an application sucessfully opens a target file (object,
-archive, or whatever), a pointer to an internal structure is returned.
-This pointer points to a structure called `bfd', described in `bfd.h'.
-Our convention is to call this pointer a BFD, and instances of it
-within code `abfd'.  All operations on the target object file are
-applied as methods to the BFD.  The mapping is defined within `bfd.h'
-in a set of macros, all beginning with `bfd_' to reduce namespace
-pollution.
-
-   For example, this sequence does what you would probably expect:
-return the number of sections in an object file attached to a BFD
-`abfd'.
-
-     #include "bfd.h"
-
-     unsigned int number_of_sections (abfd)
-     bfd *abfd;
-     {
-       return bfd_count_sections (abfd);
-     }
-
-   The abstraction used within BFD is that an object file has:
-
-   * a header,
-
-   * a number of sections containing raw data (*note Sections::),
-
-   * a set of relocations (*note Relocations::), and
-
-   * some symbol information (*note Symbols::).
-   Also, BFDs opened for archives have the additional attribute of an
-index and contain subordinate BFDs. This approach is fine for a.out and
-coff, but loses efficiency when applied to formats such as S-records and
-IEEE-695.
-
-
-File: bfd.info,  Node: What BFD Version 2 Can Do,  Prev: How It Works,  Up: Overview
-
-1.3 What BFD Version 2 Can Do
-=============================
-
-When an object file is opened, BFD subroutines automatically determine
-the format of the input object file.  They then build a descriptor in
-memory with pointers to routines that will be used to access elements of
-the object file's data structures.
-
-   As different information from the object files is required, BFD
-reads from different sections of the file and processes them.  For
-example, a very common operation for the linker is processing symbol
-tables.  Each BFD back end provides a routine for converting between
-the object file's representation of symbols and an internal canonical
-format. When the linker asks for the symbol table of an object file, it
-calls through a memory pointer to the routine from the relevant BFD
-back end which reads and converts the table into a canonical form.  The
-linker then operates upon the canonical form. When the link is finished
-and the linker writes the output file's symbol table, another BFD back
-end routine is called to take the newly created symbol table and
-convert it into the chosen output format.
-
-* Menu:
-
-* BFD information loss::	Information Loss
-* Canonical format::		The BFD	canonical object-file format
-
-
-File: bfd.info,  Node: BFD information loss,  Next: Canonical format,  Up: What BFD Version 2 Can Do
-
-1.3.1 Information Loss
-----------------------
-
-_Information can be lost during output._ The output formats supported
-by BFD do not provide identical facilities, and information which can
-be described in one form has nowhere to go in another format. One
-example of this is alignment information in `b.out'. There is nowhere
-in an `a.out' format file to store alignment information on the
-contained data, so when a file is linked from `b.out' and an `a.out'
-image is produced, alignment information will not propagate to the
-output file. (The linker will still use the alignment information
-internally, so the link is performed correctly).
-
-   Another example is COFF section names. COFF files may contain an
-unlimited number of sections, each one with a textual section name. If
-the target of the link is a format which does not have many sections
-(e.g., `a.out') or has sections without names (e.g., the Oasys format),
-the link cannot be done simply. You can circumvent this problem by
-describing the desired input-to-output section mapping with the linker
-command language.
-
-   _Information can be lost during canonicalization._ The BFD internal
-canonical form of the external formats is not exhaustive; there are
-structures in input formats for which there is no direct representation
-internally.  This means that the BFD back ends cannot maintain all
-possible data richness through the transformation between external to
-internal and back to external formats.
-
-   This limitation is only a problem when an application reads one
-format and writes another.  Each BFD back end is responsible for
-maintaining as much data as possible, and the internal BFD canonical
-form has structures which are opaque to the BFD core, and exported only
-to the back ends. When a file is read in one format, the canonical form
-is generated for BFD and the application. At the same time, the back
-end saves away any information which may otherwise be lost. If the data
-is then written back in the same format, the back end routine will be
-able to use the canonical form provided by the BFD core as well as the
-information it prepared earlier.  Since there is a great deal of
-commonality between back ends, there is no information lost when
-linking or copying big endian COFF to little endian COFF, or `a.out' to
-`b.out'.  When a mixture of formats is linked, the information is only
-lost from the files whose format differs from the destination.
-
-
-File: bfd.info,  Node: Canonical format,  Prev: BFD information loss,  Up: What BFD Version 2 Can Do
-
-1.3.2 The BFD canonical object-file format
-------------------------------------------
-
-The greatest potential for loss of information occurs when there is the
-least overlap between the information provided by the source format,
-that stored by the canonical format, and that needed by the destination
-format. A brief description of the canonical form may help you
-understand which kinds of data you can count on preserving across
-conversions.  
-
-_files_
-     Information stored on a per-file basis includes target machine
-     architecture, particular implementation format type, a demand
-     pageable bit, and a write protected bit.  Information like Unix
-     magic numbers is not stored here--only the magic numbers' meaning,
-     so a `ZMAGIC' file would have both the demand pageable bit and the
-     write protected text bit set.  The byte order of the target is
-     stored on a per-file basis, so that big- and little-endian object
-     files may be used with one another.
-
-_sections_
-     Each section in the input file contains the name of the section,
-     the section's original address in the object file, size and
-     alignment information, various flags, and pointers into other BFD
-     data structures.
-
-_symbols_
-     Each symbol contains a pointer to the information for the object
-     file which originally defined it, its name, its value, and various
-     flag bits.  When a BFD back end reads in a symbol table, it
-     relocates all symbols to make them relative to the base of the
-     section where they were defined.  Doing this ensures that each
-     symbol points to its containing section.  Each symbol also has a
-     varying amount of hidden private data for the BFD back end.  Since
-     the symbol points to the original file, the private data format
-     for that symbol is accessible.  `ld' can operate on a collection
-     of symbols of wildly different formats without problems.
-
-     Normal global and simple local symbols are maintained on output,
-     so an output file (no matter its format) will retain symbols
-     pointing to functions and to global, static, and common variables.
-     Some symbol information is not worth retaining; in `a.out', type
-     information is stored in the symbol table as long symbol names.
-     This information would be useless to most COFF debuggers; the
-     linker has command line switches to allow users to throw it away.
-
-     There is one word of type information within the symbol, so if the
-     format supports symbol type information within symbols (for
-     example, COFF, IEEE, Oasys) and the type is simple enough to fit
-     within one word (nearly everything but aggregates), the
-     information will be preserved.
-
-_relocation level_
-     Each canonical BFD relocation record contains a pointer to the
-     symbol to relocate to, the offset of the data to relocate, the
-     section the data is in, and a pointer to a relocation type
-     descriptor. Relocation is performed by passing messages through
-     the relocation type descriptor and the symbol pointer. Therefore,
-     relocations can be performed on output data using a relocation
-     method that is only available in one of the input formats. For
-     instance, Oasys provides a byte relocation format.  A relocation
-     record requesting this relocation type would point indirectly to a
-     routine to perform this, so the relocation may be performed on a
-     byte being written to a 68k COFF file, even though 68k COFF has no
-     such relocation type.
-
-_line numbers_
-     Object formats can contain, for debugging purposes, some form of
-     mapping between symbols, source line numbers, and addresses in the
-     output file.  These addresses have to be relocated along with the
-     symbol information.  Each symbol with an associated list of line
-     number records points to the first record of the list.  The head
-     of a line number list consists of a pointer to the symbol, which
-     allows finding out the address of the function whose line number
-     is being described. The rest of the list is made up of pairs:
-     offsets into the section and line numbers. Any format which can
-     simply derive this information can pass it successfully between
-     formats (COFF, IEEE and Oasys).
-
-
-File: bfd.info,  Node: BFD front end,  Next: BFD back ends,  Prev: Overview,  Up: Top
-
-2 BFD Front End
-***************
-
-2.1 `typedef bfd'
-=================
-
-A BFD has type `bfd'; objects of this type are the cornerstone of any
-application using BFD. Using BFD consists of making references though
-the BFD and to data in the BFD.
-
-   Here is the structure that defines the type `bfd'.  It contains the
-major data about the file and pointers to the rest of the data.
-
-
-     struct bfd
-     {
-       /* A unique identifier of the BFD  */
-       unsigned int id;
-
-       /* The filename the application opened the BFD with.  */
-       const char *filename;
-
-       /* A pointer to the target jump table.  */
-       const struct bfd_target *xvec;
-
-       /* The IOSTREAM, and corresponding IO vector that provide access
-          to the file backing the BFD.  */
-       void *iostream;
-       const struct bfd_iovec *iovec;
-
-       /* Is the file descriptor being cached?  That is, can it be closed as
-          needed, and re-opened when accessed later?  */
-       bfd_boolean cacheable;
-
-       /* Marks whether there was a default target specified when the
-          BFD was opened. This is used to select which matching algorithm
-          to use to choose the back end.  */
-       bfd_boolean target_defaulted;
-
-       /* The caching routines use these to maintain a
-          least-recently-used list of BFDs.  */
-       struct bfd *lru_prev, *lru_next;
-
-       /* When a file is closed by the caching routines, BFD retains
-          state information on the file here...  */
-       ufile_ptr where;
-
-       /* ... and here: (``once'' means at least once).  */
-       bfd_boolean opened_once;
-
-       /* Set if we have a locally maintained mtime value, rather than
-          getting it from the file each time.  */
-       bfd_boolean mtime_set;
-
-       /* File modified time, if mtime_set is TRUE.  */
-       long mtime;
-
-       /* Reserved for an unimplemented file locking extension.  */
-       int ifd;
-
-       /* The format which belongs to the BFD. (object, core, etc.)  */
-       bfd_format format;
-
-       /* The direction with which the BFD was opened.  */
-       enum bfd_direction
-         {
-           no_direction = 0,
-           read_direction = 1,
-           write_direction = 2,
-           both_direction = 3
-         }
-       direction;
-
-       /* Format_specific flags.  */
-       flagword flags;
-
-       /* Currently my_archive is tested before adding origin to
-          anything. I believe that this can become always an add of
-          origin, with origin set to 0 for non archive files.  */
-       ufile_ptr origin;
-
-       /* Remember when output has begun, to stop strange things
-          from happening.  */
-       bfd_boolean output_has_begun;
-
-       /* A hash table for section names.  */
-       struct bfd_hash_table section_htab;
-
-       /* Pointer to linked list of sections.  */
-       struct bfd_section *sections;
-
-       /* The place where we add to the section list.  */
-       struct bfd_section **section_tail;
-
-       /* The number of sections.  */
-       unsigned int section_count;
-
-       /* Stuff only useful for object files:
-          The start address.  */
-       bfd_vma start_address;
-
-       /* Used for input and output.  */
-       unsigned int symcount;
-
-       /* Symbol table for output BFD (with symcount entries).  */
-       struct bfd_symbol  **outsymbols;
-
-       /* Used for slurped dynamic symbol tables.  */
-       unsigned int dynsymcount;
-
-       /* Pointer to structure which contains architecture information.  */
-       const struct bfd_arch_info *arch_info;
-
-       /* Flag set if symbols from this BFD should not be exported.  */
-       bfd_boolean no_export;
-
-       /* Stuff only useful for archives.  */
-       void *arelt_data;
-       struct bfd *my_archive;      /* The containing archive BFD.  */
-       struct bfd *next;            /* The next BFD in the archive.  */
-       struct bfd *archive_head;    /* The first BFD in the archive.  */
-       bfd_boolean has_armap;
-
-       /* A chain of BFD structures involved in a link.  */
-       struct bfd *link_next;
-
-       /* A field used by _bfd_generic_link_add_archive_symbols.  This will
-          be used only for archive elements.  */
-       int archive_pass;
-
-       /* Used by the back end to hold private data.  */
-       union
-         {
-           struct aout_data_struct *aout_data;
-           struct artdata *aout_ar_data;
-           struct _oasys_data *oasys_obj_data;
-           struct _oasys_ar_data *oasys_ar_data;
-           struct coff_tdata *coff_obj_data;
-           struct pe_tdata *pe_obj_data;
-           struct xcoff_tdata *xcoff_obj_data;
-           struct ecoff_tdata *ecoff_obj_data;
-           struct ieee_data_struct *ieee_data;
-           struct ieee_ar_data_struct *ieee_ar_data;
-           struct srec_data_struct *srec_data;
-           struct ihex_data_struct *ihex_data;
-           struct tekhex_data_struct *tekhex_data;
-           struct elf_obj_tdata *elf_obj_data;
-           struct nlm_obj_tdata *nlm_obj_data;
-           struct bout_data_struct *bout_data;
-           struct mmo_data_struct *mmo_data;
-           struct sun_core_struct *sun_core_data;
-           struct sco5_core_struct *sco5_core_data;
-           struct trad_core_struct *trad_core_data;
-           struct som_data_struct *som_data;
-           struct hpux_core_struct *hpux_core_data;
-           struct hppabsd_core_struct *hppabsd_core_data;
-           struct sgi_core_struct *sgi_core_data;
-           struct lynx_core_struct *lynx_core_data;
-           struct osf_core_struct *osf_core_data;
-           struct cisco_core_struct *cisco_core_data;
-           struct versados_data_struct *versados_data;
-           struct netbsd_core_struct *netbsd_core_data;
-           struct mach_o_data_struct *mach_o_data;
-           struct mach_o_fat_data_struct *mach_o_fat_data;
-           struct bfd_pef_data_struct *pef_data;
-           struct bfd_pef_xlib_data_struct *pef_xlib_data;
-           struct bfd_sym_data_struct *sym_data;
-           void *any;
-         }
-       tdata;
-
-       /* Used by the application to hold private data.  */
-       void *usrdata;
-
-       /* Where all the allocated stuff under this BFD goes.  This is a
-          struct objalloc *, but we use void * to avoid requiring the inclusion
-          of objalloc.h.  */
-       void *memory;
-     };
-
-2.2 Error reporting
-===================
-
-Most BFD functions return nonzero on success (check their individual
-documentation for precise semantics).  On an error, they call
-`bfd_set_error' to set an error condition that callers can check by
-calling `bfd_get_error'.  If that returns `bfd_error_system_call', then
-check `errno'.
-
-   The easiest way to report a BFD error to the user is to use
-`bfd_perror'.
-
-2.2.1 Type `bfd_error_type'
----------------------------
-
-The values returned by `bfd_get_error' are defined by the enumerated
-type `bfd_error_type'.
-
-
-     typedef enum bfd_error
-     {
-       bfd_error_no_error = 0,
-       bfd_error_system_call,
-       bfd_error_invalid_target,
-       bfd_error_wrong_format,
-       bfd_error_wrong_object_format,
-       bfd_error_invalid_operation,
-       bfd_error_no_memory,
-       bfd_error_no_symbols,
-       bfd_error_no_armap,
-       bfd_error_no_more_archived_files,
-       bfd_error_malformed_archive,
-       bfd_error_file_not_recognized,
-       bfd_error_file_ambiguously_recognized,
-       bfd_error_no_contents,
-       bfd_error_nonrepresentable_section,
-       bfd_error_no_debug_section,
-       bfd_error_bad_value,
-       bfd_error_file_truncated,
-       bfd_error_file_too_big,
-       bfd_error_invalid_error_code
-     }
-     bfd_error_type;
-   
-2.2.1.1 `bfd_get_error'
-.......................
-
-*Synopsis*
-     bfd_error_type bfd_get_error (void);
-   *Description*
-Return the current BFD error condition.
-
-2.2.1.2 `bfd_set_error'
-.......................
-
-*Synopsis*
-     void bfd_set_error (bfd_error_type error_tag);
-   *Description*
-Set the BFD error condition to be ERROR_TAG.
-
-2.2.1.3 `bfd_errmsg'
-....................
-
-*Synopsis*
-     const char *bfd_errmsg (bfd_error_type error_tag);
-   *Description*
-Return a string describing the error ERROR_TAG, or the system error if
-ERROR_TAG is `bfd_error_system_call'.
-
-2.2.1.4 `bfd_perror'
-....................
-
-*Synopsis*
-     void bfd_perror (const char *message);
-   *Description*
-Print to the standard error stream a string describing the last BFD
-error that occurred, or the last system error if the last BFD error was
-a system call failure.  If MESSAGE is non-NULL and non-empty, the error
-string printed is preceded by MESSAGE, a colon, and a space.  It is
-followed by a newline.
-
-2.2.2 BFD error handler
------------------------
-
-Some BFD functions want to print messages describing the problem.  They
-call a BFD error handler function.  This function may be overridden by
-the program.
-
-   The BFD error handler acts like printf.
-
-
-     typedef void (*bfd_error_handler_type) (const char *, ...);
-   
-2.2.2.1 `bfd_set_error_handler'
-...............................
-
-*Synopsis*
-     bfd_error_handler_type bfd_set_error_handler (bfd_error_handler_type);
-   *Description*
-Set the BFD error handler function.  Returns the previous function.
-
-2.2.2.2 `bfd_set_error_program_name'
-....................................
-
-*Synopsis*
-     void bfd_set_error_program_name (const char *);
-   *Description*
-Set the program name to use when printing a BFD error.  This is printed
-before the error message followed by a colon and space.  The string
-must not be changed after it is passed to this function.
-
-2.2.2.3 `bfd_get_error_handler'
-...............................
-
-*Synopsis*
-     bfd_error_handler_type bfd_get_error_handler (void);
-   *Description*
-Return the BFD error handler function.
-
-2.3 Symbols
-===========
-
-2.3.0.1 `bfd_get_reloc_upper_bound'
-...................................
-
-*Synopsis*
-     long bfd_get_reloc_upper_bound (bfd *abfd, asection *sect);
-   *Description*
-Return the number of bytes required to store the relocation information
-associated with section SECT attached to bfd ABFD.  If an error occurs,
-return -1.
-
-2.3.0.2 `bfd_canonicalize_reloc'
-................................
-
-*Synopsis*
-     long bfd_canonicalize_reloc
-        (bfd *abfd, asection *sec, arelent **loc, asymbol **syms);
-   *Description*
-Call the back end associated with the open BFD ABFD and translate the
-external form of the relocation information attached to SEC into the
-internal canonical form.  Place the table into memory at LOC, which has
-been preallocated, usually by a call to `bfd_get_reloc_upper_bound'.
-Returns the number of relocs, or -1 on error.
-
-   The SYMS table is also needed for horrible internal magic reasons.
-
-2.3.0.3 `bfd_set_reloc'
-.......................
-
-*Synopsis*
-     void bfd_set_reloc
-        (bfd *abfd, asection *sec, arelent **rel, unsigned int count);
-   *Description*
-Set the relocation pointer and count within section SEC to the values
-REL and COUNT.  The argument ABFD is ignored.
-
-2.3.0.4 `bfd_set_file_flags'
-............................
-
-*Synopsis*
-     bfd_boolean bfd_set_file_flags (bfd *abfd, flagword flags);
-   *Description*
-Set the flag word in the BFD ABFD to the value FLAGS.
-
-   Possible errors are:
-   * `bfd_error_wrong_format' - The target bfd was not of object format.
-
-   * `bfd_error_invalid_operation' - The target bfd was open for
-     reading.
-
-   * `bfd_error_invalid_operation' - The flag word contained a bit
-     which was not applicable to the type of file.  E.g., an attempt
-     was made to set the `D_PAGED' bit on a BFD format which does not
-     support demand paging.
-
-2.3.0.5 `bfd_get_arch_size'
-...........................
-
-*Synopsis*
-     int bfd_get_arch_size (bfd *abfd);
-   *Description*
-Returns the architecture address size, in bits, as determined by the
-object file's format.  For ELF, this information is included in the
-header.
-
-   *Returns*
-Returns the arch size in bits if known, `-1' otherwise.
-
-2.3.0.6 `bfd_get_sign_extend_vma'
-.................................
-
-*Synopsis*
-     int bfd_get_sign_extend_vma (bfd *abfd);
-   *Description*
-Indicates if the target architecture "naturally" sign extends an
-address.  Some architectures implicitly sign extend address values when
-they are converted to types larger than the size of an address.  For
-instance, bfd_get_start_address() will return an address sign extended
-to fill a bfd_vma when this is the case.
-
-   *Returns*
-Returns `1' if the target architecture is known to sign extend
-addresses, `0' if the target architecture is known to not sign extend
-addresses, and `-1' otherwise.
-
-2.3.0.7 `bfd_set_start_address'
-...............................
-
-*Synopsis*
-     bfd_boolean bfd_set_start_address (bfd *abfd, bfd_vma vma);
-   *Description*
-Make VMA the entry point of output BFD ABFD.
-
-   *Returns*
-Returns `TRUE' on success, `FALSE' otherwise.
-
-2.3.0.8 `bfd_get_gp_size'
-.........................
-
-*Synopsis*
-     unsigned int bfd_get_gp_size (bfd *abfd);
-   *Description*
-Return the maximum size of objects to be optimized using the GP
-register under MIPS ECOFF.  This is typically set by the `-G' argument
-to the compiler, assembler or linker.
-
-2.3.0.9 `bfd_set_gp_size'
-.........................
-
-*Synopsis*
-     void bfd_set_gp_size (bfd *abfd, unsigned int i);
-   *Description*
-Set the maximum size of objects to be optimized using the GP register
-under ECOFF or MIPS ELF.  This is typically set by the `-G' argument to
-the compiler, assembler or linker.
-
-2.3.0.10 `bfd_scan_vma'
-.......................
-
-*Synopsis*
-     bfd_vma bfd_scan_vma (const char *string, const char **end, int base);
-   *Description*
-Convert, like `strtoul', a numerical expression STRING into a `bfd_vma'
-integer, and return that integer.  (Though without as many bells and
-whistles as `strtoul'.)  The expression is assumed to be unsigned
-(i.e., positive).  If given a BASE, it is used as the base for
-conversion.  A base of 0 causes the function to interpret the string in
-hex if a leading "0x" or "0X" is found, otherwise in octal if a leading
-zero is found, otherwise in decimal.
-
-   If the value would overflow, the maximum `bfd_vma' value is returned.
-
-2.3.0.11 `bfd_copy_private_header_data'
-.......................................
-
-*Synopsis*
-     bfd_boolean bfd_copy_private_header_data (bfd *ibfd, bfd *obfd);
-   *Description*
-Copy private BFD header information from the BFD IBFD to the the BFD
-OBFD.  This copies information that may require sections to exist, but
-does not require symbol tables.  Return `true' on success, `false' on
-error.  Possible error returns are:
-
-   * `bfd_error_no_memory' - Not enough memory exists to create private
-     data for OBFD.
-
-     #define bfd_copy_private_header_data(ibfd, obfd) \
-          BFD_SEND (obfd, _bfd_copy_private_header_data, \
-                    (ibfd, obfd))
-
-2.3.0.12 `bfd_copy_private_bfd_data'
-....................................
-
-*Synopsis*
-     bfd_boolean bfd_copy_private_bfd_data (bfd *ibfd, bfd *obfd);
-   *Description*
-Copy private BFD information from the BFD IBFD to the the BFD OBFD.
-Return `TRUE' on success, `FALSE' on error.  Possible error returns are:
-
-   * `bfd_error_no_memory' - Not enough memory exists to create private
-     data for OBFD.
-
-     #define bfd_copy_private_bfd_data(ibfd, obfd) \
-          BFD_SEND (obfd, _bfd_copy_private_bfd_data, \
-                    (ibfd, obfd))
-
-2.3.0.13 `bfd_merge_private_bfd_data'
-.....................................
-
-*Synopsis*
-     bfd_boolean bfd_merge_private_bfd_data (bfd *ibfd, bfd *obfd);
-   *Description*
-Merge private BFD information from the BFD IBFD to the the output file
-BFD OBFD when linking.  Return `TRUE' on success, `FALSE' on error.
-Possible error returns are:
-
-   * `bfd_error_no_memory' - Not enough memory exists to create private
-     data for OBFD.
-
-     #define bfd_merge_private_bfd_data(ibfd, obfd) \
-          BFD_SEND (obfd, _bfd_merge_private_bfd_data, \
-                    (ibfd, obfd))
-
-2.3.0.14 `bfd_set_private_flags'
-................................
-
-*Synopsis*
-     bfd_boolean bfd_set_private_flags (bfd *abfd, flagword flags);
-   *Description*
-Set private BFD flag information in the BFD ABFD.  Return `TRUE' on
-success, `FALSE' on error.  Possible error returns are:
-
-   * `bfd_error_no_memory' - Not enough memory exists to create private
-     data for OBFD.
-
-     #define bfd_set_private_flags(abfd, flags) \
-          BFD_SEND (abfd, _bfd_set_private_flags, (abfd, flags))
-
-2.3.0.15 `Other functions'
-..........................
-
-*Description*
-The following functions exist but have not yet been documented.
-     #define bfd_sizeof_headers(abfd, reloc) \
-            BFD_SEND (abfd, _bfd_sizeof_headers, (abfd, reloc))
-
-     #define bfd_find_nearest_line(abfd, sec, syms, off, file, func, line) \
-            BFD_SEND (abfd, _bfd_find_nearest_line, \
-                      (abfd, sec, syms, off, file, func, line))
-
-     #define bfd_debug_info_start(abfd) \
-            BFD_SEND (abfd, _bfd_debug_info_start, (abfd))
-
-     #define bfd_debug_info_end(abfd) \
-            BFD_SEND (abfd, _bfd_debug_info_end, (abfd))
-
-     #define bfd_debug_info_accumulate(abfd, section) \
-            BFD_SEND (abfd, _bfd_debug_info_accumulate, (abfd, section))
-
-     #define bfd_stat_arch_elt(abfd, stat) \
-            BFD_SEND (abfd, _bfd_stat_arch_elt,(abfd, stat))
-
-     #define bfd_update_armap_timestamp(abfd) \
-            BFD_SEND (abfd, _bfd_update_armap_timestamp, (abfd))
-
-     #define bfd_set_arch_mach(abfd, arch, mach)\
-            BFD_SEND ( abfd, _bfd_set_arch_mach, (abfd, arch, mach))
-
-     #define bfd_relax_section(abfd, section, link_info, again) \
-            BFD_SEND (abfd, _bfd_relax_section, (abfd, section, link_info, again))
-
-     #define bfd_gc_sections(abfd, link_info) \
-            BFD_SEND (abfd, _bfd_gc_sections, (abfd, link_info))
-
-     #define bfd_merge_sections(abfd, link_info) \
-            BFD_SEND (abfd, _bfd_merge_sections, (abfd, link_info))
-
-     #define bfd_is_group_section(abfd, sec) \
-            BFD_SEND (abfd, _bfd_is_group_section, (abfd, sec))
-
-     #define bfd_discard_group(abfd, sec) \
-            BFD_SEND (abfd, _bfd_discard_group, (abfd, sec))
-
-     #define bfd_link_hash_table_create(abfd) \
-            BFD_SEND (abfd, _bfd_link_hash_table_create, (abfd))
-
-     #define bfd_link_hash_table_free(abfd, hash) \
-            BFD_SEND (abfd, _bfd_link_hash_table_free, (hash))
-
-     #define bfd_link_add_symbols(abfd, info) \
-            BFD_SEND (abfd, _bfd_link_add_symbols, (abfd, info))
-
-     #define bfd_link_just_syms(abfd, sec, info) \
-            BFD_SEND (abfd, _bfd_link_just_syms, (sec, info))
-
-     #define bfd_final_link(abfd, info) \
-            BFD_SEND (abfd, _bfd_final_link, (abfd, info))
-
-     #define bfd_free_cached_info(abfd) \
-            BFD_SEND (abfd, _bfd_free_cached_info, (abfd))
-
-     #define bfd_get_dynamic_symtab_upper_bound(abfd) \
-            BFD_SEND (abfd, _bfd_get_dynamic_symtab_upper_bound, (abfd))
-
-     #define bfd_print_private_bfd_data(abfd, file)\
-            BFD_SEND (abfd, _bfd_print_private_bfd_data, (abfd, file))
-
-     #define bfd_canonicalize_dynamic_symtab(abfd, asymbols) \
-            BFD_SEND (abfd, _bfd_canonicalize_dynamic_symtab, (abfd, asymbols))
-
-     #define bfd_get_synthetic_symtab(abfd, count, syms, dyncount, dynsyms, ret) \
-            BFD_SEND (abfd, _bfd_get_synthetic_symtab, (abfd, count, syms, \
-                                                        dyncount, dynsyms, ret))
-
-     #define bfd_get_dynamic_reloc_upper_bound(abfd) \
-            BFD_SEND (abfd, _bfd_get_dynamic_reloc_upper_bound, (abfd))
-
-     #define bfd_canonicalize_dynamic_reloc(abfd, arels, asyms) \
-            BFD_SEND (abfd, _bfd_canonicalize_dynamic_reloc, (abfd, arels, asyms))
-
-     extern bfd_byte *bfd_get_relocated_section_contents
-       (bfd *, struct bfd_link_info *, struct bfd_link_order *, bfd_byte *,
-        bfd_boolean, asymbol **);
-
-2.3.0.16 `bfd_alt_mach_code'
-............................
-
-*Synopsis*
-     bfd_boolean bfd_alt_mach_code (bfd *abfd, int alternative);
-   *Description*
-When more than one machine code number is available for the same
-machine type, this function can be used to switch between the preferred
-one (alternative == 0) and any others.  Currently, only ELF supports
-this feature, with up to two alternate machine codes.
-
-     struct bfd_preserve
-     {
-       void *marker;
-       void *tdata;
-       flagword flags;
-       const struct bfd_arch_info *arch_info;
-       struct bfd_section *sections;
-       struct bfd_section **section_tail;
-       unsigned int section_count;
-       struct bfd_hash_table section_htab;
-     };
-   
-2.3.0.17 `bfd_preserve_save'
-............................
-
-*Synopsis*
-     bfd_boolean bfd_preserve_save (bfd *, struct bfd_preserve *);
-   *Description*
-When testing an object for compatibility with a particular target
-back-end, the back-end object_p function needs to set up certain fields
-in the bfd on successfully recognizing the object.  This typically
-happens in a piecemeal fashion, with failures possible at many points.
-On failure, the bfd is supposed to be restored to its initial state,
-which is virtually impossible.  However, restoring a subset of the bfd
-state works in practice.  This function stores the subset and
-reinitializes the bfd.
-
-2.3.0.18 `bfd_preserve_restore'
-...............................
-
-*Synopsis*
-     void bfd_preserve_restore (bfd *, struct bfd_preserve *);
-   *Description*
-This function restores bfd state saved by bfd_preserve_save.  If MARKER
-is non-NULL in struct bfd_preserve then that block and all subsequently
-bfd_alloc'd memory is freed.
-
-2.3.0.19 `bfd_preserve_finish'
-..............................
-
-*Synopsis*
-     void bfd_preserve_finish (bfd *, struct bfd_preserve *);
-   *Description*
-This function should be called when the bfd state saved by
-bfd_preserve_save is no longer needed.  ie. when the back-end object_p
-function returns with success.
-
-2.3.0.20 `struct bfd_iovec'
-...........................
-
-*Description*
-The `struct bfd_iovec' contains the internal file I/O class.  Each
-`BFD' has an instance of this class and all file I/O is routed through
-it (it is assumed that the instance implements all methods listed
-below).
-     struct bfd_iovec
-     {
-       /* To avoid problems with macros, a "b" rather than "f"
-          prefix is prepended to each method name.  */
-       /* Attempt to read/write NBYTES on ABFD's IOSTREAM storing/fetching
-          bytes starting at PTR.  Return the number of bytes actually
-          transfered (a read past end-of-file returns less than NBYTES),
-          or -1 (setting `bfd_error') if an error occurs.  */
-       file_ptr (*bread) (struct bfd *abfd, void *ptr, file_ptr nbytes);
-       file_ptr (*bwrite) (struct bfd *abfd, const void *ptr,
-                           file_ptr nbytes);
-       /* Return the current IOSTREAM file offset, or -1 (setting `bfd_error'
-          if an error occurs.  */
-       file_ptr (*btell) (struct bfd *abfd);
-       /* For the following, on successful completion a value of 0 is returned.
-          Otherwise, a value of -1 is returned (and  `bfd_error' is set).  */
-       int (*bseek) (struct bfd *abfd, file_ptr offset, int whence);
-       int (*bclose) (struct bfd *abfd);
-       int (*bflush) (struct bfd *abfd);
-       int (*bstat) (struct bfd *abfd, struct stat *sb);
-     };
-
-2.3.0.21 `bfd_get_mtime'
-........................
-
-*Synopsis*
-     long bfd_get_mtime (bfd *abfd);
-   *Description*
-Return the file modification time (as read from the file system, or
-from the archive header for archive members).
-
-2.3.0.22 `bfd_get_size'
-.......................
-
-*Synopsis*
-     long bfd_get_size (bfd *abfd);
-   *Description*
-Return the file size (as read from file system) for the file associated
-with BFD ABFD.
-
-   The initial motivation for, and use of, this routine is not so we
-can get the exact size of the object the BFD applies to, since that
-might not be generally possible (archive members for example).  It
-would be ideal if someone could eventually modify it so that such
-results were guaranteed.
-
-   Instead, we want to ask questions like "is this NNN byte sized
-object I'm about to try read from file offset YYY reasonable?"  As as
-example of where we might do this, some object formats use string
-tables for which the first `sizeof (long)' bytes of the table contain
-the size of the table itself, including the size bytes.  If an
-application tries to read what it thinks is one of these string tables,
-without some way to validate the size, and for some reason the size is
-wrong (byte swapping error, wrong location for the string table, etc.),
-the only clue is likely to be a read error when it tries to read the
-table, or a "virtual memory exhausted" error when it tries to allocate
-15 bazillon bytes of space for the 15 bazillon byte table it is about
-to read.  This function at least allows us to answer the question, "is
-the size reasonable?".
-
-* Menu:
-
-* Memory Usage::
-* Initialization::
-* Sections::
-* Symbols::
-* Archives::
-* Formats::
-* Relocations::
-* Core Files::
-* Targets::
-* Architectures::
-* Opening and Closing::
-* Internal::
-* File Caching::
-* Linker Functions::
-* Hash Tables::
-
-
-File: bfd.info,  Node: Memory Usage,  Next: Initialization,  Prev: BFD front end,  Up: BFD front end
-
-2.4 Memory Usage
-================
-
-BFD keeps all of its internal structures in obstacks. There is one
-obstack per open BFD file, into which the current state is stored. When
-a BFD is closed, the obstack is deleted, and so everything which has
-been allocated by BFD for the closing file is thrown away.
-
-   BFD does not free anything created by an application, but pointers
-into `bfd' structures become invalid on a `bfd_close'; for example,
-after a `bfd_close' the vector passed to `bfd_canonicalize_symtab' is
-still around, since it has been allocated by the application, but the
-data that it pointed to are lost.
-
-   The general rule is to not close a BFD until all operations dependent
-upon data from the BFD have been completed, or all the data from within
-the file has been copied. To help with the management of memory, there
-is a function (`bfd_alloc_size') which returns the number of bytes in
-obstacks associated with the supplied BFD. This could be used to select
-the greediest open BFD, close it to reclaim the memory, perform some
-operation and reopen the BFD again, to get a fresh copy of the data
-structures.
-
-
-File: bfd.info,  Node: Initialization,  Next: Sections,  Prev: Memory Usage,  Up: BFD front end
-
-2.5 Initialization
-==================
-
-These are the functions that handle initializing a BFD.
-
-2.5.0.1 `bfd_init'
-..................
-
-*Synopsis*
-     void bfd_init (void);
-   *Description*
-This routine must be called before any other BFD function to initialize
-magical internal data structures.
-
-
-File: bfd.info,  Node: Sections,  Next: Symbols,  Prev: Initialization,  Up: BFD front end
-
-2.6 Sections
-============
-
-The raw data contained within a BFD is maintained through the section
-abstraction.  A single BFD may have any number of sections.  It keeps
-hold of them by pointing to the first; each one points to the next in
-the list.
-
-   Sections are supported in BFD in `section.c'.
-
-* Menu:
-
-* Section Input::
-* Section Output::
-* typedef asection::
-* section prototypes::
-
-
-File: bfd.info,  Node: Section Input,  Next: Section Output,  Prev: Sections,  Up: Sections
-
-2.6.1 Section input
--------------------
-
-When a BFD is opened for reading, the section structures are created
-and attached to the BFD.
-
-   Each section has a name which describes the section in the outside
-world--for example, `a.out' would contain at least three sections,
-called `.text', `.data' and `.bss'.
-
-   Names need not be unique; for example a COFF file may have several
-sections named `.data'.
-
-   Sometimes a BFD will contain more than the "natural" number of
-sections. A back end may attach other sections containing constructor
-data, or an application may add a section (using `bfd_make_section') to
-the sections attached to an already open BFD. For example, the linker
-creates an extra section `COMMON' for each input file's BFD to hold
-information about common storage.
-
-   The raw data is not necessarily read in when the section descriptor
-is created. Some targets may leave the data in place until a
-`bfd_get_section_contents' call is made. Other back ends may read in
-all the data at once.  For example, an S-record file has to be read
-once to determine the size of the data. An IEEE-695 file doesn't
-contain raw data in sections, but data and relocation expressions
-intermixed, so the data area has to be parsed to get out the data and
-relocations.
-
-
-File: bfd.info,  Node: Section Output,  Next: typedef asection,  Prev: Section Input,  Up: Sections
-
-2.6.2 Section output
---------------------
-
-To write a new object style BFD, the various sections to be written
-have to be created. They are attached to the BFD in the same way as
-input sections; data is written to the sections using
-`bfd_set_section_contents'.
-
-   Any program that creates or combines sections (e.g., the assembler
-and linker) must use the `asection' fields `output_section' and
-`output_offset' to indicate the file sections to which each section
-must be written.  (If the section is being created from scratch,
-`output_section' should probably point to the section itself and
-`output_offset' should probably be zero.)
-
-   The data to be written comes from input sections attached (via
-`output_section' pointers) to the output sections.  The output section
-structure can be considered a filter for the input section: the output
-section determines the vma of the output data and the name, but the
-input section determines the offset into the output section of the data
-to be written.
-
-   E.g., to create a section "O", starting at 0x100, 0x123 long,
-containing two subsections, "A" at offset 0x0 (i.e., at vma 0x100) and
-"B" at offset 0x20 (i.e., at vma 0x120) the `asection' structures would
-look like:
-
-        section name          "A"
-          output_offset   0x00
-          size            0x20
-          output_section ----------->  section name    "O"
-                                  |    vma             0x100
-        section name          "B" |    size            0x123
-          output_offset   0x20    |
-          size            0x103   |
-          output_section  --------|
-
-2.6.3 Link orders
------------------
-
-The data within a section is stored in a "link_order".  These are much
-like the fixups in `gas'.  The link_order abstraction allows a section
-to grow and shrink within itself.
-
-   A link_order knows how big it is, and which is the next link_order
-and where the raw data for it is; it also points to a list of
-relocations which apply to it.
-
-   The link_order is used by the linker to perform relaxing on final
-code.  The compiler creates code which is as big as necessary to make
-it work without relaxing, and the user can select whether to relax.
-Sometimes relaxing takes a lot of time.  The linker runs around the
-relocations to see if any are attached to data which can be shrunk, if
-so it does it on a link_order by link_order basis.
-
-
-File: bfd.info,  Node: typedef asection,  Next: section prototypes,  Prev: Section Output,  Up: Sections
-
-2.6.4 typedef asection
-----------------------
-
-Here is the section structure:
-
-
-     typedef struct bfd_section
-     {
-       /* The name of the section; the name isn't a copy, the pointer is
-          the same as that passed to bfd_make_section.  */
-       const char *name;
-
-       /* A unique sequence number.  */
-       int id;
-
-       /* Which section in the bfd; 0..n-1 as sections are created in a bfd.  */
-       int index;
-
-       /* The next section in the list belonging to the BFD, or NULL.  */
-       struct bfd_section *next;
-
-       /* The field flags contains attributes of the section. Some
-          flags are read in from the object file, and some are
-          synthesized from other information.  */
-       flagword flags;
-
-     #define SEC_NO_FLAGS   0x000
-
-       /* Tells the OS to allocate space for this section when loading.
-          This is clear for a section containing debug information only.  */
-     #define SEC_ALLOC      0x001
-
-       /* Tells the OS to load the section from the file when loading.
-          This is clear for a .bss section.  */
-     #define SEC_LOAD       0x002
-
-       /* The section contains data still to be relocated, so there is
-          some relocation information too.  */
-     #define SEC_RELOC      0x004
-
-       /* A signal to the OS that the section contains read only data.  */
-     #define SEC_READONLY   0x008
-
-       /* The section contains code only.  */
-     #define SEC_CODE       0x010
-
-       /* The section contains data only.  */
-     #define SEC_DATA       0x020
-
-       /* The section will reside in ROM.  */
-     #define SEC_ROM        0x040
-
-       /* The section contains constructor information. This section
-          type is used by the linker to create lists of constructors and
-          destructors used by `g++'. When a back end sees a symbol
-          which should be used in a constructor list, it creates a new
-          section for the type of name (e.g., `__CTOR_LIST__'), attaches
-          the symbol to it, and builds a relocation. To build the lists
-          of constructors, all the linker has to do is catenate all the
-          sections called `__CTOR_LIST__' and relocate the data
-          contained within - exactly the operations it would peform on
-          standard data.  */
-     #define SEC_CONSTRUCTOR 0x080
-
-       /* The section has contents - a data section could be
-          `SEC_ALLOC' | `SEC_HAS_CONTENTS'; a debug section could be
-          `SEC_HAS_CONTENTS'  */
-     #define SEC_HAS_CONTENTS 0x100
-
-       /* An instruction to the linker to not output the section
-          even if it has information which would normally be written.  */
-     #define SEC_NEVER_LOAD 0x200
-
-       /* The section contains thread local data.  */
-     #define SEC_THREAD_LOCAL 0x400
-
-       /* The section has GOT references.  This flag is only for the
-          linker, and is currently only used by the elf32-hppa back end.
-          It will be set if global offset table references were detected
-          in this section, which indicate to the linker that the section
-          contains PIC code, and must be handled specially when doing a
-          static link.  */
-     #define SEC_HAS_GOT_REF 0x800
-
-       /* The section contains common symbols (symbols may be defined
-          multiple times, the value of a symbol is the amount of
-          space it requires, and the largest symbol value is the one
-          used).  Most targets have exactly one of these (which we
-          translate to bfd_com_section_ptr), but ECOFF has two.  */
-     #define SEC_IS_COMMON 0x1000
-
-       /* The section contains only debugging information.  For
-          example, this is set for ELF .debug and .stab sections.
-          strip tests this flag to see if a section can be
-          discarded.  */
-     #define SEC_DEBUGGING 0x2000
-
-       /* The contents of this section are held in memory pointed to
-          by the contents field.  This is checked by bfd_get_section_contents,
-          and the data is retrieved from memory if appropriate.  */
-     #define SEC_IN_MEMORY 0x4000
-
-       /* The contents of this section are to be excluded by the
-          linker for executable and shared objects unless those
-          objects are to be further relocated.  */
-     #define SEC_EXCLUDE 0x8000
-
-       /* The contents of this section are to be sorted based on the sum of
-          the symbol and addend values specified by the associated relocation
-          entries.  Entries without associated relocation entries will be
-          appended to the end of the section in an unspecified order.  */
-     #define SEC_SORT_ENTRIES 0x10000
-
-       /* When linking, duplicate sections of the same name should be
-          discarded, rather than being combined into a single section as
-          is usually done.  This is similar to how common symbols are
-          handled.  See SEC_LINK_DUPLICATES below.  */
-     #define SEC_LINK_ONCE 0x20000
-
-       /* If SEC_LINK_ONCE is set, this bitfield describes how the linker
-          should handle duplicate sections.  */
-     #define SEC_LINK_DUPLICATES 0x40000
-
-       /* This value for SEC_LINK_DUPLICATES means that duplicate
-          sections with the same name should simply be discarded.  */
-     #define SEC_LINK_DUPLICATES_DISCARD 0x0
-
-       /* This value for SEC_LINK_DUPLICATES means that the linker
-          should warn if there are any duplicate sections, although
-          it should still only link one copy.  */
-     #define SEC_LINK_DUPLICATES_ONE_ONLY 0x80000
-
-       /* This value for SEC_LINK_DUPLICATES means that the linker
-          should warn if any duplicate sections are a different size.  */
-     #define SEC_LINK_DUPLICATES_SAME_SIZE 0x100000
-
-       /* This value for SEC_LINK_DUPLICATES means that the linker
-          should warn if any duplicate sections contain different
-          contents.  */
-     #define SEC_LINK_DUPLICATES_SAME_CONTENTS \
-       (SEC_LINK_DUPLICATES_ONE_ONLY | SEC_LINK_DUPLICATES_SAME_SIZE)
-
-       /* This section was created by the linker as part of dynamic
-          relocation or other arcane processing.  It is skipped when
-          going through the first-pass output, trusting that someone
-          else up the line will take care of it later.  */
-     #define SEC_LINKER_CREATED 0x200000
-
-       /* This section should not be subject to garbage collection.  */
-     #define SEC_KEEP 0x400000
-
-       /* This section contains "short" data, and should be placed
-          "near" the GP.  */
-     #define SEC_SMALL_DATA 0x800000
-
-       /* Attempt to merge identical entities in the section.
-          Entity size is given in the entsize field.  */
-     #define SEC_MERGE 0x1000000
-
-       /* If given with SEC_MERGE, entities to merge are zero terminated
-          strings where entsize specifies character size instead of fixed
-          size entries.  */
-     #define SEC_STRINGS 0x2000000
-
-       /* This section contains data about section groups.  */
-     #define SEC_GROUP 0x4000000
-
-       /* The section is a COFF shared library section.  This flag is
-          only for the linker.  If this type of section appears in
-          the input file, the linker must copy it to the output file
-          without changing the vma or size.  FIXME: Although this
-          was originally intended to be general, it really is COFF
-          specific (and the flag was renamed to indicate this).  It
-          might be cleaner to have some more general mechanism to
-          allow the back end to control what the linker does with
-          sections.  */
-     #define SEC_COFF_SHARED_LIBRARY 0x10000000
-
-       /* This section contains data which may be shared with other
-          executables or shared objects. This is for COFF only.  */
-     #define SEC_COFF_SHARED 0x20000000
-
-       /* When a section with this flag is being linked, then if the size of
-          the input section is less than a page, it should not cross a page
-          boundary.  If the size of the input section is one page or more,
-          it should be aligned on a page boundary.  This is for TI
-          TMS320C54X only.  */
-     #define SEC_TIC54X_BLOCK 0x40000000
-
-       /* Conditionally link this section; do not link if there are no
-          references found to any symbol in the section.  This is for TI
-          TMS320C54X only.  */
-     #define SEC_TIC54X_CLINK 0x80000000
-
-       /*  End of section flags.  */
-
-       /* Some internal packed boolean fields.  */
-
-       /* See the vma field.  */
-       unsigned int user_set_vma : 1;
-
-       /* A mark flag used by some of the linker backends.  */
-       unsigned int linker_mark : 1;
-
-       /* Another mark flag used by some of the linker backends.  Set for
-          output sections that have an input section.  */
-       unsigned int linker_has_input : 1;
-
-       /* A mark flag used by some linker backends for garbage collection.  */
-       unsigned int gc_mark : 1;
-
-       /* The following flags are used by the ELF linker. */
-
-       /* Mark sections which have been allocated to segments.  */
-       unsigned int segment_mark : 1;
-
-       /* Type of sec_info information.  */
-       unsigned int sec_info_type:3;
-     #define ELF_INFO_TYPE_NONE      0
-     #define ELF_INFO_TYPE_STABS     1
-     #define ELF_INFO_TYPE_MERGE     2
-     #define ELF_INFO_TYPE_EH_FRAME  3
-     #define ELF_INFO_TYPE_JUST_SYMS 4
-
-       /* Nonzero if this section uses RELA relocations, rather than REL.  */
-       unsigned int use_rela_p:1;
-
-       /* Bits used by various backends.  The generic code doesn't touch
-          these fields.  */
-
-       /* Nonzero if this section has TLS related relocations.  */
-       unsigned int has_tls_reloc:1;
-
-       /* Nonzero if this section has a gp reloc.  */
-       unsigned int has_gp_reloc:1;
-
-       /* Nonzero if this section needs the relax finalize pass.  */
-       unsigned int need_finalize_relax:1;
-
-       /* Whether relocations have been processed.  */
-       unsigned int reloc_done : 1;
-
-       /* End of internal packed boolean fields.  */
-
-       /*  The virtual memory address of the section - where it will be
-           at run time.  The symbols are relocated against this.  The
-           user_set_vma flag is maintained by bfd; if it's not set, the
-           backend can assign addresses (for example, in `a.out', where
-           the default address for `.data' is dependent on the specific
-           target and various flags).  */
-       bfd_vma vma;
-
-       /*  The load address of the section - where it would be in a
-           rom image; really only used for writing section header
-           information.  */
-       bfd_vma lma;
-
-       /* The size of the section in octets, as it will be output.
-          Contains a value even if the section has no contents (e.g., the
-          size of `.bss').  */
-       bfd_size_type size;
-
-       /* For input sections, the original size on disk of the section, in
-          octets.  This field is used by the linker relaxation code.  It is
-          currently only set for sections where the linker relaxation scheme
-          doesn't cache altered section and reloc contents (stabs, eh_frame,
-          SEC_MERGE, some coff relaxing targets), and thus the original size
-          needs to be kept to read the section multiple times.
-          For output sections, rawsize holds the section size calculated on
-          a previous linker relaxation pass.  */
-       bfd_size_type rawsize;
-
-       /* If this section is going to be output, then this value is the
-          offset in *bytes* into the output section of the first byte in the
-          input section (byte ==> smallest addressable unit on the
-          target).  In most cases, if this was going to start at the
-          100th octet (8-bit quantity) in the output section, this value
-          would be 100.  However, if the target byte size is 16 bits
-          (bfd_octets_per_byte is "2"), this value would be 50.  */
-       bfd_vma output_offset;
-
-       /* The output section through which to map on output.  */
-       struct bfd_section *output_section;
-
-       /* The alignment requirement of the section, as an exponent of 2 -
-          e.g., 3 aligns to 2^3 (or 8).  */
-       unsigned int alignment_power;
-
-       /* If an input section, a pointer to a vector of relocation
-          records for the data in this section.  */
-       struct reloc_cache_entry *relocation;
-
-       /* If an output section, a pointer to a vector of pointers to
-          relocation records for the data in this section.  */
-       struct reloc_cache_entry **orelocation;
-
-       /* The number of relocation records in one of the above.  */
-       unsigned reloc_count;
-
-       /* Information below is back end specific - and not always used
-          or updated.  */
-
-       /* File position of section data.  */
-       file_ptr filepos;
-
-       /* File position of relocation info.  */
-       file_ptr rel_filepos;
-
-       /* File position of line data.  */
-       file_ptr line_filepos;
-
-       /* Pointer to data for applications.  */
-       void *userdata;
-
-       /* If the SEC_IN_MEMORY flag is set, this points to the actual
-          contents.  */
-       unsigned char *contents;
-
-       /* Attached line number information.  */
-       alent *lineno;
-
-       /* Number of line number records.  */
-       unsigned int lineno_count;
-
-       /* Entity size for merging purposes.  */
-       unsigned int entsize;
-
-       /* Points to the kept section if this section is a link-once section,
-          and is discarded.  */
-       struct bfd_section *kept_section;
-
-       /* When a section is being output, this value changes as more
-          linenumbers are written out.  */
-       file_ptr moving_line_filepos;
-
-       /* What the section number is in the target world.  */
-       int target_index;
-
-       void *used_by_bfd;
-
-       /* If this is a constructor section then here is a list of the
-          relocations created to relocate items within it.  */
-       struct relent_chain *constructor_chain;
-
-       /* The BFD which owns the section.  */
-       bfd *owner;
-
-       /* A symbol which points at this section only.  */
-       struct bfd_symbol *symbol;
-       struct bfd_symbol **symbol_ptr_ptr;
-
-       struct bfd_link_order *link_order_head;
-       struct bfd_link_order *link_order_tail;
-     } asection;
-
-     /* These sections are global, and are managed by BFD.  The application
-        and target back end are not permitted to change the values in
-        these sections.  New code should use the section_ptr macros rather
-        than referring directly to the const sections.  The const sections
-        may eventually vanish.  */
-     #define BFD_ABS_SECTION_NAME "*ABS*"
-     #define BFD_UND_SECTION_NAME "*UND*"
-     #define BFD_COM_SECTION_NAME "*COM*"
-     #define BFD_IND_SECTION_NAME "*IND*"
-
-     /* The absolute section.  */
-     extern asection bfd_abs_section;
-     #define bfd_abs_section_ptr ((asection *) &bfd_abs_section)
-     #define bfd_is_abs_section(sec) ((sec) == bfd_abs_section_ptr)
-     /* Pointer to the undefined section.  */
-     extern asection bfd_und_section;
-     #define bfd_und_section_ptr ((asection *) &bfd_und_section)
-     #define bfd_is_und_section(sec) ((sec) == bfd_und_section_ptr)
-     /* Pointer to the common section.  */
-     extern asection bfd_com_section;
-     #define bfd_com_section_ptr ((asection *) &bfd_com_section)
-     /* Pointer to the indirect section.  */
-     extern asection bfd_ind_section;
-     #define bfd_ind_section_ptr ((asection *) &bfd_ind_section)
-     #define bfd_is_ind_section(sec) ((sec) == bfd_ind_section_ptr)
-
-     #define bfd_is_const_section(SEC)              \
-      (   ((SEC) == bfd_abs_section_ptr)            \
-       || ((SEC) == bfd_und_section_ptr)            \
-       || ((SEC) == bfd_com_section_ptr)            \
-       || ((SEC) == bfd_ind_section_ptr))
-
-     extern const struct bfd_symbol * const bfd_abs_symbol;
-     extern const struct bfd_symbol * const bfd_com_symbol;
-     extern const struct bfd_symbol * const bfd_und_symbol;
-     extern const struct bfd_symbol * const bfd_ind_symbol;
-
-     /* Macros to handle insertion and deletion of a bfd's sections.  These
-        only handle the list pointers, ie. do not adjust section_count,
-        target_index etc.  */
-     #define bfd_section_list_remove(ABFD, PS) \
-       do                                                   \
-         {                                                  \
-           asection **_ps = PS;                             \
-           asection *_s = *_ps;                             \
-           *_ps = _s->next;                                 \
-           if (_s->next == NULL)                            \
-             (ABFD)->section_tail = _ps;                    \
-         }                                                  \
-       while (0)
-     #define bfd_section_list_insert(ABFD, PS, S) \
-       do                                                   \
-         {                                                  \
-           asection **_ps = PS;                             \
-           asection *_s = S;                                \
-           _s->next = *_ps;                                 \
-           *_ps = _s;                                       \
-           if (_s->next == NULL)                            \
-             (ABFD)->section_tail = &_s->next;              \
-         }                                                  \
-       while (0)
-
-
-File: bfd.info,  Node: section prototypes,  Prev: typedef asection,  Up: Sections
-
-2.6.5 Section prototypes
-------------------------
-
-These are the functions exported by the section handling part of BFD.
-
-2.6.5.1 `bfd_section_list_clear'
-................................
-
-*Synopsis*
-     void bfd_section_list_clear (bfd *);
-   *Description*
-Clears the section list, and also resets the section count and hash
-table entries.
-
-2.6.5.2 `bfd_get_section_by_name'
-.................................
-
-*Synopsis*
-     asection *bfd_get_section_by_name (bfd *abfd, const char *name);
-   *Description*
-Run through ABFD and return the one of the `asection's whose name
-matches NAME, otherwise `NULL'.  *Note Sections::, for more information.
-
-   This should only be used in special cases; the normal way to process
-all sections of a given name is to use `bfd_map_over_sections' and
-`strcmp' on the name (or better yet, base it on the section flags or
-something else) for each section.
-
-2.6.5.3 `bfd_get_section_by_name_if'
-....................................
-
-*Synopsis*
-     asection *bfd_get_section_by_name_if
-        (bfd *abfd,
-         const char *name,
-         bfd_boolean (*func) (bfd *abfd, asection *sect, void *obj),
-         void *obj);
-   *Description*
-Call the provided function FUNC for each section attached to the BFD
-ABFD whose name matches NAME, passing OBJ as an argument. The function
-will be called as if by
-
-            func (abfd, the_section, obj);
-
-   It returns the first section for which FUNC returns true, otherwise
-`NULL'.
-
-2.6.5.4 `bfd_get_unique_section_name'
-.....................................
-
-*Synopsis*
-     char *bfd_get_unique_section_name
-        (bfd *abfd, const char *templat, int *count);
-   *Description*
-Invent a section name that is unique in ABFD by tacking a dot and a
-digit suffix onto the original TEMPLAT.  If COUNT is non-NULL, then it
-specifies the first number tried as a suffix to generate a unique name.
-The value pointed to by COUNT will be incremented in this case.
-
-2.6.5.5 `bfd_make_section_old_way'
-..................................
-
-*Synopsis*
-     asection *bfd_make_section_old_way (bfd *abfd, const char *name);
-   *Description*
-Create a new empty section called NAME and attach it to the end of the
-chain of sections for the BFD ABFD. An attempt to create a section with
-a name which is already in use returns its pointer without changing the
-section chain.
-
-   It has the funny name since this is the way it used to be before it
-was rewritten....
-
-   Possible errors are:
-   * `bfd_error_invalid_operation' - If output has already started for
-     this BFD.
-
-   * `bfd_error_no_memory' - If memory allocation fails.
-
-2.6.5.6 `bfd_make_section_anyway'
-.................................
-
-*Synopsis*
-     asection *bfd_make_section_anyway (bfd *abfd, const char *name);
-   *Description*
-Create a new empty section called NAME and attach it to the end of the
-chain of sections for ABFD.  Create a new section even if there is
-already a section with that name.
-
-   Return `NULL' and set `bfd_error' on error; possible errors are:
-   * `bfd_error_invalid_operation' - If output has already started for
-     ABFD.
-
-   * `bfd_error_no_memory' - If memory allocation fails.
-
-2.6.5.7 `bfd_make_section'
-..........................
-
-*Synopsis*
-     asection *bfd_make_section (bfd *, const char *name);
-   *Description*
-Like `bfd_make_section_anyway', but return `NULL' (without calling
-bfd_set_error ()) without changing the section chain if there is
-already a section named NAME.  If there is an error, return `NULL' and
-set `bfd_error'.
-
-2.6.5.8 `bfd_set_section_flags'
-...............................
-
-*Synopsis*
-     bfd_boolean bfd_set_section_flags
-        (bfd *abfd, asection *sec, flagword flags);
-   *Description*
-Set the attributes of the section SEC in the BFD ABFD to the value
-FLAGS. Return `TRUE' on success, `FALSE' on error. Possible error
-returns are:
-
-   * `bfd_error_invalid_operation' - The section cannot have one or
-     more of the attributes requested. For example, a .bss section in
-     `a.out' may not have the `SEC_HAS_CONTENTS' field set.
-
-2.6.5.9 `bfd_map_over_sections'
-...............................
-
-*Synopsis*
-     void bfd_map_over_sections
-        (bfd *abfd,
-         void (*func) (bfd *abfd, asection *sect, void *obj),
-         void *obj);
-   *Description*
-Call the provided function FUNC for each section attached to the BFD
-ABFD, passing OBJ as an argument. The function will be called as if by
-
-            func (abfd, the_section, obj);
-
-   This is the preferred method for iterating over sections; an
-alternative would be to use a loop:
-
-               section *p;
-               for (p = abfd->sections; p != NULL; p = p->next)
-                  func (abfd, p, ...)
-
-2.6.5.10 `bfd_sections_find_if'
-...............................
-
-*Synopsis*
-     asection *bfd_sections_find_if
-        (bfd *abfd,
-         bfd_boolean (*operation) (bfd *abfd, asection *sect, void *obj),
-         void *obj);
-   *Description*
-Call the provided function OPERATION for each section attached to the
-BFD ABFD, passing OBJ as an argument. The function will be called as if
-by
-
-            operation (abfd, the_section, obj);
-
-   It returns the first section for which OPERATION returns true.
-
-2.6.5.11 `bfd_set_section_size'
-...............................
-
-*Synopsis*
-     bfd_boolean bfd_set_section_size
-        (bfd *abfd, asection *sec, bfd_size_type val);
-   *Description*
-Set SEC to the size VAL. If the operation is ok, then `TRUE' is
-returned, else `FALSE'.
-
-   Possible error returns:
-   * `bfd_error_invalid_operation' - Writing has started to the BFD, so
-     setting the size is invalid.
-
-2.6.5.12 `bfd_set_section_contents'
-...................................
-
-*Synopsis*
-     bfd_boolean bfd_set_section_contents
-        (bfd *abfd, asection *section, const void *data,
-         file_ptr offset, bfd_size_type count);
-   *Description*
-Sets the contents of the section SECTION in BFD ABFD to the data
-starting in memory at DATA. The data is written to the output section
-starting at offset OFFSET for COUNT octets.
-
-   Normally `TRUE' is returned, else `FALSE'. Possible error returns
-are:
-   * `bfd_error_no_contents' - The output section does not have the
-     `SEC_HAS_CONTENTS' attribute, so nothing can be written to it.
-
-   * and some more too
-   This routine is front end to the back end function
-`_bfd_set_section_contents'.
-
-2.6.5.13 `bfd_get_section_contents'
-...................................
-
-*Synopsis*
-     bfd_boolean bfd_get_section_contents
-        (bfd *abfd, asection *section, void *location, file_ptr offset,
-         bfd_size_type count);
-   *Description*
-Read data from SECTION in BFD ABFD into memory starting at LOCATION.
-The data is read at an offset of OFFSET from the start of the input
-section, and is read for COUNT bytes.
-
-   If the contents of a constructor with the `SEC_CONSTRUCTOR' flag set
-are requested or if the section does not have the `SEC_HAS_CONTENTS'
-flag set, then the LOCATION is filled with zeroes. If no errors occur,
-`TRUE' is returned, else `FALSE'.
-
-2.6.5.14 `bfd_malloc_and_get_section'
-.....................................
-
-*Synopsis*
-     bfd_boolean bfd_malloc_and_get_section
-        (bfd *abfd, asection *section, bfd_byte **buf);
-   *Description*
-Read all data from SECTION in BFD ABFD into a buffer, *BUF, malloc'd by
-this function.
-
-2.6.5.15 `bfd_copy_private_section_data'
-........................................
-
-*Synopsis*
-     bfd_boolean bfd_copy_private_section_data
-        (bfd *ibfd, asection *isec, bfd *obfd, asection *osec);
-   *Description*
-Copy private section information from ISEC in the BFD IBFD to the
-section OSEC in the BFD OBFD.  Return `TRUE' on success, `FALSE' on
-error.  Possible error returns are:
-
-   * `bfd_error_no_memory' - Not enough memory exists to create private
-     data for OSEC.
-
-     #define bfd_copy_private_section_data(ibfd, isection, obfd, osection) \
-          BFD_SEND (obfd, _bfd_copy_private_section_data, \
-                    (ibfd, isection, obfd, osection))
-
-2.6.5.16 `_bfd_strip_section_from_output'
-.........................................
-
-*Synopsis*
-     void _bfd_strip_section_from_output
-        (struct bfd_link_info *info, asection *section);
-   *Description*
-Remove SECTION from the output.  If the output section becomes empty,
-remove it from the output bfd.
-
-   This function won't actually do anything except twiddle flags if
-called too late in the linking process, when it's not safe to remove
-sections.
-
-2.6.5.17 `bfd_generic_is_group_section'
-.......................................
-
-*Synopsis*
-     bfd_boolean bfd_generic_is_group_section (bfd *, const asection *sec);
-   *Description*
-Returns TRUE if SEC is a member of a group.
-
-2.6.5.18 `bfd_generic_discard_group'
-....................................
-
-*Synopsis*
-     bfd_boolean bfd_generic_discard_group (bfd *abfd, asection *group);
-   *Description*
-Remove all members of GROUP from the output.
-
-
-File: bfd.info,  Node: Symbols,  Next: Archives,  Prev: Sections,  Up: BFD front end
-
-2.7 Symbols
-===========
-
-BFD tries to maintain as much symbol information as it can when it
-moves information from file to file. BFD passes information to
-applications though the `asymbol' structure. When the application
-requests the symbol table, BFD reads the table in the native form and
-translates parts of it into the internal format. To maintain more than
-the information passed to applications, some targets keep some
-information "behind the scenes" in a structure only the particular back
-end knows about. For example, the coff back end keeps the original
-symbol table structure as well as the canonical structure when a BFD is
-read in. On output, the coff back end can reconstruct the output symbol
-table so that no information is lost, even information unique to coff
-which BFD doesn't know or understand. If a coff symbol table were read,
-but were written through an a.out back end, all the coff specific
-information would be lost. The symbol table of a BFD is not necessarily
-read in until a canonicalize request is made. Then the BFD back end
-fills in a table provided by the application with pointers to the
-canonical information.  To output symbols, the application provides BFD
-with a table of pointers to pointers to `asymbol's. This allows
-applications like the linker to output a symbol as it was read, since
-the "behind the scenes" information will be still available.
-
-* Menu:
-
-* Reading Symbols::
-* Writing Symbols::
-* Mini Symbols::
-* typedef asymbol::
-* symbol handling functions::
-
-
-File: bfd.info,  Node: Reading Symbols,  Next: Writing Symbols,  Prev: Symbols,  Up: Symbols
-
-2.7.1 Reading symbols
----------------------
-
-There are two stages to reading a symbol table from a BFD: allocating
-storage, and the actual reading process. This is an excerpt from an
-application which reads the symbol table:
-
-              long storage_needed;
-              asymbol **symbol_table;
-              long number_of_symbols;
-              long i;
-
-              storage_needed = bfd_get_symtab_upper_bound (abfd);
-
-              if (storage_needed < 0)
-                FAIL
-
-              if (storage_needed == 0)
-                return;
-
-              symbol_table = xmalloc (storage_needed);
-                ...
-              number_of_symbols =
-                 bfd_canonicalize_symtab (abfd, symbol_table);
-
-              if (number_of_symbols < 0)
-                FAIL
-
-              for (i = 0; i < number_of_symbols; i++)
-                process_symbol (symbol_table[i]);
-
-   All storage for the symbols themselves is in an objalloc connected
-to the BFD; it is freed when the BFD is closed.
-
-
-File: bfd.info,  Node: Writing Symbols,  Next: Mini Symbols,  Prev: Reading Symbols,  Up: Symbols
-
-2.7.2 Writing symbols
----------------------
-
-Writing of a symbol table is automatic when a BFD open for writing is
-closed. The application attaches a vector of pointers to pointers to
-symbols to the BFD being written, and fills in the symbol count. The
-close and cleanup code reads through the table provided and performs
-all the necessary operations. The BFD output code must always be
-provided with an "owned" symbol: one which has come from another BFD,
-or one which has been created using `bfd_make_empty_symbol'.  Here is an
-example showing the creation of a symbol table with only one element:
-
-            #include "bfd.h"
-            int main (void)
-            {
-              bfd *abfd;
-              asymbol *ptrs[2];
-              asymbol *new;
-
-              abfd = bfd_openw ("foo","a.out-sunos-big");
-              bfd_set_format (abfd, bfd_object);
-              new = bfd_make_empty_symbol (abfd);
-              new->name = "dummy_symbol";
-              new->section = bfd_make_section_old_way (abfd, ".text");
-              new->flags = BSF_GLOBAL;
-              new->value = 0x12345;
-
-              ptrs[0] = new;
-              ptrs[1] = 0;
-
-              bfd_set_symtab (abfd, ptrs, 1);
-              bfd_close (abfd);
-              return 0;
-            }
-
-            ./makesym
-            nm foo
-            00012345 A dummy_symbol
-
-   Many formats cannot represent arbitrary symbol information; for
-instance, the `a.out' object format does not allow an arbitrary number
-of sections. A symbol pointing to a section which is not one  of
-`.text', `.data' or `.bss' cannot be described.
-
-
-File: bfd.info,  Node: Mini Symbols,  Next: typedef asymbol,  Prev: Writing Symbols,  Up: Symbols
-
-2.7.3 Mini Symbols
-------------------
-
-Mini symbols provide read-only access to the symbol table.  They use
-less memory space, but require more time to access.  They can be useful
-for tools like nm or objdump, which may have to handle symbol tables of
-extremely large executables.
-
-   The `bfd_read_minisymbols' function will read the symbols into
-memory in an internal form.  It will return a `void *' pointer to a
-block of memory, a symbol count, and the size of each symbol.  The
-pointer is allocated using `malloc', and should be freed by the caller
-when it is no longer needed.
-
-   The function `bfd_minisymbol_to_symbol' will take a pointer to a
-minisymbol, and a pointer to a structure returned by
-`bfd_make_empty_symbol', and return a `asymbol' structure.  The return
-value may or may not be the same as the value from
-`bfd_make_empty_symbol' which was passed in.
-
-
-File: bfd.info,  Node: typedef asymbol,  Next: symbol handling functions,  Prev: Mini Symbols,  Up: Symbols
-
-2.7.4 typedef asymbol
----------------------
-
-An `asymbol' has the form:
-
-
-     typedef struct bfd_symbol
-     {
-       /* A pointer to the BFD which owns the symbol. This information
-          is necessary so that a back end can work out what additional
-          information (invisible to the application writer) is carried
-          with the symbol.
-
-          This field is *almost* redundant, since you can use section->owner
-          instead, except that some symbols point to the global sections
-          bfd_{abs,com,und}_section.  This could be fixed by making
-          these globals be per-bfd (or per-target-flavor).  FIXME.  */
-       struct bfd *the_bfd; /* Use bfd_asymbol_bfd(sym) to access this field.  */
-
-       /* The text of the symbol. The name is left alone, and not copied; the
-          application may not alter it.  */
-       const char *name;
-
-       /* The value of the symbol.  This really should be a union of a
-          numeric value with a pointer, since some flags indicate that
-          a pointer to another symbol is stored here.  */
-       symvalue value;
-
-       /* Attributes of a symbol.  */
-     #define BSF_NO_FLAGS    0x00
-
-       /* The symbol has local scope; `static' in `C'. The value
-          is the offset into the section of the data.  */
-     #define BSF_LOCAL      0x01
-
-       /* The symbol has global scope; initialized data in `C'. The
-          value is the offset into the section of the data.  */
-     #define BSF_GLOBAL     0x02
-
-       /* The symbol has global scope and is exported. The value is
-          the offset into the section of the data.  */
-     #define BSF_EXPORT     BSF_GLOBAL /* No real difference.  */
-
-       /* A normal C symbol would be one of:
-          `BSF_LOCAL', `BSF_FORT_COMM',  `BSF_UNDEFINED' or
-          `BSF_GLOBAL'.  */
-
-       /* The symbol is a debugging record. The value has an arbitrary
-          meaning, unless BSF_DEBUGGING_RELOC is also set.  */
-     #define BSF_DEBUGGING  0x08
-
-       /* The symbol denotes a function entry point.  Used in ELF,
-          perhaps others someday.  */
-     #define BSF_FUNCTION    0x10
-
-       /* Used by the linker.  */
-     #define BSF_KEEP        0x20
-     #define BSF_KEEP_G      0x40
-
-       /* A weak global symbol, overridable without warnings by
-          a regular global symbol of the same name.  */
-     #define BSF_WEAK        0x80
-
-       /* This symbol was created to point to a section, e.g. ELF's
-          STT_SECTION symbols.  */
-     #define BSF_SECTION_SYM 0x100
-
-       /* The symbol used to be a common symbol, but now it is
-          allocated.  */
-     #define BSF_OLD_COMMON  0x200
-
-       /* The default value for common data.  */
-     #define BFD_FORT_COMM_DEFAULT_VALUE 0
-
-       /* In some files the type of a symbol sometimes alters its
-          location in an output file - ie in coff a `ISFCN' symbol
-          which is also `C_EXT' symbol appears where it was
-          declared and not at the end of a section.  This bit is set
-          by the target BFD part to convey this information.  */
-     #define BSF_NOT_AT_END    0x400
-
-       /* Signal that the symbol is the label of constructor section.  */
-     #define BSF_CONSTRUCTOR   0x800
-
-       /* Signal that the symbol is a warning symbol.  The name is a
-          warning.  The name of the next symbol is the one to warn about;
-          if a reference is made to a symbol with the same name as the next
-          symbol, a warning is issued by the linker.  */
-     #define BSF_WARNING       0x1000
-
-       /* Signal that the symbol is indirect.  This symbol is an indirect
-          pointer to the symbol with the same name as the next symbol.  */
-     #define BSF_INDIRECT      0x2000
-
-       /* BSF_FILE marks symbols that contain a file name.  This is used
-          for ELF STT_FILE symbols.  */
-     #define BSF_FILE          0x4000
-
-       /* Symbol is from dynamic linking information.  */
-     #define BSF_DYNAMIC       0x8000
-
-       /* The symbol denotes a data object.  Used in ELF, and perhaps
-          others someday.  */
-     #define BSF_OBJECT        0x10000
-
-       /* This symbol is a debugging symbol.  The value is the offset
-          into the section of the data.  BSF_DEBUGGING should be set
-          as well.  */
-     #define BSF_DEBUGGING_RELOC 0x20000
-
-       /* This symbol is thread local.  Used in ELF.  */
-     #define BSF_THREAD_LOCAL  0x40000
-
-       flagword flags;
-
-       /* A pointer to the section to which this symbol is
-          relative.  This will always be non NULL, there are special
-          sections for undefined and absolute symbols.  */
-       struct bfd_section *section;
-
-       /* Back end special data.  */
-       union
-         {
-           void *p;
-           bfd_vma i;
-         }
-       udata;
-     }
-     asymbol;
-
-
-File: bfd.info,  Node: symbol handling functions,  Prev: typedef asymbol,  Up: Symbols
-
-2.7.5 Symbol handling functions
--------------------------------
-
-2.7.5.1 `bfd_get_symtab_upper_bound'
-....................................
-
-*Description*
-Return the number of bytes required to store a vector of pointers to
-`asymbols' for all the symbols in the BFD ABFD, including a terminal
-NULL pointer. If there are no symbols in the BFD, then return 0.  If an
-error occurs, return -1.
-     #define bfd_get_symtab_upper_bound(abfd) \
-          BFD_SEND (abfd, _bfd_get_symtab_upper_bound, (abfd))
-
-2.7.5.2 `bfd_is_local_label'
-............................
-
-*Synopsis*
-     bfd_boolean bfd_is_local_label (bfd *abfd, asymbol *sym);
-   *Description*
-Return TRUE if the given symbol SYM in the BFD ABFD is a compiler
-generated local label, else return FALSE.
-
-2.7.5.3 `bfd_is_local_label_name'
-.................................
-
-*Synopsis*
-     bfd_boolean bfd_is_local_label_name (bfd *abfd, const char *name);
-   *Description*
-Return TRUE if a symbol with the name NAME in the BFD ABFD is a
-compiler generated local label, else return FALSE.  This just checks
-whether the name has the form of a local label.
-     #define bfd_is_local_label_name(abfd, name) \
-       BFD_SEND (abfd, _bfd_is_local_label_name, (abfd, name))
-
-2.7.5.4 `bfd_is_target_special_symbol'
-......................................
-
-*Synopsis*
-     bfd_boolean bfd_is_target_special_symbol (bfd *abfd, asymbol *sym);
-   *Description*
-Return TRUE iff a symbol SYM in the BFD ABFD is something special to
-the particular target represented by the BFD.  Such symbols should
-normally not be mentioned to the user.
-     #define bfd_is_target_special_symbol(abfd, sym) \
-       BFD_SEND (abfd, _bfd_is_target_special_symbol, (abfd, sym))
-
-2.7.5.5 `bfd_canonicalize_symtab'
-.................................
-
-*Description*
-Read the symbols from the BFD ABFD, and fills in the vector LOCATION
-with pointers to the symbols and a trailing NULL.  Return the actual
-number of symbol pointers, not including the NULL.
-     #define bfd_canonicalize_symtab(abfd, location) \
-       BFD_SEND (abfd, _bfd_canonicalize_symtab, (abfd, location))
-
-2.7.5.6 `bfd_set_symtab'
-........................
-
-*Synopsis*
-     bfd_boolean bfd_set_symtab
-        (bfd *abfd, asymbol **location, unsigned int count);
-   *Description*
-Arrange that when the output BFD ABFD is closed, the table LOCATION of
-COUNT pointers to symbols will be written.
-
-2.7.5.7 `bfd_print_symbol_vandf'
-................................
-
-*Synopsis*
-     void bfd_print_symbol_vandf (bfd *abfd, void *file, asymbol *symbol);
-   *Description*
-Print the value and flags of the SYMBOL supplied to the stream FILE.
-
-2.7.5.8 `bfd_make_empty_symbol'
-...............................
-
-*Description*
-Create a new `asymbol' structure for the BFD ABFD and return a pointer
-to it.
-
-   This routine is necessary because each back end has private
-information surrounding the `asymbol'. Building your own `asymbol' and
-pointing to it will not create the private information, and will cause
-problems later on.
-     #define bfd_make_empty_symbol(abfd) \
-       BFD_SEND (abfd, _bfd_make_empty_symbol, (abfd))
-
-2.7.5.9 `_bfd_generic_make_empty_symbol'
-........................................
-
-*Synopsis*
-     asymbol *_bfd_generic_make_empty_symbol (bfd *);
-   *Description*
-Create a new `asymbol' structure for the BFD ABFD and return a pointer
-to it.  Used by core file routines, binary back-end and anywhere else
-where no private info is needed.
-
-2.7.5.10 `bfd_make_debug_symbol'
-................................
-
-*Description*
-Create a new `asymbol' structure for the BFD ABFD, to be used as a
-debugging symbol.  Further details of its use have yet to be worked out.
-     #define bfd_make_debug_symbol(abfd,ptr,size) \
-       BFD_SEND (abfd, _bfd_make_debug_symbol, (abfd, ptr, size))
-
-2.7.5.11 `bfd_decode_symclass'
-..............................
-
-*Description*
-Return a character corresponding to the symbol class of SYMBOL, or '?'
-for an unknown class.
-
-   *Synopsis*
-     int bfd_decode_symclass (asymbol *symbol);
-   
-2.7.5.12 `bfd_is_undefined_symclass'
-....................................
-
-*Description*
-Returns non-zero if the class symbol returned by bfd_decode_symclass
-represents an undefined symbol.  Returns zero otherwise.
-
-   *Synopsis*
-     bfd_boolean bfd_is_undefined_symclass (int symclass);
-   
-2.7.5.13 `bfd_symbol_info'
-..........................
-
-*Description*
-Fill in the basic info about symbol that nm needs.  Additional info may
-be added by the back-ends after calling this function.
-
-   *Synopsis*
-     void bfd_symbol_info (asymbol *symbol, symbol_info *ret);
-   
-2.7.5.14 `bfd_copy_private_symbol_data'
-.......................................
-
-*Synopsis*
-     bfd_boolean bfd_copy_private_symbol_data
-        (bfd *ibfd, asymbol *isym, bfd *obfd, asymbol *osym);
-   *Description*
-Copy private symbol information from ISYM in the BFD IBFD to the symbol
-OSYM in the BFD OBFD.  Return `TRUE' on success, `FALSE' on error.
-Possible error returns are:
-
-   * `bfd_error_no_memory' - Not enough memory exists to create private
-     data for OSEC.
-
-     #define bfd_copy_private_symbol_data(ibfd, isymbol, obfd, osymbol) \
-       BFD_SEND (obfd, _bfd_copy_private_symbol_data, \
-                 (ibfd, isymbol, obfd, osymbol))
-
-
-File: bfd.info,  Node: Archives,  Next: Formats,  Prev: Symbols,  Up: BFD front end
-
-2.8 Archives
-============
-
-*Description*
-An archive (or library) is just another BFD.  It has a symbol table,
-although there's not much a user program will do with it.
-
-   The big difference between an archive BFD and an ordinary BFD is
-that the archive doesn't have sections.  Instead it has a chain of BFDs
-that are considered its contents.  These BFDs can be manipulated like
-any other.  The BFDs contained in an archive opened for reading will
-all be opened for reading.  You may put either input or output BFDs
-into an archive opened for output; they will be handled correctly when
-the archive is closed.
-
-   Use `bfd_openr_next_archived_file' to step through the contents of
-an archive opened for input.  You don't have to read the entire archive
-if you don't want to!  Read it until you find what you want.
-
-   Archive contents of output BFDs are chained through the `next'
-pointer in a BFD.  The first one is findable through the `archive_head'
-slot of the archive.  Set it with `bfd_set_archive_head' (q.v.).  A
-given BFD may be in only one open output archive at a time.
-
-   As expected, the BFD archive code is more general than the archive
-code of any given environment.  BFD archives may contain files of
-different formats (e.g., a.out and coff) and even different
-architectures.  You may even place archives recursively into archives!
-
-   This can cause unexpected confusion, since some archive formats are
-more expressive than others.  For instance, Intel COFF archives can
-preserve long filenames; SunOS a.out archives cannot.  If you move a
-file from the first to the second format and back again, the filename
-may be truncated.  Likewise, different a.out environments have different
-conventions as to how they truncate filenames, whether they preserve
-directory names in filenames, etc.  When interoperating with native
-tools, be sure your files are homogeneous.
-
-   Beware: most of these formats do not react well to the presence of
-spaces in filenames.  We do the best we can, but can't always handle
-this case due to restrictions in the format of archives.  Many Unix
-utilities are braindead in regards to spaces and such in filenames
-anyway, so this shouldn't be much of a restriction.
-
-   Archives are supported in BFD in `archive.c'.
-
-2.8.0.1 `bfd_get_next_mapent'
-.............................
-
-*Synopsis*
-     symindex bfd_get_next_mapent
-        (bfd *abfd, symindex previous, carsym **sym);
-   *Description*
-Step through archive ABFD's symbol table (if it has one).  Successively
-update SYM with the next symbol's information, returning that symbol's
-(internal) index into the symbol table.
-
-   Supply `BFD_NO_MORE_SYMBOLS' as the PREVIOUS entry to get the first
-one; returns `BFD_NO_MORE_SYMBOLS' when you've already got the last one.
-
-   A `carsym' is a canonical archive symbol.  The only user-visible
-element is its name, a null-terminated string.
-
-2.8.0.2 `bfd_set_archive_head'
-..............................
-
-*Synopsis*
-     bfd_boolean bfd_set_archive_head (bfd *output, bfd *new_head);
-   *Description*
-Set the head of the chain of BFDs contained in the archive OUTPUT to
-NEW_HEAD.
-
-2.8.0.3 `bfd_openr_next_archived_file'
-......................................
-
-*Synopsis*
-     bfd *bfd_openr_next_archived_file (bfd *archive, bfd *previous);
-   *Description*
-Provided a BFD, ARCHIVE, containing an archive and NULL, open an input
-BFD on the first contained element and returns that.  Subsequent calls
-should pass the archive and the previous return value to return a
-created BFD to the next contained element. NULL is returned when there
-are no more.
-
-
-File: bfd.info,  Node: Formats,  Next: Relocations,  Prev: Archives,  Up: BFD front end
-
-2.9 File formats
-================
-
-A format is a BFD concept of high level file contents type. The formats
-supported by BFD are:
-
-   * `bfd_object'
-   The BFD may contain data, symbols, relocations and debug info.
-
-   * `bfd_archive'
-   The BFD contains other BFDs and an optional index.
-
-   * `bfd_core'
-   The BFD contains the result of an executable core dump.
-
-2.9.0.1 `bfd_check_format'
-..........................
-
-*Synopsis*
-     bfd_boolean bfd_check_format (bfd *abfd, bfd_format format);
-   *Description*
-Verify if the file attached to the BFD ABFD is compatible with the
-format FORMAT (i.e., one of `bfd_object', `bfd_archive' or `bfd_core').
-
-   If the BFD has been set to a specific target before the call, only
-the named target and format combination is checked. If the target has
-not been set, or has been set to `default', then all the known target
-backends is interrogated to determine a match.  If the default target
-matches, it is used.  If not, exactly one target must recognize the
-file, or an error results.
-
-   The function returns `TRUE' on success, otherwise `FALSE' with one
-of the following error codes:
-
-   * `bfd_error_invalid_operation' - if `format' is not one of
-     `bfd_object', `bfd_archive' or `bfd_core'.
-
-   * `bfd_error_system_call' - if an error occured during a read - even
-     some file mismatches can cause bfd_error_system_calls.
-
-   * `file_not_recognised' - none of the backends recognised the file
-     format.
-
-   * `bfd_error_file_ambiguously_recognized' - more than one backend
-     recognised the file format.
-
-2.9.0.2 `bfd_check_format_matches'
-..................................
-
-*Synopsis*
-     bfd_boolean bfd_check_format_matches
-        (bfd *abfd, bfd_format format, char ***matching);
-   *Description*
-Like `bfd_check_format', except when it returns FALSE with `bfd_errno'
-set to `bfd_error_file_ambiguously_recognized'.  In that case, if
-MATCHING is not NULL, it will be filled in with a NULL-terminated list
-of the names of the formats that matched, allocated with `malloc'.
-Then the user may choose a format and try again.
-
-   When done with the list that MATCHING points to, the caller should
-free it.
-
-2.9.0.3 `bfd_set_format'
-........................
-
-*Synopsis*
-     bfd_boolean bfd_set_format (bfd *abfd, bfd_format format);
-   *Description*
-This function sets the file format of the BFD ABFD to the format
-FORMAT. If the target set in the BFD does not support the format
-requested, the format is invalid, or the BFD is not open for writing,
-then an error occurs.
-
-2.9.0.4 `bfd_format_string'
-...........................
-
-*Synopsis*
-     const char *bfd_format_string (bfd_format format);
-   *Description*
-Return a pointer to a const string `invalid', `object', `archive',
-`core', or `unknown', depending upon the value of FORMAT.
-
-
-File: bfd.info,  Node: Relocations,  Next: Core Files,  Prev: Formats,  Up: BFD front end
-
-2.10 Relocations
-================
-
-BFD maintains relocations in much the same way it maintains symbols:
-they are left alone until required, then read in en-masse and
-translated into an internal form.  A common routine
-`bfd_perform_relocation' acts upon the canonical form to do the fixup.
-
-   Relocations are maintained on a per section basis, while symbols are
-maintained on a per BFD basis.
-
-   All that a back end has to do to fit the BFD interface is to create
-a `struct reloc_cache_entry' for each relocation in a particular
-section, and fill in the right bits of the structures.
-
-* Menu:
-
-* typedef arelent::
-* howto manager::
-
-
-File: bfd.info,  Node: typedef arelent,  Next: howto manager,  Prev: Relocations,  Up: Relocations
-
-2.10.1 typedef arelent
-----------------------
-
-This is the structure of a relocation entry:
-
-
-     typedef enum bfd_reloc_status
-     {
-       /* No errors detected.  */
-       bfd_reloc_ok,
-
-       /* The relocation was performed, but there was an overflow.  */
-       bfd_reloc_overflow,
-
-       /* The address to relocate was not within the section supplied.  */
-       bfd_reloc_outofrange,
-
-       /* Used by special functions.  */
-       bfd_reloc_continue,
-
-       /* Unsupported relocation size requested.  */
-       bfd_reloc_notsupported,
-
-       /* Unused.  */
-       bfd_reloc_other,
-
-       /* The symbol to relocate against was undefined.  */
-       bfd_reloc_undefined,
-
-       /* The relocation was performed, but may not be ok - presently
-          generated only when linking i960 coff files with i960 b.out
-          symbols.  If this type is returned, the error_message argument
-          to bfd_perform_relocation will be set.  */
-       bfd_reloc_dangerous
-      }
-      bfd_reloc_status_type;
-
-
-     typedef struct reloc_cache_entry
-     {
-       /* A pointer into the canonical table of pointers.  */
-       struct bfd_symbol **sym_ptr_ptr;
-
-       /* offset in section.  */
-       bfd_size_type address;
-
-       /* addend for relocation value.  */
-       bfd_vma addend;
-
-       /* Pointer to how to perform the required relocation.  */
-       reloc_howto_type *howto;
-
-     }
-     arelent;
-   *Description*
-Here is a description of each of the fields within an `arelent':
-
-   * `sym_ptr_ptr'
-   The symbol table pointer points to a pointer to the symbol
-associated with the relocation request.  It is the pointer into the
-table returned by the back end's `canonicalize_symtab' action. *Note
-Symbols::. The symbol is referenced through a pointer to a pointer so
-that tools like the linker can fix up all the symbols of the same name
-by modifying only one pointer. The relocation routine looks in the
-symbol and uses the base of the section the symbol is attached to and
-the value of the symbol as the initial relocation offset. If the symbol
-pointer is zero, then the section provided is looked up.
-
-   * `address'
-   The `address' field gives the offset in bytes from the base of the
-section data which owns the relocation record to the first byte of
-relocatable information. The actual data relocated will be relative to
-this point; for example, a relocation type which modifies the bottom
-two bytes of a four byte word would not touch the first byte pointed to
-in a big endian world.
-
-   * `addend'
-   The `addend' is a value provided by the back end to be added (!)  to
-the relocation offset. Its interpretation is dependent upon the howto.
-For example, on the 68k the code:
-
-             char foo[];
-             main()
-                     {
-                     return foo[0x12345678];
-                     }
-
-   Could be compiled into:
-
-             linkw fp,#-4
-             moveb @#12345678,d0
-             extbl d0
-             unlk fp
-             rts
-
-   This could create a reloc pointing to `foo', but leave the offset in
-the data, something like:
-
-     RELOCATION RECORDS FOR [.text]:
-     offset   type      value
-     00000006 32        _foo
-
-     00000000 4e56 fffc          ; linkw fp,#-4
-     00000004 1039 1234 5678     ; moveb @#12345678,d0
-     0000000a 49c0               ; extbl d0
-     0000000c 4e5e               ; unlk fp
-     0000000e 4e75               ; rts
-
-   Using coff and an 88k, some instructions don't have enough space in
-them to represent the full address range, and pointers have to be
-loaded in two parts. So you'd get something like:
-
-             or.u     r13,r0,hi16(_foo+0x12345678)
-             ld.b     r2,r13,lo16(_foo+0x12345678)
-             jmp      r1
-
-   This should create two relocs, both pointing to `_foo', and with
-0x12340000 in their addend field. The data would consist of:
-
-     RELOCATION RECORDS FOR [.text]:
-     offset   type      value
-     00000002 HVRT16    _foo+0x12340000
-     00000006 LVRT16    _foo+0x12340000
-
-     00000000 5da05678           ; or.u r13,r0,0x5678
-     00000004 1c4d5678           ; ld.b r2,r13,0x5678
-     00000008 f400c001           ; jmp r1
-
-   The relocation routine digs out the value from the data, adds it to
-the addend to get the original offset, and then adds the value of
-`_foo'. Note that all 32 bits have to be kept around somewhere, to cope
-with carry from bit 15 to bit 16.
-
-   One further example is the sparc and the a.out format. The sparc has
-a similar problem to the 88k, in that some instructions don't have room
-for an entire offset, but on the sparc the parts are created in odd
-sized lumps. The designers of the a.out format chose to not use the
-data within the section for storing part of the offset; all the offset
-is kept within the reloc. Anything in the data should be ignored.
-
-             save %sp,-112,%sp
-             sethi %hi(_foo+0x12345678),%g2
-             ldsb [%g2+%lo(_foo+0x12345678)],%i0
-             ret
-             restore
-
-   Both relocs contain a pointer to `foo', and the offsets contain junk.
-
-     RELOCATION RECORDS FOR [.text]:
-     offset   type      value
-     00000004 HI22      _foo+0x12345678
-     00000008 LO10      _foo+0x12345678
-
-     00000000 9de3bf90     ; save %sp,-112,%sp
-     00000004 05000000     ; sethi %hi(_foo+0),%g2
-     00000008 f048a000     ; ldsb [%g2+%lo(_foo+0)],%i0
-     0000000c 81c7e008     ; ret
-     00000010 81e80000     ; restore
-
-   * `howto'
-   The `howto' field can be imagined as a relocation instruction. It is
-a pointer to a structure which contains information on what to do with
-all of the other information in the reloc record and data section. A
-back end would normally have a relocation instruction set and turn
-relocations into pointers to the correct structure on input - but it
-would be possible to create each howto field on demand.
-
-2.10.1.1 `enum complain_overflow'
-.................................
-
-Indicates what sort of overflow checking should be done when performing
-a relocation.
-
-
-     enum complain_overflow
-     {
-       /* Do not complain on overflow.  */
-       complain_overflow_dont,
-
-       /* Complain if the bitfield overflows, whether it is considered
-          as signed or unsigned.  */
-       complain_overflow_bitfield,
-
-       /* Complain if the value overflows when considered as signed
-          number.  */
-       complain_overflow_signed,
-
-       /* Complain if the value overflows when considered as an
-          unsigned number.  */
-       complain_overflow_unsigned
-     };
-
-2.10.1.2 `reloc_howto_type'
-...........................
-
-The `reloc_howto_type' is a structure which contains all the
-information that libbfd needs to know to tie up a back end's data.
-
-     struct bfd_symbol;             /* Forward declaration.  */
-
-     struct reloc_howto_struct
-     {
-       /*  The type field has mainly a documentary use - the back end can
-           do what it wants with it, though normally the back end's
-           external idea of what a reloc number is stored
-           in this field.  For example, a PC relative word relocation
-           in a coff environment has the type 023 - because that's
-           what the outside world calls a R_PCRWORD reloc.  */
-       unsigned int type;
-
-       /*  The value the final relocation is shifted right by.  This drops
-           unwanted data from the relocation.  */
-       unsigned int rightshift;
-
-       /*  The size of the item to be relocated.  This is *not* a
-           power-of-two measure.  To get the number of bytes operated
-           on by a type of relocation, use bfd_get_reloc_size.  */
-       int size;
-
-       /*  The number of bits in the item to be relocated.  This is used
-           when doing overflow checking.  */
-       unsigned int bitsize;
-
-       /*  Notes that the relocation is relative to the location in the
-           data section of the addend.  The relocation function will
-           subtract from the relocation value the address of the location
-           being relocated.  */
-       bfd_boolean pc_relative;
-
-       /*  The bit position of the reloc value in the destination.
-           The relocated value is left shifted by this amount.  */
-       unsigned int bitpos;
-
-       /* What type of overflow error should be checked for when
-          relocating.  */
-       enum complain_overflow complain_on_overflow;
-
-       /* If this field is non null, then the supplied function is
-          called rather than the normal function.  This allows really
-          strange relocation methods to be accommodated (e.g., i960 callj
-          instructions).  */
-       bfd_reloc_status_type (*special_function)
-         (bfd *, arelent *, struct bfd_symbol *, void *, asection *,
-          bfd *, char **);
-
-       /* The textual name of the relocation type.  */
-       char *name;
-
-       /* Some formats record a relocation addend in the section contents
-          rather than with the relocation.  For ELF formats this is the
-          distinction between USE_REL and USE_RELA (though the code checks
-          for USE_REL == 1/0).  The value of this field is TRUE if the
-          addend is recorded with the section contents; when performing a
-          partial link (ld -r) the section contents (the data) will be
-          modified.  The value of this field is FALSE if addends are
-          recorded with the relocation (in arelent.addend); when performing
-          a partial link the relocation will be modified.
-          All relocations for all ELF USE_RELA targets should set this field
-          to FALSE (values of TRUE should be looked on with suspicion).
-          However, the converse is not true: not all relocations of all ELF
-          USE_REL targets set this field to TRUE.  Why this is so is peculiar
-          to each particular target.  For relocs that aren't used in partial
-          links (e.g. GOT stuff) it doesn't matter what this is set to.  */
-       bfd_boolean partial_inplace;
-
-       /* src_mask selects the part of the instruction (or data) to be used
-          in the relocation sum.  If the target relocations don't have an
-          addend in the reloc, eg. ELF USE_REL, src_mask will normally equal
-          dst_mask to extract the addend from the section contents.  If
-          relocations do have an addend in the reloc, eg. ELF USE_RELA, this
-          field should be zero.  Non-zero values for ELF USE_RELA targets are
-          bogus as in those cases the value in the dst_mask part of the
-          section contents should be treated as garbage.  */
-       bfd_vma src_mask;
-
-       /* dst_mask selects which parts of the instruction (or data) are
-          replaced with a relocated value.  */
-       bfd_vma dst_mask;
-
-       /* When some formats create PC relative instructions, they leave
-          the value of the pc of the place being relocated in the offset
-          slot of the instruction, so that a PC relative relocation can
-          be made just by adding in an ordinary offset (e.g., sun3 a.out).
-          Some formats leave the displacement part of an instruction
-          empty (e.g., m88k bcs); this flag signals the fact.  */
-       bfd_boolean pcrel_offset;
-     };
-   
-2.10.1.3 `The HOWTO Macro'
-..........................
-
-*Description*
-The HOWTO define is horrible and will go away.
-     #define HOWTO(C, R, S, B, P, BI, O, SF, NAME, INPLACE, MASKSRC, MASKDST, PC) \
-       { (unsigned) C, R, S, B, P, BI, O, SF, NAME, INPLACE, MASKSRC, MASKDST, PC }
-
-   *Description*
-And will be replaced with the totally magic way. But for the moment, we
-are compatible, so do it this way.
-     #define NEWHOWTO(FUNCTION, NAME, SIZE, REL, IN) \
-       HOWTO (0, 0, SIZE, 0, REL, 0, complain_overflow_dont, FUNCTION, \
-              NAME, FALSE, 0, 0, IN)
-
-   *Description*
-This is used to fill in an empty howto entry in an array.
-     #define EMPTY_HOWTO(C) \
-       HOWTO ((C), 0, 0, 0, FALSE, 0, complain_overflow_dont, NULL, \
-              NULL, FALSE, 0, 0, FALSE)
-
-   *Description*
-Helper routine to turn a symbol into a relocation value.
-     #define HOWTO_PREPARE(relocation, symbol)               \
-       {                                                     \
-         if (symbol != NULL)                                 \
-           {                                                 \
-             if (bfd_is_com_section (symbol->section))       \
-               {                                             \
-                 relocation = 0;                             \
-               }                                             \
-             else                                            \
-               {                                             \
-                 relocation = symbol->value;                 \
-               }                                             \
-           }                                                 \
-       }
-
-2.10.1.4 `bfd_get_reloc_size'
-.............................
-
-*Synopsis*
-     unsigned int bfd_get_reloc_size (reloc_howto_type *);
-   *Description*
-For a reloc_howto_type that operates on a fixed number of bytes, this
-returns the number of bytes operated on.
-
-2.10.1.5 `arelent_chain'
-........................
-
-*Description*
-How relocs are tied together in an `asection':
-     typedef struct relent_chain
-     {
-       arelent relent;
-       struct relent_chain *next;
-     }
-     arelent_chain;
-
-2.10.1.6 `bfd_check_overflow'
-.............................
-
-*Synopsis*
-     bfd_reloc_status_type bfd_check_overflow
-        (enum complain_overflow how,
-         unsigned int bitsize,
-         unsigned int rightshift,
-         unsigned int addrsize,
-         bfd_vma relocation);
-   *Description*
-Perform overflow checking on RELOCATION which has BITSIZE significant
-bits and will be shifted right by RIGHTSHIFT bits, on a machine with
-addresses containing ADDRSIZE significant bits.  The result is either of
-`bfd_reloc_ok' or `bfd_reloc_overflow'.
-
-2.10.1.7 `bfd_perform_relocation'
-.................................
-
-*Synopsis*
-     bfd_reloc_status_type bfd_perform_relocation
-        (bfd *abfd,
-         arelent *reloc_entry,
-         void *data,
-         asection *input_section,
-         bfd *output_bfd,
-         char **error_message);
-   *Description*
-If OUTPUT_BFD is supplied to this function, the generated image will be
-relocatable; the relocations are copied to the output file after they
-have been changed to reflect the new state of the world. There are two
-ways of reflecting the results of partial linkage in an output file: by
-modifying the output data in place, and by modifying the relocation
-record.  Some native formats (e.g., basic a.out and basic coff) have no
-way of specifying an addend in the relocation type, so the addend has
-to go in the output data.  This is no big deal since in these formats
-the output data slot will always be big enough for the addend. Complex
-reloc types with addends were invented to solve just this problem.  The
-ERROR_MESSAGE argument is set to an error message if this return
-`bfd_reloc_dangerous'.
-
-2.10.1.8 `bfd_install_relocation'
-.................................
-
-*Synopsis*
-     bfd_reloc_status_type bfd_install_relocation
-        (bfd *abfd,
-         arelent *reloc_entry,
-         void *data, bfd_vma data_start,
-         asection *input_section,
-         char **error_message);
-   *Description*
-This looks remarkably like `bfd_perform_relocation', except it does not
-expect that the section contents have been filled in.  I.e., it's
-suitable for use when creating, rather than applying a relocation.
-
-   For now, this function should be considered reserved for the
-assembler.
-
-
-File: bfd.info,  Node: howto manager,  Prev: typedef arelent,  Up: Relocations
-
-2.11 The howto manager
-======================
-
-When an application wants to create a relocation, but doesn't know what
-the target machine might call it, it can find out by using this bit of
-code.
-
-2.11.0.1 `bfd_reloc_code_type'
-..............................
-
-*Description*
-The insides of a reloc code.  The idea is that, eventually, there will
-be one enumerator for every type of relocation we ever do.  Pass one of
-these values to `bfd_reloc_type_lookup', and it'll return a howto
-pointer.
-
-   This does mean that the application must determine the correct
-enumerator value; you can't get a howto pointer from a random set of
-attributes.
-
-   Here are the possible values for `enum bfd_reloc_code_real':
-
- -- : BFD_RELOC_64
- -- : BFD_RELOC_32
- -- : BFD_RELOC_26
- -- : BFD_RELOC_24
- -- : BFD_RELOC_16
- -- : BFD_RELOC_14
- -- : BFD_RELOC_8
-     Basic absolute relocations of N bits.
-
- -- : BFD_RELOC_64_PCREL
- -- : BFD_RELOC_32_PCREL
- -- : BFD_RELOC_24_PCREL
- -- : BFD_RELOC_16_PCREL
- -- : BFD_RELOC_12_PCREL
- -- : BFD_RELOC_8_PCREL
-     PC-relative relocations.  Sometimes these are relative to the
-     address of the relocation itself; sometimes they are relative to
-     the start of the section containing the relocation.  It depends on
-     the specific target.
-
-     The 24-bit relocation is used in some Intel 960 configurations.
-
- -- : BFD_RELOC_32_SECREL
-     Section relative relocations.  Some targets need this for DWARF2.
-
- -- : BFD_RELOC_32_GOT_PCREL
- -- : BFD_RELOC_16_GOT_PCREL
- -- : BFD_RELOC_8_GOT_PCREL
- -- : BFD_RELOC_32_GOTOFF
- -- : BFD_RELOC_16_GOTOFF
- -- : BFD_RELOC_LO16_GOTOFF
- -- : BFD_RELOC_HI16_GOTOFF
- -- : BFD_RELOC_HI16_S_GOTOFF
- -- : BFD_RELOC_8_GOTOFF
- -- : BFD_RELOC_64_PLT_PCREL
- -- : BFD_RELOC_32_PLT_PCREL
- -- : BFD_RELOC_24_PLT_PCREL
- -- : BFD_RELOC_16_PLT_PCREL
- -- : BFD_RELOC_8_PLT_PCREL
- -- : BFD_RELOC_64_PLTOFF
- -- : BFD_RELOC_32_PLTOFF
- -- : BFD_RELOC_16_PLTOFF
- -- : BFD_RELOC_LO16_PLTOFF
- -- : BFD_RELOC_HI16_PLTOFF
- -- : BFD_RELOC_HI16_S_PLTOFF
- -- : BFD_RELOC_8_PLTOFF
-     For ELF.
-
- -- : BFD_RELOC_68K_GLOB_DAT
- -- : BFD_RELOC_68K_JMP_SLOT
- -- : BFD_RELOC_68K_RELATIVE
-     Relocations used by 68K ELF.
-
- -- : BFD_RELOC_32_BASEREL
- -- : BFD_RELOC_16_BASEREL
- -- : BFD_RELOC_LO16_BASEREL
- -- : BFD_RELOC_HI16_BASEREL
- -- : BFD_RELOC_HI16_S_BASEREL
- -- : BFD_RELOC_8_BASEREL
- -- : BFD_RELOC_RVA
-     Linkage-table relative.
-
- -- : BFD_RELOC_8_FFnn
-     Absolute 8-bit relocation, but used to form an address like 0xFFnn.
-
- -- : BFD_RELOC_32_PCREL_S2
- -- : BFD_RELOC_16_PCREL_S2
- -- : BFD_RELOC_23_PCREL_S2
-     These PC-relative relocations are stored as word displacements -
-     i.e., byte displacements shifted right two bits.  The 30-bit word
-     displacement (<<32_PCREL_S2>> - 32 bits, shifted 2) is used on the
-     SPARC.  (SPARC tools generally refer to this as <<WDISP30>>.)  The
-     signed 16-bit displacement is used on the MIPS, and the 23-bit
-     displacement is used on the Alpha.
-
- -- : BFD_RELOC_HI22
- -- : BFD_RELOC_LO10
-     High 22 bits and low 10 bits of 32-bit value, placed into lower
-     bits of the target word.  These are used on the SPARC.
-
- -- : BFD_RELOC_GPREL16
- -- : BFD_RELOC_GPREL32
-     For systems that allocate a Global Pointer register, these are
-     displacements off that register.  These relocation types are
-     handled specially, because the value the register will have is
-     decided relatively late.
-
- -- : BFD_RELOC_I960_CALLJ
-     Reloc types used for i960/b.out.
-
- -- : BFD_RELOC_NONE
- -- : BFD_RELOC_SPARC_WDISP22
- -- : BFD_RELOC_SPARC22
- -- : BFD_RELOC_SPARC13
- -- : BFD_RELOC_SPARC_GOT10
- -- : BFD_RELOC_SPARC_GOT13
- -- : BFD_RELOC_SPARC_GOT22
- -- : BFD_RELOC_SPARC_PC10
- -- : BFD_RELOC_SPARC_PC22
- -- : BFD_RELOC_SPARC_WPLT30
- -- : BFD_RELOC_SPARC_COPY
- -- : BFD_RELOC_SPARC_GLOB_DAT
- -- : BFD_RELOC_SPARC_JMP_SLOT
- -- : BFD_RELOC_SPARC_RELATIVE
- -- : BFD_RELOC_SPARC_UA16
- -- : BFD_RELOC_SPARC_UA32
- -- : BFD_RELOC_SPARC_UA64
-     SPARC ELF relocations.  There is probably some overlap with other
-     relocation types already defined.
-
- -- : BFD_RELOC_SPARC_BASE13
- -- : BFD_RELOC_SPARC_BASE22
-     I think these are specific to SPARC a.out (e.g., Sun 4).
-
- -- : BFD_RELOC_SPARC_64
- -- : BFD_RELOC_SPARC_10
- -- : BFD_RELOC_SPARC_11
- -- : BFD_RELOC_SPARC_OLO10
- -- : BFD_RELOC_SPARC_HH22
- -- : BFD_RELOC_SPARC_HM10
- -- : BFD_RELOC_SPARC_LM22
- -- : BFD_RELOC_SPARC_PC_HH22
- -- : BFD_RELOC_SPARC_PC_HM10
- -- : BFD_RELOC_SPARC_PC_LM22
- -- : BFD_RELOC_SPARC_WDISP16
- -- : BFD_RELOC_SPARC_WDISP19
- -- : BFD_RELOC_SPARC_7
- -- : BFD_RELOC_SPARC_6
- -- : BFD_RELOC_SPARC_5
- -- : BFD_RELOC_SPARC_DISP64
- -- : BFD_RELOC_SPARC_PLT32
- -- : BFD_RELOC_SPARC_PLT64
- -- : BFD_RELOC_SPARC_HIX22
- -- : BFD_RELOC_SPARC_LOX10
- -- : BFD_RELOC_SPARC_H44
- -- : BFD_RELOC_SPARC_M44
- -- : BFD_RELOC_SPARC_L44
- -- : BFD_RELOC_SPARC_REGISTER
-     SPARC64 relocations
-
- -- : BFD_RELOC_SPARC_REV32
-     SPARC little endian relocation
-
- -- : BFD_RELOC_SPARC_TLS_GD_HI22
- -- : BFD_RELOC_SPARC_TLS_GD_LO10
- -- : BFD_RELOC_SPARC_TLS_GD_ADD
- -- : BFD_RELOC_SPARC_TLS_GD_CALL
- -- : BFD_RELOC_SPARC_TLS_LDM_HI22
- -- : BFD_RELOC_SPARC_TLS_LDM_LO10
- -- : BFD_RELOC_SPARC_TLS_LDM_ADD
- -- : BFD_RELOC_SPARC_TLS_LDM_CALL
- -- : BFD_RELOC_SPARC_TLS_LDO_HIX22
- -- : BFD_RELOC_SPARC_TLS_LDO_LOX10
- -- : BFD_RELOC_SPARC_TLS_LDO_ADD
- -- : BFD_RELOC_SPARC_TLS_IE_HI22
- -- : BFD_RELOC_SPARC_TLS_IE_LO10
- -- : BFD_RELOC_SPARC_TLS_IE_LD
- -- : BFD_RELOC_SPARC_TLS_IE_LDX
- -- : BFD_RELOC_SPARC_TLS_IE_ADD
- -- : BFD_RELOC_SPARC_TLS_LE_HIX22
- -- : BFD_RELOC_SPARC_TLS_LE_LOX10
- -- : BFD_RELOC_SPARC_TLS_DTPMOD32
- -- : BFD_RELOC_SPARC_TLS_DTPMOD64
- -- : BFD_RELOC_SPARC_TLS_DTPOFF32
- -- : BFD_RELOC_SPARC_TLS_DTPOFF64
- -- : BFD_RELOC_SPARC_TLS_TPOFF32
- -- : BFD_RELOC_SPARC_TLS_TPOFF64
-     SPARC TLS relocations
-
- -- : BFD_RELOC_ALPHA_GPDISP_HI16
-     Alpha ECOFF and ELF relocations.  Some of these treat the symbol or
-     "addend" in some special way.  For GPDISP_HI16 ("gpdisp")
-     relocations, the symbol is ignored when writing; when reading, it
-     will be the absolute section symbol.  The addend is the
-     displacement in bytes of the "lda" instruction from the "ldah"
-     instruction (which is at the address of this reloc).
-
- -- : BFD_RELOC_ALPHA_GPDISP_LO16
-     For GPDISP_LO16 ("ignore") relocations, the symbol is handled as
-     with GPDISP_HI16 relocs.  The addend is ignored when writing the
-     relocations out, and is filled in with the file's GP value on
-     reading, for convenience.
-
- -- : BFD_RELOC_ALPHA_GPDISP
-     The ELF GPDISP relocation is exactly the same as the GPDISP_HI16
-     relocation except that there is no accompanying GPDISP_LO16
-     relocation.
-
- -- : BFD_RELOC_ALPHA_LITERAL
- -- : BFD_RELOC_ALPHA_ELF_LITERAL
- -- : BFD_RELOC_ALPHA_LITUSE
-     The Alpha LITERAL/LITUSE relocs are produced by a symbol reference;
-     the assembler turns it into a LDQ instruction to load the address
-     of the symbol, and then fills in a register in the real
-     instruction.
-
-     The LITERAL reloc, at the LDQ instruction, refers to the .lita
-     section symbol.  The addend is ignored when writing, but is filled
-     in with the file's GP value on reading, for convenience, as with
-     the GPDISP_LO16 reloc.
-
-     The ELF_LITERAL reloc is somewhere between 16_GOTOFF and
-     GPDISP_LO16.  It should refer to the symbol to be referenced, as
-     with 16_GOTOFF, but it generates output not based on the position
-     within the .got section, but relative to the GP value chosen for
-     the file during the final link stage.
-
-     The LITUSE reloc, on the instruction using the loaded address,
-     gives information to the linker that it might be able to use to
-     optimize away some literal section references.  The symbol is
-     ignored (read as the absolute section symbol), and the "addend"
-     indicates the type of instruction using the register: 1 - "memory"
-     fmt insn 2 - byte-manipulation (byte offset reg) 3 - jsr (target
-     of branch)
-
- -- : BFD_RELOC_ALPHA_HINT
-     The HINT relocation indicates a value that should be filled into
-     the "hint" field of a jmp/jsr/ret instruction, for possible branch-
-     prediction logic which may be provided on some processors.
-
- -- : BFD_RELOC_ALPHA_LINKAGE
-     The LINKAGE relocation outputs a linkage pair in the object file,
-     which is filled by the linker.
-
- -- : BFD_RELOC_ALPHA_CODEADDR
-     The CODEADDR relocation outputs a STO_CA in the object file, which
-     is filled by the linker.
-
- -- : BFD_RELOC_ALPHA_GPREL_HI16
- -- : BFD_RELOC_ALPHA_GPREL_LO16
-     The GPREL_HI/LO relocations together form a 32-bit offset from the
-     GP register.
-
- -- : BFD_RELOC_ALPHA_BRSGP
-     Like BFD_RELOC_23_PCREL_S2, except that the source and target must
-     share a common GP, and the target address is adjusted for
-     STO_ALPHA_STD_GPLOAD.
-
- -- : BFD_RELOC_ALPHA_TLSGD
- -- : BFD_RELOC_ALPHA_TLSLDM
- -- : BFD_RELOC_ALPHA_DTPMOD64
- -- : BFD_RELOC_ALPHA_GOTDTPREL16
- -- : BFD_RELOC_ALPHA_DTPREL64
- -- : BFD_RELOC_ALPHA_DTPREL_HI16
- -- : BFD_RELOC_ALPHA_DTPREL_LO16
- -- : BFD_RELOC_ALPHA_DTPREL16
- -- : BFD_RELOC_ALPHA_GOTTPREL16
- -- : BFD_RELOC_ALPHA_TPREL64
- -- : BFD_RELOC_ALPHA_TPREL_HI16
- -- : BFD_RELOC_ALPHA_TPREL_LO16
- -- : BFD_RELOC_ALPHA_TPREL16
-     Alpha thread-local storage relocations.
-
- -- : BFD_RELOC_MIPS_JMP
-     Bits 27..2 of the relocation address shifted right 2 bits; simple
-     reloc otherwise.
-
- -- : BFD_RELOC_MIPS16_JMP
-     The MIPS16 jump instruction.
-
- -- : BFD_RELOC_MIPS16_GPREL
-     MIPS16 GP relative reloc.
-
- -- : BFD_RELOC_HI16
-     High 16 bits of 32-bit value; simple reloc.
-
- -- : BFD_RELOC_HI16_S
-     High 16 bits of 32-bit value but the low 16 bits will be sign
-     extended and added to form the final result.  If the low 16 bits
-     form a negative number, we need to add one to the high value to
-     compensate for the borrow when the low bits are added.
-
- -- : BFD_RELOC_LO16
-     Low 16 bits.
-
- -- : BFD_RELOC_MIPS16_HI16
-     MIPS16 high 16 bits of 32-bit value.
-
- -- : BFD_RELOC_MIPS16_HI16_S
-     MIPS16 high 16 bits of 32-bit value but the low 16 bits will be
-     sign extended and added to form the final result.  If the low 16
-     bits form a negative number, we need to add one to the high value
-     to compensate for the borrow when the low bits are added.
-
- -- : BFD_RELOC_MIPS16_LO16
-     MIPS16 low 16 bits.
-
- -- : BFD_RELOC_MIPS_LITERAL
-     Relocation against a MIPS literal section.
-
- -- : BFD_RELOC_MIPS_GOT16
- -- : BFD_RELOC_MIPS_CALL16
- -- : BFD_RELOC_MIPS_GOT_HI16
- -- : BFD_RELOC_MIPS_GOT_LO16
- -- : BFD_RELOC_MIPS_CALL_HI16
- -- : BFD_RELOC_MIPS_CALL_LO16
- -- : BFD_RELOC_MIPS_SUB
- -- : BFD_RELOC_MIPS_GOT_PAGE
- -- : BFD_RELOC_MIPS_GOT_OFST
- -- : BFD_RELOC_MIPS_GOT_DISP
- -- : BFD_RELOC_MIPS_SHIFT5
- -- : BFD_RELOC_MIPS_SHIFT6
- -- : BFD_RELOC_MIPS_INSERT_A
- -- : BFD_RELOC_MIPS_INSERT_B
- -- : BFD_RELOC_MIPS_DELETE
- -- : BFD_RELOC_MIPS_HIGHEST
- -- : BFD_RELOC_MIPS_HIGHER
- -- : BFD_RELOC_MIPS_SCN_DISP
- -- : BFD_RELOC_MIPS_REL16
- -- : BFD_RELOC_MIPS_RELGOT
- -- : BFD_RELOC_MIPS_JALR
- -- : BFD_RELOC_MIPS_TLS_DTPMOD32
- -- : BFD_RELOC_MIPS_TLS_DTPREL32
- -- : BFD_RELOC_MIPS_TLS_DTPMOD64
- -- : BFD_RELOC_MIPS_TLS_DTPREL64
- -- : BFD_RELOC_MIPS_TLS_GD
- -- : BFD_RELOC_MIPS_TLS_LDM
- -- : BFD_RELOC_MIPS_TLS_DTPREL_HI16
- -- : BFD_RELOC_MIPS_TLS_DTPREL_LO16
- -- : BFD_RELOC_MIPS_TLS_GOTTPREL
- -- : BFD_RELOC_MIPS_TLS_TPREL32
- -- : BFD_RELOC_MIPS_TLS_TPREL64
- -- : BFD_RELOC_MIPS_TLS_TPREL_HI16
- -- : BFD_RELOC_MIPS_TLS_TPREL_LO16
-     MIPS ELF relocations.
-
- -- : BFD_RELOC_FRV_LABEL16
- -- : BFD_RELOC_FRV_LABEL24
- -- : BFD_RELOC_FRV_LO16
- -- : BFD_RELOC_FRV_HI16
- -- : BFD_RELOC_FRV_GPREL12
- -- : BFD_RELOC_FRV_GPRELU12
- -- : BFD_RELOC_FRV_GPREL32
- -- : BFD_RELOC_FRV_GPRELHI
- -- : BFD_RELOC_FRV_GPRELLO
- -- : BFD_RELOC_FRV_GOT12
- -- : BFD_RELOC_FRV_GOTHI
- -- : BFD_RELOC_FRV_GOTLO
- -- : BFD_RELOC_FRV_FUNCDESC
- -- : BFD_RELOC_FRV_FUNCDESC_GOT12
- -- : BFD_RELOC_FRV_FUNCDESC_GOTHI
- -- : BFD_RELOC_FRV_FUNCDESC_GOTLO
- -- : BFD_RELOC_FRV_FUNCDESC_VALUE
- -- : BFD_RELOC_FRV_FUNCDESC_GOTOFF12
- -- : BFD_RELOC_FRV_FUNCDESC_GOTOFFHI
- -- : BFD_RELOC_FRV_FUNCDESC_GOTOFFLO
- -- : BFD_RELOC_FRV_GOTOFF12
- -- : BFD_RELOC_FRV_GOTOFFHI
- -- : BFD_RELOC_FRV_GOTOFFLO
- -- : BFD_RELOC_FRV_GETTLSOFF
- -- : BFD_RELOC_FRV_TLSDESC_VALUE
- -- : BFD_RELOC_FRV_GOTTLSDESC12
- -- : BFD_RELOC_FRV_GOTTLSDESCHI
- -- : BFD_RELOC_FRV_GOTTLSDESCLO
- -- : BFD_RELOC_FRV_TLSMOFF12
- -- : BFD_RELOC_FRV_TLSMOFFHI
- -- : BFD_RELOC_FRV_TLSMOFFLO
- -- : BFD_RELOC_FRV_GOTTLSOFF12
- -- : BFD_RELOC_FRV_GOTTLSOFFHI
- -- : BFD_RELOC_FRV_GOTTLSOFFLO
- -- : BFD_RELOC_FRV_TLSOFF
- -- : BFD_RELOC_FRV_TLSDESC_RELAX
- -- : BFD_RELOC_FRV_GETTLSOFF_RELAX
- -- : BFD_RELOC_FRV_TLSOFF_RELAX
- -- : BFD_RELOC_FRV_TLSMOFF
-     Fujitsu Frv Relocations.
-
- -- : BFD_RELOC_MN10300_GOTOFF24
-     This is a 24bit GOT-relative reloc for the mn10300.
-
- -- : BFD_RELOC_MN10300_GOT32
-     This is a 32bit GOT-relative reloc for the mn10300, offset by two
-     bytes in the instruction.
-
- -- : BFD_RELOC_MN10300_GOT24
-     This is a 24bit GOT-relative reloc for the mn10300, offset by two
-     bytes in the instruction.
-
- -- : BFD_RELOC_MN10300_GOT16
-     This is a 16bit GOT-relative reloc for the mn10300, offset by two
-     bytes in the instruction.
-
- -- : BFD_RELOC_MN10300_COPY
-     Copy symbol at runtime.
-
- -- : BFD_RELOC_MN10300_GLOB_DAT
-     Create GOT entry.
-
- -- : BFD_RELOC_MN10300_JMP_SLOT
-     Create PLT entry.
-
- -- : BFD_RELOC_MN10300_RELATIVE
-     Adjust by program base.
-
- -- : BFD_RELOC_386_GOT32
- -- : BFD_RELOC_386_PLT32
- -- : BFD_RELOC_386_COPY
- -- : BFD_RELOC_386_GLOB_DAT
- -- : BFD_RELOC_386_JUMP_SLOT
- -- : BFD_RELOC_386_RELATIVE
- -- : BFD_RELOC_386_GOTOFF
- -- : BFD_RELOC_386_GOTPC
- -- : BFD_RELOC_386_TLS_TPOFF
- -- : BFD_RELOC_386_TLS_IE
- -- : BFD_RELOC_386_TLS_GOTIE
- -- : BFD_RELOC_386_TLS_LE
- -- : BFD_RELOC_386_TLS_GD
- -- : BFD_RELOC_386_TLS_LDM
- -- : BFD_RELOC_386_TLS_LDO_32
- -- : BFD_RELOC_386_TLS_IE_32
- -- : BFD_RELOC_386_TLS_LE_32
- -- : BFD_RELOC_386_TLS_DTPMOD32
- -- : BFD_RELOC_386_TLS_DTPOFF32
- -- : BFD_RELOC_386_TLS_TPOFF32
-     i386/elf relocations
-
- -- : BFD_RELOC_X86_64_GOT32
- -- : BFD_RELOC_X86_64_PLT32
- -- : BFD_RELOC_X86_64_COPY
- -- : BFD_RELOC_X86_64_GLOB_DAT
- -- : BFD_RELOC_X86_64_JUMP_SLOT
- -- : BFD_RELOC_X86_64_RELATIVE
- -- : BFD_RELOC_X86_64_GOTPCREL
- -- : BFD_RELOC_X86_64_32S
- -- : BFD_RELOC_X86_64_DTPMOD64
- -- : BFD_RELOC_X86_64_DTPOFF64
- -- : BFD_RELOC_X86_64_TPOFF64
- -- : BFD_RELOC_X86_64_TLSGD
- -- : BFD_RELOC_X86_64_TLSLD
- -- : BFD_RELOC_X86_64_DTPOFF32
- -- : BFD_RELOC_X86_64_GOTTPOFF
- -- : BFD_RELOC_X86_64_TPOFF32
-     x86-64/elf relocations
-
- -- : BFD_RELOC_NS32K_IMM_8
- -- : BFD_RELOC_NS32K_IMM_16
- -- : BFD_RELOC_NS32K_IMM_32
- -- : BFD_RELOC_NS32K_IMM_8_PCREL
- -- : BFD_RELOC_NS32K_IMM_16_PCREL
- -- : BFD_RELOC_NS32K_IMM_32_PCREL
- -- : BFD_RELOC_NS32K_DISP_8
- -- : BFD_RELOC_NS32K_DISP_16
- -- : BFD_RELOC_NS32K_DISP_32
- -- : BFD_RELOC_NS32K_DISP_8_PCREL
- -- : BFD_RELOC_NS32K_DISP_16_PCREL
- -- : BFD_RELOC_NS32K_DISP_32_PCREL
-     ns32k relocations
-
- -- : BFD_RELOC_PDP11_DISP_8_PCREL
- -- : BFD_RELOC_PDP11_DISP_6_PCREL
-     PDP11 relocations
-
- -- : BFD_RELOC_PJ_CODE_HI16
- -- : BFD_RELOC_PJ_CODE_LO16
- -- : BFD_RELOC_PJ_CODE_DIR16
- -- : BFD_RELOC_PJ_CODE_DIR32
- -- : BFD_RELOC_PJ_CODE_REL16
- -- : BFD_RELOC_PJ_CODE_REL32
-     Picojava relocs.  Not all of these appear in object files.
-
- -- : BFD_RELOC_PPC_B26
- -- : BFD_RELOC_PPC_BA26
- -- : BFD_RELOC_PPC_TOC16
- -- : BFD_RELOC_PPC_B16
- -- : BFD_RELOC_PPC_B16_BRTAKEN
- -- : BFD_RELOC_PPC_B16_BRNTAKEN
- -- : BFD_RELOC_PPC_BA16
- -- : BFD_RELOC_PPC_BA16_BRTAKEN
- -- : BFD_RELOC_PPC_BA16_BRNTAKEN
- -- : BFD_RELOC_PPC_COPY
- -- : BFD_RELOC_PPC_GLOB_DAT
- -- : BFD_RELOC_PPC_JMP_SLOT
- -- : BFD_RELOC_PPC_RELATIVE
- -- : BFD_RELOC_PPC_LOCAL24PC
- -- : BFD_RELOC_PPC_EMB_NADDR32
- -- : BFD_RELOC_PPC_EMB_NADDR16
- -- : BFD_RELOC_PPC_EMB_NADDR16_LO
- -- : BFD_RELOC_PPC_EMB_NADDR16_HI
- -- : BFD_RELOC_PPC_EMB_NADDR16_HA
- -- : BFD_RELOC_PPC_EMB_SDAI16
- -- : BFD_RELOC_PPC_EMB_SDA2I16
- -- : BFD_RELOC_PPC_EMB_SDA2REL
- -- : BFD_RELOC_PPC_EMB_SDA21
- -- : BFD_RELOC_PPC_EMB_MRKREF
- -- : BFD_RELOC_PPC_EMB_RELSEC16
- -- : BFD_RELOC_PPC_EMB_RELST_LO
- -- : BFD_RELOC_PPC_EMB_RELST_HI
- -- : BFD_RELOC_PPC_EMB_RELST_HA
- -- : BFD_RELOC_PPC_EMB_BIT_FLD
- -- : BFD_RELOC_PPC_EMB_RELSDA
- -- : BFD_RELOC_PPC64_HIGHER
- -- : BFD_RELOC_PPC64_HIGHER_S
- -- : BFD_RELOC_PPC64_HIGHEST
- -- : BFD_RELOC_PPC64_HIGHEST_S
- -- : BFD_RELOC_PPC64_TOC16_LO
- -- : BFD_RELOC_PPC64_TOC16_HI
- -- : BFD_RELOC_PPC64_TOC16_HA
- -- : BFD_RELOC_PPC64_TOC
- -- : BFD_RELOC_PPC64_PLTGOT16
- -- : BFD_RELOC_PPC64_PLTGOT16_LO
- -- : BFD_RELOC_PPC64_PLTGOT16_HI
- -- : BFD_RELOC_PPC64_PLTGOT16_HA
- -- : BFD_RELOC_PPC64_ADDR16_DS
- -- : BFD_RELOC_PPC64_ADDR16_LO_DS
- -- : BFD_RELOC_PPC64_GOT16_DS
- -- : BFD_RELOC_PPC64_GOT16_LO_DS
- -- : BFD_RELOC_PPC64_PLT16_LO_DS
- -- : BFD_RELOC_PPC64_SECTOFF_DS
- -- : BFD_RELOC_PPC64_SECTOFF_LO_DS
- -- : BFD_RELOC_PPC64_TOC16_DS
- -- : BFD_RELOC_PPC64_TOC16_LO_DS
- -- : BFD_RELOC_PPC64_PLTGOT16_DS
- -- : BFD_RELOC_PPC64_PLTGOT16_LO_DS
-     Power(rs6000) and PowerPC relocations.
-
- -- : BFD_RELOC_PPC_TLS
- -- : BFD_RELOC_PPC_DTPMOD
- -- : BFD_RELOC_PPC_TPREL16
- -- : BFD_RELOC_PPC_TPREL16_LO
- -- : BFD_RELOC_PPC_TPREL16_HI
- -- : BFD_RELOC_PPC_TPREL16_HA
- -- : BFD_RELOC_PPC_TPREL
- -- : BFD_RELOC_PPC_DTPREL16
- -- : BFD_RELOC_PPC_DTPREL16_LO
- -- : BFD_RELOC_PPC_DTPREL16_HI
- -- : BFD_RELOC_PPC_DTPREL16_HA
- -- : BFD_RELOC_PPC_DTPREL
- -- : BFD_RELOC_PPC_GOT_TLSGD16
- -- : BFD_RELOC_PPC_GOT_TLSGD16_LO
- -- : BFD_RELOC_PPC_GOT_TLSGD16_HI
- -- : BFD_RELOC_PPC_GOT_TLSGD16_HA
- -- : BFD_RELOC_PPC_GOT_TLSLD16
- -- : BFD_RELOC_PPC_GOT_TLSLD16_LO
- -- : BFD_RELOC_PPC_GOT_TLSLD16_HI
- -- : BFD_RELOC_PPC_GOT_TLSLD16_HA
- -- : BFD_RELOC_PPC_GOT_TPREL16
- -- : BFD_RELOC_PPC_GOT_TPREL16_LO
- -- : BFD_RELOC_PPC_GOT_TPREL16_HI
- -- : BFD_RELOC_PPC_GOT_TPREL16_HA
- -- : BFD_RELOC_PPC_GOT_DTPREL16
- -- : BFD_RELOC_PPC_GOT_DTPREL16_LO
- -- : BFD_RELOC_PPC_GOT_DTPREL16_HI
- -- : BFD_RELOC_PPC_GOT_DTPREL16_HA
- -- : BFD_RELOC_PPC64_TPREL16_DS
- -- : BFD_RELOC_PPC64_TPREL16_LO_DS
- -- : BFD_RELOC_PPC64_TPREL16_HIGHER
- -- : BFD_RELOC_PPC64_TPREL16_HIGHERA
- -- : BFD_RELOC_PPC64_TPREL16_HIGHEST
- -- : BFD_RELOC_PPC64_TPREL16_HIGHESTA
- -- : BFD_RELOC_PPC64_DTPREL16_DS
- -- : BFD_RELOC_PPC64_DTPREL16_LO_DS
- -- : BFD_RELOC_PPC64_DTPREL16_HIGHER
- -- : BFD_RELOC_PPC64_DTPREL16_HIGHERA
- -- : BFD_RELOC_PPC64_DTPREL16_HIGHEST
- -- : BFD_RELOC_PPC64_DTPREL16_HIGHESTA
-     PowerPC and PowerPC64 thread-local storage relocations.
-
- -- : BFD_RELOC_I370_D12
-     IBM 370/390 relocations
-
- -- : BFD_RELOC_CTOR
-     The type of reloc used to build a constructor table - at the moment
-     probably a 32 bit wide absolute relocation, but the target can
-     choose.  It generally does map to one of the other relocation
-     types.
-
- -- : BFD_RELOC_ARM_PCREL_BRANCH
-     ARM 26 bit pc-relative branch.  The lowest two bits must be zero
-     and are not stored in the instruction.
-
- -- : BFD_RELOC_ARM_PCREL_BLX
-     ARM 26 bit pc-relative branch.  The lowest bit must be zero and is
-     not stored in the instruction.  The 2nd lowest bit comes from a 1
-     bit field in the instruction.
-
- -- : BFD_RELOC_THUMB_PCREL_BLX
-     Thumb 22 bit pc-relative branch.  The lowest bit must be zero and
-     is not stored in the instruction.  The 2nd lowest bit comes from a
-     1 bit field in the instruction.
-
- -- : BFD_RELOC_ARM_IMMEDIATE
- -- : BFD_RELOC_ARM_ADRL_IMMEDIATE
- -- : BFD_RELOC_ARM_OFFSET_IMM
- -- : BFD_RELOC_ARM_SHIFT_IMM
- -- : BFD_RELOC_ARM_SMI
- -- : BFD_RELOC_ARM_SWI
- -- : BFD_RELOC_ARM_MULTI
- -- : BFD_RELOC_ARM_CP_OFF_IMM
- -- : BFD_RELOC_ARM_CP_OFF_IMM_S2
- -- : BFD_RELOC_ARM_ADR_IMM
- -- : BFD_RELOC_ARM_LDR_IMM
- -- : BFD_RELOC_ARM_LITERAL
- -- : BFD_RELOC_ARM_IN_POOL
- -- : BFD_RELOC_ARM_OFFSET_IMM8
- -- : BFD_RELOC_ARM_HWLITERAL
- -- : BFD_RELOC_ARM_THUMB_ADD
- -- : BFD_RELOC_ARM_THUMB_IMM
- -- : BFD_RELOC_ARM_THUMB_SHIFT
- -- : BFD_RELOC_ARM_THUMB_OFFSET
- -- : BFD_RELOC_ARM_GOT12
- -- : BFD_RELOC_ARM_GOT32
- -- : BFD_RELOC_ARM_JUMP_SLOT
- -- : BFD_RELOC_ARM_COPY
- -- : BFD_RELOC_ARM_GLOB_DAT
- -- : BFD_RELOC_ARM_PLT32
- -- : BFD_RELOC_ARM_RELATIVE
- -- : BFD_RELOC_ARM_GOTOFF
- -- : BFD_RELOC_ARM_GOTPC
-     These relocs are only used within the ARM assembler.  They are not
-     (at present) written to any object files.
-
- -- : BFD_RELOC_ARM_TARGET1
-     Pc-relative or absolute relocation depending on target.  Used for
-     entries in .init_array sections.
-
- -- : BFD_RELOC_ARM_ROSEGREL32
-     Read-only segment base relative address.
-
- -- : BFD_RELOC_ARM_SBREL32
-     Data segment base relative address.
-
- -- : BFD_RELOC_ARM_TARGET2
-     This reloc is used for References to RTTI dta from exception
-     handling tables.  The actual definition depends on the target.  It
-     may be a pc-relative or some form of GOT-indirect relocation.
-
- -- : BFD_RELOC_ARM_PREL31
-     31-bit PC relative address.
-
- -- : BFD_RELOC_SH_PCDISP8BY2
- -- : BFD_RELOC_SH_PCDISP12BY2
- -- : BFD_RELOC_SH_IMM3
- -- : BFD_RELOC_SH_IMM3U
- -- : BFD_RELOC_SH_DISP12
- -- : BFD_RELOC_SH_DISP12BY2
- -- : BFD_RELOC_SH_DISP12BY4
- -- : BFD_RELOC_SH_DISP12BY8
- -- : BFD_RELOC_SH_DISP20
- -- : BFD_RELOC_SH_DISP20BY8
- -- : BFD_RELOC_SH_IMM4
- -- : BFD_RELOC_SH_IMM4BY2
- -- : BFD_RELOC_SH_IMM4BY4
- -- : BFD_RELOC_SH_IMM8
- -- : BFD_RELOC_SH_IMM8BY2
- -- : BFD_RELOC_SH_IMM8BY4
- -- : BFD_RELOC_SH_PCRELIMM8BY2
- -- : BFD_RELOC_SH_PCRELIMM8BY4
- -- : BFD_RELOC_SH_SWITCH16
- -- : BFD_RELOC_SH_SWITCH32
- -- : BFD_RELOC_SH_USES
- -- : BFD_RELOC_SH_COUNT
- -- : BFD_RELOC_SH_ALIGN
- -- : BFD_RELOC_SH_CODE
- -- : BFD_RELOC_SH_DATA
- -- : BFD_RELOC_SH_LABEL
- -- : BFD_RELOC_SH_LOOP_START
- -- : BFD_RELOC_SH_LOOP_END
- -- : BFD_RELOC_SH_COPY
- -- : BFD_RELOC_SH_GLOB_DAT
- -- : BFD_RELOC_SH_JMP_SLOT
- -- : BFD_RELOC_SH_RELATIVE
- -- : BFD_RELOC_SH_GOTPC
- -- : BFD_RELOC_SH_GOT_LOW16
- -- : BFD_RELOC_SH_GOT_MEDLOW16
- -- : BFD_RELOC_SH_GOT_MEDHI16
- -- : BFD_RELOC_SH_GOT_HI16
- -- : BFD_RELOC_SH_GOTPLT_LOW16
- -- : BFD_RELOC_SH_GOTPLT_MEDLOW16
- -- : BFD_RELOC_SH_GOTPLT_MEDHI16
- -- : BFD_RELOC_SH_GOTPLT_HI16
- -- : BFD_RELOC_SH_PLT_LOW16
- -- : BFD_RELOC_SH_PLT_MEDLOW16
- -- : BFD_RELOC_SH_PLT_MEDHI16
- -- : BFD_RELOC_SH_PLT_HI16
- -- : BFD_RELOC_SH_GOTOFF_LOW16
- -- : BFD_RELOC_SH_GOTOFF_MEDLOW16
- -- : BFD_RELOC_SH_GOTOFF_MEDHI16
- -- : BFD_RELOC_SH_GOTOFF_HI16
- -- : BFD_RELOC_SH_GOTPC_LOW16
- -- : BFD_RELOC_SH_GOTPC_MEDLOW16
- -- : BFD_RELOC_SH_GOTPC_MEDHI16
- -- : BFD_RELOC_SH_GOTPC_HI16
- -- : BFD_RELOC_SH_COPY64
- -- : BFD_RELOC_SH_GLOB_DAT64
- -- : BFD_RELOC_SH_JMP_SLOT64
- -- : BFD_RELOC_SH_RELATIVE64
- -- : BFD_RELOC_SH_GOT10BY4
- -- : BFD_RELOC_SH_GOT10BY8
- -- : BFD_RELOC_SH_GOTPLT10BY4
- -- : BFD_RELOC_SH_GOTPLT10BY8
- -- : BFD_RELOC_SH_GOTPLT32
- -- : BFD_RELOC_SH_SHMEDIA_CODE
- -- : BFD_RELOC_SH_IMMU5
- -- : BFD_RELOC_SH_IMMS6
- -- : BFD_RELOC_SH_IMMS6BY32
- -- : BFD_RELOC_SH_IMMU6
- -- : BFD_RELOC_SH_IMMS10
- -- : BFD_RELOC_SH_IMMS10BY2
- -- : BFD_RELOC_SH_IMMS10BY4
- -- : BFD_RELOC_SH_IMMS10BY8
- -- : BFD_RELOC_SH_IMMS16
- -- : BFD_RELOC_SH_IMMU16
- -- : BFD_RELOC_SH_IMM_LOW16
- -- : BFD_RELOC_SH_IMM_LOW16_PCREL
- -- : BFD_RELOC_SH_IMM_MEDLOW16
- -- : BFD_RELOC_SH_IMM_MEDLOW16_PCREL
- -- : BFD_RELOC_SH_IMM_MEDHI16
- -- : BFD_RELOC_SH_IMM_MEDHI16_PCREL
- -- : BFD_RELOC_SH_IMM_HI16
- -- : BFD_RELOC_SH_IMM_HI16_PCREL
- -- : BFD_RELOC_SH_PT_16
- -- : BFD_RELOC_SH_TLS_GD_32
- -- : BFD_RELOC_SH_TLS_LD_32
- -- : BFD_RELOC_SH_TLS_LDO_32
- -- : BFD_RELOC_SH_TLS_IE_32
- -- : BFD_RELOC_SH_TLS_LE_32
- -- : BFD_RELOC_SH_TLS_DTPMOD32
- -- : BFD_RELOC_SH_TLS_DTPOFF32
- -- : BFD_RELOC_SH_TLS_TPOFF32
-     Renesas / SuperH SH relocs.  Not all of these appear in object
-     files.
-
- -- : BFD_RELOC_THUMB_PCREL_BRANCH9
- -- : BFD_RELOC_THUMB_PCREL_BRANCH12
- -- : BFD_RELOC_THUMB_PCREL_BRANCH23
-     Thumb 23-, 12- and 9-bit pc-relative branches.  The lowest bit must
-     be zero and is not stored in the instruction.
-
- -- : BFD_RELOC_ARC_B22_PCREL
-     ARC Cores relocs.  ARC 22 bit pc-relative branch.  The lowest two
-     bits must be zero and are not stored in the instruction.  The high
-     20 bits are installed in bits 26 through 7 of the instruction.
-
- -- : BFD_RELOC_ARC_B26
-     ARC 26 bit absolute branch.  The lowest two bits must be zero and
-     are not stored in the instruction.  The high 24 bits are installed
-     in bits 23 through 0.
-
- -- : BFD_RELOC_D10V_10_PCREL_R
-     Mitsubishi D10V relocs.  This is a 10-bit reloc with the right 2
-     bits assumed to be 0.
-
- -- : BFD_RELOC_D10V_10_PCREL_L
-     Mitsubishi D10V relocs.  This is a 10-bit reloc with the right 2
-     bits assumed to be 0.  This is the same as the previous reloc
-     except it is in the left container, i.e., shifted left 15 bits.
-
- -- : BFD_RELOC_D10V_18
-     This is an 18-bit reloc with the right 2 bits assumed to be 0.
-
- -- : BFD_RELOC_D10V_18_PCREL
-     This is an 18-bit reloc with the right 2 bits assumed to be 0.
-
- -- : BFD_RELOC_D30V_6
-     Mitsubishi D30V relocs.  This is a 6-bit absolute reloc.
-
- -- : BFD_RELOC_D30V_9_PCREL
-     This is a 6-bit pc-relative reloc with the right 3 bits assumed to
-     be 0.
-
- -- : BFD_RELOC_D30V_9_PCREL_R
-     This is a 6-bit pc-relative reloc with the right 3 bits assumed to
-     be 0. Same as the previous reloc but on the right side of the
-     container.
-
- -- : BFD_RELOC_D30V_15
-     This is a 12-bit absolute reloc with the right 3 bitsassumed to be
-     0.
-
- -- : BFD_RELOC_D30V_15_PCREL
-     This is a 12-bit pc-relative reloc with the right 3 bits assumed
-     to be 0.
-
- -- : BFD_RELOC_D30V_15_PCREL_R
-     This is a 12-bit pc-relative reloc with the right 3 bits assumed
-     to be 0. Same as the previous reloc but on the right side of the
-     container.
-
- -- : BFD_RELOC_D30V_21
-     This is an 18-bit absolute reloc with the right 3 bits assumed to
-     be 0.
-
- -- : BFD_RELOC_D30V_21_PCREL
-     This is an 18-bit pc-relative reloc with the right 3 bits assumed
-     to be 0.
-
- -- : BFD_RELOC_D30V_21_PCREL_R
-     This is an 18-bit pc-relative reloc with the right 3 bits assumed
-     to be 0. Same as the previous reloc but on the right side of the
-     container.
-
- -- : BFD_RELOC_D30V_32
-     This is a 32-bit absolute reloc.
-
- -- : BFD_RELOC_D30V_32_PCREL
-     This is a 32-bit pc-relative reloc.
-
- -- : BFD_RELOC_DLX_HI16_S
-     DLX relocs
-
- -- : BFD_RELOC_DLX_LO16
-     DLX relocs
-
- -- : BFD_RELOC_DLX_JMP26
-     DLX relocs
-
- -- : BFD_RELOC_M32R_24
-     Renesas M32R (formerly Mitsubishi M32R) relocs.  This is a 24 bit
-     absolute address.
-
- -- : BFD_RELOC_M32R_10_PCREL
-     This is a 10-bit pc-relative reloc with the right 2 bits assumed
-     to be 0.
-
- -- : BFD_RELOC_M32R_18_PCREL
-     This is an 18-bit reloc with the right 2 bits assumed to be 0.
-
- -- : BFD_RELOC_M32R_26_PCREL
-     This is a 26-bit reloc with the right 2 bits assumed to be 0.
-
- -- : BFD_RELOC_M32R_HI16_ULO
-     This is a 16-bit reloc containing the high 16 bits of an address
-     used when the lower 16 bits are treated as unsigned.
-
- -- : BFD_RELOC_M32R_HI16_SLO
-     This is a 16-bit reloc containing the high 16 bits of an address
-     used when the lower 16 bits are treated as signed.
-
- -- : BFD_RELOC_M32R_LO16
-     This is a 16-bit reloc containing the lower 16 bits of an address.
-
- -- : BFD_RELOC_M32R_SDA16
-     This is a 16-bit reloc containing the small data area offset for
-     use in add3, load, and store instructions.
-
- -- : BFD_RELOC_M32R_GOT24
- -- : BFD_RELOC_M32R_26_PLTREL
- -- : BFD_RELOC_M32R_COPY
- -- : BFD_RELOC_M32R_GLOB_DAT
- -- : BFD_RELOC_M32R_JMP_SLOT
- -- : BFD_RELOC_M32R_RELATIVE
- -- : BFD_RELOC_M32R_GOTOFF
- -- : BFD_RELOC_M32R_GOTOFF_HI_ULO
- -- : BFD_RELOC_M32R_GOTOFF_HI_SLO
- -- : BFD_RELOC_M32R_GOTOFF_LO
- -- : BFD_RELOC_M32R_GOTPC24
- -- : BFD_RELOC_M32R_GOT16_HI_ULO
- -- : BFD_RELOC_M32R_GOT16_HI_SLO
- -- : BFD_RELOC_M32R_GOT16_LO
- -- : BFD_RELOC_M32R_GOTPC_HI_ULO
- -- : BFD_RELOC_M32R_GOTPC_HI_SLO
- -- : BFD_RELOC_M32R_GOTPC_LO
-     For PIC.
-
- -- : BFD_RELOC_V850_9_PCREL
-     This is a 9-bit reloc
-
- -- : BFD_RELOC_V850_22_PCREL
-     This is a 22-bit reloc
-
- -- : BFD_RELOC_V850_SDA_16_16_OFFSET
-     This is a 16 bit offset from the short data area pointer.
-
- -- : BFD_RELOC_V850_SDA_15_16_OFFSET
-     This is a 16 bit offset (of which only 15 bits are used) from the
-     short data area pointer.
-
- -- : BFD_RELOC_V850_ZDA_16_16_OFFSET
-     This is a 16 bit offset from the zero data area pointer.
-
- -- : BFD_RELOC_V850_ZDA_15_16_OFFSET
-     This is a 16 bit offset (of which only 15 bits are used) from the
-     zero data area pointer.
-
- -- : BFD_RELOC_V850_TDA_6_8_OFFSET
-     This is an 8 bit offset (of which only 6 bits are used) from the
-     tiny data area pointer.
-
- -- : BFD_RELOC_V850_TDA_7_8_OFFSET
-     This is an 8bit offset (of which only 7 bits are used) from the
-     tiny data area pointer.
-
- -- : BFD_RELOC_V850_TDA_7_7_OFFSET
-     This is a 7 bit offset from the tiny data area pointer.
-
- -- : BFD_RELOC_V850_TDA_16_16_OFFSET
-     This is a 16 bit offset from the tiny data area pointer.
-
- -- : BFD_RELOC_V850_TDA_4_5_OFFSET
-     This is a 5 bit offset (of which only 4 bits are used) from the
-     tiny data area pointer.
-
- -- : BFD_RELOC_V850_TDA_4_4_OFFSET
-     This is a 4 bit offset from the tiny data area pointer.
-
- -- : BFD_RELOC_V850_SDA_16_16_SPLIT_OFFSET
-     This is a 16 bit offset from the short data area pointer, with the
-     bits placed non-contiguously in the instruction.
-
- -- : BFD_RELOC_V850_ZDA_16_16_SPLIT_OFFSET
-     This is a 16 bit offset from the zero data area pointer, with the
-     bits placed non-contiguously in the instruction.
-
- -- : BFD_RELOC_V850_CALLT_6_7_OFFSET
-     This is a 6 bit offset from the call table base pointer.
-
- -- : BFD_RELOC_V850_CALLT_16_16_OFFSET
-     This is a 16 bit offset from the call table base pointer.
-
- -- : BFD_RELOC_V850_LONGCALL
-     Used for relaxing indirect function calls.
-
- -- : BFD_RELOC_V850_LONGJUMP
-     Used for relaxing indirect jumps.
-
- -- : BFD_RELOC_V850_ALIGN
-     Used to maintain alignment whilst relaxing.
-
- -- : BFD_RELOC_V850_LO16_SPLIT_OFFSET
-     This is a variation of BFD_RELOC_LO16 that can be used in v850e
-     ld.bu instructions.
-
- -- : BFD_RELOC_MN10300_32_PCREL
-     This is a 32bit pcrel reloc for the mn10300, offset by two bytes
-     in the instruction.
-
- -- : BFD_RELOC_MN10300_16_PCREL
-     This is a 16bit pcrel reloc for the mn10300, offset by two bytes
-     in the instruction.
-
- -- : BFD_RELOC_TIC30_LDP
-     This is a 8bit DP reloc for the tms320c30, where the most
-     significant 8 bits of a 24 bit word are placed into the least
-     significant 8 bits of the opcode.
-
- -- : BFD_RELOC_TIC54X_PARTLS7
-     This is a 7bit reloc for the tms320c54x, where the least
-     significant 7 bits of a 16 bit word are placed into the least
-     significant 7 bits of the opcode.
-
- -- : BFD_RELOC_TIC54X_PARTMS9
-     This is a 9bit DP reloc for the tms320c54x, where the most
-     significant 9 bits of a 16 bit word are placed into the least
-     significant 9 bits of the opcode.
-
- -- : BFD_RELOC_TIC54X_23
-     This is an extended address 23-bit reloc for the tms320c54x.
-
- -- : BFD_RELOC_TIC54X_16_OF_23
-     This is a 16-bit reloc for the tms320c54x, where the least
-     significant 16 bits of a 23-bit extended address are placed into
-     the opcode.
-
- -- : BFD_RELOC_TIC54X_MS7_OF_23
-     This is a reloc for the tms320c54x, where the most significant 7
-     bits of a 23-bit extended address are placed into the opcode.
-
- -- : BFD_RELOC_FR30_48
-     This is a 48 bit reloc for the FR30 that stores 32 bits.
-
- -- : BFD_RELOC_FR30_20
-     This is a 32 bit reloc for the FR30 that stores 20 bits split up
-     into two sections.
-
- -- : BFD_RELOC_FR30_6_IN_4
-     This is a 16 bit reloc for the FR30 that stores a 6 bit word
-     offset in 4 bits.
-
- -- : BFD_RELOC_FR30_8_IN_8
-     This is a 16 bit reloc for the FR30 that stores an 8 bit byte
-     offset into 8 bits.
-
- -- : BFD_RELOC_FR30_9_IN_8
-     This is a 16 bit reloc for the FR30 that stores a 9 bit short
-     offset into 8 bits.
-
- -- : BFD_RELOC_FR30_10_IN_8
-     This is a 16 bit reloc for the FR30 that stores a 10 bit word
-     offset into 8 bits.
-
- -- : BFD_RELOC_FR30_9_PCREL
-     This is a 16 bit reloc for the FR30 that stores a 9 bit pc relative
-     short offset into 8 bits.
-
- -- : BFD_RELOC_FR30_12_PCREL
-     This is a 16 bit reloc for the FR30 that stores a 12 bit pc
-     relative short offset into 11 bits.
-
- -- : BFD_RELOC_MCORE_PCREL_IMM8BY4
- -- : BFD_RELOC_MCORE_PCREL_IMM11BY2
- -- : BFD_RELOC_MCORE_PCREL_IMM4BY2
- -- : BFD_RELOC_MCORE_PCREL_32
- -- : BFD_RELOC_MCORE_PCREL_JSR_IMM11BY2
- -- : BFD_RELOC_MCORE_RVA
-     Motorola Mcore relocations.
-
- -- : BFD_RELOC_MMIX_GETA
- -- : BFD_RELOC_MMIX_GETA_1
- -- : BFD_RELOC_MMIX_GETA_2
- -- : BFD_RELOC_MMIX_GETA_3
-     These are relocations for the GETA instruction.
-
- -- : BFD_RELOC_MMIX_CBRANCH
- -- : BFD_RELOC_MMIX_CBRANCH_J
- -- : BFD_RELOC_MMIX_CBRANCH_1
- -- : BFD_RELOC_MMIX_CBRANCH_2
- -- : BFD_RELOC_MMIX_CBRANCH_3
-     These are relocations for a conditional branch instruction.
-
- -- : BFD_RELOC_MMIX_PUSHJ
- -- : BFD_RELOC_MMIX_PUSHJ_1
- -- : BFD_RELOC_MMIX_PUSHJ_2
- -- : BFD_RELOC_MMIX_PUSHJ_3
- -- : BFD_RELOC_MMIX_PUSHJ_STUBBABLE
-     These are relocations for the PUSHJ instruction.
-
- -- : BFD_RELOC_MMIX_JMP
- -- : BFD_RELOC_MMIX_JMP_1
- -- : BFD_RELOC_MMIX_JMP_2
- -- : BFD_RELOC_MMIX_JMP_3
-     These are relocations for the JMP instruction.
-
- -- : BFD_RELOC_MMIX_ADDR19
-     This is a relocation for a relative address as in a GETA
-     instruction or a branch.
-
- -- : BFD_RELOC_MMIX_ADDR27
-     This is a relocation for a relative address as in a JMP
-     instruction.
-
- -- : BFD_RELOC_MMIX_REG_OR_BYTE
-     This is a relocation for an instruction field that may be a general
-     register or a value 0..255.
-
- -- : BFD_RELOC_MMIX_REG
-     This is a relocation for an instruction field that may be a general
-     register.
-
- -- : BFD_RELOC_MMIX_BASE_PLUS_OFFSET
-     This is a relocation for two instruction fields holding a register
-     and an offset, the equivalent of the relocation.
-
- -- : BFD_RELOC_MMIX_LOCAL
-     This relocation is an assertion that the expression is not
-     allocated as a global register.  It does not modify contents.
-
- -- : BFD_RELOC_AVR_7_PCREL
-     This is a 16 bit reloc for the AVR that stores 8 bit pc relative
-     short offset into 7 bits.
-
- -- : BFD_RELOC_AVR_13_PCREL
-     This is a 16 bit reloc for the AVR that stores 13 bit pc relative
-     short offset into 12 bits.
-
- -- : BFD_RELOC_AVR_16_PM
-     This is a 16 bit reloc for the AVR that stores 17 bit value
-     (usually program memory address) into 16 bits.
-
- -- : BFD_RELOC_AVR_LO8_LDI
-     This is a 16 bit reloc for the AVR that stores 8 bit value (usually
-     data memory address) into 8 bit immediate value of LDI insn.
-
- -- : BFD_RELOC_AVR_HI8_LDI
-     This is a 16 bit reloc for the AVR that stores 8 bit value (high 8
-     bit of data memory address) into 8 bit immediate value of LDI insn.
-
- -- : BFD_RELOC_AVR_HH8_LDI
-     This is a 16 bit reloc for the AVR that stores 8 bit value (most
-     high 8 bit of program memory address) into 8 bit immediate value
-     of LDI insn.
-
- -- : BFD_RELOC_AVR_LO8_LDI_NEG
-     This is a 16 bit reloc for the AVR that stores negated 8 bit value
-     (usually data memory address) into 8 bit immediate value of SUBI
-     insn.
-
- -- : BFD_RELOC_AVR_HI8_LDI_NEG
-     This is a 16 bit reloc for the AVR that stores negated 8 bit value
-     (high 8 bit of data memory address) into 8 bit immediate value of
-     SUBI insn.
-
- -- : BFD_RELOC_AVR_HH8_LDI_NEG
-     This is a 16 bit reloc for the AVR that stores negated 8 bit value
-     (most high 8 bit of program memory address) into 8 bit immediate
-     value of LDI or SUBI insn.
-
- -- : BFD_RELOC_AVR_LO8_LDI_PM
-     This is a 16 bit reloc for the AVR that stores 8 bit value (usually
-     command address) into 8 bit immediate value of LDI insn.
-
- -- : BFD_RELOC_AVR_HI8_LDI_PM
-     This is a 16 bit reloc for the AVR that stores 8 bit value (high 8
-     bit of command address) into 8 bit immediate value of LDI insn.
-
- -- : BFD_RELOC_AVR_HH8_LDI_PM
-     This is a 16 bit reloc for the AVR that stores 8 bit value (most
-     high 8 bit of command address) into 8 bit immediate value of LDI
-     insn.
-
- -- : BFD_RELOC_AVR_LO8_LDI_PM_NEG
-     This is a 16 bit reloc for the AVR that stores negated 8 bit value
-     (usually command address) into 8 bit immediate value of SUBI insn.
-
- -- : BFD_RELOC_AVR_HI8_LDI_PM_NEG
-     This is a 16 bit reloc for the AVR that stores negated 8 bit value
-     (high 8 bit of 16 bit command address) into 8 bit immediate value
-     of SUBI insn.
-
- -- : BFD_RELOC_AVR_HH8_LDI_PM_NEG
-     This is a 16 bit reloc for the AVR that stores negated 8 bit value
-     (high 6 bit of 22 bit command address) into 8 bit immediate value
-     of SUBI insn.
-
- -- : BFD_RELOC_AVR_CALL
-     This is a 32 bit reloc for the AVR that stores 23 bit value into
-     22 bits.
-
- -- : BFD_RELOC_AVR_LDI
-     This is a 16 bit reloc for the AVR that stores all needed bits for
-     absolute addressing with ldi with overflow check to linktime
-
- -- : BFD_RELOC_AVR_6
-     This is a 6 bit reloc for the AVR that stores offset for ldd/std
-     instructions
-
- -- : BFD_RELOC_AVR_6_ADIW
-     This is a 6 bit reloc for the AVR that stores offset for adiw/sbiw
-     instructions
-
- -- : BFD_RELOC_390_12
-     Direct 12 bit.
-
- -- : BFD_RELOC_390_GOT12
-     12 bit GOT offset.
-
- -- : BFD_RELOC_390_PLT32
-     32 bit PC relative PLT address.
-
- -- : BFD_RELOC_390_COPY
-     Copy symbol at runtime.
-
- -- : BFD_RELOC_390_GLOB_DAT
-     Create GOT entry.
-
- -- : BFD_RELOC_390_JMP_SLOT
-     Create PLT entry.
-
- -- : BFD_RELOC_390_RELATIVE
-     Adjust by program base.
-
- -- : BFD_RELOC_390_GOTPC
-     32 bit PC relative offset to GOT.
-
- -- : BFD_RELOC_390_GOT16
-     16 bit GOT offset.
-
- -- : BFD_RELOC_390_PC16DBL
-     PC relative 16 bit shifted by 1.
-
- -- : BFD_RELOC_390_PLT16DBL
-     16 bit PC rel. PLT shifted by 1.
-
- -- : BFD_RELOC_390_PC32DBL
-     PC relative 32 bit shifted by 1.
-
- -- : BFD_RELOC_390_PLT32DBL
-     32 bit PC rel. PLT shifted by 1.
-
- -- : BFD_RELOC_390_GOTPCDBL
-     32 bit PC rel. GOT shifted by 1.
-
- -- : BFD_RELOC_390_GOT64
-     64 bit GOT offset.
-
- -- : BFD_RELOC_390_PLT64
-     64 bit PC relative PLT address.
-
- -- : BFD_RELOC_390_GOTENT
-     32 bit rel. offset to GOT entry.
-
- -- : BFD_RELOC_390_GOTOFF64
-     64 bit offset to GOT.
-
- -- : BFD_RELOC_390_GOTPLT12
-     12-bit offset to symbol-entry within GOT, with PLT handling.
-
- -- : BFD_RELOC_390_GOTPLT16
-     16-bit offset to symbol-entry within GOT, with PLT handling.
-
- -- : BFD_RELOC_390_GOTPLT32
-     32-bit offset to symbol-entry within GOT, with PLT handling.
-
- -- : BFD_RELOC_390_GOTPLT64
-     64-bit offset to symbol-entry within GOT, with PLT handling.
-
- -- : BFD_RELOC_390_GOTPLTENT
-     32-bit rel. offset to symbol-entry within GOT, with PLT handling.
-
- -- : BFD_RELOC_390_PLTOFF16
-     16-bit rel. offset from the GOT to a PLT entry.
-
- -- : BFD_RELOC_390_PLTOFF32
-     32-bit rel. offset from the GOT to a PLT entry.
-
- -- : BFD_RELOC_390_PLTOFF64
-     64-bit rel. offset from the GOT to a PLT entry.
-
- -- : BFD_RELOC_390_TLS_LOAD
- -- : BFD_RELOC_390_TLS_GDCALL
- -- : BFD_RELOC_390_TLS_LDCALL
- -- : BFD_RELOC_390_TLS_GD32
- -- : BFD_RELOC_390_TLS_GD64
- -- : BFD_RELOC_390_TLS_GOTIE12
- -- : BFD_RELOC_390_TLS_GOTIE32
- -- : BFD_RELOC_390_TLS_GOTIE64
- -- : BFD_RELOC_390_TLS_LDM32
- -- : BFD_RELOC_390_TLS_LDM64
- -- : BFD_RELOC_390_TLS_IE32
- -- : BFD_RELOC_390_TLS_IE64
- -- : BFD_RELOC_390_TLS_IEENT
- -- : BFD_RELOC_390_TLS_LE32
- -- : BFD_RELOC_390_TLS_LE64
- -- : BFD_RELOC_390_TLS_LDO32
- -- : BFD_RELOC_390_TLS_LDO64
- -- : BFD_RELOC_390_TLS_DTPMOD
- -- : BFD_RELOC_390_TLS_DTPOFF
- -- : BFD_RELOC_390_TLS_TPOFF
-     s390 tls relocations.
-
- -- : BFD_RELOC_390_20
- -- : BFD_RELOC_390_GOT20
- -- : BFD_RELOC_390_GOTPLT20
- -- : BFD_RELOC_390_TLS_GOTIE20
-     Long displacement extension.
-
- -- : BFD_RELOC_IP2K_FR9
-     Scenix IP2K - 9-bit register number / data address
-
- -- : BFD_RELOC_IP2K_BANK
-     Scenix IP2K - 4-bit register/data bank number
-
- -- : BFD_RELOC_IP2K_ADDR16CJP
-     Scenix IP2K - low 13 bits of instruction word address
-
- -- : BFD_RELOC_IP2K_PAGE3
-     Scenix IP2K - high 3 bits of instruction word address
-
- -- : BFD_RELOC_IP2K_LO8DATA
- -- : BFD_RELOC_IP2K_HI8DATA
- -- : BFD_RELOC_IP2K_EX8DATA
-     Scenix IP2K - ext/low/high 8 bits of data address
-
- -- : BFD_RELOC_IP2K_LO8INSN
- -- : BFD_RELOC_IP2K_HI8INSN
-     Scenix IP2K - low/high 8 bits of instruction word address
-
- -- : BFD_RELOC_IP2K_PC_SKIP
-     Scenix IP2K - even/odd PC modifier to modify snb pcl.0
-
- -- : BFD_RELOC_IP2K_TEXT
-     Scenix IP2K - 16 bit word address in text section.
-
- -- : BFD_RELOC_IP2K_FR_OFFSET
-     Scenix IP2K - 7-bit sp or dp offset
-
- -- : BFD_RELOC_VPE4KMATH_DATA
- -- : BFD_RELOC_VPE4KMATH_INSN
-     Scenix VPE4K coprocessor - data/insn-space addressing
-
- -- : BFD_RELOC_VTABLE_INHERIT
- -- : BFD_RELOC_VTABLE_ENTRY
-     These two relocations are used by the linker to determine which of
-     the entries in a C++ virtual function table are actually used.
-     When the -gc-sections option is given, the linker will zero out
-     the entries that are not used, so that the code for those
-     functions need not be included in the output.
-
-     VTABLE_INHERIT is a zero-space relocation used to describe to the
-     linker the inheritance tree of a C++ virtual function table.  The
-     relocation's symbol should be the parent class' vtable, and the
-     relocation should be located at the child vtable.
-
-     VTABLE_ENTRY is a zero-space relocation that describes the use of a
-     virtual function table entry.  The reloc's symbol should refer to
-     the table of the class mentioned in the code.  Off of that base,
-     an offset describes the entry that is being used.  For Rela hosts,
-     this offset is stored in the reloc's addend.  For Rel hosts, we
-     are forced to put this offset in the reloc's section offset.
-
- -- : BFD_RELOC_IA64_IMM14
- -- : BFD_RELOC_IA64_IMM22
- -- : BFD_RELOC_IA64_IMM64
- -- : BFD_RELOC_IA64_DIR32MSB
- -- : BFD_RELOC_IA64_DIR32LSB
- -- : BFD_RELOC_IA64_DIR64MSB
- -- : BFD_RELOC_IA64_DIR64LSB
- -- : BFD_RELOC_IA64_GPREL22
- -- : BFD_RELOC_IA64_GPREL64I
- -- : BFD_RELOC_IA64_GPREL32MSB
- -- : BFD_RELOC_IA64_GPREL32LSB
- -- : BFD_RELOC_IA64_GPREL64MSB
- -- : BFD_RELOC_IA64_GPREL64LSB
- -- : BFD_RELOC_IA64_LTOFF22
- -- : BFD_RELOC_IA64_LTOFF64I
- -- : BFD_RELOC_IA64_PLTOFF22
- -- : BFD_RELOC_IA64_PLTOFF64I
- -- : BFD_RELOC_IA64_PLTOFF64MSB
- -- : BFD_RELOC_IA64_PLTOFF64LSB
- -- : BFD_RELOC_IA64_FPTR64I
- -- : BFD_RELOC_IA64_FPTR32MSB
- -- : BFD_RELOC_IA64_FPTR32LSB
- -- : BFD_RELOC_IA64_FPTR64MSB
- -- : BFD_RELOC_IA64_FPTR64LSB
- -- : BFD_RELOC_IA64_PCREL21B
- -- : BFD_RELOC_IA64_PCREL21BI
- -- : BFD_RELOC_IA64_PCREL21M
- -- : BFD_RELOC_IA64_PCREL21F
- -- : BFD_RELOC_IA64_PCREL22
- -- : BFD_RELOC_IA64_PCREL60B
- -- : BFD_RELOC_IA64_PCREL64I
- -- : BFD_RELOC_IA64_PCREL32MSB
- -- : BFD_RELOC_IA64_PCREL32LSB
- -- : BFD_RELOC_IA64_PCREL64MSB
- -- : BFD_RELOC_IA64_PCREL64LSB
- -- : BFD_RELOC_IA64_LTOFF_FPTR22
- -- : BFD_RELOC_IA64_LTOFF_FPTR64I
- -- : BFD_RELOC_IA64_LTOFF_FPTR32MSB
- -- : BFD_RELOC_IA64_LTOFF_FPTR32LSB
- -- : BFD_RELOC_IA64_LTOFF_FPTR64MSB
- -- : BFD_RELOC_IA64_LTOFF_FPTR64LSB
- -- : BFD_RELOC_IA64_SEGREL32MSB
- -- : BFD_RELOC_IA64_SEGREL32LSB
- -- : BFD_RELOC_IA64_SEGREL64MSB
- -- : BFD_RELOC_IA64_SEGREL64LSB
- -- : BFD_RELOC_IA64_SECREL32MSB
- -- : BFD_RELOC_IA64_SECREL32LSB
- -- : BFD_RELOC_IA64_SECREL64MSB
- -- : BFD_RELOC_IA64_SECREL64LSB
- -- : BFD_RELOC_IA64_REL32MSB
- -- : BFD_RELOC_IA64_REL32LSB
- -- : BFD_RELOC_IA64_REL64MSB
- -- : BFD_RELOC_IA64_REL64LSB
- -- : BFD_RELOC_IA64_LTV32MSB
- -- : BFD_RELOC_IA64_LTV32LSB
- -- : BFD_RELOC_IA64_LTV64MSB
- -- : BFD_RELOC_IA64_LTV64LSB
- -- : BFD_RELOC_IA64_IPLTMSB
- -- : BFD_RELOC_IA64_IPLTLSB
- -- : BFD_RELOC_IA64_COPY
- -- : BFD_RELOC_IA64_LTOFF22X
- -- : BFD_RELOC_IA64_LDXMOV
- -- : BFD_RELOC_IA64_TPREL14
- -- : BFD_RELOC_IA64_TPREL22
- -- : BFD_RELOC_IA64_TPREL64I
- -- : BFD_RELOC_IA64_TPREL64MSB
- -- : BFD_RELOC_IA64_TPREL64LSB
- -- : BFD_RELOC_IA64_LTOFF_TPREL22
- -- : BFD_RELOC_IA64_DTPMOD64MSB
- -- : BFD_RELOC_IA64_DTPMOD64LSB
- -- : BFD_RELOC_IA64_LTOFF_DTPMOD22
- -- : BFD_RELOC_IA64_DTPREL14
- -- : BFD_RELOC_IA64_DTPREL22
- -- : BFD_RELOC_IA64_DTPREL64I
- -- : BFD_RELOC_IA64_DTPREL32MSB
- -- : BFD_RELOC_IA64_DTPREL32LSB
- -- : BFD_RELOC_IA64_DTPREL64MSB
- -- : BFD_RELOC_IA64_DTPREL64LSB
- -- : BFD_RELOC_IA64_LTOFF_DTPREL22
-     Intel IA64 Relocations.
-
- -- : BFD_RELOC_M68HC11_HI8
-     Motorola 68HC11 reloc.  This is the 8 bit high part of an absolute
-     address.
-
- -- : BFD_RELOC_M68HC11_LO8
-     Motorola 68HC11 reloc.  This is the 8 bit low part of an absolute
-     address.
-
- -- : BFD_RELOC_M68HC11_3B
-     Motorola 68HC11 reloc.  This is the 3 bit of a value.
-
- -- : BFD_RELOC_M68HC11_RL_JUMP
-     Motorola 68HC11 reloc.  This reloc marks the beginning of a
-     jump/call instruction.  It is used for linker relaxation to
-     correctly identify beginning of instruction and change some
-     branches to use PC-relative addressing mode.
-
- -- : BFD_RELOC_M68HC11_RL_GROUP
-     Motorola 68HC11 reloc.  This reloc marks a group of several
-     instructions that gcc generates and for which the linker
-     relaxation pass can modify and/or remove some of them.
-
- -- : BFD_RELOC_M68HC11_LO16
-     Motorola 68HC11 reloc.  This is the 16-bit lower part of an
-     address.  It is used for 'call' instruction to specify the symbol
-     address without any special transformation (due to memory bank
-     window).
-
- -- : BFD_RELOC_M68HC11_PAGE
-     Motorola 68HC11 reloc.  This is a 8-bit reloc that specifies the
-     page number of an address.  It is used by 'call' instruction to
-     specify the page number of the symbol.
-
- -- : BFD_RELOC_M68HC11_24
-     Motorola 68HC11 reloc.  This is a 24-bit reloc that represents the
-     address with a 16-bit value and a 8-bit page number.  The symbol
-     address is transformed to follow the 16K memory bank of 68HC12
-     (seen as mapped in the window).
-
- -- : BFD_RELOC_M68HC12_5B
-     Motorola 68HC12 reloc.  This is the 5 bits of a value.
-
- -- : BFD_RELOC_16C_NUM08
- -- : BFD_RELOC_16C_NUM08_C
- -- : BFD_RELOC_16C_NUM16
- -- : BFD_RELOC_16C_NUM16_C
- -- : BFD_RELOC_16C_NUM32
- -- : BFD_RELOC_16C_NUM32_C
- -- : BFD_RELOC_16C_DISP04
- -- : BFD_RELOC_16C_DISP04_C
- -- : BFD_RELOC_16C_DISP08
- -- : BFD_RELOC_16C_DISP08_C
- -- : BFD_RELOC_16C_DISP16
- -- : BFD_RELOC_16C_DISP16_C
- -- : BFD_RELOC_16C_DISP24
- -- : BFD_RELOC_16C_DISP24_C
- -- : BFD_RELOC_16C_DISP24a
- -- : BFD_RELOC_16C_DISP24a_C
- -- : BFD_RELOC_16C_REG04
- -- : BFD_RELOC_16C_REG04_C
- -- : BFD_RELOC_16C_REG04a
- -- : BFD_RELOC_16C_REG04a_C
- -- : BFD_RELOC_16C_REG14
- -- : BFD_RELOC_16C_REG14_C
- -- : BFD_RELOC_16C_REG16
- -- : BFD_RELOC_16C_REG16_C
- -- : BFD_RELOC_16C_REG20
- -- : BFD_RELOC_16C_REG20_C
- -- : BFD_RELOC_16C_ABS20
- -- : BFD_RELOC_16C_ABS20_C
- -- : BFD_RELOC_16C_ABS24
- -- : BFD_RELOC_16C_ABS24_C
- -- : BFD_RELOC_16C_IMM04
- -- : BFD_RELOC_16C_IMM04_C
- -- : BFD_RELOC_16C_IMM16
- -- : BFD_RELOC_16C_IMM16_C
- -- : BFD_RELOC_16C_IMM20
- -- : BFD_RELOC_16C_IMM20_C
- -- : BFD_RELOC_16C_IMM24
- -- : BFD_RELOC_16C_IMM24_C
- -- : BFD_RELOC_16C_IMM32
- -- : BFD_RELOC_16C_IMM32_C
-     NS CR16C Relocations.
-
- -- : BFD_RELOC_CRX_REL4
- -- : BFD_RELOC_CRX_REL8
- -- : BFD_RELOC_CRX_REL8_CMP
- -- : BFD_RELOC_CRX_REL16
- -- : BFD_RELOC_CRX_REL24
- -- : BFD_RELOC_CRX_REL32
- -- : BFD_RELOC_CRX_REGREL12
- -- : BFD_RELOC_CRX_REGREL22
- -- : BFD_RELOC_CRX_REGREL28
- -- : BFD_RELOC_CRX_REGREL32
- -- : BFD_RELOC_CRX_ABS16
- -- : BFD_RELOC_CRX_ABS32
- -- : BFD_RELOC_CRX_NUM8
- -- : BFD_RELOC_CRX_NUM16
- -- : BFD_RELOC_CRX_NUM32
- -- : BFD_RELOC_CRX_IMM16
- -- : BFD_RELOC_CRX_IMM32
- -- : BFD_RELOC_CRX_SWITCH8
- -- : BFD_RELOC_CRX_SWITCH16
- -- : BFD_RELOC_CRX_SWITCH32
-     NS CRX Relocations.
-
- -- : BFD_RELOC_CRIS_BDISP8
- -- : BFD_RELOC_CRIS_UNSIGNED_5
- -- : BFD_RELOC_CRIS_SIGNED_6
- -- : BFD_RELOC_CRIS_UNSIGNED_6
- -- : BFD_RELOC_CRIS_SIGNED_8
- -- : BFD_RELOC_CRIS_UNSIGNED_8
- -- : BFD_RELOC_CRIS_SIGNED_16
- -- : BFD_RELOC_CRIS_UNSIGNED_16
- -- : BFD_RELOC_CRIS_LAPCQ_OFFSET
- -- : BFD_RELOC_CRIS_UNSIGNED_4
-     These relocs are only used within the CRIS assembler.  They are not
-     (at present) written to any object files.
-
- -- : BFD_RELOC_CRIS_COPY
- -- : BFD_RELOC_CRIS_GLOB_DAT
- -- : BFD_RELOC_CRIS_JUMP_SLOT
- -- : BFD_RELOC_CRIS_RELATIVE
-     Relocs used in ELF shared libraries for CRIS.
-
- -- : BFD_RELOC_CRIS_32_GOT
-     32-bit offset to symbol-entry within GOT.
-
- -- : BFD_RELOC_CRIS_16_GOT
-     16-bit offset to symbol-entry within GOT.
-
- -- : BFD_RELOC_CRIS_32_GOTPLT
-     32-bit offset to symbol-entry within GOT, with PLT handling.
-
- -- : BFD_RELOC_CRIS_16_GOTPLT
-     16-bit offset to symbol-entry within GOT, with PLT handling.
-
- -- : BFD_RELOC_CRIS_32_GOTREL
-     32-bit offset to symbol, relative to GOT.
-
- -- : BFD_RELOC_CRIS_32_PLT_GOTREL
-     32-bit offset to symbol with PLT entry, relative to GOT.
-
- -- : BFD_RELOC_CRIS_32_PLT_PCREL
-     32-bit offset to symbol with PLT entry, relative to this
-     relocation.
-
- -- : BFD_RELOC_860_COPY
- -- : BFD_RELOC_860_GLOB_DAT
- -- : BFD_RELOC_860_JUMP_SLOT
- -- : BFD_RELOC_860_RELATIVE
- -- : BFD_RELOC_860_PC26
- -- : BFD_RELOC_860_PLT26
- -- : BFD_RELOC_860_PC16
- -- : BFD_RELOC_860_LOW0
- -- : BFD_RELOC_860_SPLIT0
- -- : BFD_RELOC_860_LOW1
- -- : BFD_RELOC_860_SPLIT1
- -- : BFD_RELOC_860_LOW2
- -- : BFD_RELOC_860_SPLIT2
- -- : BFD_RELOC_860_LOW3
- -- : BFD_RELOC_860_LOGOT0
- -- : BFD_RELOC_860_SPGOT0
- -- : BFD_RELOC_860_LOGOT1
- -- : BFD_RELOC_860_SPGOT1
- -- : BFD_RELOC_860_LOGOTOFF0
- -- : BFD_RELOC_860_SPGOTOFF0
- -- : BFD_RELOC_860_LOGOTOFF1
- -- : BFD_RELOC_860_SPGOTOFF1
- -- : BFD_RELOC_860_LOGOTOFF2
- -- : BFD_RELOC_860_LOGOTOFF3
- -- : BFD_RELOC_860_LOPC
- -- : BFD_RELOC_860_HIGHADJ
- -- : BFD_RELOC_860_HAGOT
- -- : BFD_RELOC_860_HAGOTOFF
- -- : BFD_RELOC_860_HAPC
- -- : BFD_RELOC_860_HIGH
- -- : BFD_RELOC_860_HIGOT
- -- : BFD_RELOC_860_HIGOTOFF
-     Intel i860 Relocations.
-
- -- : BFD_RELOC_OPENRISC_ABS_26
- -- : BFD_RELOC_OPENRISC_REL_26
-     OpenRISC Relocations.
-
- -- : BFD_RELOC_H8_DIR16A8
- -- : BFD_RELOC_H8_DIR16R8
- -- : BFD_RELOC_H8_DIR24A8
- -- : BFD_RELOC_H8_DIR24R8
- -- : BFD_RELOC_H8_DIR32A16
-     H8 elf Relocations.
-
- -- : BFD_RELOC_XSTORMY16_REL_12
- -- : BFD_RELOC_XSTORMY16_12
- -- : BFD_RELOC_XSTORMY16_24
- -- : BFD_RELOC_XSTORMY16_FPTR16
-     Sony Xstormy16 Relocations.
-
- -- : BFD_RELOC_VAX_GLOB_DAT
- -- : BFD_RELOC_VAX_JMP_SLOT
- -- : BFD_RELOC_VAX_RELATIVE
-     Relocations used by VAX ELF.
-
- -- : BFD_RELOC_MSP430_10_PCREL
- -- : BFD_RELOC_MSP430_16_PCREL
- -- : BFD_RELOC_MSP430_16
- -- : BFD_RELOC_MSP430_16_PCREL_BYTE
- -- : BFD_RELOC_MSP430_16_BYTE
- -- : BFD_RELOC_MSP430_2X_PCREL
- -- : BFD_RELOC_MSP430_RL_PCREL
-     msp430 specific relocation codes
-
- -- : BFD_RELOC_IQ2000_OFFSET_16
- -- : BFD_RELOC_IQ2000_OFFSET_21
- -- : BFD_RELOC_IQ2000_UHI16
-     IQ2000 Relocations.
-
- -- : BFD_RELOC_XTENSA_RTLD
-     Special Xtensa relocation used only by PLT entries in ELF shared
-     objects to indicate that the runtime linker should set the value
-     to one of its own internal functions or data structures.
-
- -- : BFD_RELOC_XTENSA_GLOB_DAT
- -- : BFD_RELOC_XTENSA_JMP_SLOT
- -- : BFD_RELOC_XTENSA_RELATIVE
-     Xtensa relocations for ELF shared objects.
-
- -- : BFD_RELOC_XTENSA_PLT
-     Xtensa relocation used in ELF object files for symbols that may
-     require PLT entries.  Otherwise, this is just a generic 32-bit
-     relocation.
-
- -- : BFD_RELOC_XTENSA_DIFF8
- -- : BFD_RELOC_XTENSA_DIFF16
- -- : BFD_RELOC_XTENSA_DIFF32
-     Xtensa relocations to mark the difference of two local symbols.
-     These are only needed to support linker relaxation and can be
-     ignored when not relaxing.  The field is set to the value of the
-     difference assuming no relaxation.  The relocation encodes the
-     position of the first symbol so the linker can determine whether
-     to adjust the field value.
-
- -- : BFD_RELOC_XTENSA_SLOT0_OP
- -- : BFD_RELOC_XTENSA_SLOT1_OP
- -- : BFD_RELOC_XTENSA_SLOT2_OP
- -- : BFD_RELOC_XTENSA_SLOT3_OP
- -- : BFD_RELOC_XTENSA_SLOT4_OP
- -- : BFD_RELOC_XTENSA_SLOT5_OP
- -- : BFD_RELOC_XTENSA_SLOT6_OP
- -- : BFD_RELOC_XTENSA_SLOT7_OP
- -- : BFD_RELOC_XTENSA_SLOT8_OP
- -- : BFD_RELOC_XTENSA_SLOT9_OP
- -- : BFD_RELOC_XTENSA_SLOT10_OP
- -- : BFD_RELOC_XTENSA_SLOT11_OP
- -- : BFD_RELOC_XTENSA_SLOT12_OP
- -- : BFD_RELOC_XTENSA_SLOT13_OP
- -- : BFD_RELOC_XTENSA_SLOT14_OP
-     Generic Xtensa relocations for instruction operands.  Only the slot
-     number is encoded in the relocation.  The relocation applies to the
-     last PC-relative immediate operand, or if there are no PC-relative
-     immediates, to the last immediate operand.
-
- -- : BFD_RELOC_XTENSA_SLOT0_ALT
- -- : BFD_RELOC_XTENSA_SLOT1_ALT
- -- : BFD_RELOC_XTENSA_SLOT2_ALT
- -- : BFD_RELOC_XTENSA_SLOT3_ALT
- -- : BFD_RELOC_XTENSA_SLOT4_ALT
- -- : BFD_RELOC_XTENSA_SLOT5_ALT
- -- : BFD_RELOC_XTENSA_SLOT6_ALT
- -- : BFD_RELOC_XTENSA_SLOT7_ALT
- -- : BFD_RELOC_XTENSA_SLOT8_ALT
- -- : BFD_RELOC_XTENSA_SLOT9_ALT
- -- : BFD_RELOC_XTENSA_SLOT10_ALT
- -- : BFD_RELOC_XTENSA_SLOT11_ALT
- -- : BFD_RELOC_XTENSA_SLOT12_ALT
- -- : BFD_RELOC_XTENSA_SLOT13_ALT
- -- : BFD_RELOC_XTENSA_SLOT14_ALT
-     Alternate Xtensa relocations.  Only the slot is encoded in the
-     relocation.  The meaning of these relocations is opcode-specific.
-
- -- : BFD_RELOC_XTENSA_OP0
- -- : BFD_RELOC_XTENSA_OP1
- -- : BFD_RELOC_XTENSA_OP2
-     Xtensa relocations for backward compatibility.  These have all been
-     replaced by BFD_RELOC_XTENSA_SLOT0_OP.
-
- -- : BFD_RELOC_XTENSA_ASM_EXPAND
-     Xtensa relocation to mark that the assembler expanded the
-     instructions from an original target.  The expansion size is
-     encoded in the reloc size.
-
- -- : BFD_RELOC_XTENSA_ASM_SIMPLIFY
-     Xtensa relocation to mark that the linker should simplify
-     assembler-expanded instructions.  This is commonly used internally
-     by the linker after analysis of a BFD_RELOC_XTENSA_ASM_EXPAND.
-
-
-     typedef enum bfd_reloc_code_real bfd_reloc_code_real_type;
-   
-2.11.0.2 `bfd_reloc_type_lookup'
-................................
-
-*Synopsis*
-     reloc_howto_type *bfd_reloc_type_lookup
-        (bfd *abfd, bfd_reloc_code_real_type code);
-   *Description*
-Return a pointer to a howto structure which, when invoked, will perform
-the relocation CODE on data from the architecture noted.
-
-2.11.0.3 `bfd_default_reloc_type_lookup'
-........................................
-
-*Synopsis*
-     reloc_howto_type *bfd_default_reloc_type_lookup
-        (bfd *abfd, bfd_reloc_code_real_type  code);
-   *Description*
-Provides a default relocation lookup routine for any architecture.
-
-2.11.0.4 `bfd_get_reloc_code_name'
-..................................
-
-*Synopsis*
-     const char *bfd_get_reloc_code_name (bfd_reloc_code_real_type code);
-   *Description*
-Provides a printable name for the supplied relocation code.  Useful
-mainly for printing error messages.
-
-2.11.0.5 `bfd_generic_relax_section'
-....................................
-
-*Synopsis*
-     bfd_boolean bfd_generic_relax_section
-        (bfd *abfd,
-         asection *section,
-         struct bfd_link_info *,
-         bfd_boolean *);
-   *Description*
-Provides default handling for relaxing for back ends which don't do
-relaxing.
-
-2.11.0.6 `bfd_generic_gc_sections'
-..................................
-
-*Synopsis*
-     bfd_boolean bfd_generic_gc_sections
-        (bfd *, struct bfd_link_info *);
-   *Description*
-Provides default handling for relaxing for back ends which don't do
-section gc - i.e., does nothing.
-
-2.11.0.7 `bfd_generic_merge_sections'
-.....................................
-
-*Synopsis*
-     bfd_boolean bfd_generic_merge_sections
-        (bfd *, struct bfd_link_info *);
-   *Description*
-Provides default handling for SEC_MERGE section merging for back ends
-which don't have SEC_MERGE support - i.e., does nothing.
-
-2.11.0.8 `bfd_generic_get_relocated_section_contents'
-.....................................................
-
-*Synopsis*
-     bfd_byte *bfd_generic_get_relocated_section_contents
-        (bfd *abfd,
-         struct bfd_link_info *link_info,
-         struct bfd_link_order *link_order,
-         bfd_byte *data,
-         bfd_boolean relocatable,
-         asymbol **symbols);
-   *Description*
-Provides default handling of relocation effort for back ends which
-can't be bothered to do it efficiently.
-
-
-File: bfd.info,  Node: Core Files,  Next: Targets,  Prev: Relocations,  Up: BFD front end
-
-2.12 Core files
-===============
-
-*Description*
-These are functions pertaining to core files.
-
-2.12.0.1 `bfd_core_file_failing_command'
-........................................
-
-*Synopsis*
-     const char *bfd_core_file_failing_command (bfd *abfd);
-   *Description*
-Return a read-only string explaining which program was running when it
-failed and produced the core file ABFD.
-
-2.12.0.2 `bfd_core_file_failing_signal'
-.......................................
-
-*Synopsis*
-     int bfd_core_file_failing_signal (bfd *abfd);
-   *Description*
-Returns the signal number which caused the core dump which generated
-the file the BFD ABFD is attached to.
-
-2.12.0.3 `core_file_matches_executable_p'
-.........................................
-
-*Synopsis*
-     bfd_boolean core_file_matches_executable_p
-        (bfd *core_bfd, bfd *exec_bfd);
-   *Description*
-Return `TRUE' if the core file attached to CORE_BFD was generated by a
-run of the executable file attached to EXEC_BFD, `FALSE' otherwise.
-
-
-File: bfd.info,  Node: Targets,  Next: Architectures,  Prev: Core Files,  Up: BFD front end
-
-2.13 Targets
-============
-
-*Description*
-Each port of BFD to a different machine requires the creation of a
-target back end. All the back end provides to the root part of BFD is a
-structure containing pointers to functions which perform certain low
-level operations on files. BFD translates the applications's requests
-through a pointer into calls to the back end routines.
-
-   When a file is opened with `bfd_openr', its format and target are
-unknown. BFD uses various mechanisms to determine how to interpret the
-file. The operations performed are:
-
-   * Create a BFD by calling the internal routine `_bfd_new_bfd', then
-     call `bfd_find_target' with the target string supplied to
-     `bfd_openr' and the new BFD pointer.
-
-   * If a null target string was provided to `bfd_find_target', look up
-     the environment variable `GNUTARGET' and use that as the target
-     string.
-
-   * If the target string is still `NULL', or the target string is
-     `default', then use the first item in the target vector as the
-     target type, and set `target_defaulted' in the BFD to cause
-     `bfd_check_format' to loop through all the targets.  *Note
-     bfd_target::.  *Note Formats::.
-
-   * Otherwise, inspect the elements in the target vector one by one,
-     until a match on target name is found. When found, use it.
-
-   * Otherwise return the error `bfd_error_invalid_target' to
-     `bfd_openr'.
-
-   * `bfd_openr' attempts to open the file using `bfd_open_file', and
-     returns the BFD.
-   Once the BFD has been opened and the target selected, the file
-format may be determined. This is done by calling `bfd_check_format' on
-the BFD with a suggested format.  If `target_defaulted' has been set,
-each possible target type is tried to see if it recognizes the
-specified format.  `bfd_check_format' returns `TRUE' when the caller
-guesses right.
-
-* Menu:
-
-* bfd_target::
-
-
-File: bfd.info,  Node: bfd_target,  Prev: Targets,  Up: Targets
-
-2.13.1 bfd_target
------------------
-
-*Description*
-This structure contains everything that BFD knows about a target. It
-includes things like its byte order, name, and which routines to call
-to do various operations.
-
-   Every BFD points to a target structure with its `xvec' member.
-
-   The macros below are used to dispatch to functions through the
-`bfd_target' vector. They are used in a number of macros further down
-in `bfd.h', and are also used when calling various routines by hand
-inside the BFD implementation.  The ARGLIST argument must be
-parenthesized; it contains all the arguments to the called function.
-
-   They make the documentation (more) unpleasant to read, so if someone
-wants to fix this and not break the above, please do.
-     #define BFD_SEND(bfd, message, arglist) \
-       ((*((bfd)->xvec->message)) arglist)
-
-     #ifdef DEBUG_BFD_SEND
-     #undef BFD_SEND
-     #define BFD_SEND(bfd, message, arglist) \
-       (((bfd) && (bfd)->xvec && (bfd)->xvec->message) ? \
-         ((*((bfd)->xvec->message)) arglist) : \
-         (bfd_assert (__FILE__,__LINE__), NULL))
-     #endif
-   For operations which index on the BFD format:
-     #define BFD_SEND_FMT(bfd, message, arglist) \
-       (((bfd)->xvec->message[(int) ((bfd)->format)]) arglist)
-
-     #ifdef DEBUG_BFD_SEND
-     #undef BFD_SEND_FMT
-     #define BFD_SEND_FMT(bfd, message, arglist) \
-       (((bfd) && (bfd)->xvec && (bfd)->xvec->message) ? \
-        (((bfd)->xvec->message[(int) ((bfd)->format)]) arglist) : \
-        (bfd_assert (__FILE__,__LINE__), NULL))
-     #endif
-   This is the structure which defines the type of BFD this is.  The
-`xvec' member of the struct `bfd' itself points here.  Each module that
-implements access to a different target under BFD, defines one of these.
-
-   FIXME, these names should be rationalised with the names of the
-entry points which call them. Too bad we can't have one macro to define
-them both!
-     enum bfd_flavour
-     {
-       bfd_target_unknown_flavour,
-       bfd_target_aout_flavour,
-       bfd_target_coff_flavour,
-       bfd_target_ecoff_flavour,
-       bfd_target_xcoff_flavour,
-       bfd_target_elf_flavour,
-       bfd_target_ieee_flavour,
-       bfd_target_nlm_flavour,
-       bfd_target_oasys_flavour,
-       bfd_target_tekhex_flavour,
-       bfd_target_srec_flavour,
-       bfd_target_ihex_flavour,
-       bfd_target_som_flavour,
-       bfd_target_os9k_flavour,
-       bfd_target_versados_flavour,
-       bfd_target_msdos_flavour,
-       bfd_target_ovax_flavour,
-       bfd_target_evax_flavour,
-       bfd_target_mmo_flavour,
-       bfd_target_mach_o_flavour,
-       bfd_target_pef_flavour,
-       bfd_target_pef_xlib_flavour,
-       bfd_target_sym_flavour
-     };
-
-     enum bfd_endian { BFD_ENDIAN_BIG, BFD_ENDIAN_LITTLE, BFD_ENDIAN_UNKNOWN };
-
-     /* Forward declaration.  */
-     typedef struct bfd_link_info _bfd_link_info;
-
-     typedef struct bfd_target
-     {
-       /* Identifies the kind of target, e.g., SunOS4, Ultrix, etc.  */
-       char *name;
-
-      /* The "flavour" of a back end is a general indication about
-         the contents of a file.  */
-       enum bfd_flavour flavour;
-
-       /* The order of bytes within the data area of a file.  */
-       enum bfd_endian byteorder;
-
-      /* The order of bytes within the header parts of a file.  */
-       enum bfd_endian header_byteorder;
-
-       /* A mask of all the flags which an executable may have set -
-          from the set `BFD_NO_FLAGS', `HAS_RELOC', ...`D_PAGED'.  */
-       flagword object_flags;
-
-      /* A mask of all the flags which a section may have set - from
-         the set `SEC_NO_FLAGS', `SEC_ALLOC', ...`SET_NEVER_LOAD'.  */
-       flagword section_flags;
-
-      /* The character normally found at the front of a symbol.
-         (if any), perhaps `_'.  */
-       char symbol_leading_char;
-
-      /* The pad character for file names within an archive header.  */
-       char ar_pad_char;
-
-       /* The maximum number of characters in an archive header.  */
-       unsigned short ar_max_namelen;
-
-       /* Entries for byte swapping for data. These are different from the
-          other entry points, since they don't take a BFD as the first argument.
-          Certain other handlers could do the same.  */
-       bfd_uint64_t   (*bfd_getx64) (const void *);
-       bfd_int64_t    (*bfd_getx_signed_64) (const void *);
-       void           (*bfd_putx64) (bfd_uint64_t, void *);
-       bfd_vma        (*bfd_getx32) (const void *);
-       bfd_signed_vma (*bfd_getx_signed_32) (const void *);
-       void           (*bfd_putx32) (bfd_vma, void *);
-       bfd_vma        (*bfd_getx16) (const void *);
-       bfd_signed_vma (*bfd_getx_signed_16) (const void *);
-       void           (*bfd_putx16) (bfd_vma, void *);
-
-       /* Byte swapping for the headers.  */
-       bfd_uint64_t   (*bfd_h_getx64) (const void *);
-       bfd_int64_t    (*bfd_h_getx_signed_64) (const void *);
-       void           (*bfd_h_putx64) (bfd_uint64_t, void *);
-       bfd_vma        (*bfd_h_getx32) (const void *);
-       bfd_signed_vma (*bfd_h_getx_signed_32) (const void *);
-       void           (*bfd_h_putx32) (bfd_vma, void *);
-       bfd_vma        (*bfd_h_getx16) (const void *);
-       bfd_signed_vma (*bfd_h_getx_signed_16) (const void *);
-       void           (*bfd_h_putx16) (bfd_vma, void *);
-
-       /* Format dependent routines: these are vectors of entry points
-          within the target vector structure, one for each format to check.  */
-
-       /* Check the format of a file being read.  Return a `bfd_target *' or zero.  */
-       const struct bfd_target *(*_bfd_check_format[bfd_type_end]) (bfd *);
-
-       /* Set the format of a file being written.  */
-       bfd_boolean (*_bfd_set_format[bfd_type_end]) (bfd *);
-
-       /* Write cached information into a file being written, at `bfd_close'.  */
-       bfd_boolean (*_bfd_write_contents[bfd_type_end]) (bfd *);
-   The general target vector.  These vectors are initialized using the
-BFD_JUMP_TABLE macros.
-
-       /* Generic entry points.  */
-     #define BFD_JUMP_TABLE_GENERIC(NAME) \
-       NAME##_close_and_cleanup, \
-       NAME##_bfd_free_cached_info, \
-       NAME##_new_section_hook, \
-       NAME##_get_section_contents, \
-       NAME##_get_section_contents_in_window
-
-       /* Called when the BFD is being closed to do any necessary cleanup.  */
-       bfd_boolean (*_close_and_cleanup) (bfd *);
-       /* Ask the BFD to free all cached information.  */
-       bfd_boolean (*_bfd_free_cached_info) (bfd *);
-       /* Called when a new section is created.  */
-       bfd_boolean (*_new_section_hook) (bfd *, sec_ptr);
-       /* Read the contents of a section.  */
-       bfd_boolean (*_bfd_get_section_contents)
-         (bfd *, sec_ptr, void *, file_ptr, bfd_size_type);
-       bfd_boolean (*_bfd_get_section_contents_in_window)
-         (bfd *, sec_ptr, bfd_window *, file_ptr, bfd_size_type);
-
-       /* Entry points to copy private data.  */
-     #define BFD_JUMP_TABLE_COPY(NAME) \
-       NAME##_bfd_copy_private_bfd_data, \
-       NAME##_bfd_merge_private_bfd_data, \
-       NAME##_bfd_copy_private_section_data, \
-       NAME##_bfd_copy_private_symbol_data, \
-       NAME##_bfd_copy_private_header_data, \
-       NAME##_bfd_set_private_flags, \
-       NAME##_bfd_print_private_bfd_data
-
-       /* Called to copy BFD general private data from one object file
-          to another.  */
-       bfd_boolean (*_bfd_copy_private_bfd_data) (bfd *, bfd *);
-       /* Called to merge BFD general private data from one object file
-          to a common output file when linking.  */
-       bfd_boolean (*_bfd_merge_private_bfd_data) (bfd *, bfd *);
-       /* Called to copy BFD private section data from one object file
-          to another.  */
-       bfd_boolean (*_bfd_copy_private_section_data)
-         (bfd *, sec_ptr, bfd *, sec_ptr);
-       /* Called to copy BFD private symbol data from one symbol
-          to another.  */
-       bfd_boolean (*_bfd_copy_private_symbol_data)
-         (bfd *, asymbol *, bfd *, asymbol *);
-       /* Called to copy BFD private header data from one object file
-          to another.  */
-       bfd_boolean (*_bfd_copy_private_header_data)
-         (bfd *, bfd *);
-       /* Called to set private backend flags.  */
-       bfd_boolean (*_bfd_set_private_flags) (bfd *, flagword);
-
-       /* Called to print private BFD data.  */
-       bfd_boolean (*_bfd_print_private_bfd_data) (bfd *, void *);
-
-       /* Core file entry points.  */
-     #define BFD_JUMP_TABLE_CORE(NAME) \
-       NAME##_core_file_failing_command, \
-       NAME##_core_file_failing_signal, \
-       NAME##_core_file_matches_executable_p
-
-       char *      (*_core_file_failing_command) (bfd *);
-       int         (*_core_file_failing_signal) (bfd *);
-       bfd_boolean (*_core_file_matches_executable_p) (bfd *, bfd *);
-
-       /* Archive entry points.  */
-     #define BFD_JUMP_TABLE_ARCHIVE(NAME) \
-       NAME##_slurp_armap, \
-       NAME##_slurp_extended_name_table, \
-       NAME##_construct_extended_name_table, \
-       NAME##_truncate_arname, \
-       NAME##_write_armap, \
-       NAME##_read_ar_hdr, \
-       NAME##_openr_next_archived_file, \
-       NAME##_get_elt_at_index, \
-       NAME##_generic_stat_arch_elt, \
-       NAME##_update_armap_timestamp
-
-       bfd_boolean (*_bfd_slurp_armap) (bfd *);
-       bfd_boolean (*_bfd_slurp_extended_name_table) (bfd *);
-       bfd_boolean (*_bfd_construct_extended_name_table)
-         (bfd *, char **, bfd_size_type *, const char **);
-       void        (*_bfd_truncate_arname) (bfd *, const char *, char *);
-       bfd_boolean (*write_armap)
-         (bfd *, unsigned int, struct orl *, unsigned int, int);
-       void *      (*_bfd_read_ar_hdr_fn) (bfd *);
-       bfd *       (*openr_next_archived_file) (bfd *, bfd *);
-     #define bfd_get_elt_at_index(b,i) BFD_SEND (b, _bfd_get_elt_at_index, (b,i))
-       bfd *       (*_bfd_get_elt_at_index) (bfd *, symindex);
-       int         (*_bfd_stat_arch_elt) (bfd *, struct stat *);
-       bfd_boolean (*_bfd_update_armap_timestamp) (bfd *);
-
-       /* Entry points used for symbols.  */
-     #define BFD_JUMP_TABLE_SYMBOLS(NAME) \
-       NAME##_get_symtab_upper_bound, \
-       NAME##_canonicalize_symtab, \
-       NAME##_make_empty_symbol, \
-       NAME##_print_symbol, \
-       NAME##_get_symbol_info, \
-       NAME##_bfd_is_local_label_name, \
-       NAME##_bfd_is_target_special_symbol, \
-       NAME##_get_lineno, \
-       NAME##_find_nearest_line, \
-       NAME##_bfd_make_debug_symbol, \
-       NAME##_read_minisymbols, \
-       NAME##_minisymbol_to_symbol
-
-       long        (*_bfd_get_symtab_upper_bound) (bfd *);
-       long        (*_bfd_canonicalize_symtab)
-         (bfd *, struct bfd_symbol **);
-       struct bfd_symbol *
-                   (*_bfd_make_empty_symbol) (bfd *);
-       void        (*_bfd_print_symbol)
-         (bfd *, void *, struct bfd_symbol *, bfd_print_symbol_type);
-     #define bfd_print_symbol(b,p,s,e) BFD_SEND (b, _bfd_print_symbol, (b,p,s,e))
-       void        (*_bfd_get_symbol_info)
-         (bfd *, struct bfd_symbol *, symbol_info *);
-     #define bfd_get_symbol_info(b,p,e) BFD_SEND (b, _bfd_get_symbol_info, (b,p,e))
-       bfd_boolean (*_bfd_is_local_label_name) (bfd *, const char *);
-       bfd_boolean (*_bfd_is_target_special_symbol) (bfd *, asymbol *);
-       alent *     (*_get_lineno) (bfd *, struct bfd_symbol *);
-       bfd_boolean (*_bfd_find_nearest_line)
-         (bfd *, struct bfd_section *, struct bfd_symbol **, bfd_vma,
-          const char **, const char **, unsigned int *);
-      /* Back-door to allow format-aware applications to create debug symbols
-         while using BFD for everything else.  Currently used by the assembler
-         when creating COFF files.  */
-       asymbol *   (*_bfd_make_debug_symbol)
-         (bfd *, void *, unsigned long size);
-     #define bfd_read_minisymbols(b, d, m, s) \
-       BFD_SEND (b, _read_minisymbols, (b, d, m, s))
-       long        (*_read_minisymbols)
-         (bfd *, bfd_boolean, void **, unsigned int *);
-     #define bfd_minisymbol_to_symbol(b, d, m, f) \
-       BFD_SEND (b, _minisymbol_to_symbol, (b, d, m, f))
-       asymbol *   (*_minisymbol_to_symbol)
-         (bfd *, bfd_boolean, const void *, asymbol *);
-
-       /* Routines for relocs.  */
-     #define BFD_JUMP_TABLE_RELOCS(NAME) \
-       NAME##_get_reloc_upper_bound, \
-       NAME##_canonicalize_reloc, \
-       NAME##_bfd_reloc_type_lookup
-
-       long        (*_get_reloc_upper_bound) (bfd *, sec_ptr);
-       long        (*_bfd_canonicalize_reloc)
-         (bfd *, sec_ptr, arelent **, struct bfd_symbol **);
-       /* See documentation on reloc types.  */
-       reloc_howto_type *
-                   (*reloc_type_lookup) (bfd *, bfd_reloc_code_real_type);
-
-       /* Routines used when writing an object file.  */
-     #define BFD_JUMP_TABLE_WRITE(NAME) \
-       NAME##_set_arch_mach, \
-       NAME##_set_section_contents
-
-       bfd_boolean (*_bfd_set_arch_mach)
-         (bfd *, enum bfd_architecture, unsigned long);
-       bfd_boolean (*_bfd_set_section_contents)
-         (bfd *, sec_ptr, const void *, file_ptr, bfd_size_type);
-
-       /* Routines used by the linker.  */
-     #define BFD_JUMP_TABLE_LINK(NAME) \
-       NAME##_sizeof_headers, \
-       NAME##_bfd_get_relocated_section_contents, \
-       NAME##_bfd_relax_section, \
-       NAME##_bfd_link_hash_table_create, \
-       NAME##_bfd_link_hash_table_free, \
-       NAME##_bfd_link_add_symbols, \
-       NAME##_bfd_link_just_syms, \
-       NAME##_bfd_final_link, \
-       NAME##_bfd_link_split_section, \
-       NAME##_bfd_gc_sections, \
-       NAME##_bfd_merge_sections, \
-       NAME##_bfd_is_group_section, \
-       NAME##_bfd_discard_group, \
-       NAME##_section_already_linked \
-
-       int         (*_bfd_sizeof_headers) (bfd *, bfd_boolean);
-       bfd_byte *  (*_bfd_get_relocated_section_contents)
-         (bfd *, struct bfd_link_info *, struct bfd_link_order *,
-          bfd_byte *, bfd_boolean, struct bfd_symbol **);
-
-       bfd_boolean (*_bfd_relax_section)
-         (bfd *, struct bfd_section *, struct bfd_link_info *, bfd_boolean *);
-
-       /* Create a hash table for the linker.  Different backends store
-          different information in this table.  */
-       struct bfd_link_hash_table *
-                   (*_bfd_link_hash_table_create) (bfd *);
-
-       /* Release the memory associated with the linker hash table.  */
-       void        (*_bfd_link_hash_table_free) (struct bfd_link_hash_table *);
-
-       /* Add symbols from this object file into the hash table.  */
-       bfd_boolean (*_bfd_link_add_symbols) (bfd *, struct bfd_link_info *);
-
-       /* Indicate that we are only retrieving symbol values from this section.  */
-       void        (*_bfd_link_just_syms) (asection *, struct bfd_link_info *);
-
-       /* Do a link based on the link_order structures attached to each
-          section of the BFD.  */
-       bfd_boolean (*_bfd_final_link) (bfd *, struct bfd_link_info *);
-
-       /* Should this section be split up into smaller pieces during linking.  */
-       bfd_boolean (*_bfd_link_split_section) (bfd *, struct bfd_section *);
-
-       /* Remove sections that are not referenced from the output.  */
-       bfd_boolean (*_bfd_gc_sections) (bfd *, struct bfd_link_info *);
-
-       /* Attempt to merge SEC_MERGE sections.  */
-       bfd_boolean (*_bfd_merge_sections) (bfd *, struct bfd_link_info *);
-
-       /* Is this section a member of a group?  */
-       bfd_boolean (*_bfd_is_group_section) (bfd *, const struct bfd_section *);
-
-       /* Discard members of a group.  */
-       bfd_boolean (*_bfd_discard_group) (bfd *, struct bfd_section *);
-
-       /* Check if SEC has been already linked during a reloceatable or
-          final link.  */
-       void (*_section_already_linked) (bfd *, struct bfd_section *);
-
-       /* Routines to handle dynamic symbols and relocs.  */
-     #define BFD_JUMP_TABLE_DYNAMIC(NAME) \
-       NAME##_get_dynamic_symtab_upper_bound, \
-       NAME##_canonicalize_dynamic_symtab, \
-       NAME##_get_synthetic_symtab, \
-       NAME##_get_dynamic_reloc_upper_bound, \
-       NAME##_canonicalize_dynamic_reloc
-
-       /* Get the amount of memory required to hold the dynamic symbols.  */
-       long        (*_bfd_get_dynamic_symtab_upper_bound) (bfd *);
-       /* Read in the dynamic symbols.  */
-       long        (*_bfd_canonicalize_dynamic_symtab)
-         (bfd *, struct bfd_symbol **);
-       /* Create synthetized symbols.  */
-       long        (*_bfd_get_synthetic_symtab)
-         (bfd *, long, struct bfd_symbol **, long, struct bfd_symbol **,
-          struct bfd_symbol **);
-       /* Get the amount of memory required to hold the dynamic relocs.  */
-       long        (*_bfd_get_dynamic_reloc_upper_bound) (bfd *);
-       /* Read in the dynamic relocs.  */
-       long        (*_bfd_canonicalize_dynamic_reloc)
-         (bfd *, arelent **, struct bfd_symbol **);
-   A pointer to an alternative bfd_target in case the current one is not
-satisfactory.  This can happen when the target cpu supports both big
-and little endian code, and target chosen by the linker has the wrong
-endianness.  The function open_output() in ld/ldlang.c uses this field
-to find an alternative output format that is suitable.
-       /* Opposite endian version of this target.  */
-       const struct bfd_target * alternative_target;
-
-       /* Data for use by back-end routines, which isn't
-          generic enough to belong in this structure.  */
-       const void *backend_data;
-
-     } bfd_target;
-
-2.13.1.1 `bfd_set_default_target'
-.................................
-
-*Synopsis*
-     bfd_boolean bfd_set_default_target (const char *name);
-   *Description*
-Set the default target vector to use when recognizing a BFD.  This
-takes the name of the target, which may be a BFD target name or a
-configuration triplet.
-
-2.13.1.2 `bfd_find_target'
-..........................
-
-*Synopsis*
-     const bfd_target *bfd_find_target (const char *target_name, bfd *abfd);
-   *Description*
-Return a pointer to the transfer vector for the object target named
-TARGET_NAME.  If TARGET_NAME is `NULL', choose the one in the
-environment variable `GNUTARGET'; if that is null or not defined, then
-choose the first entry in the target list.  Passing in the string
-"default" or setting the environment variable to "default" will cause
-the first entry in the target list to be returned, and
-"target_defaulted" will be set in the BFD.  This causes
-`bfd_check_format' to loop over all the targets to find the one that
-matches the file being read.
-
-2.13.1.3 `bfd_target_list'
-..........................
-
-*Synopsis*
-     const char ** bfd_target_list (void);
-   *Description*
-Return a freshly malloced NULL-terminated vector of the names of all
-the valid BFD targets. Do not modify the names.
-
-2.13.1.4 `bfd_seach_for_target'
-...............................
-
-*Synopsis*
-     const bfd_target *bfd_search_for_target
-        (int (*search_func) (const bfd_target *, void *),
-         void *);
-   *Description*
-Return a pointer to the first transfer vector in the list of transfer
-vectors maintained by BFD that produces a non-zero result when passed
-to the function SEARCH_FUNC.  The parameter DATA is passed, unexamined,
-to the search function.
-
-
-File: bfd.info,  Node: Architectures,  Next: Opening and Closing,  Prev: Targets,  Up: BFD front end
-
-2.14 Architectures
-==================
-
-BFD keeps one atom in a BFD describing the architecture of the data
-attached to the BFD: a pointer to a `bfd_arch_info_type'.
-
-   Pointers to structures can be requested independently of a BFD so
-that an architecture's information can be interrogated without access
-to an open BFD.
-
-   The architecture information is provided by each architecture
-package.  The set of default architectures is selected by the macro
-`SELECT_ARCHITECTURES'.  This is normally set up in the
-`config/TARGET.mt' file of your choice.  If the name is not defined,
-then all the architectures supported are included.
-
-   When BFD starts up, all the architectures are called with an
-initialize method.  It is up to the architecture back end to insert as
-many items into the list of architectures as it wants to; generally
-this would be one for each machine and one for the default case (an
-item with a machine field of 0).
-
-   BFD's idea of an architecture is implemented in `archures.c'.
-
-2.14.1 bfd_architecture
------------------------
-
-*Description*
-This enum gives the object file's CPU architecture, in a global
-sense--i.e., what processor family does it belong to?  Another field
-indicates which processor within the family is in use.  The machine
-gives a number which distinguishes different versions of the
-architecture, containing, for example, 2 and 3 for Intel i960 KA and
-i960 KB, and 68020 and 68030 for Motorola 68020 and 68030.
-     enum bfd_architecture
-     {
-       bfd_arch_unknown,   /* File arch not known.  */
-       bfd_arch_obscure,   /* Arch known, not one of these.  */
-       bfd_arch_m68k,      /* Motorola 68xxx */
-     #define bfd_mach_m68000 1
-     #define bfd_mach_m68008 2
-     #define bfd_mach_m68010 3
-     #define bfd_mach_m68020 4
-     #define bfd_mach_m68030 5
-     #define bfd_mach_m68040 6
-     #define bfd_mach_m68060 7
-     #define bfd_mach_cpu32  8
-     #define bfd_mach_mcf5200  9
-     #define bfd_mach_mcf5206e 10
-     #define bfd_mach_mcf5307  11
-     #define bfd_mach_mcf5407  12
-     #define bfd_mach_mcf528x  13
-     #define bfd_mach_mcfv4e   14
-     #define bfd_mach_mcf521x   15
-     #define bfd_mach_mcf5249   16
-     #define bfd_mach_mcf547x   17
-     #define bfd_mach_mcf548x   18
-       bfd_arch_vax,       /* DEC Vax */
-       bfd_arch_i960,      /* Intel 960 */
-         /* The order of the following is important.
-            lower number indicates a machine type that
-            only accepts a subset of the instructions
-            available to machines with higher numbers.
-            The exception is the "ca", which is
-            incompatible with all other machines except
-            "core".  */
-
-     #define bfd_mach_i960_core      1
-     #define bfd_mach_i960_ka_sa     2
-     #define bfd_mach_i960_kb_sb     3
-     #define bfd_mach_i960_mc        4
-     #define bfd_mach_i960_xa        5
-     #define bfd_mach_i960_ca        6
-     #define bfd_mach_i960_jx        7
-     #define bfd_mach_i960_hx        8
-
-       bfd_arch_or32,      /* OpenRISC 32 */
-
-       bfd_arch_a29k,      /* AMD 29000 */
-       bfd_arch_sparc,     /* SPARC */
-     #define bfd_mach_sparc                 1
-     /* The difference between v8plus and v9 is that v9 is a true 64 bit env.  */
-     #define bfd_mach_sparc_sparclet        2
-     #define bfd_mach_sparc_sparclite       3
-     #define bfd_mach_sparc_v8plus          4
-     #define bfd_mach_sparc_v8plusa         5 /* with ultrasparc add'ns.  */
-     #define bfd_mach_sparc_sparclite_le    6
-     #define bfd_mach_sparc_v9              7
-     #define bfd_mach_sparc_v9a             8 /* with ultrasparc add'ns.  */
-     #define bfd_mach_sparc_v8plusb         9 /* with cheetah add'ns.  */
-     #define bfd_mach_sparc_v9b             10 /* with cheetah add'ns.  */
-     /* Nonzero if MACH has the v9 instruction set.  */
-     #define bfd_mach_sparc_v9_p(mach) \
-       ((mach) >= bfd_mach_sparc_v8plus && (mach) <= bfd_mach_sparc_v9b \
-        && (mach) != bfd_mach_sparc_sparclite_le)
-     /* Nonzero if MACH is a 64 bit sparc architecture.  */
-     #define bfd_mach_sparc_64bit_p(mach) \
-       ((mach) >= bfd_mach_sparc_v9 && (mach) != bfd_mach_sparc_v8plusb)
-       bfd_arch_mips,      /* MIPS Rxxxx */
-     #define bfd_mach_mips3000              3000
-     #define bfd_mach_mips3900              3900
-     #define bfd_mach_mips4000              4000
-     #define bfd_mach_mips4010              4010
-     #define bfd_mach_mips4100              4100
-     #define bfd_mach_mips4111              4111
-     #define bfd_mach_mips4120              4120
-     #define bfd_mach_mips4300              4300
-     #define bfd_mach_mips4400              4400
-     #define bfd_mach_mips4600              4600
-     #define bfd_mach_mips4650              4650
-     #define bfd_mach_mips5000              5000
-     #define bfd_mach_mips5400              5400
-     #define bfd_mach_mips5500              5500
-     #define bfd_mach_mips6000              6000
-     #define bfd_mach_mips7000              7000
-     #define bfd_mach_mips8000              8000
-     #define bfd_mach_mips9000              9000
-     #define bfd_mach_mips10000             10000
-     #define bfd_mach_mips12000             12000
-     #define bfd_mach_mips16                16
-     #define bfd_mach_mips5                 5
-     #define bfd_mach_mips_sb1              12310201 /* octal 'SB', 01 */
-     #define bfd_mach_mipsisa32             32
-     #define bfd_mach_mipsisa32r2           33
-     #define bfd_mach_mipsisa64             64
-     #define bfd_mach_mipsisa64r2           65
-       bfd_arch_i386,      /* Intel 386 */
-     #define bfd_mach_i386_i386 1
-     #define bfd_mach_i386_i8086 2
-     #define bfd_mach_i386_i386_intel_syntax 3
-     #define bfd_mach_x86_64 64
-     #define bfd_mach_x86_64_intel_syntax 65
-       bfd_arch_we32k,     /* AT&T WE32xxx */
-       bfd_arch_tahoe,     /* CCI/Harris Tahoe */
-       bfd_arch_i860,      /* Intel 860 */
-       bfd_arch_i370,      /* IBM 360/370 Mainframes */
-       bfd_arch_romp,      /* IBM ROMP PC/RT */
-       bfd_arch_alliant,   /* Alliant */
-       bfd_arch_convex,    /* Convex */
-       bfd_arch_m88k,      /* Motorola 88xxx */
-       bfd_arch_m98k,      /* Motorola 98xxx */
-       bfd_arch_pyramid,   /* Pyramid Technology */
-       bfd_arch_h8300,     /* Renesas H8/300 (formerly Hitachi H8/300) */
-     #define bfd_mach_h8300    1
-     #define bfd_mach_h8300h   2
-     #define bfd_mach_h8300s   3
-     #define bfd_mach_h8300hn  4
-     #define bfd_mach_h8300sn  5
-     #define bfd_mach_h8300sx  6
-     #define bfd_mach_h8300sxn 7
-       bfd_arch_pdp11,     /* DEC PDP-11 */
-       bfd_arch_powerpc,   /* PowerPC */
-     #define bfd_mach_ppc           32
-     #define bfd_mach_ppc64         64
-     #define bfd_mach_ppc_403       403
-     #define bfd_mach_ppc_403gc     4030
-     #define bfd_mach_ppc_505       505
-     #define bfd_mach_ppc_601       601
-     #define bfd_mach_ppc_602       602
-     #define bfd_mach_ppc_603       603
-     #define bfd_mach_ppc_ec603e    6031
-     #define bfd_mach_ppc_604       604
-     #define bfd_mach_ppc_620       620
-     #define bfd_mach_ppc_630       630
-     #define bfd_mach_ppc_750       750
-     #define bfd_mach_ppc_860       860
-     #define bfd_mach_ppc_a35       35
-     #define bfd_mach_ppc_rs64ii    642
-     #define bfd_mach_ppc_rs64iii   643
-     #define bfd_mach_ppc_7400      7400
-     #define bfd_mach_ppc_e500      500
-       bfd_arch_rs6000,    /* IBM RS/6000 */
-     #define bfd_mach_rs6k          6000
-     #define bfd_mach_rs6k_rs1      6001
-     #define bfd_mach_rs6k_rsc      6003
-     #define bfd_mach_rs6k_rs2      6002
-       bfd_arch_hppa,      /* HP PA RISC */
-     #define bfd_mach_hppa10        10
-     #define bfd_mach_hppa11        11
-     #define bfd_mach_hppa20        20
-     #define bfd_mach_hppa20w       25
-       bfd_arch_d10v,      /* Mitsubishi D10V */
-     #define bfd_mach_d10v          1
-     #define bfd_mach_d10v_ts2      2
-     #define bfd_mach_d10v_ts3      3
-       bfd_arch_d30v,      /* Mitsubishi D30V */
-       bfd_arch_dlx,       /* DLX */
-       bfd_arch_m68hc11,   /* Motorola 68HC11 */
-       bfd_arch_m68hc12,   /* Motorola 68HC12 */
-     #define bfd_mach_m6812_default 0
-     #define bfd_mach_m6812         1
-     #define bfd_mach_m6812s        2
-       bfd_arch_z8k,       /* Zilog Z8000 */
-     #define bfd_mach_z8001         1
-     #define bfd_mach_z8002         2
-       bfd_arch_h8500,     /* Renesas H8/500 (formerly Hitachi H8/500) */
-       bfd_arch_sh,        /* Renesas / SuperH SH (formerly Hitachi SH) */
-     #define bfd_mach_sh            1
-     #define bfd_mach_sh2        0x20
-     #define bfd_mach_sh_dsp     0x2d
-     #define bfd_mach_sh2a       0x2a
-     #define bfd_mach_sh2a_nofpu 0x2b
-     #define bfd_mach_sh2a_nofpu_or_sh4_nommu_nofpu 0x2a1
-     #define bfd_mach_sh2a_nofpu_or_sh3_nommu 0x2a2
-     #define bfd_mach_sh2a_or_sh4  0x2a3
-     #define bfd_mach_sh2a_or_sh3e 0x2a4
-     #define bfd_mach_sh2e       0x2e
-     #define bfd_mach_sh3        0x30
-     #define bfd_mach_sh3_nommu  0x31
-     #define bfd_mach_sh3_dsp    0x3d
-     #define bfd_mach_sh3e       0x3e
-     #define bfd_mach_sh4        0x40
-     #define bfd_mach_sh4_nofpu  0x41
-     #define bfd_mach_sh4_nommu_nofpu  0x42
-     #define bfd_mach_sh4a       0x4a
-     #define bfd_mach_sh4a_nofpu 0x4b
-     #define bfd_mach_sh4al_dsp  0x4d
-     #define bfd_mach_sh5        0x50
-       bfd_arch_alpha,     /* Dec Alpha */
-     #define bfd_mach_alpha_ev4  0x10
-     #define bfd_mach_alpha_ev5  0x20
-     #define bfd_mach_alpha_ev6  0x30
-       bfd_arch_arm,       /* Advanced Risc Machines ARM.  */
-     #define bfd_mach_arm_unknown   0
-     #define bfd_mach_arm_2         1
-     #define bfd_mach_arm_2a        2
-     #define bfd_mach_arm_3         3
-     #define bfd_mach_arm_3M        4
-     #define bfd_mach_arm_4         5
-     #define bfd_mach_arm_4T        6
-     #define bfd_mach_arm_5         7
-     #define bfd_mach_arm_5T        8
-     #define bfd_mach_arm_5TE       9
-     #define bfd_mach_arm_XScale    10
-     #define bfd_mach_arm_ep9312    11
-     #define bfd_mach_arm_iWMMXt    12
-       bfd_arch_ns32k,     /* National Semiconductors ns32000 */
-       bfd_arch_w65,       /* WDC 65816 */
-       bfd_arch_tic30,     /* Texas Instruments TMS320C30 */
-       bfd_arch_tic4x,     /* Texas Instruments TMS320C3X/4X */
-     #define bfd_mach_tic3x         30
-     #define bfd_mach_tic4x         40
-       bfd_arch_tic54x,    /* Texas Instruments TMS320C54X */
-       bfd_arch_tic80,     /* TI TMS320c80 (MVP) */
-       bfd_arch_v850,      /* NEC V850 */
-     #define bfd_mach_v850          1
-     #define bfd_mach_v850e         'E'
-     #define bfd_mach_v850e1        '1'
-       bfd_arch_arc,       /* ARC Cores */
-     #define bfd_mach_arc_5         5
-     #define bfd_mach_arc_6         6
-     #define bfd_mach_arc_7         7
-     #define bfd_mach_arc_8         8
-       bfd_arch_m32r,      /* Renesas M32R (formerly Mitsubishi M32R/D) */
-     #define bfd_mach_m32r          1 /* For backwards compatibility.  */
-     #define bfd_mach_m32rx         'x'
-     #define bfd_mach_m32r2         '2'
-       bfd_arch_mn10200,   /* Matsushita MN10200 */
-       bfd_arch_mn10300,   /* Matsushita MN10300 */
-     #define bfd_mach_mn10300               300
-     #define bfd_mach_am33          330
-     #define bfd_mach_am33_2        332
-       bfd_arch_fr30,
-     #define bfd_mach_fr30          0x46523330
-       bfd_arch_frv,
-     #define bfd_mach_frv           1
-     #define bfd_mach_frvsimple     2
-     #define bfd_mach_fr300         300
-     #define bfd_mach_fr400         400
-     #define bfd_mach_fr450         450
-     #define bfd_mach_frvtomcat     499     /* fr500 prototype */
-     #define bfd_mach_fr500         500
-     #define bfd_mach_fr550         550
-       bfd_arch_mcore,
-       bfd_arch_ia64,      /* HP/Intel ia64 */
-     #define bfd_mach_ia64_elf64    64
-     #define bfd_mach_ia64_elf32    32
-       bfd_arch_ip2k,      /* Ubicom IP2K microcontrollers. */
-     #define bfd_mach_ip2022        1
-     #define bfd_mach_ip2022ext     2
-      bfd_arch_iq2000,     /* Vitesse IQ2000.  */
-     #define bfd_mach_iq2000        1
-     #define bfd_mach_iq10          2
-       bfd_arch_pj,
-       bfd_arch_avr,       /* Atmel AVR microcontrollers.  */
-     #define bfd_mach_avr1          1
-     #define bfd_mach_avr2          2
-     #define bfd_mach_avr3          3
-     #define bfd_mach_avr4          4
-     #define bfd_mach_avr5          5
-       bfd_arch_cr16c,       /* National Semiconductor CompactRISC. */
-     #define bfd_mach_cr16c         1
-       bfd_arch_crx,       /*  National Semiconductor CRX.  */
-     #define bfd_mach_crx           1
-       bfd_arch_cris,      /* Axis CRIS */
-     #define bfd_mach_cris_v0_v10   255
-     #define bfd_mach_cris_v32      32
-     #define bfd_mach_cris_v10_v32  1032
-       bfd_arch_s390,      /* IBM s390 */
-     #define bfd_mach_s390_31       31
-     #define bfd_mach_s390_64       64
-       bfd_arch_openrisc,  /* OpenRISC */
-       bfd_arch_mmix,      /* Donald Knuth's educational processor.  */
-       bfd_arch_xstormy16,
-     #define bfd_mach_xstormy16     1
-       bfd_arch_msp430,    /* Texas Instruments MSP430 architecture.  */
-     #define bfd_mach_msp11          11
-     #define bfd_mach_msp110         110
-     #define bfd_mach_msp12          12
-     #define bfd_mach_msp13          13
-     #define bfd_mach_msp14          14
-     #define bfd_mach_msp15          15
-     #define bfd_mach_msp16          16
-     #define bfd_mach_msp31          31
-     #define bfd_mach_msp32          32
-     #define bfd_mach_msp33          33
-     #define bfd_mach_msp41          41
-     #define bfd_mach_msp42          42
-     #define bfd_mach_msp43          43
-     #define bfd_mach_msp44          44
-       bfd_arch_xtensa,    /* Tensilica's Xtensa cores.  */
-     #define bfd_mach_xtensa        1
-        bfd_arch_maxq,     /* Dallas MAXQ 10/20 */
-     #define bfd_mach_maxq10    10
-     #define bfd_mach_maxq20    20
-       bfd_arch_last
-       };
-
-2.14.2 bfd_arch_info
---------------------
-
-*Description*
-This structure contains information on architectures for use within BFD.
-
-     typedef struct bfd_arch_info
-     {
-       int bits_per_word;
-       int bits_per_address;
-       int bits_per_byte;
-       enum bfd_architecture arch;
-       unsigned long mach;
-       const char *arch_name;
-       const char *printable_name;
-       unsigned int section_align_power;
-       /* TRUE if this is the default machine for the architecture.
-          The default arch should be the first entry for an arch so that
-          all the entries for that arch can be accessed via `next'.  */
-       bfd_boolean the_default;
-       const struct bfd_arch_info * (*compatible)
-         (const struct bfd_arch_info *a, const struct bfd_arch_info *b);
-
-       bfd_boolean (*scan) (const struct bfd_arch_info *, const char *);
-
-       const struct bfd_arch_info *next;
-     }
-     bfd_arch_info_type;
-
-2.14.2.1 `bfd_printable_name'
-.............................
-
-*Synopsis*
-     const char *bfd_printable_name (bfd *abfd);
-   *Description*
-Return a printable string representing the architecture and machine
-from the pointer to the architecture info structure.
-
-2.14.2.2 `bfd_scan_arch'
-........................
-
-*Synopsis*
-     const bfd_arch_info_type *bfd_scan_arch (const char *string);
-   *Description*
-Figure out if BFD supports any cpu which could be described with the
-name STRING.  Return a pointer to an `arch_info' structure if a machine
-is found, otherwise NULL.
-
-2.14.2.3 `bfd_arch_list'
-........................
-
-*Synopsis*
-     const char **bfd_arch_list (void);
-   *Description*
-Return a freshly malloced NULL-terminated vector of the names of all
-the valid BFD architectures.  Do not modify the names.
-
-2.14.2.4 `bfd_arch_get_compatible'
-..................................
-
-*Synopsis*
-     const bfd_arch_info_type *bfd_arch_get_compatible
-        (const bfd *abfd, const bfd *bbfd, bfd_boolean accept_unknowns);
-   *Description*
-Determine whether two BFDs' architectures and machine types are
-compatible.  Calculates the lowest common denominator between the two
-architectures and machine types implied by the BFDs and returns a
-pointer to an `arch_info' structure describing the compatible machine.
-
-2.14.2.5 `bfd_default_arch_struct'
-..................................
-
-*Description*
-The `bfd_default_arch_struct' is an item of `bfd_arch_info_type' which
-has been initialized to a fairly generic state.  A BFD starts life by
-pointing to this structure, until the correct back end has determined
-the real architecture of the file.
-     extern const bfd_arch_info_type bfd_default_arch_struct;
-
-2.14.2.6 `bfd_set_arch_info'
-............................
-
-*Synopsis*
-     void bfd_set_arch_info (bfd *abfd, const bfd_arch_info_type *arg);
-   *Description*
-Set the architecture info of ABFD to ARG.
-
-2.14.2.7 `bfd_default_set_arch_mach'
-....................................
-
-*Synopsis*
-     bfd_boolean bfd_default_set_arch_mach
-        (bfd *abfd, enum bfd_architecture arch, unsigned long mach);
-   *Description*
-Set the architecture and machine type in BFD ABFD to ARCH and MACH.
-Find the correct pointer to a structure and insert it into the
-`arch_info' pointer.
-
-2.14.2.8 `bfd_get_arch'
-.......................
-
-*Synopsis*
-     enum bfd_architecture bfd_get_arch (bfd *abfd);
-   *Description*
-Return the enumerated type which describes the BFD ABFD's architecture.
-
-2.14.2.9 `bfd_get_mach'
-.......................
-
-*Synopsis*
-     unsigned long bfd_get_mach (bfd *abfd);
-   *Description*
-Return the long type which describes the BFD ABFD's machine.
-
-2.14.2.10 `bfd_arch_bits_per_byte'
-..................................
-
-*Synopsis*
-     unsigned int bfd_arch_bits_per_byte (bfd *abfd);
-   *Description*
-Return the number of bits in one of the BFD ABFD's architecture's bytes.
-
-2.14.2.11 `bfd_arch_bits_per_address'
-.....................................
-
-*Synopsis*
-     unsigned int bfd_arch_bits_per_address (bfd *abfd);
-   *Description*
-Return the number of bits in one of the BFD ABFD's architecture's
-addresses.
-
-2.14.2.12 `bfd_default_compatible'
-..................................
-
-*Synopsis*
-     const bfd_arch_info_type *bfd_default_compatible
-        (const bfd_arch_info_type *a, const bfd_arch_info_type *b);
-   *Description*
-The default function for testing for compatibility.
-
-2.14.2.13 `bfd_default_scan'
-............................
-
-*Synopsis*
-     bfd_boolean bfd_default_scan
-        (const struct bfd_arch_info *info, const char *string);
-   *Description*
-The default function for working out whether this is an architecture
-hit and a machine hit.
-
-2.14.2.14 `bfd_get_arch_info'
-.............................
-
-*Synopsis*
-     const bfd_arch_info_type *bfd_get_arch_info (bfd *abfd);
-   *Description*
-Return the architecture info struct in ABFD.
-
-2.14.2.15 `bfd_lookup_arch'
-...........................
-
-*Synopsis*
-     const bfd_arch_info_type *bfd_lookup_arch
-        (enum bfd_architecture arch, unsigned long machine);
-   *Description*
-Look for the architecture info structure which matches the arguments
-ARCH and MACHINE. A machine of 0 matches the machine/architecture
-structure which marks itself as the default.
-
-2.14.2.16 `bfd_printable_arch_mach'
-...................................
-
-*Synopsis*
-     const char *bfd_printable_arch_mach
-        (enum bfd_architecture arch, unsigned long machine);
-   *Description*
-Return a printable string representing the architecture and machine
-type.
-
-   This routine is depreciated.
-
-2.14.2.17 `bfd_octets_per_byte'
-...............................
-
-*Synopsis*
-     unsigned int bfd_octets_per_byte (bfd *abfd);
-   *Description*
-Return the number of octets (8-bit quantities) per target byte (minimum
-addressable unit).  In most cases, this will be one, but some DSP
-targets have 16, 32, or even 48 bits per byte.
-
-2.14.2.18 `bfd_arch_mach_octets_per_byte'
-.........................................
-
-*Synopsis*
-     unsigned int bfd_arch_mach_octets_per_byte
-        (enum bfd_architecture arch, unsigned long machine);
-   *Description*
-See bfd_octets_per_byte.
-
-   This routine is provided for those cases where a bfd * is not
-available
-
-
-File: bfd.info,  Node: Opening and Closing,  Next: Internal,  Prev: Architectures,  Up: BFD front end
-
-2.15 Opening and closing BFDs
-=============================
-
-2.15.0.1 `bfd_openr'
-....................
-
-*Synopsis*
-     bfd *bfd_openr (const char *filename, const char *target);
-   *Description*
-Open the file FILENAME (using `fopen') with the target TARGET.  Return
-a pointer to the created BFD.
-
-   Calls `bfd_find_target', so TARGET is interpreted as by that
-function.
-
-   If `NULL' is returned then an error has occured.   Possible errors
-are `bfd_error_no_memory', `bfd_error_invalid_target' or `system_call'
-error.
-
-2.15.0.2 `bfd_fdopenr'
-......................
-
-*Synopsis*
-     bfd *bfd_fdopenr (const char *filename, const char *target, int fd);
-   *Description*
-`bfd_fdopenr' is to `bfd_fopenr' much like `fdopen' is to `fopen'.  It
-opens a BFD on a file already described by the FD supplied.
-
-   When the file is later `bfd_close'd, the file descriptor will be
-closed.  If the caller desires that this file descriptor be cached by
-BFD (opened as needed, closed as needed to free descriptors for other
-opens), with the supplied FD used as an initial file descriptor (but
-subject to closure at any time), call bfd_set_cacheable(bfd, 1) on the
-returned BFD.  The default is to assume no caching; the file descriptor
-will remain open until `bfd_close', and will not be affected by BFD
-operations on other files.
-
-   Possible errors are `bfd_error_no_memory',
-`bfd_error_invalid_target' and `bfd_error_system_call'.
-
-2.15.0.3 `bfd_openstreamr'
-..........................
-
-*Synopsis*
-     bfd *bfd_openstreamr (const char *, const char *, void *);
-   *Description*
-Open a BFD for read access on an existing stdio stream.  When the BFD
-is passed to `bfd_close', the stream will be closed.
-
-2.15.0.4 `bfd_openr_iovec'
-..........................
-
-*Synopsis*
-     bfd *bfd_openr_iovec (const char *filename, const char *target,
-         void *(*open) (struct bfd *nbfd,
-         void *open_closure),
-         void *open_closure,
-         file_ptr (*pread) (struct bfd *nbfd,
-         void *stream,
-         void *buf,
-         file_ptr nbytes,
-         file_ptr offset),
-         int (*close) (struct bfd *nbfd,
-         void *stream));
-   *Description*
-Create and return a BFD backed by a read-only STREAM.  The STREAM is
-created using OPEN, accessed using PREAD and destroyed using CLOSE.
-
-   Calls `bfd_find_target', so TARGET is interpreted as by that
-function.
-
-   Calls OPEN (which can call `bfd_zalloc' and `bfd_get_filename') to
-obtain the read-only stream backing the BFD.  OPEN either succeeds
-returning the non-`NULL' STREAM, or fails returning `NULL' (setting
-`bfd_error').
-
-   Calls PREAD to request NBYTES of data from STREAM starting at OFFSET
-(e.g., via a call to `bfd_read').  PREAD either succeeds returning the
-number of bytes read (which can be less than NBYTES when end-of-file),
-or fails returning -1 (setting `bfd_error').
-
-   Calls CLOSE when the BFD is later closed using `bfd_close'.  CLOSE
-either succeeds returning 0, or fails returning -1 (setting
-`bfd_error').
-
-   If `bfd_openr_iovec' returns `NULL' then an error has occurred.
-Possible errors are `bfd_error_no_memory', `bfd_error_invalid_target'
-and `bfd_error_system_call'.
-
-2.15.0.5 `bfd_openw'
-....................
-
-*Synopsis*
-     bfd *bfd_openw (const char *filename, const char *target);
-   *Description*
-Create a BFD, associated with file FILENAME, using the file format
-TARGET, and return a pointer to it.
-
-   Possible errors are `bfd_error_system_call', `bfd_error_no_memory',
-`bfd_error_invalid_target'.
-
-2.15.0.6 `bfd_close'
-....................
-
-*Synopsis*
-     bfd_boolean bfd_close (bfd *abfd);
-   *Description*
-Close a BFD. If the BFD was open for writing, then pending operations
-are completed and the file written out and closed.  If the created file
-is executable, then `chmod' is called to mark it as such.
-
-   All memory attached to the BFD is released.
-
-   The file descriptor associated with the BFD is closed (even if it
-was passed in to BFD by `bfd_fdopenr').
-
-   *Returns*
-`TRUE' is returned if all is ok, otherwise `FALSE'.
-
-2.15.0.7 `bfd_close_all_done'
-.............................
-
-*Synopsis*
-     bfd_boolean bfd_close_all_done (bfd *);
-   *Description*
-Close a BFD.  Differs from `bfd_close' since it does not complete any
-pending operations.  This routine would be used if the application had
-just used BFD for swapping and didn't want to use any of the writing
-code.
-
-   If the created file is executable, then `chmod' is called to mark it
-as such.
-
-   All memory attached to the BFD is released.
-
-   *Returns*
-`TRUE' is returned if all is ok, otherwise `FALSE'.
-
-2.15.0.8 `bfd_create'
-.....................
-
-*Synopsis*
-     bfd *bfd_create (const char *filename, bfd *templ);
-   *Description*
-Create a new BFD in the manner of `bfd_openw', but without opening a
-file. The new BFD takes the target from the target used by TEMPLATE.
-The format is always set to `bfd_object'.
-
-2.15.0.9 `bfd_make_writable'
-............................
-
-*Synopsis*
-     bfd_boolean bfd_make_writable (bfd *abfd);
-   *Description*
-Takes a BFD as created by `bfd_create' and converts it into one like as
-returned by `bfd_openw'.  It does this by converting the BFD to
-BFD_IN_MEMORY.  It's assumed that you will call `bfd_make_readable' on
-this bfd later.
-
-   *Returns*
-`TRUE' is returned if all is ok, otherwise `FALSE'.
-
-2.15.0.10 `bfd_make_readable'
-.............................
-
-*Synopsis*
-     bfd_boolean bfd_make_readable (bfd *abfd);
-   *Description*
-Takes a BFD as created by `bfd_create' and `bfd_make_writable' and
-converts it into one like as returned by `bfd_openr'.  It does this by
-writing the contents out to the memory buffer, then reversing the
-direction.
-
-   *Returns*
-`TRUE' is returned if all is ok, otherwise `FALSE'.
-
-2.15.0.11 `bfd_alloc'
-.....................
-
-*Synopsis*
-     void *bfd_alloc (bfd *abfd, bfd_size_type wanted);
-   *Description*
-Allocate a block of WANTED bytes of memory attached to `abfd' and
-return a pointer to it.
-
-2.15.0.12 `bfd_zalloc'
-......................
-
-*Synopsis*
-     void *bfd_zalloc (bfd *abfd, bfd_size_type wanted);
-   *Description*
-Allocate a block of WANTED bytes of zeroed memory attached to `abfd'
-and return a pointer to it.
-
-2.15.0.13 `bfd_calc_gnu_debuglink_crc32'
-........................................
-
-*Synopsis*
-     unsigned long bfd_calc_gnu_debuglink_crc32
-        (unsigned long crc, const unsigned char *buf, bfd_size_type len);
-   *Description*
-Computes a CRC value as used in the .gnu_debuglink section.  Advances
-the previously computed CRC value by computing and adding in the crc32
-for LEN bytes of BUF.
-
-   *Returns*
-Return the updated CRC32 value.
-
-2.15.0.14 `get_debug_link_info'
-...............................
-
-*Synopsis*
-     char *get_debug_link_info (bfd *abfd, unsigned long *crc32_out);
-   *Description*
-fetch the filename and CRC32 value for any separate debuginfo
-associated with ABFD. Return NULL if no such info found, otherwise
-return filename and update CRC32_OUT.
-
-2.15.0.15 `separate_debug_file_exists'
-......................................
-
-*Synopsis*
-     bfd_boolean separate_debug_file_exists
-        (char *name, unsigned long crc32);
-   *Description*
-Checks to see if NAME is a file and if its contents match CRC32.
-
-2.15.0.16 `find_separate_debug_file'
-....................................
-
-*Synopsis*
-     char *find_separate_debug_file (bfd *abfd);
-   *Description*
-Searches ABFD for a reference to separate debugging information, scans
-various locations in the filesystem, including the file tree rooted at
-DEBUG_FILE_DIRECTORY, and returns a filename of such debugging
-information if the file is found and has matching CRC32.  Returns NULL
-if no reference to debugging file exists, or file cannot be found.
-
-2.15.0.17 `bfd_follow_gnu_debuglink'
-....................................
-
-*Synopsis*
-     char *bfd_follow_gnu_debuglink (bfd *abfd, const char *dir);
-   *Description*
-Takes a BFD and searches it for a .gnu_debuglink section.  If this
-section is found, it examines the section for the name and checksum of
-a '.debug' file containing auxiliary debugging information.  It then
-searches the filesystem for this .debug file in some standard
-locations, including the directory tree rooted at DIR, and if found
-returns the full filename.
-
-   If DIR is NULL, it will search a default path configured into libbfd
-at build time.  [XXX this feature is not currently implemented].
-
-   *Returns*
-`NULL' on any errors or failure to locate the .debug file, otherwise a
-pointer to a heap-allocated string containing the filename.  The caller
-is responsible for freeing this string.
-
-2.15.0.18 `bfd_create_gnu_debuglink_section'
-............................................
-
-*Synopsis*
-     struct bfd_section *bfd_create_gnu_debuglink_section
-        (bfd *abfd, const char *filename);
-   *Description*
-Takes a BFD and adds a .gnu_debuglink section to it.  The section is
-sized to be big enough to contain a link to the specified FILENAME.
-
-   *Returns*
-A pointer to the new section is returned if all is ok.  Otherwise
-`NULL' is returned and bfd_error is set.
-
-2.15.0.19 `bfd_fill_in_gnu_debuglink_section'
-.............................................
-
-*Synopsis*
-     bfd_boolean bfd_fill_in_gnu_debuglink_section
-        (bfd *abfd, struct bfd_section *sect, const char *filename);
-   *Description*
-Takes a BFD and containing a .gnu_debuglink section SECT and fills in
-the contents of the section to contain a link to the specified
-FILENAME.  The filename should be relative to the current directory.
-
-   *Returns*
-`TRUE' is returned if all is ok.  Otherwise `FALSE' is returned and
-bfd_error is set.
-
-
-File: bfd.info,  Node: Internal,  Next: File Caching,  Prev: Opening and Closing,  Up: BFD front end
-
-2.16 Internal functions
-=======================
-
-*Description*
-These routines are used within BFD.  They are not intended for export,
-but are documented here for completeness.
-
-2.16.0.1 `bfd_write_bigendian_4byte_int'
-........................................
-
-*Synopsis*
-     bfd_boolean bfd_write_bigendian_4byte_int (bfd *, unsigned int);
-   *Description*
-Write a 4 byte integer I to the output BFD ABFD, in big endian order
-regardless of what else is going on.  This is useful in archives.
-
-2.16.0.2 `bfd_put_size'
-.......................
-
-2.16.0.3 `bfd_get_size'
-.......................
-
-*Description*
-These macros as used for reading and writing raw data in sections; each
-access (except for bytes) is vectored through the target format of the
-BFD and mangled accordingly. The mangling performs any necessary endian
-translations and removes alignment restrictions.  Note that types
-accepted and returned by these macros are identical so they can be
-swapped around in macros--for example, `libaout.h' defines `GET_WORD'
-to either `bfd_get_32' or `bfd_get_64'.
-
-   In the put routines, VAL must be a `bfd_vma'.  If we are on a system
-without prototypes, the caller is responsible for making sure that is
-true, with a cast if necessary.  We don't cast them in the macro
-definitions because that would prevent `lint' or `gcc -Wall' from
-detecting sins such as passing a pointer.  To detect calling these with
-less than a `bfd_vma', use `gcc -Wconversion' on a host with 64 bit
-`bfd_vma''s.
-
-     /* Byte swapping macros for user section data.  */
-
-     #define bfd_put_8(abfd, val, ptr) \
-       ((void) (*((unsigned char *) (ptr)) = (val) & 0xff))
-     #define bfd_put_signed_8 \
-       bfd_put_8
-     #define bfd_get_8(abfd, ptr) \
-       (*(unsigned char *) (ptr) & 0xff)
-     #define bfd_get_signed_8(abfd, ptr) \
-       (((*(unsigned char *) (ptr) & 0xff) ^ 0x80) - 0x80)
-
-     #define bfd_put_16(abfd, val, ptr) \
-       BFD_SEND (abfd, bfd_putx16, ((val),(ptr)))
-     #define bfd_put_signed_16 \
-       bfd_put_16
-     #define bfd_get_16(abfd, ptr) \
-       BFD_SEND (abfd, bfd_getx16, (ptr))
-     #define bfd_get_signed_16(abfd, ptr) \
-       BFD_SEND (abfd, bfd_getx_signed_16, (ptr))
-
-     #define bfd_put_32(abfd, val, ptr) \
-       BFD_SEND (abfd, bfd_putx32, ((val),(ptr)))
-     #define bfd_put_signed_32 \
-       bfd_put_32
-     #define bfd_get_32(abfd, ptr) \
-       BFD_SEND (abfd, bfd_getx32, (ptr))
-     #define bfd_get_signed_32(abfd, ptr) \
-       BFD_SEND (abfd, bfd_getx_signed_32, (ptr))
-
-     #define bfd_put_64(abfd, val, ptr) \
-       BFD_SEND (abfd, bfd_putx64, ((val), (ptr)))
-     #define bfd_put_signed_64 \
-       bfd_put_64
-     #define bfd_get_64(abfd, ptr) \
-       BFD_SEND (abfd, bfd_getx64, (ptr))
-     #define bfd_get_signed_64(abfd, ptr) \
-       BFD_SEND (abfd, bfd_getx_signed_64, (ptr))
-
-     #define bfd_get(bits, abfd, ptr)                       \
-       ((bits) == 8 ? (bfd_vma) bfd_get_8 (abfd, ptr)       \
-        : (bits) == 16 ? bfd_get_16 (abfd, ptr)             \
-        : (bits) == 32 ? bfd_get_32 (abfd, ptr)             \
-        : (bits) == 64 ? bfd_get_64 (abfd, ptr)             \
-        : (abort (), (bfd_vma) - 1))
-
-     #define bfd_put(bits, abfd, val, ptr)                  \
-       ((bits) == 8 ? bfd_put_8  (abfd, val, ptr)           \
-        : (bits) == 16 ? bfd_put_16 (abfd, val, ptr)                \
-        : (bits) == 32 ? bfd_put_32 (abfd, val, ptr)                \
-        : (bits) == 64 ? bfd_put_64 (abfd, val, ptr)                \
-        : (abort (), (void) 0))
-
-2.16.0.4 `bfd_h_put_size'
-.........................
-
-*Description*
-These macros have the same function as their `bfd_get_x' brethren,
-except that they are used for removing information for the header
-records of object files. Believe it or not, some object files keep
-their header records in big endian order and their data in little
-endian order.
-
-     /* Byte swapping macros for file header data.  */
-
-     #define bfd_h_put_8(abfd, val, ptr) \
-       bfd_put_8 (abfd, val, ptr)
-     #define bfd_h_put_signed_8(abfd, val, ptr) \
-       bfd_put_8 (abfd, val, ptr)
-     #define bfd_h_get_8(abfd, ptr) \
-       bfd_get_8 (abfd, ptr)
-     #define bfd_h_get_signed_8(abfd, ptr) \
-       bfd_get_signed_8 (abfd, ptr)
-
-     #define bfd_h_put_16(abfd, val, ptr) \
-       BFD_SEND (abfd, bfd_h_putx16, (val, ptr))
-     #define bfd_h_put_signed_16 \
-       bfd_h_put_16
-     #define bfd_h_get_16(abfd, ptr) \
-       BFD_SEND (abfd, bfd_h_getx16, (ptr))
-     #define bfd_h_get_signed_16(abfd, ptr) \
-       BFD_SEND (abfd, bfd_h_getx_signed_16, (ptr))
-
-     #define bfd_h_put_32(abfd, val, ptr) \
-       BFD_SEND (abfd, bfd_h_putx32, (val, ptr))
-     #define bfd_h_put_signed_32 \
-       bfd_h_put_32
-     #define bfd_h_get_32(abfd, ptr) \
-       BFD_SEND (abfd, bfd_h_getx32, (ptr))
-     #define bfd_h_get_signed_32(abfd, ptr) \
-       BFD_SEND (abfd, bfd_h_getx_signed_32, (ptr))
-
-     #define bfd_h_put_64(abfd, val, ptr) \
-       BFD_SEND (abfd, bfd_h_putx64, (val, ptr))
-     #define bfd_h_put_signed_64 \
-       bfd_h_put_64
-     #define bfd_h_get_64(abfd, ptr) \
-       BFD_SEND (abfd, bfd_h_getx64, (ptr))
-     #define bfd_h_get_signed_64(abfd, ptr) \
-       BFD_SEND (abfd, bfd_h_getx_signed_64, (ptr))
-
-     /* Aliases for the above, which should eventually go away.  */
-
-     #define H_PUT_64  bfd_h_put_64
-     #define H_PUT_32  bfd_h_put_32
-     #define H_PUT_16  bfd_h_put_16
-     #define H_PUT_8   bfd_h_put_8
-     #define H_PUT_S64 bfd_h_put_signed_64
-     #define H_PUT_S32 bfd_h_put_signed_32
-     #define H_PUT_S16 bfd_h_put_signed_16
-     #define H_PUT_S8  bfd_h_put_signed_8
-     #define H_GET_64  bfd_h_get_64
-     #define H_GET_32  bfd_h_get_32
-     #define H_GET_16  bfd_h_get_16
-     #define H_GET_8   bfd_h_get_8
-     #define H_GET_S64 bfd_h_get_signed_64
-     #define H_GET_S32 bfd_h_get_signed_32
-     #define H_GET_S16 bfd_h_get_signed_16
-     #define H_GET_S8  bfd_h_get_signed_8
-
-2.16.0.5 `bfd_log2'
-...................
-
-*Synopsis*
-     unsigned int bfd_log2 (bfd_vma x);
-   *Description*
-Return the log base 2 of the value supplied, rounded up.  E.g., an X of
-1025 returns 11.  A X of 0 returns 0.
-
-
-File: bfd.info,  Node: File Caching,  Next: Linker Functions,  Prev: Internal,  Up: BFD front end
-
-2.17 File caching
-=================
-
-The file caching mechanism is embedded within BFD and allows the
-application to open as many BFDs as it wants without regard to the
-underlying operating system's file descriptor limit (often as low as 20
-open files).  The module in `cache.c' maintains a least recently used
-list of `BFD_CACHE_MAX_OPEN' files, and exports the name
-`bfd_cache_lookup', which runs around and makes sure that the required
-BFD is open. If not, then it chooses a file to close, closes it and
-opens the one wanted, returning its file handle.
-
-2.17.0.1 `BFD_CACHE_MAX_OPEN macro'
-...................................
-
-*Description*
-The maximum number of files which the cache will keep open at one time.
-     #define BFD_CACHE_MAX_OPEN 10
-
-2.17.0.2 `bfd_last_cache'
-.........................
-
-*Synopsis*
-     extern bfd *bfd_last_cache;
-   *Description*
-Zero, or a pointer to the topmost BFD on the chain.  This is used by
-the `bfd_cache_lookup' macro in `libbfd.h' to determine when it can
-avoid a function call.
-
-2.17.0.3 `bfd_cache_lookup'
-...........................
-
-*Description*
-Check to see if the required BFD is the same as the last one looked up.
-If so, then it can use the stream in the BFD with impunity, since it
-can't have changed since the last lookup; otherwise, it has to perform
-the complicated lookup function.
-     #define bfd_cache_lookup(x) \
-         ((x) == bfd_last_cache ? \
-           (FILE *) (bfd_last_cache->iostream): \
-            bfd_cache_lookup_worker (x))
-
-2.17.0.4 `bfd_cache_init'
-.........................
-
-*Synopsis*
-     bfd_boolean bfd_cache_init (bfd *abfd);
-   *Description*
-Add a newly opened BFD to the cache.
-
-2.17.0.5 `bfd_cache_close'
-..........................
-
-*Synopsis*
-     bfd_boolean bfd_cache_close (bfd *abfd);
-   *Description*
-Remove the BFD ABFD from the cache. If the attached file is open, then
-close it too.
-
-   *Returns*
-`FALSE' is returned if closing the file fails, `TRUE' is returned if
-all is well.
-
-2.17.0.6 `bfd_cache_close_all'
-..............................
-
-*Synopsis*
-     bfd_boolean bfd_cache_close_all (void);
-   *Description*
-Remove all BFDs from the cache. If the attached file is open, then
-close it too.
-
-   *Returns*
-`FALSE' is returned if closing one of the file fails, `TRUE' is
-returned if all is well.
-
-2.17.0.7 `bfd_open_file'
-........................
-
-*Synopsis*
-     FILE* bfd_open_file (bfd *abfd);
-   *Description*
-Call the OS to open a file for ABFD.  Return the `FILE *' (possibly
-`NULL') that results from this operation.  Set up the BFD so that
-future accesses know the file is open. If the `FILE *' returned is
-`NULL', then it won't have been put in the cache, so it won't have to
-be removed from it.
-
-2.17.0.8 `bfd_cache_lookup_worker'
-..................................
-
-*Synopsis*
-     FILE *bfd_cache_lookup_worker (bfd *abfd);
-   *Description*
-Called when the macro `bfd_cache_lookup' fails to find a quick answer.
-Find a file descriptor for ABFD.  If necessary, it open it.  If there
-are already more than `BFD_CACHE_MAX_OPEN' files open, it tries to
-close one first, to avoid running out of file descriptors.  It will
-abort rather than returning NULL if it is unable to (re)open the ABFD.
-
-
-File: bfd.info,  Node: Linker Functions,  Next: Hash Tables,  Prev: File Caching,  Up: BFD front end
-
-2.18 Linker Functions
-=====================
-
-The linker uses three special entry points in the BFD target vector.
-It is not necessary to write special routines for these entry points
-when creating a new BFD back end, since generic versions are provided.
-However, writing them can speed up linking and make it use
-significantly less runtime memory.
-
-   The first routine creates a hash table used by the other routines.
-The second routine adds the symbols from an object file to the hash
-table.  The third routine takes all the object files and links them
-together to create the output file.  These routines are designed so
-that the linker proper does not need to know anything about the symbols
-in the object files that it is linking.  The linker merely arranges the
-sections as directed by the linker script and lets BFD handle the
-details of symbols and relocs.
-
-   The second routine and third routines are passed a pointer to a
-`struct bfd_link_info' structure (defined in `bfdlink.h') which holds
-information relevant to the link, including the linker hash table
-(which was created by the first routine) and a set of callback
-functions to the linker proper.
-
-   The generic linker routines are in `linker.c', and use the header
-file `genlink.h'.  As of this writing, the only back ends which have
-implemented versions of these routines are a.out (in `aoutx.h') and
-ECOFF (in `ecoff.c').  The a.out routines are used as examples
-throughout this section.
-
-* Menu:
-
-* Creating a Linker Hash Table::
-* Adding Symbols to the Hash Table::
-* Performing the Final Link::
-
-
-File: bfd.info,  Node: Creating a Linker Hash Table,  Next: Adding Symbols to the Hash Table,  Prev: Linker Functions,  Up: Linker Functions
-
-2.18.1 Creating a linker hash table
------------------------------------
-
-The linker routines must create a hash table, which must be derived
-from `struct bfd_link_hash_table' described in `bfdlink.c'.  *Note Hash
-Tables::, for information on how to create a derived hash table.  This
-entry point is called using the target vector of the linker output file.
-
-   The `_bfd_link_hash_table_create' entry point must allocate and
-initialize an instance of the desired hash table.  If the back end does
-not require any additional information to be stored with the entries in
-the hash table, the entry point may simply create a `struct
-bfd_link_hash_table'.  Most likely, however, some additional
-information will be needed.
-
-   For example, with each entry in the hash table the a.out linker
-keeps the index the symbol has in the final output file (this index
-number is used so that when doing a relocatable link the symbol index
-used in the output file can be quickly filled in when copying over a
-reloc).  The a.out linker code defines the required structures and
-functions for a hash table derived from `struct bfd_link_hash_table'.
-The a.out linker hash table is created by the function
-`NAME(aout,link_hash_table_create)'; it simply allocates space for the
-hash table, initializes it, and returns a pointer to it.
-
-   When writing the linker routines for a new back end, you will
-generally not know exactly which fields will be required until you have
-finished.  You should simply create a new hash table which defines no
-additional fields, and then simply add fields as they become necessary.
-
-
-File: bfd.info,  Node: Adding Symbols to the Hash Table,  Next: Performing the Final Link,  Prev: Creating a Linker Hash Table,  Up: Linker Functions
-
-2.18.2 Adding symbols to the hash table
----------------------------------------
-
-The linker proper will call the `_bfd_link_add_symbols' entry point for
-each object file or archive which is to be linked (typically these are
-the files named on the command line, but some may also come from the
-linker script).  The entry point is responsible for examining the file.
-For an object file, BFD must add any relevant symbol information to
-the hash table.  For an archive, BFD must determine which elements of
-the archive should be used and adding them to the link.
-
-   The a.out version of this entry point is
-`NAME(aout,link_add_symbols)'.
-
-* Menu:
-
-* Differing file formats::
-* Adding symbols from an object file::
-* Adding symbols from an archive::
-
-
-File: bfd.info,  Node: Differing file formats,  Next: Adding symbols from an object file,  Prev: Adding Symbols to the Hash Table,  Up: Adding Symbols to the Hash Table
-
-2.18.2.1 Differing file formats
-...............................
-
-Normally all the files involved in a link will be of the same format,
-but it is also possible to link together different format object files,
-and the back end must support that.  The `_bfd_link_add_symbols' entry
-point is called via the target vector of the file to be added.  This
-has an important consequence: the function may not assume that the hash
-table is the type created by the corresponding
-`_bfd_link_hash_table_create' vector.  All the `_bfd_link_add_symbols'
-function can assume about the hash table is that it is derived from
-`struct bfd_link_hash_table'.
-
-   Sometimes the `_bfd_link_add_symbols' function must store some
-information in the hash table entry to be used by the `_bfd_final_link'
-function.  In such a case the `creator' field of the hash table must be
-checked to make sure that the hash table was created by an object file
-of the same format.
-
-   The `_bfd_final_link' routine must be prepared to handle a hash
-entry without any extra information added by the
-`_bfd_link_add_symbols' function.  A hash entry without extra
-information will also occur when the linker script directs the linker
-to create a symbol.  Note that, regardless of how a hash table entry is
-added, all the fields will be initialized to some sort of null value by
-the hash table entry initialization function.
-
-   See `ecoff_link_add_externals' for an example of how to check the
-`creator' field before saving information (in this case, the ECOFF
-external symbol debugging information) in a hash table entry.
-
-
-File: bfd.info,  Node: Adding symbols from an object file,  Next: Adding symbols from an archive,  Prev: Differing file formats,  Up: Adding Symbols to the Hash Table
-
-2.18.2.2 Adding symbols from an object file
-...........................................
-
-When the `_bfd_link_add_symbols' routine is passed an object file, it
-must add all externally visible symbols in that object file to the hash
-table.  The actual work of adding the symbol to the hash table is
-normally handled by the function `_bfd_generic_link_add_one_symbol'.
-The `_bfd_link_add_symbols' routine is responsible for reading all the
-symbols from the object file and passing the correct information to
-`_bfd_generic_link_add_one_symbol'.
-
-   The `_bfd_link_add_symbols' routine should not use
-`bfd_canonicalize_symtab' to read the symbols.  The point of providing
-this routine is to avoid the overhead of converting the symbols into
-generic `asymbol' structures.
-
-   `_bfd_generic_link_add_one_symbol' handles the details of combining
-common symbols, warning about multiple definitions, and so forth.  It
-takes arguments which describe the symbol to add, notably symbol flags,
-a section, and an offset.  The symbol flags include such things as
-`BSF_WEAK' or `BSF_INDIRECT'.  The section is a section in the object
-file, or something like `bfd_und_section_ptr' for an undefined symbol
-or `bfd_com_section_ptr' for a common symbol.
-
-   If the `_bfd_final_link' routine is also going to need to read the
-symbol information, the `_bfd_link_add_symbols' routine should save it
-somewhere attached to the object file BFD.  However, the information
-should only be saved if the `keep_memory' field of the `info' argument
-is TRUE, so that the `-no-keep-memory' linker switch is effective.
-
-   The a.out function which adds symbols from an object file is
-`aout_link_add_object_symbols', and most of the interesting work is in
-`aout_link_add_symbols'.  The latter saves pointers to the hash tables
-entries created by `_bfd_generic_link_add_one_symbol' indexed by symbol
-number, so that the `_bfd_final_link' routine does not have to call the
-hash table lookup routine to locate the entry.
-
-
-File: bfd.info,  Node: Adding symbols from an archive,  Prev: Adding symbols from an object file,  Up: Adding Symbols to the Hash Table
-
-2.18.2.3 Adding symbols from an archive
-.......................................
-
-When the `_bfd_link_add_symbols' routine is passed an archive, it must
-look through the symbols defined by the archive and decide which
-elements of the archive should be included in the link.  For each such
-element it must call the `add_archive_element' linker callback, and it
-must add the symbols from the object file to the linker hash table.
-
-   In most cases the work of looking through the symbols in the archive
-should be done by the `_bfd_generic_link_add_archive_symbols' function.
-This function builds a hash table from the archive symbol table and
-looks through the list of undefined symbols to see which elements
-should be included.  `_bfd_generic_link_add_archive_symbols' is passed
-a function to call to make the final decision about adding an archive
-element to the link and to do the actual work of adding the symbols to
-the linker hash table.
-
-   The function passed to `_bfd_generic_link_add_archive_symbols' must
-read the symbols of the archive element and decide whether the archive
-element should be included in the link.  If the element is to be
-included, the `add_archive_element' linker callback routine must be
-called with the element as an argument, and the elements symbols must
-be added to the linker hash table just as though the element had itself
-been passed to the `_bfd_link_add_symbols' function.
-
-   When the a.out `_bfd_link_add_symbols' function receives an archive,
-it calls `_bfd_generic_link_add_archive_symbols' passing
-`aout_link_check_archive_element' as the function argument.
-`aout_link_check_archive_element' calls `aout_link_check_ar_symbols'.
-If the latter decides to add the element (an element is only added if
-it provides a real, non-common, definition for a previously undefined
-or common symbol) it calls the `add_archive_element' callback and then
-`aout_link_check_archive_element' calls `aout_link_add_symbols' to
-actually add the symbols to the linker hash table.
-
-   The ECOFF back end is unusual in that it does not normally call
-`_bfd_generic_link_add_archive_symbols', because ECOFF archives already
-contain a hash table of symbols.  The ECOFF back end searches the
-archive itself to avoid the overhead of creating a new hash table.
-
-
-File: bfd.info,  Node: Performing the Final Link,  Prev: Adding Symbols to the Hash Table,  Up: Linker Functions
-
-2.18.3 Performing the final link
---------------------------------
-
-When all the input files have been processed, the linker calls the
-`_bfd_final_link' entry point of the output BFD.  This routine is
-responsible for producing the final output file, which has several
-aspects.  It must relocate the contents of the input sections and copy
-the data into the output sections.  It must build an output symbol
-table including any local symbols from the input files and the global
-symbols from the hash table.  When producing relocatable output, it must
-modify the input relocs and write them into the output file.  There may
-also be object format dependent work to be done.
-
-   The linker will also call the `write_object_contents' entry point
-when the BFD is closed.  The two entry points must work together in
-order to produce the correct output file.
-
-   The details of how this works are inevitably dependent upon the
-specific object file format.  The a.out `_bfd_final_link' routine is
-`NAME(aout,final_link)'.
-
-* Menu:
-
-* Information provided by the linker::
-* Relocating the section contents::
-* Writing the symbol table::
-
-
-File: bfd.info,  Node: Information provided by the linker,  Next: Relocating the section contents,  Prev: Performing the Final Link,  Up: Performing the Final Link
-
-2.18.3.1 Information provided by the linker
-...........................................
-
-Before the linker calls the `_bfd_final_link' entry point, it sets up
-some data structures for the function to use.
-
-   The `input_bfds' field of the `bfd_link_info' structure will point
-to a list of all the input files included in the link.  These files are
-linked through the `link_next' field of the `bfd' structure.
-
-   Each section in the output file will have a list of `link_order'
-structures attached to the `link_order_head' field (the `link_order'
-structure is defined in `bfdlink.h').  These structures describe how to
-create the contents of the output section in terms of the contents of
-various input sections, fill constants, and, eventually, other types of
-information.  They also describe relocs that must be created by the BFD
-backend, but do not correspond to any input file; this is used to
-support -Ur, which builds constructors while generating a relocatable
-object file.
-
-
-File: bfd.info,  Node: Relocating the section contents,  Next: Writing the symbol table,  Prev: Information provided by the linker,  Up: Performing the Final Link
-
-2.18.3.2 Relocating the section contents
-........................................
-
-The `_bfd_final_link' function should look through the `link_order'
-structures attached to each section of the output file.  Each
-`link_order' structure should either be handled specially, or it should
-be passed to the function `_bfd_default_link_order' which will do the
-right thing (`_bfd_default_link_order' is defined in `linker.c').
-
-   For efficiency, a `link_order' of type `bfd_indirect_link_order'
-whose associated section belongs to a BFD of the same format as the
-output BFD must be handled specially.  This type of `link_order'
-describes part of an output section in terms of a section belonging to
-one of the input files.  The `_bfd_final_link' function should read the
-contents of the section and any associated relocs, apply the relocs to
-the section contents, and write out the modified section contents.  If
-performing a relocatable link, the relocs themselves must also be
-modified and written out.
-
-   The functions `_bfd_relocate_contents' and
-`_bfd_final_link_relocate' provide some general support for performing
-the actual relocations, notably overflow checking.  Their arguments
-include information about the symbol the relocation is against and a
-`reloc_howto_type' argument which describes the relocation to perform.
-These functions are defined in `reloc.c'.
-
-   The a.out function which handles reading, relocating, and writing
-section contents is `aout_link_input_section'.  The actual relocation
-is done in `aout_link_input_section_std' and
-`aout_link_input_section_ext'.
-
-
-File: bfd.info,  Node: Writing the symbol table,  Prev: Relocating the section contents,  Up: Performing the Final Link
-
-2.18.3.3 Writing the symbol table
-.................................
-
-The `_bfd_final_link' function must gather all the symbols in the input
-files and write them out.  It must also write out all the symbols in
-the global hash table.  This must be controlled by the `strip' and
-`discard' fields of the `bfd_link_info' structure.
-
-   The local symbols of the input files will not have been entered into
-the linker hash table.  The `_bfd_final_link' routine must consider
-each input file and include the symbols in the output file.  It may be
-convenient to do this when looking through the `link_order' structures,
-or it may be done by stepping through the `input_bfds' list.
-
-   The `_bfd_final_link' routine must also traverse the global hash
-table to gather all the externally visible symbols.  It is possible
-that most of the externally visible symbols may be written out when
-considering the symbols of each input file, but it is still necessary
-to traverse the hash table since the linker script may have defined
-some symbols that are not in any of the input files.
-
-   The `strip' field of the `bfd_link_info' structure controls which
-symbols are written out.  The possible values are listed in
-`bfdlink.h'.  If the value is `strip_some', then the `keep_hash' field
-of the `bfd_link_info' structure is a hash table of symbols to keep;
-each symbol should be looked up in this hash table, and only symbols
-which are present should be included in the output file.
-
-   If the `strip' field of the `bfd_link_info' structure permits local
-symbols to be written out, the `discard' field is used to further
-controls which local symbols are included in the output file.  If the
-value is `discard_l', then all local symbols which begin with a certain
-prefix are discarded; this is controlled by the
-`bfd_is_local_label_name' entry point.
-
-   The a.out backend handles symbols by calling
-`aout_link_write_symbols' on each input BFD and then traversing the
-global hash table with the function `aout_link_write_other_symbol'.  It
-builds a string table while writing out the symbols, which is written
-to the output file at the end of `NAME(aout,final_link)'.
-
-2.18.3.4 `bfd_link_split_section'
-.................................
-
-*Synopsis*
-     bfd_boolean bfd_link_split_section (bfd *abfd, asection *sec);
-   *Description*
-Return nonzero if SEC should be split during a reloceatable or final
-link.
-     #define bfd_link_split_section(abfd, sec) \
-            BFD_SEND (abfd, _bfd_link_split_section, (abfd, sec))
-
-2.18.3.5 `bfd_section_already_linked'
-.....................................
-
-*Synopsis*
-     void bfd_section_already_linked (bfd *abfd, asection *sec);
-   *Description*
-Check if SEC has been already linked during a reloceatable or final
-link.
-     #define bfd_section_already_linked(abfd, sec) \
-            BFD_SEND (abfd, _section_already_linked, (abfd, sec))
-
-
-File: bfd.info,  Node: Hash Tables,  Prev: Linker Functions,  Up: BFD front end
-
-2.19 Hash Tables
-================
-
-BFD provides a simple set of hash table functions.  Routines are
-provided to initialize a hash table, to free a hash table, to look up a
-string in a hash table and optionally create an entry for it, and to
-traverse a hash table.  There is currently no routine to delete an
-string from a hash table.
-
-   The basic hash table does not permit any data to be stored with a
-string.  However, a hash table is designed to present a base class from
-which other types of hash tables may be derived.  These derived types
-may store additional information with the string.  Hash tables were
-implemented in this way, rather than simply providing a data pointer in
-a hash table entry, because they were designed for use by the linker
-back ends.  The linker may create thousands of hash table entries, and
-the overhead of allocating private data and storing and following
-pointers becomes noticeable.
-
-   The basic hash table code is in `hash.c'.
-
-* Menu:
-
-* Creating and Freeing a Hash Table::
-* Looking Up or Entering a String::
-* Traversing a Hash Table::
-* Deriving a New Hash Table Type::
-
-
-File: bfd.info,  Node: Creating and Freeing a Hash Table,  Next: Looking Up or Entering a String,  Prev: Hash Tables,  Up: Hash Tables
-
-2.19.1 Creating and freeing a hash table
-----------------------------------------
-
-To create a hash table, create an instance of a `struct bfd_hash_table'
-(defined in `bfd.h') and call `bfd_hash_table_init' (if you know
-approximately how many entries you will need, the function
-`bfd_hash_table_init_n', which takes a SIZE argument, may be used).
-`bfd_hash_table_init' returns `FALSE' if some sort of error occurs.
-
-   The function `bfd_hash_table_init' take as an argument a function to
-use to create new entries.  For a basic hash table, use the function
-`bfd_hash_newfunc'.  *Note Deriving a New Hash Table Type::, for why
-you would want to use a different value for this argument.
-
-   `bfd_hash_table_init' will create an objalloc which will be used to
-allocate new entries.  You may allocate memory on this objalloc using
-`bfd_hash_allocate'.
-
-   Use `bfd_hash_table_free' to free up all the memory that has been
-allocated for a hash table.  This will not free up the `struct
-bfd_hash_table' itself, which you must provide.
-
-   Use `bfd_hash_set_default_size' to set the default size of hash
-table to use.
-
-
-File: bfd.info,  Node: Looking Up or Entering a String,  Next: Traversing a Hash Table,  Prev: Creating and Freeing a Hash Table,  Up: Hash Tables
-
-2.19.2 Looking up or entering a string
---------------------------------------
-
-The function `bfd_hash_lookup' is used both to look up a string in the
-hash table and to create a new entry.
-
-   If the CREATE argument is `FALSE', `bfd_hash_lookup' will look up a
-string.  If the string is found, it will returns a pointer to a `struct
-bfd_hash_entry'.  If the string is not found in the table
-`bfd_hash_lookup' will return `NULL'.  You should not modify any of the
-fields in the returns `struct bfd_hash_entry'.
-
-   If the CREATE argument is `TRUE', the string will be entered into
-the hash table if it is not already there.  Either way a pointer to a
-`struct bfd_hash_entry' will be returned, either to the existing
-structure or to a newly created one.  In this case, a `NULL' return
-means that an error occurred.
-
-   If the CREATE argument is `TRUE', and a new entry is created, the
-COPY argument is used to decide whether to copy the string onto the
-hash table objalloc or not.  If COPY is passed as `FALSE', you must be
-careful not to deallocate or modify the string as long as the hash table
-exists.
-
-
-File: bfd.info,  Node: Traversing a Hash Table,  Next: Deriving a New Hash Table Type,  Prev: Looking Up or Entering a String,  Up: Hash Tables
-
-2.19.3 Traversing a hash table
-------------------------------
-
-The function `bfd_hash_traverse' may be used to traverse a hash table,
-calling a function on each element.  The traversal is done in a random
-order.
-
-   `bfd_hash_traverse' takes as arguments a function and a generic
-`void *' pointer.  The function is called with a hash table entry (a
-`struct bfd_hash_entry *') and the generic pointer passed to
-`bfd_hash_traverse'.  The function must return a `boolean' value, which
-indicates whether to continue traversing the hash table.  If the
-function returns `FALSE', `bfd_hash_traverse' will stop the traversal
-and return immediately.
-
-
-File: bfd.info,  Node: Deriving a New Hash Table Type,  Prev: Traversing a Hash Table,  Up: Hash Tables
-
-2.19.4 Deriving a new hash table type
--------------------------------------
-
-Many uses of hash tables want to store additional information which
-each entry in the hash table.  Some also find it convenient to store
-additional information with the hash table itself.  This may be done
-using a derived hash table.
-
-   Since C is not an object oriented language, creating a derived hash
-table requires sticking together some boilerplate routines with a few
-differences specific to the type of hash table you want to create.
-
-   An example of a derived hash table is the linker hash table.  The
-structures for this are defined in `bfdlink.h'.  The functions are in
-`linker.c'.
-
-   You may also derive a hash table from an already derived hash table.
-For example, the a.out linker backend code uses a hash table derived
-from the linker hash table.
-
-* Menu:
-
-* Define the Derived Structures::
-* Write the Derived Creation Routine::
-* Write Other Derived Routines::
-
-
-File: bfd.info,  Node: Define the Derived Structures,  Next: Write the Derived Creation Routine,  Prev: Deriving a New Hash Table Type,  Up: Deriving a New Hash Table Type
-
-2.19.4.1 Define the derived structures
-......................................
-
-You must define a structure for an entry in the hash table, and a
-structure for the hash table itself.
-
-   The first field in the structure for an entry in the hash table must
-be of the type used for an entry in the hash table you are deriving
-from.  If you are deriving from a basic hash table this is `struct
-bfd_hash_entry', which is defined in `bfd.h'.  The first field in the
-structure for the hash table itself must be of the type of the hash
-table you are deriving from itself.  If you are deriving from a basic
-hash table, this is `struct bfd_hash_table'.
-
-   For example, the linker hash table defines `struct
-bfd_link_hash_entry' (in `bfdlink.h').  The first field, `root', is of
-type `struct bfd_hash_entry'.  Similarly, the first field in `struct
-bfd_link_hash_table', `table', is of type `struct bfd_hash_table'.
-
-
-File: bfd.info,  Node: Write the Derived Creation Routine,  Next: Write Other Derived Routines,  Prev: Define the Derived Structures,  Up: Deriving a New Hash Table Type
-
-2.19.4.2 Write the derived creation routine
-...........................................
-
-You must write a routine which will create and initialize an entry in
-the hash table.  This routine is passed as the function argument to
-`bfd_hash_table_init'.
-
-   In order to permit other hash tables to be derived from the hash
-table you are creating, this routine must be written in a standard way.
-
-   The first argument to the creation routine is a pointer to a hash
-table entry.  This may be `NULL', in which case the routine should
-allocate the right amount of space.  Otherwise the space has already
-been allocated by a hash table type derived from this one.
-
-   After allocating space, the creation routine must call the creation
-routine of the hash table type it is derived from, passing in a pointer
-to the space it just allocated.  This will initialize any fields used
-by the base hash table.
-
-   Finally the creation routine must initialize any local fields for
-the new hash table type.
-
-   Here is a boilerplate example of a creation routine.  FUNCTION_NAME
-is the name of the routine.  ENTRY_TYPE is the type of an entry in the
-hash table you are creating.  BASE_NEWFUNC is the name of the creation
-routine of the hash table type your hash table is derived from.
-
-     struct bfd_hash_entry *
-     FUNCTION_NAME (entry, table, string)
-          struct bfd_hash_entry *entry;
-          struct bfd_hash_table *table;
-          const char *string;
-     {
-       struct ENTRY_TYPE *ret = (ENTRY_TYPE *) entry;
-
-      /* Allocate the structure if it has not already been allocated by a
-         derived class.  */
-       if (ret == (ENTRY_TYPE *) NULL)
-         {
-           ret = ((ENTRY_TYPE *)
-                  bfd_hash_allocate (table, sizeof (ENTRY_TYPE)));
-           if (ret == (ENTRY_TYPE *) NULL)
-             return NULL;
-         }
-
-      /* Call the allocation method of the base class.  */
-       ret = ((ENTRY_TYPE *)
-             BASE_NEWFUNC ((struct bfd_hash_entry *) ret, table, string));
-
-      /* Initialize the local fields here.  */
-
-       return (struct bfd_hash_entry *) ret;
-     }
-   *Description*
-The creation routine for the linker hash table, which is in `linker.c',
-looks just like this example.  FUNCTION_NAME is
-`_bfd_link_hash_newfunc'.  ENTRY_TYPE is `struct bfd_link_hash_entry'.
-BASE_NEWFUNC is `bfd_hash_newfunc', the creation routine for a basic
-hash table.
-
-   `_bfd_link_hash_newfunc' also initializes the local fields in a
-linker hash table entry: `type', `written' and `next'.
-
-
-File: bfd.info,  Node: Write Other Derived Routines,  Prev: Write the Derived Creation Routine,  Up: Deriving a New Hash Table Type
-
-2.19.4.3 Write other derived routines
-.....................................
-
-You will want to write other routines for your new hash table, as well.
-
-   You will want an initialization routine which calls the
-initialization routine of the hash table you are deriving from and
-initializes any other local fields.  For the linker hash table, this is
-`_bfd_link_hash_table_init' in `linker.c'.
-
-   You will want a lookup routine which calls the lookup routine of the
-hash table you are deriving from and casts the result.  The linker hash
-table uses `bfd_link_hash_lookup' in `linker.c' (this actually takes an
-additional argument which it uses to decide how to return the looked up
-value).
-
-   You may want a traversal routine.  This should just call the
-traversal routine of the hash table you are deriving from with
-appropriate casts.  The linker hash table uses `bfd_link_hash_traverse'
-in `linker.c'.
-
-   These routines may simply be defined as macros.  For example, the
-a.out backend linker hash table, which is derived from the linker hash
-table, uses macros for the lookup and traversal routines.  These are
-`aout_link_hash_lookup' and `aout_link_hash_traverse' in aoutx.h.
-
-
-File: bfd.info,  Node: BFD back ends,  Next: GNU Free Documentation License,  Prev: BFD front end,  Up: Top
-
-3 BFD back ends
-***************
-
-* Menu:
-
-* What to Put Where::
-* aout ::	a.out backends
-* coff ::	coff backends
-* elf  ::	elf backends
-* mmo  ::	mmo backend
-
-
-File: bfd.info,  Node: What to Put Where,  Next: aout,  Prev: BFD back ends,  Up: BFD back ends
-
-   All of BFD lives in one directory.
-
-
-File: bfd.info,  Node: aout,  Next: coff,  Prev: What to Put Where,  Up: BFD back ends
-
-3.1 a.out backends
-==================
-
-*Description*
-BFD supports a number of different flavours of a.out format, though the
-major differences are only the sizes of the structures on disk, and the
-shape of the relocation information.
-
-   The support is split into a basic support file `aoutx.h' and other
-files which derive functions from the base. One derivation file is
-`aoutf1.h' (for a.out flavour 1), and adds to the basic a.out functions
-support for sun3, sun4, 386 and 29k a.out files, to create a target
-jump vector for a specific target.
-
-   This information is further split out into more specific files for
-each machine, including `sunos.c' for sun3 and sun4, `newsos3.c' for
-the Sony NEWS, and `demo64.c' for a demonstration of a 64 bit a.out
-format.
-
-   The base file `aoutx.h' defines general mechanisms for reading and
-writing records to and from disk and various other methods which BFD
-requires. It is included by `aout32.c' and `aout64.c' to form the names
-`aout_32_swap_exec_header_in', `aout_64_swap_exec_header_in', etc.
-
-   As an example, this is what goes on to make the back end for a sun4,
-from `aout32.c':
-
-            #define ARCH_SIZE 32
-            #include "aoutx.h"
-
-   Which exports names:
-
-            ...
-            aout_32_canonicalize_reloc
-            aout_32_find_nearest_line
-            aout_32_get_lineno
-            aout_32_get_reloc_upper_bound
-            ...
-
-   from `sunos.c':
-
-            #define TARGET_NAME "a.out-sunos-big"
-            #define VECNAME    sunos_big_vec
-            #include "aoutf1.h"
-
-   requires all the names from `aout32.c', and produces the jump vector
-
-            sunos_big_vec
-
-   The file `host-aout.c' is a special case.  It is for a large set of
-hosts that use "more or less standard" a.out files, and for which
-cross-debugging is not interesting.  It uses the standard 32-bit a.out
-support routines, but determines the file offsets and addresses of the
-text, data, and BSS sections, the machine architecture and machine
-type, and the entry point address, in a host-dependent manner.  Once
-these values have been determined, generic code is used to handle the
-object file.
-
-   When porting it to run on a new system, you must supply:
-
-             HOST_PAGE_SIZE
-             HOST_SEGMENT_SIZE
-             HOST_MACHINE_ARCH       (optional)
-             HOST_MACHINE_MACHINE    (optional)
-             HOST_TEXT_START_ADDR
-             HOST_STACK_END_ADDR
-
-   in the file `../include/sys/h-XXX.h' (for your host).  These values,
-plus the structures and macros defined in `a.out.h' on your host
-system, will produce a BFD target that will access ordinary a.out files
-on your host. To configure a new machine to use `host-aout.c', specify:
-
-            TDEFAULTS = -DDEFAULT_VECTOR=host_aout_big_vec
-            TDEPFILES= host-aout.o trad-core.o
-
-   in the `config/XXX.mt' file, and modify `configure.in' to use the
-`XXX.mt' file (by setting "`bfd_target=XXX'") when your configuration
-is selected.
-
-3.1.1 Relocations
------------------
-
-*Description*
-The file `aoutx.h' provides for both the _standard_ and _extended_
-forms of a.out relocation records.
-
-   The standard records contain only an address, a symbol index, and a
-type field. The extended records (used on 29ks and sparcs) also have a
-full integer for an addend.
-
-3.1.2 Internal entry points
----------------------------
-
-*Description*
-`aoutx.h' exports several routines for accessing the contents of an
-a.out file, which are gathered and exported in turn by various format
-specific files (eg sunos.c).
-
-3.1.2.1 `aout_SIZE_swap_exec_header_in'
-.......................................
-
-*Synopsis*
-     void aout_SIZE_swap_exec_header_in,
-        (bfd *abfd,
-         struct external_exec *raw_bytes,
-         struct internal_exec *execp);
-   *Description*
-Swap the information in an executable header RAW_BYTES taken from a raw
-byte stream memory image into the internal exec header structure EXECP.
-
-3.1.2.2 `aout_SIZE_swap_exec_header_out'
-........................................
-
-*Synopsis*
-     void aout_SIZE_swap_exec_header_out
-        (bfd *abfd,
-         struct internal_exec *execp,
-         struct external_exec *raw_bytes);
-   *Description*
-Swap the information in an internal exec header structure EXECP into
-the buffer RAW_BYTES ready for writing to disk.
-
-3.1.2.3 `aout_SIZE_some_aout_object_p'
-......................................
-
-*Synopsis*
-     const bfd_target *aout_SIZE_some_aout_object_p
-        (bfd *abfd,
-         const bfd_target *(*callback_to_real_object_p) ());
-   *Description*
-Some a.out variant thinks that the file open in ABFD checking is an
-a.out file.  Do some more checking, and set up for access if it really
-is.  Call back to the calling environment's "finish up" function just
-before returning, to handle any last-minute setup.
-
-3.1.2.4 `aout_SIZE_mkobject'
-............................
-
-*Synopsis*
-     bfd_boolean aout_SIZE_mkobject, (bfd *abfd);
-   *Description*
-Initialize BFD ABFD for use with a.out files.
-
-3.1.2.5 `aout_SIZE_machine_type'
-................................
-
-*Synopsis*
-     enum machine_type  aout_SIZE_machine_type
-        (enum bfd_architecture arch,
-         unsigned long machine));
-   *Description*
-Keep track of machine architecture and machine type for a.out's. Return
-the `machine_type' for a particular architecture and machine, or
-`M_UNKNOWN' if that exact architecture and machine can't be represented
-in a.out format.
-
-   If the architecture is understood, machine type 0 (default) is
-always understood.
-
-3.1.2.6 `aout_SIZE_set_arch_mach'
-.................................
-
-*Synopsis*
-     bfd_boolean aout_SIZE_set_arch_mach,
-        (bfd *,
-         enum bfd_architecture arch,
-         unsigned long machine));
-   *Description*
-Set the architecture and the machine of the BFD ABFD to the values ARCH
-and MACHINE.  Verify that ABFD's format can support the architecture
-required.
-
-3.1.2.7 `aout_SIZE_new_section_hook'
-....................................
-
-*Synopsis*
-     bfd_boolean aout_SIZE_new_section_hook,
-        (bfd *abfd,
-         asection *newsect));
-   *Description*
-Called by the BFD in response to a `bfd_make_section' request.
-
-
-File: bfd.info,  Node: coff,  Next: elf,  Prev: aout,  Up: BFD back ends
-
-3.2 coff backends
-=================
-
-BFD supports a number of different flavours of coff format.  The major
-differences between formats are the sizes and alignments of fields in
-structures on disk, and the occasional extra field.
-
-   Coff in all its varieties is implemented with a few common files and
-a number of implementation specific files. For example, The 88k bcs
-coff format is implemented in the file `coff-m88k.c'. This file
-`#include's `coff/m88k.h' which defines the external structure of the
-coff format for the 88k, and `coff/internal.h' which defines the
-internal structure. `coff-m88k.c' also defines the relocations used by
-the 88k format *Note Relocations::.
-
-   The Intel i960 processor version of coff is implemented in
-`coff-i960.c'. This file has the same structure as `coff-m88k.c',
-except that it includes `coff/i960.h' rather than `coff-m88k.h'.
-
-3.2.1 Porting to a new version of coff
---------------------------------------
-
-The recommended method is to select from the existing implementations
-the version of coff which is most like the one you want to use.  For
-example, we'll say that i386 coff is the one you select, and that your
-coff flavour is called foo.  Copy `i386coff.c' to `foocoff.c', copy
-`../include/coff/i386.h' to `../include/coff/foo.h', and add the lines
-to `targets.c' and `Makefile.in' so that your new back end is used.
-Alter the shapes of the structures in `../include/coff/foo.h' so that
-they match what you need. You will probably also have to add `#ifdef's
-to the code in `coff/internal.h' and `coffcode.h' if your version of
-coff is too wild.
-
-   You can verify that your new BFD backend works quite simply by
-building `objdump' from the `binutils' directory, and making sure that
-its version of what's going on and your host system's idea (assuming it
-has the pretty standard coff dump utility, usually called `att-dump' or
-just `dump') are the same.  Then clean up your code, and send what
-you've done to Cygnus. Then your stuff will be in the next release, and
-you won't have to keep integrating it.
-
-3.2.2 How the coff backend works
---------------------------------
-
-3.2.2.1 File layout
-...................
-
-The Coff backend is split into generic routines that are applicable to
-any Coff target and routines that are specific to a particular target.
-The target-specific routines are further split into ones which are
-basically the same for all Coff targets except that they use the
-external symbol format or use different values for certain constants.
-
-   The generic routines are in `coffgen.c'.  These routines work for
-any Coff target.  They use some hooks into the target specific code;
-the hooks are in a `bfd_coff_backend_data' structure, one of which
-exists for each target.
-
-   The essentially similar target-specific routines are in
-`coffcode.h'.  This header file includes executable C code.  The
-various Coff targets first include the appropriate Coff header file,
-make any special defines that are needed, and then include `coffcode.h'.
-
-   Some of the Coff targets then also have additional routines in the
-target source file itself.
-
-   For example, `coff-i960.c' includes `coff/internal.h' and
-`coff/i960.h'.  It then defines a few constants, such as `I960', and
-includes `coffcode.h'.  Since the i960 has complex relocation types,
-`coff-i960.c' also includes some code to manipulate the i960 relocs.
-This code is not in `coffcode.h' because it would not be used by any
-other target.
-
-3.2.2.2 Bit twiddling
-.....................
-
-Each flavour of coff supported in BFD has its own header file
-describing the external layout of the structures. There is also an
-internal description of the coff layout, in `coff/internal.h'. A major
-function of the coff backend is swapping the bytes and twiddling the
-bits to translate the external form of the structures into the normal
-internal form. This is all performed in the `bfd_swap'_thing_direction
-routines. Some elements are different sizes between different versions
-of coff; it is the duty of the coff version specific include file to
-override the definitions of various packing routines in `coffcode.h'.
-E.g., the size of line number entry in coff is sometimes 16 bits, and
-sometimes 32 bits. `#define'ing `PUT_LNSZ_LNNO' and `GET_LNSZ_LNNO'
-will select the correct one. No doubt, some day someone will find a
-version of coff which has a varying field size not catered to at the
-moment. To port BFD, that person will have to add more `#defines'.
-Three of the bit twiddling routines are exported to `gdb';
-`coff_swap_aux_in', `coff_swap_sym_in' and `coff_swap_lineno_in'. `GDB'
-reads the symbol table on its own, but uses BFD to fix things up.  More
-of the bit twiddlers are exported for `gas'; `coff_swap_aux_out',
-`coff_swap_sym_out', `coff_swap_lineno_out', `coff_swap_reloc_out',
-`coff_swap_filehdr_out', `coff_swap_aouthdr_out',
-`coff_swap_scnhdr_out'. `Gas' currently keeps track of all the symbol
-table and reloc drudgery itself, thereby saving the internal BFD
-overhead, but uses BFD to swap things on the way out, making cross
-ports much safer.  Doing so also allows BFD (and thus the linker) to
-use the same header files as `gas', which makes one avenue to disaster
-disappear.
-
-3.2.2.3 Symbol reading
-......................
-
-The simple canonical form for symbols used by BFD is not rich enough to
-keep all the information available in a coff symbol table. The back end
-gets around this problem by keeping the original symbol table around,
-"behind the scenes".
-
-   When a symbol table is requested (through a call to
-`bfd_canonicalize_symtab'), a request gets through to
-`coff_get_normalized_symtab'. This reads the symbol table from the coff
-file and swaps all the structures inside into the internal form. It
-also fixes up all the pointers in the table (represented in the file by
-offsets from the first symbol in the table) into physical pointers to
-elements in the new internal table. This involves some work since the
-meanings of fields change depending upon context: a field that is a
-pointer to another structure in the symbol table at one moment may be
-the size in bytes of a structure at the next.  Another pass is made
-over the table. All symbols which mark file names (`C_FILE' symbols)
-are modified so that the internal string points to the value in the
-auxent (the real filename) rather than the normal text associated with
-the symbol (`".file"').
-
-   At this time the symbol names are moved around. Coff stores all
-symbols less than nine characters long physically within the symbol
-table; longer strings are kept at the end of the file in the string
-table. This pass moves all strings into memory and replaces them with
-pointers to the strings.
-
-   The symbol table is massaged once again, this time to create the
-canonical table used by the BFD application. Each symbol is inspected
-in turn, and a decision made (using the `sclass' field) about the
-various flags to set in the `asymbol'.  *Note Symbols::. The generated
-canonical table shares strings with the hidden internal symbol table.
-
-   Any linenumbers are read from the coff file too, and attached to the
-symbols which own the functions the linenumbers belong to.
-
-3.2.2.4 Symbol writing
-......................
-
-Writing a symbol to a coff file which didn't come from a coff file will
-lose any debugging information. The `asymbol' structure remembers the
-BFD from which the symbol was taken, and on output the back end makes
-sure that the same destination target as source target is present.
-
-   When the symbols have come from a coff file then all the debugging
-information is preserved.
-
-   Symbol tables are provided for writing to the back end in a vector
-of pointers to pointers. This allows applications like the linker to
-accumulate and output large symbol tables without having to do too much
-byte copying.
-
-   This function runs through the provided symbol table and patches
-each symbol marked as a file place holder (`C_FILE') to point to the
-next file place holder in the list. It also marks each `offset' field
-in the list with the offset from the first symbol of the current symbol.
-
-   Another function of this procedure is to turn the canonical value
-form of BFD into the form used by coff. Internally, BFD expects symbol
-values to be offsets from a section base; so a symbol physically at
-0x120, but in a section starting at 0x100, would have the value 0x20.
-Coff expects symbols to contain their final value, so symbols have
-their values changed at this point to reflect their sum with their
-owning section.  This transformation uses the `output_section' field of
-the `asymbol''s `asection' *Note Sections::.
-
-   * `coff_mangle_symbols'
-   This routine runs though the provided symbol table and uses the
-offsets generated by the previous pass and the pointers generated when
-the symbol table was read in to create the structured hierarchy
-required by coff. It changes each pointer to a symbol into the index
-into the symbol table of the asymbol.
-
-   * `coff_write_symbols'
-   This routine runs through the symbol table and patches up the
-symbols from their internal form into the coff way, calls the bit
-twiddlers, and writes out the table to the file.
-
-3.2.2.5 `coff_symbol_type'
-..........................
-
-*Description*
-The hidden information for an `asymbol' is described in a
-`combined_entry_type':
-
-
-     typedef struct coff_ptr_struct
-     {
-       /* Remembers the offset from the first symbol in the file for
-          this symbol. Generated by coff_renumber_symbols. */
-       unsigned int offset;
-
-       /* Should the value of this symbol be renumbered.  Used for
-          XCOFF C_BSTAT symbols.  Set by coff_slurp_symbol_table.  */
-       unsigned int fix_value : 1;
-
-       /* Should the tag field of this symbol be renumbered.
-          Created by coff_pointerize_aux. */
-       unsigned int fix_tag : 1;
-
-       /* Should the endidx field of this symbol be renumbered.
-          Created by coff_pointerize_aux. */
-       unsigned int fix_end : 1;
-
-       /* Should the x_csect.x_scnlen field be renumbered.
-          Created by coff_pointerize_aux. */
-       unsigned int fix_scnlen : 1;
-
-       /* Fix up an XCOFF C_BINCL/C_EINCL symbol.  The value is the
-          index into the line number entries.  Set by coff_slurp_symbol_table.  */
-       unsigned int fix_line : 1;
-
-       /* The container for the symbol structure as read and translated
-          from the file. */
-       union
-       {
-         union internal_auxent auxent;
-         struct internal_syment syment;
-       } u;
-     } combined_entry_type;
-
-
-     /* Each canonical asymbol really looks like this: */
-
-     typedef struct coff_symbol_struct
-     {
-       /* The actual symbol which the rest of BFD works with */
-       asymbol symbol;
-
-       /* A pointer to the hidden information for this symbol */
-       combined_entry_type *native;
-
-       /* A pointer to the linenumber information for this symbol */
-       struct lineno_cache_entry *lineno;
-
-       /* Have the line numbers been relocated yet ? */
-       bfd_boolean done_lineno;
-     } coff_symbol_type;
-   
-3.2.2.6 `bfd_coff_backend_data'
-...............................
-
-     /* COFF symbol classifications.  */
-
-     enum coff_symbol_classification
-     {
-       /* Global symbol.  */
-       COFF_SYMBOL_GLOBAL,
-       /* Common symbol.  */
-       COFF_SYMBOL_COMMON,
-       /* Undefined symbol.  */
-       COFF_SYMBOL_UNDEFINED,
-       /* Local symbol.  */
-       COFF_SYMBOL_LOCAL,
-       /* PE section symbol.  */
-       COFF_SYMBOL_PE_SECTION
-     };
-Special entry points for gdb to swap in coff symbol table parts:
-     typedef struct
-     {
-       void (*_bfd_coff_swap_aux_in)
-         PARAMS ((bfd *, PTR, int, int, int, int, PTR));
-
-       void (*_bfd_coff_swap_sym_in)
-         PARAMS ((bfd *, PTR, PTR));
-
-       void (*_bfd_coff_swap_lineno_in)
-         PARAMS ((bfd *, PTR, PTR));
-
-       unsigned int (*_bfd_coff_swap_aux_out)
-         PARAMS ((bfd *, PTR, int, int, int, int, PTR));
-
-       unsigned int (*_bfd_coff_swap_sym_out)
-         PARAMS ((bfd *, PTR, PTR));
-
-       unsigned int (*_bfd_coff_swap_lineno_out)
-         PARAMS ((bfd *, PTR, PTR));
-
-       unsigned int (*_bfd_coff_swap_reloc_out)
-         PARAMS ((bfd *, PTR, PTR));
-
-       unsigned int (*_bfd_coff_swap_filehdr_out)
-         PARAMS ((bfd *, PTR, PTR));
-
-       unsigned int (*_bfd_coff_swap_aouthdr_out)
-         PARAMS ((bfd *, PTR, PTR));
-
-       unsigned int (*_bfd_coff_swap_scnhdr_out)
-         PARAMS ((bfd *, PTR, PTR));
-
-       unsigned int _bfd_filhsz;
-       unsigned int _bfd_aoutsz;
-       unsigned int _bfd_scnhsz;
-       unsigned int _bfd_symesz;
-       unsigned int _bfd_auxesz;
-       unsigned int _bfd_relsz;
-       unsigned int _bfd_linesz;
-       unsigned int _bfd_filnmlen;
-       bfd_boolean _bfd_coff_long_filenames;
-       bfd_boolean _bfd_coff_long_section_names;
-       unsigned int _bfd_coff_default_section_alignment_power;
-       bfd_boolean _bfd_coff_force_symnames_in_strings;
-       unsigned int _bfd_coff_debug_string_prefix_length;
-
-       void (*_bfd_coff_swap_filehdr_in)
-         PARAMS ((bfd *, PTR, PTR));
-
-       void (*_bfd_coff_swap_aouthdr_in)
-         PARAMS ((bfd *, PTR, PTR));
-
-       void (*_bfd_coff_swap_scnhdr_in)
-         PARAMS ((bfd *, PTR, PTR));
-
-       void (*_bfd_coff_swap_reloc_in)
-         PARAMS ((bfd *abfd, PTR, PTR));
-
-       bfd_boolean (*_bfd_coff_bad_format_hook)
-         PARAMS ((bfd *, PTR));
-
-       bfd_boolean (*_bfd_coff_set_arch_mach_hook)
-         PARAMS ((bfd *, PTR));
-
-       PTR (*_bfd_coff_mkobject_hook)
-         PARAMS ((bfd *, PTR, PTR));
-
-       bfd_boolean (*_bfd_styp_to_sec_flags_hook)
-         PARAMS ((bfd *, PTR, const char *, asection *, flagword *));
-
-       void (*_bfd_set_alignment_hook)
-         PARAMS ((bfd *, asection *, PTR));
-
-       bfd_boolean (*_bfd_coff_slurp_symbol_table)
-         PARAMS ((bfd *));
-
-       bfd_boolean (*_bfd_coff_symname_in_debug)
-         PARAMS ((bfd *, struct internal_syment *));
-
-       bfd_boolean (*_bfd_coff_pointerize_aux_hook)
-         PARAMS ((bfd *, combined_entry_type *, combined_entry_type *,
-                 unsigned int, combined_entry_type *));
-
-       bfd_boolean (*_bfd_coff_print_aux)
-         PARAMS ((bfd *, FILE *, combined_entry_type *, combined_entry_type *,
-                 combined_entry_type *, unsigned int));
-
-       void (*_bfd_coff_reloc16_extra_cases)
-         PARAMS ((bfd *, struct bfd_link_info *, struct bfd_link_order *, arelent *,
-                bfd_byte *, unsigned int *, unsigned int *));
-
-       int (*_bfd_coff_reloc16_estimate)
-         PARAMS ((bfd *, asection *, arelent *, unsigned int,
-                 struct bfd_link_info *));
-
-       enum coff_symbol_classification (*_bfd_coff_classify_symbol)
-         PARAMS ((bfd *, struct internal_syment *));
-
-       bfd_boolean (*_bfd_coff_compute_section_file_positions)
-         PARAMS ((bfd *));
-
-       bfd_boolean (*_bfd_coff_start_final_link)
-         PARAMS ((bfd *, struct bfd_link_info *));
-
-       bfd_boolean (*_bfd_coff_relocate_section)
-         PARAMS ((bfd *, struct bfd_link_info *, bfd *, asection *, bfd_byte *,
-                 struct internal_reloc *, struct internal_syment *, asection **));
-
-       reloc_howto_type *(*_bfd_coff_rtype_to_howto)
-         PARAMS ((bfd *, asection *, struct internal_reloc *,
-                 struct coff_link_hash_entry *, struct internal_syment *,
-                 bfd_vma *));
-
-       bfd_boolean (*_bfd_coff_adjust_symndx)
-         PARAMS ((bfd *, struct bfd_link_info *, bfd *, asection *,
-                 struct internal_reloc *, bfd_boolean *));
-
-       bfd_boolean (*_bfd_coff_link_add_one_symbol)
-         PARAMS ((struct bfd_link_info *, bfd *, const char *, flagword,
-                 asection *, bfd_vma, const char *, bfd_boolean, bfd_boolean,
-                 struct bfd_link_hash_entry **));
-
-       bfd_boolean (*_bfd_coff_link_output_has_begun)
-         PARAMS ((bfd *, struct coff_final_link_info *));
-
-       bfd_boolean (*_bfd_coff_final_link_postscript)
-         PARAMS ((bfd *, struct coff_final_link_info *));
-
-     } bfd_coff_backend_data;
-
-     #define coff_backend_info(abfd) \
-       ((bfd_coff_backend_data *) (abfd)->xvec->backend_data)
-
-     #define bfd_coff_swap_aux_in(a,e,t,c,ind,num,i) \
-       ((coff_backend_info (a)->_bfd_coff_swap_aux_in) (a,e,t,c,ind,num,i))
-
-     #define bfd_coff_swap_sym_in(a,e,i) \
-       ((coff_backend_info (a)->_bfd_coff_swap_sym_in) (a,e,i))
-
-     #define bfd_coff_swap_lineno_in(a,e,i) \
-       ((coff_backend_info ( a)->_bfd_coff_swap_lineno_in) (a,e,i))
-
-     #define bfd_coff_swap_reloc_out(abfd, i, o) \
-       ((coff_backend_info (abfd)->_bfd_coff_swap_reloc_out) (abfd, i, o))
-
-     #define bfd_coff_swap_lineno_out(abfd, i, o) \
-       ((coff_backend_info (abfd)->_bfd_coff_swap_lineno_out) (abfd, i, o))
-
-     #define bfd_coff_swap_aux_out(a,i,t,c,ind,num,o) \
-       ((coff_backend_info (a)->_bfd_coff_swap_aux_out) (a,i,t,c,ind,num,o))
-
-     #define bfd_coff_swap_sym_out(abfd, i,o) \
-       ((coff_backend_info (abfd)->_bfd_coff_swap_sym_out) (abfd, i, o))
-
-     #define bfd_coff_swap_scnhdr_out(abfd, i,o) \
-       ((coff_backend_info (abfd)->_bfd_coff_swap_scnhdr_out) (abfd, i, o))
-
-     #define bfd_coff_swap_filehdr_out(abfd, i,o) \
-       ((coff_backend_info (abfd)->_bfd_coff_swap_filehdr_out) (abfd, i, o))
-
-     #define bfd_coff_swap_aouthdr_out(abfd, i,o) \
-       ((coff_backend_info (abfd)->_bfd_coff_swap_aouthdr_out) (abfd, i, o))
-
-     #define bfd_coff_filhsz(abfd) (coff_backend_info (abfd)->_bfd_filhsz)
-     #define bfd_coff_aoutsz(abfd) (coff_backend_info (abfd)->_bfd_aoutsz)
-     #define bfd_coff_scnhsz(abfd) (coff_backend_info (abfd)->_bfd_scnhsz)
-     #define bfd_coff_symesz(abfd) (coff_backend_info (abfd)->_bfd_symesz)
-     #define bfd_coff_auxesz(abfd) (coff_backend_info (abfd)->_bfd_auxesz)
-     #define bfd_coff_relsz(abfd)  (coff_backend_info (abfd)->_bfd_relsz)
-     #define bfd_coff_linesz(abfd) (coff_backend_info (abfd)->_bfd_linesz)
-     #define bfd_coff_filnmlen(abfd) (coff_backend_info (abfd)->_bfd_filnmlen)
-     #define bfd_coff_long_filenames(abfd) \
-       (coff_backend_info (abfd)->_bfd_coff_long_filenames)
-     #define bfd_coff_long_section_names(abfd) \
-       (coff_backend_info (abfd)->_bfd_coff_long_section_names)
-     #define bfd_coff_default_section_alignment_power(abfd) \
-       (coff_backend_info (abfd)->_bfd_coff_default_section_alignment_power)
-     #define bfd_coff_swap_filehdr_in(abfd, i,o) \
-       ((coff_backend_info (abfd)->_bfd_coff_swap_filehdr_in) (abfd, i, o))
-
-     #define bfd_coff_swap_aouthdr_in(abfd, i,o) \
-       ((coff_backend_info (abfd)->_bfd_coff_swap_aouthdr_in) (abfd, i, o))
-
-     #define bfd_coff_swap_scnhdr_in(abfd, i,o) \
-       ((coff_backend_info (abfd)->_bfd_coff_swap_scnhdr_in) (abfd, i, o))
-
-     #define bfd_coff_swap_reloc_in(abfd, i, o) \
-       ((coff_backend_info (abfd)->_bfd_coff_swap_reloc_in) (abfd, i, o))
-
-     #define bfd_coff_bad_format_hook(abfd, filehdr) \
-       ((coff_backend_info (abfd)->_bfd_coff_bad_format_hook) (abfd, filehdr))
-
-     #define bfd_coff_set_arch_mach_hook(abfd, filehdr)\
-       ((coff_backend_info (abfd)->_bfd_coff_set_arch_mach_hook) (abfd, filehdr))
-     #define bfd_coff_mkobject_hook(abfd, filehdr, aouthdr)\
-       ((coff_backend_info (abfd)->_bfd_coff_mkobject_hook)\
-        (abfd, filehdr, aouthdr))
-
-     #define bfd_coff_styp_to_sec_flags_hook(abfd, scnhdr, name, section, flags_ptr)\
-       ((coff_backend_info (abfd)->_bfd_styp_to_sec_flags_hook)\
-        (abfd, scnhdr, name, section, flags_ptr))
-
-     #define bfd_coff_set_alignment_hook(abfd, sec, scnhdr)\
-       ((coff_backend_info (abfd)->_bfd_set_alignment_hook) (abfd, sec, scnhdr))
-
-     #define bfd_coff_slurp_symbol_table(abfd)\
-       ((coff_backend_info (abfd)->_bfd_coff_slurp_symbol_table) (abfd))
-
-     #define bfd_coff_symname_in_debug(abfd, sym)\
-       ((coff_backend_info (abfd)->_bfd_coff_symname_in_debug) (abfd, sym))
-
-     #define bfd_coff_force_symnames_in_strings(abfd)\
-       (coff_backend_info (abfd)->_bfd_coff_force_symnames_in_strings)
-
-     #define bfd_coff_debug_string_prefix_length(abfd)\
-       (coff_backend_info (abfd)->_bfd_coff_debug_string_prefix_length)
-
-     #define bfd_coff_print_aux(abfd, file, base, symbol, aux, indaux)\
-       ((coff_backend_info (abfd)->_bfd_coff_print_aux)\
-        (abfd, file, base, symbol, aux, indaux))
-
-     #define bfd_coff_reloc16_extra_cases(abfd, link_info, link_order,\
-                                          reloc, data, src_ptr, dst_ptr)\
-       ((coff_backend_info (abfd)->_bfd_coff_reloc16_extra_cases)\
-        (abfd, link_info, link_order, reloc, data, src_ptr, dst_ptr))
-
-     #define bfd_coff_reloc16_estimate(abfd, section, reloc, shrink, link_info)\
-       ((coff_backend_info (abfd)->_bfd_coff_reloc16_estimate)\
-        (abfd, section, reloc, shrink, link_info))
-
-     #define bfd_coff_classify_symbol(abfd, sym)\
-       ((coff_backend_info (abfd)->_bfd_coff_classify_symbol)\
-        (abfd, sym))
-
-     #define bfd_coff_compute_section_file_positions(abfd)\
-       ((coff_backend_info (abfd)->_bfd_coff_compute_section_file_positions)\
-        (abfd))
-
-     #define bfd_coff_start_final_link(obfd, info)\
-       ((coff_backend_info (obfd)->_bfd_coff_start_final_link)\
-        (obfd, info))
-     #define bfd_coff_relocate_section(obfd,info,ibfd,o,con,rel,isyms,secs)\
-       ((coff_backend_info (ibfd)->_bfd_coff_relocate_section)\
-        (obfd, info, ibfd, o, con, rel, isyms, secs))
-     #define bfd_coff_rtype_to_howto(abfd, sec, rel, h, sym, addendp)\
-       ((coff_backend_info (abfd)->_bfd_coff_rtype_to_howto)\
-        (abfd, sec, rel, h, sym, addendp))
-     #define bfd_coff_adjust_symndx(obfd, info, ibfd, sec, rel, adjustedp)\
-       ((coff_backend_info (abfd)->_bfd_coff_adjust_symndx)\
-        (obfd, info, ibfd, sec, rel, adjustedp))
-     #define bfd_coff_link_add_one_symbol(info, abfd, name, flags, section,\
-                                          value, string, cp, coll, hashp)\
-       ((coff_backend_info (abfd)->_bfd_coff_link_add_one_symbol)\
-        (info, abfd, name, flags, section, value, string, cp, coll, hashp))
-
-     #define bfd_coff_link_output_has_begun(a,p) \
-       ((coff_backend_info (a)->_bfd_coff_link_output_has_begun) (a,p))
-     #define bfd_coff_final_link_postscript(a,p) \
-       ((coff_backend_info (a)->_bfd_coff_final_link_postscript) (a,p))
-
-3.2.2.7 Writing relocations
-...........................
-
-To write relocations, the back end steps though the canonical
-relocation table and create an `internal_reloc'. The symbol index to
-use is removed from the `offset' field in the symbol table supplied.
-The address comes directly from the sum of the section base address and
-the relocation offset; the type is dug directly from the howto field.
-Then the `internal_reloc' is swapped into the shape of an
-`external_reloc' and written out to disk.
-
-3.2.2.8 Reading linenumbers
-...........................
-
-Creating the linenumber table is done by reading in the entire coff
-linenumber table, and creating another table for internal use.
-
-   A coff linenumber table is structured so that each function is
-marked as having a line number of 0. Each line within the function is
-an offset from the first line in the function. The base of the line
-number information for the table is stored in the symbol associated
-with the function.
-
-   Note: The PE format uses line number 0 for a flag indicating a new
-source file.
-
-   The information is copied from the external to the internal table,
-and each symbol which marks a function is marked by pointing its...
-
-   How does this work ?
-
-3.2.2.9 Reading relocations
-...........................
-
-Coff relocations are easily transformed into the internal BFD form
-(`arelent').
-
-   Reading a coff relocation table is done in the following stages:
-
-   * Read the entire coff relocation table into memory.
-
-   * Process each relocation in turn; first swap it from the external
-     to the internal form.
-
-   * Turn the symbol referenced in the relocation's symbol index into a
-     pointer into the canonical symbol table.  This table is the same
-     as the one returned by a call to `bfd_canonicalize_symtab'. The
-     back end will call that routine and save the result if a
-     canonicalization hasn't been done.
-
-   * The reloc index is turned into a pointer to a howto structure, in
-     a back end specific way. For instance, the 386 and 960 use the
-     `r_type' to directly produce an index into a howto table vector;
-     the 88k subtracts a number from the `r_type' field and creates an
-     addend field.
-
-
-File: bfd.info,  Node: elf,  Next: mmo,  Prev: coff,  Up: BFD back ends
-
-3.3
-===
-
-ELF backends
-
-   BFD support for ELF formats is being worked on.  Currently, the best
-supported back ends are for sparc and i386 (running svr4 or Solaris 2).
-
-   Documentation of the internals of the support code still needs to be
-written.  The code is changing quickly enough that we haven't bothered
-yet.
-
-3.3.0.1 `bfd_elf_find_section'
-..............................
-
-*Synopsis*
-     struct elf_internal_shdr *bfd_elf_find_section (bfd *abfd, char *name);
-   *Description*
-Helper functions for GDB to locate the string tables.  Since BFD hides
-string tables from callers, GDB needs to use an internal hook to find
-them.  Sun's .stabstr, in particular, isn't even pointed to by the
-.stab section, so ordinary mechanisms wouldn't work to find it, even if
-we had some.
-
-
-File: bfd.info,  Node: mmo,  Prev: elf,  Up: BFD back ends
-
-3.4 mmo backend
-===============
-
-The mmo object format is used exclusively together with Professor
-Donald E. Knuth's educational 64-bit processor MMIX.  The simulator
-`mmix' which is available at
-`http://www-cs-faculty.stanford.edu/~knuth/programs/mmix.tar.gz'
-understands this format.  That package also includes a combined
-assembler and linker called `mmixal'.  The mmo format has no advantages
-feature-wise compared to e.g. ELF.  It is a simple non-relocatable
-object format with no support for archives or debugging information,
-except for symbol value information and line numbers (which is not yet
-implemented in BFD).  See
-`http://www-cs-faculty.stanford.edu/~knuth/mmix.html' for more
-information about MMIX.  The ELF format is used for intermediate object
-files in the BFD implementation.
-
-* Menu:
-
-* File layout::
-* Symbol-table::
-* mmo section mapping::
-
-
-File: bfd.info,  Node: File layout,  Next: Symbol-table,  Prev: mmo,  Up: mmo
-
-3.4.1 File layout
------------------
-
-The mmo file contents is not partitioned into named sections as with
-e.g. ELF.  Memory areas is formed by specifying the location of the
-data that follows.  Only the memory area `0x0000...00' to `0x01ff...ff'
-is executable, so it is used for code (and constants) and the area
-`0x2000...00' to `0x20ff...ff' is used for writable data.  *Note mmo
-section mapping::.
-
-   There is provision for specifying "special data" of 65536 different
-types.  We use type 80 (decimal), arbitrarily chosen the same as the
-ELF `e_machine' number for MMIX, filling it with section information
-normally found in ELF objects. *Note mmo section mapping::.
-
-   Contents is entered as 32-bit words, xor:ed over previous contents,
-always zero-initialized.  A word that starts with the byte `0x98' forms
-a command called a `lopcode', where the next byte distinguished between
-the thirteen lopcodes.  The two remaining bytes, called the `Y' and `Z'
-fields, or the `YZ' field (a 16-bit big-endian number), are used for
-various purposes different for each lopcode.  As documented in
-`http://www-cs-faculty.stanford.edu/~knuth/mmixal-intro.ps.gz', the
-lopcodes are:
-
-`lop_quote'
-     0x98000001.  The next word is contents, regardless of whether it
-     starts with 0x98 or not.
-
-`lop_loc'
-     0x9801YYZZ, where `Z' is 1 or 2.  This is a location directive,
-     setting the location for the next data to the next 32-bit word
-     (for Z = 1) or 64-bit word (for Z = 2), plus Y * 2^56.  Normally
-     `Y' is 0 for the text segment and 2 for the data segment.
-
-`lop_skip'
-     0x9802YYZZ.  Increase the current location by `YZ' bytes.
-
-`lop_fixo'
-     0x9803YYZZ, where `Z' is 1 or 2.  Store the current location as 64
-     bits into the location pointed to by the next 32-bit (Z = 1) or
-     64-bit (Z = 2) word, plus Y * 2^56.
-
-`lop_fixr'
-     0x9804YYZZ.  `YZ' is stored into the current location plus 2 - 4 *
-     YZ.
-
-`lop_fixrx'
-     0x980500ZZ.  `Z' is 16 or 24.  A value `L' derived from the
-     following 32-bit word are used in a manner similar to `YZ' in
-     lop_fixr: it is xor:ed into the current location minus 4 * L.  The
-     first byte of the word is 0 or 1.  If it is 1, then L = (LOWEST 24
-     BITS OF WORD) - 2^Z, if 0, then L = (LOWEST 24 BITS OF WORD).
-
-`lop_file'
-     0x9806YYZZ.  `Y' is the file number, `Z' is count of 32-bit words.
-     Set the file number to `Y' and the line counter to 0.  The next Z
-     * 4 bytes contain the file name, padded with zeros if the count is
-     not a multiple of four.  The same `Y' may occur multiple times,
-     but `Z' must be 0 for all but the first occurrence.
-
-`lop_line'
-     0x9807YYZZ.  `YZ' is the line number.  Together with lop_file, it
-     forms the source location for the next 32-bit word.  Note that for
-     each non-lopcode 32-bit word, line numbers are assumed incremented
-     by one.
-
-`lop_spec'
-     0x9808YYZZ.  `YZ' is the type number.  Data until the next lopcode
-     other than lop_quote forms special data of type `YZ'.  *Note mmo
-     section mapping::.
-
-     Other types than 80, (or type 80 with a content that does not
-     parse) is stored in sections named `.MMIX.spec_data.N' where N is
-     the `YZ'-type.  The flags for such a sections say not to allocate
-     or load the data.  The vma is 0.  Contents of multiple occurrences
-     of special data N is concatenated to the data of the previous
-     lop_spec Ns.  The location in data or code at which the lop_spec
-     occurred is lost.
-
-`lop_pre'
-     0x980901ZZ.  The first lopcode in a file.  The `Z' field forms the
-     length of header information in 32-bit words, where the first word
-     tells the time in seconds since `00:00:00 GMT Jan 1 1970'.
-
-`lop_post'
-     0x980a00ZZ.  Z > 32.  This lopcode follows after all
-     content-generating lopcodes in a program.  The `Z' field denotes
-     the value of `rG' at the beginning of the program.  The following
-     256 - Z big-endian 64-bit words are loaded into global registers
-     `$G' ... `$255'.
-
-`lop_stab'
-     0x980b0000.  The next-to-last lopcode in a program.  Must follow
-     immediately after the lop_post lopcode and its data.  After this
-     lopcode follows all symbols in a compressed format (*note
-     Symbol-table::).
-
-`lop_end'
-     0x980cYYZZ.  The last lopcode in a program.  It must follow the
-     lop_stab lopcode and its data.  The `YZ' field contains the number
-     of 32-bit words of symbol table information after the preceding
-     lop_stab lopcode.
-
-   Note that the lopcode "fixups"; `lop_fixr', `lop_fixrx' and
-`lop_fixo' are not generated by BFD, but are handled.  They are
-generated by `mmixal'.
-
-   This trivial one-label, one-instruction file:
-
-      :Main TRAP 1,2,3
-
-   can be represented this way in mmo:
-
-      0x98090101 - lop_pre, one 32-bit word with timestamp.
-      <timestamp>
-      0x98010002 - lop_loc, text segment, using a 64-bit address.
-                   Note that mmixal does not emit this for the file above.
-      0x00000000 - Address, high 32 bits.
-      0x00000000 - Address, low 32 bits.
-      0x98060002 - lop_file, 2 32-bit words for file-name.
-      0x74657374 - "test"
-      0x2e730000 - ".s\0\0"
-      0x98070001 - lop_line, line 1.
-      0x00010203 - TRAP 1,2,3
-      0x980a00ff - lop_post, setting $255 to 0.
-      0x00000000
-      0x00000000
-      0x980b0000 - lop_stab for ":Main" = 0, serial 1.
-      0x203a4040   *Note Symbol-table::.
-      0x10404020
-      0x4d206120
-      0x69016e00
-      0x81000000
-      0x980c0005 - lop_end; symbol table contained five 32-bit words.
-
-
-File: bfd.info,  Node: Symbol-table,  Next: mmo section mapping,  Prev: File layout,  Up: mmo
-
-3.4.2 Symbol table format
--------------------------
-
-From mmixal.w (or really, the generated mmixal.tex) in
-`http://www-cs-faculty.stanford.edu/~knuth/programs/mmix.tar.gz'):
-"Symbols are stored and retrieved by means of a `ternary search trie',
-following ideas of Bentley and Sedgewick. (See ACM-SIAM Symp. on
-Discrete Algorithms `8' (1997), 360-369; R.Sedgewick, `Algorithms in C'
-(Reading, Mass.  Addison-Wesley, 1998), `15.4'.)  Each trie node stores
-a character, and there are branches to subtries for the cases where a
-given character is less than, equal to, or greater than the character
-in the trie.  There also is a pointer to a symbol table entry if a
-symbol ends at the current node."
-
-   So it's a tree encoded as a stream of bytes.  The stream of bytes
-acts on a single virtual global symbol, adding and removing characters
-and signalling complete symbol points.  Here, we read the stream and
-create symbols at the completion points.
-
-   First, there's a control byte `m'.  If any of the listed bits in `m'
-is nonzero, we execute what stands at the right, in the listed order:
-
-      (MMO3_LEFT)
-      0x40 - Traverse left trie.
-             (Read a new command byte and recurse.)
-
-      (MMO3_SYMBITS)
-      0x2f - Read the next byte as a character and store it in the
-             current character position; increment character position.
-             Test the bits of `m':
-
-             (MMO3_WCHAR)
-             0x80 - The character is 16-bit (so read another byte,
-                    merge into current character.
-
-             (MMO3_TYPEBITS)
-             0xf  - We have a complete symbol; parse the type, value
-                    and serial number and do what should be done
-                    with a symbol.  The type and length information
-                    is in j = (m & 0xf).
-
-                    (MMO3_REGQUAL_BITS)
-                    j == 0xf: A register variable.  The following
-                              byte tells which register.
-                    j <= 8:   An absolute symbol.  Read j bytes as the
-                              big-endian number the symbol equals.
-                              A j = 2 with two zero bytes denotes an
-                              unknown symbol.
-                    j > 8:    As with j <= 8, but add (0x20 << 56)
-                              to the value in the following j - 8
-                              bytes.
-
-                    Then comes the serial number, as a variant of
-                    uleb128, but better named ubeb128:
-                    Read bytes and shift the previous value left 7
-                    (multiply by 128).  Add in the new byte, repeat
-                    until a byte has bit 7 set.  The serial number
-                    is the computed value minus 128.
-
-             (MMO3_MIDDLE)
-             0x20 - Traverse middle trie.  (Read a new command byte
-                    and recurse.)  Decrement character position.
-
-      (MMO3_RIGHT)
-      0x10 - Traverse right trie.  (Read a new command byte and
-             recurse.)
-
-   Let's look again at the `lop_stab' for the trivial file (*note File
-layout::).
-
-      0x980b0000 - lop_stab for ":Main" = 0, serial 1.
-      0x203a4040
-      0x10404020
-      0x4d206120
-      0x69016e00
-      0x81000000
-
-   This forms the trivial trie (note that the path between ":" and "M"
-is redundant):
-
-      203a     ":"
-      40       /
-      40      /
-      10      \
-      40      /
-      40     /
-      204d  "M"
-      2061  "a"
-      2069  "i"
-      016e  "n" is the last character in a full symbol, and
-            with a value represented in one byte.
-      00    The value is 0.
-      81    The serial number is 1.
-
diff -urN binutils-2.16.1/bfd/doc/bfd.info-2 binutils-2.16.1-STEP/bfd/doc/bfd.info-2
--- binutils-2.16.1/bfd/doc/bfd.info-2	2005-06-13 07:32:58.000000000 +1200
+++ binutils-2.16.1-STEP/bfd/doc/bfd.info-2	1970-01-01 12:00:00.000000000 +1200
@@ -1,1702 +0,0 @@
-This is ../.././bfd/doc/bfd.info, produced by makeinfo version 4.7 from
-../.././bfd/doc/bfd.texinfo.
-
-START-INFO-DIR-ENTRY
-* Bfd: (bfd).                   The Binary File Descriptor library.
-END-INFO-DIR-ENTRY
-
-   This file documents the BFD library.
-
-   Copyright (C) 1991, 2000, 2001, 2003 Free Software Foundation, Inc.
-
-   Permission is granted to copy, distribute and/or modify this document
-     under the terms of the GNU Free Documentation License, Version 1.1
-     or any later version published by the Free Software Foundation;
-   with no Invariant Sections, with no Front-Cover Texts, and with no
-    Back-Cover Texts.  A copy of the license is included in the
-section entitled "GNU Free Documentation License".
-
-
-File: bfd.info,  Node: mmo section mapping,  Prev: Symbol-table,  Up: mmo
-
-3.4.3 mmo section mapping
--------------------------
-
-The implementation in BFD uses special data type 80 (decimal) to
-encapsulate and describe named sections, containing e.g. debug
-information.  If needed, any datum in the encapsulation will be quoted
-using lop_quote.  First comes a 32-bit word holding the number of
-32-bit words containing the zero-terminated zero-padded segment name.
-After the name there's a 32-bit word holding flags describing the
-section type.  Then comes a 64-bit big-endian word with the section
-length (in bytes), then another with the section start address.
-Depending on the type of section, the contents might follow,
-zero-padded to 32-bit boundary.  For a loadable section (such as data
-or code), the contents might follow at some later point, not
-necessarily immediately, as a lop_loc with the same start address as in
-the section description, followed by the contents.  This in effect
-forms a descriptor that must be emitted before the actual contents.
-Sections described this way must not overlap.
-
-   For areas that don't have such descriptors, synthetic sections are
-formed by BFD.  Consecutive contents in the two memory areas
-`0x0000...00' to `0x01ff...ff' and `0x2000...00' to `0x20ff...ff' are
-entered in sections named `.text' and `.data' respectively.  If an area
-is not otherwise described, but would together with a neighboring lower
-area be less than `0x40000000' bytes long, it is joined with the lower
-area and the gap is zero-filled.  For other cases, a new section is
-formed, named `.MMIX.sec.N'.  Here, N is a number, a running count
-through the mmo file, starting at 0.
-
-   A loadable section specified as:
-
-      .section secname,"ax"
-      TETRA 1,2,3,4,-1,-2009
-      BYTE 80
-
-   and linked to address `0x4', is represented by the sequence:
-
-      0x98080050 - lop_spec 80
-      0x00000002 - two 32-bit words for the section name
-      0x7365636e - "secn"
-      0x616d6500 - "ame\0"
-      0x00000033 - flags CODE, READONLY, LOAD, ALLOC
-      0x00000000 - high 32 bits of section length
-      0x0000001c - section length is 28 bytes; 6 * 4 + 1 + alignment to 32 bits
-      0x00000000 - high 32 bits of section address
-      0x00000004 - section address is 4
-      0x98010002 - 64 bits with address of following data
-      0x00000000 - high 32 bits of address
-      0x00000004 - low 32 bits: data starts at address 4
-      0x00000001 - 1
-      0x00000002 - 2
-      0x00000003 - 3
-      0x00000004 - 4
-      0xffffffff - -1
-      0xfffff827 - -2009
-      0x50000000 - 80 as a byte, padded with zeros.
-
-   Note that the lop_spec wrapping does not include the section
-contents.  Compare this to a non-loaded section specified as:
-
-      .section thirdsec
-      TETRA 200001,100002
-      BYTE 38,40
-
-   This, when linked to address `0x200000000000001c', is represented by:
-
-      0x98080050 - lop_spec 80
-      0x00000002 - two 32-bit words for the section name
-      0x7365636e - "thir"
-      0x616d6500 - "dsec"
-      0x00000010 - flag READONLY
-      0x00000000 - high 32 bits of section length
-      0x0000000c - section length is 12 bytes; 2 * 4 + 2 + alignment to 32 bits
-      0x20000000 - high 32 bits of address
-      0x0000001c - low 32 bits of address 0x200000000000001c
-      0x00030d41 - 200001
-      0x000186a2 - 100002
-      0x26280000 - 38, 40 as bytes, padded with zeros
-
-   For the latter example, the section contents must not be loaded in
-memory, and is therefore specified as part of the special data.  The
-address is usually unimportant but might provide information for e.g.
-the DWARF 2 debugging format.
-
-
-File: bfd.info,  Node: GNU Free Documentation License,  Next: Index,  Prev: BFD back ends,  Up: Top
-
-Appendix A GNU Free Documentation License
-*****************************************
-
-                        Version 1.1, March 2000
-
-     Copyright (C) 2000, 2003 Free Software Foundation, Inc.
-     59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
-
-     Everyone is permitted to copy and distribute verbatim copies
-     of this license document, but changing it is not allowed.
-
-
-  0. PREAMBLE
-
-     The purpose of this License is to make a manual, textbook, or other
-     written document "free" in the sense of freedom: to assure everyone
-     the effective freedom to copy and redistribute it, with or without
-     modifying it, either commercially or noncommercially.  Secondarily,
-     this License preserves for the author and publisher a way to get
-     credit for their work, while not being considered responsible for
-     modifications made by others.
-
-     This License is a kind of "copyleft", which means that derivative
-     works of the document must themselves be free in the same sense.
-     It complements the GNU General Public License, which is a copyleft
-     license designed for free software.
-
-     We have designed this License in order to use it for manuals for
-     free software, because free software needs free documentation: a
-     free program should come with manuals providing the same freedoms
-     that the software does.  But this License is not limited to
-     software manuals; it can be used for any textual work, regardless
-     of subject matter or whether it is published as a printed book.
-     We recommend this License principally for works whose purpose is
-     instruction or reference.
-
-
-  1. APPLICABILITY AND DEFINITIONS
-
-     This License applies to any manual or other work that contains a
-     notice placed by the copyright holder saying it can be distributed
-     under the terms of this License.  The "Document", below, refers to
-     any such manual or work.  Any member of the public is a licensee,
-     and is addressed as "you."
-
-     A "Modified Version" of the Document means any work containing the
-     Document or a portion of it, either copied verbatim, or with
-     modifications and/or translated into another language.
-
-     A "Secondary Section" is a named appendix or a front-matter
-     section of the Document that deals exclusively with the
-     relationship of the publishers or authors of the Document to the
-     Document's overall subject (or to related matters) and contains
-     nothing that could fall directly within that overall subject.
-     (For example, if the Document is in part a textbook of
-     mathematics, a Secondary Section may not explain any mathematics.)
-     The relationship could be a matter of historical connection with
-     the subject or with related matters, or of legal, commercial,
-     philosophical, ethical or political position regarding them.
-
-     The "Invariant Sections" are certain Secondary Sections whose
-     titles are designated, as being those of Invariant Sections, in
-     the notice that says that the Document is released under this
-     License.
-
-     The "Cover Texts" are certain short passages of text that are
-     listed, as Front-Cover Texts or Back-Cover Texts, in the notice
-     that says that the Document is released under this License.
-
-     A "Transparent" copy of the Document means a machine-readable copy,
-     represented in a format whose specification is available to the
-     general public, whose contents can be viewed and edited directly
-     and straightforwardly with generic text editors or (for images
-     composed of pixels) generic paint programs or (for drawings) some
-     widely available drawing editor, and that is suitable for input to
-     text formatters or for automatic translation to a variety of
-     formats suitable for input to text formatters.  A copy made in an
-     otherwise Transparent file format whose markup has been designed
-     to thwart or discourage subsequent modification by readers is not
-     Transparent.  A copy that is not "Transparent" is called "Opaque."
-
-     Examples of suitable formats for Transparent copies include plain
-     ASCII without markup, Texinfo input format, LaTeX input format,
-     SGML or XML using a publicly available DTD, and
-     standard-conforming simple HTML designed for human modification.
-     Opaque formats include PostScript, PDF, proprietary formats that
-     can be read and edited only by proprietary word processors, SGML
-     or XML for which the DTD and/or processing tools are not generally
-     available, and the machine-generated HTML produced by some word
-     processors for output purposes only.
-
-     The "Title Page" means, for a printed book, the title page itself,
-     plus such following pages as are needed to hold, legibly, the
-     material this License requires to appear in the title page.  For
-     works in formats which do not have any title page as such, "Title
-     Page" means the text near the most prominent appearance of the
-     work's title, preceding the beginning of the body of the text.
-
-  2. VERBATIM COPYING
-
-     You may copy and distribute the Document in any medium, either
-     commercially or noncommercially, provided that this License, the
-     copyright notices, and the license notice saying this License
-     applies to the Document are reproduced in all copies, and that you
-     add no other conditions whatsoever to those of this License.  You
-     may not use technical measures to obstruct or control the reading
-     or further copying of the copies you make or distribute.  However,
-     you may accept compensation in exchange for copies.  If you
-     distribute a large enough number of copies you must also follow
-     the conditions in section 3.
-
-     You may also lend copies, under the same conditions stated above,
-     and you may publicly display copies.
-
-  3. COPYING IN QUANTITY
-
-     If you publish printed copies of the Document numbering more than
-     100, and the Document's license notice requires Cover Texts, you
-     must enclose the copies in covers that carry, clearly and legibly,
-     all these Cover Texts: Front-Cover Texts on the front cover, and
-     Back-Cover Texts on the back cover.  Both covers must also clearly
-     and legibly identify you as the publisher of these copies.  The
-     front cover must present the full title with all words of the
-     title equally prominent and visible.  You may add other material
-     on the covers in addition.  Copying with changes limited to the
-     covers, as long as they preserve the title of the Document and
-     satisfy these conditions, can be treated as verbatim copying in
-     other respects.
-
-     If the required texts for either cover are too voluminous to fit
-     legibly, you should put the first ones listed (as many as fit
-     reasonably) on the actual cover, and continue the rest onto
-     adjacent pages.
-
-     If you publish or distribute Opaque copies of the Document
-     numbering more than 100, you must either include a
-     machine-readable Transparent copy along with each Opaque copy, or
-     state in or with each Opaque copy a publicly-accessible
-     computer-network location containing a complete Transparent copy
-     of the Document, free of added material, which the general
-     network-using public has access to download anonymously at no
-     charge using public-standard network protocols.  If you use the
-     latter option, you must take reasonably prudent steps, when you
-     begin distribution of Opaque copies in quantity, to ensure that
-     this Transparent copy will remain thus accessible at the stated
-     location until at least one year after the last time you
-     distribute an Opaque copy (directly or through your agents or
-     retailers) of that edition to the public.
-
-     It is requested, but not required, that you contact the authors of
-     the Document well before redistributing any large number of
-     copies, to give them a chance to provide you with an updated
-     version of the Document.
-
-  4. MODIFICATIONS
-
-     You may copy and distribute a Modified Version of the Document
-     under the conditions of sections 2 and 3 above, provided that you
-     release the Modified Version under precisely this License, with
-     the Modified Version filling the role of the Document, thus
-     licensing distribution and modification of the Modified Version to
-     whoever possesses a copy of it.  In addition, you must do these
-     things in the Modified Version:
-
-     A. Use in the Title Page (and on the covers, if any) a title
-     distinct    from that of the Document, and from those of previous
-     versions    (which should, if there were any, be listed in the
-     History section    of the Document).  You may use the same title
-     as a previous version    if the original publisher of that version
-     gives permission.
-     B. List on the Title Page, as authors, one or more persons or
-     entities    responsible for authorship of the modifications in the
-     Modified    Version, together with at least five of the principal
-     authors of the    Document (all of its principal authors, if it
-     has less than five).
-     C. State on the Title page the name of the publisher of the
-     Modified Version, as the publisher.
-     D. Preserve all the copyright notices of the Document.
-     E. Add an appropriate copyright notice for your modifications
-     adjacent to the other copyright notices.
-     F. Include, immediately after the copyright notices, a license
-     notice    giving the public permission to use the Modified Version
-     under the    terms of this License, in the form shown in the
-     Addendum below.
-     G. Preserve in that license notice the full lists of Invariant
-     Sections    and required Cover Texts given in the Document's
-     license notice.
-     H. Include an unaltered copy of this License.
-     I. Preserve the section entitled "History", and its title, and add
-     to    it an item stating at least the title, year, new authors, and
-       publisher of the Modified Version as given on the Title Page.
-     If    there is no section entitled "History" in the Document,
-     create one    stating the title, year, authors, and publisher of
-     the Document as    given on its Title Page, then add an item
-     describing the Modified    Version as stated in the previous
-     sentence.
-     J. Preserve the network location, if any, given in the Document for
-       public access to a Transparent copy of the Document, and
-     likewise    the network locations given in the Document for
-     previous versions    it was based on.  These may be placed in the
-     "History" section.     You may omit a network location for a work
-     that was published at    least four years before the Document
-     itself, or if the original    publisher of the version it refers
-     to gives permission.
-     K. In any section entitled "Acknowledgements" or "Dedications",
-     preserve the section's title, and preserve in the section all the
-      substance and tone of each of the contributor acknowledgements
-     and/or dedications given therein.
-     L. Preserve all the Invariant Sections of the Document,
-     unaltered in their text and in their titles.  Section numbers
-     or the equivalent are not considered part of the section titles.
-     M. Delete any section entitled "Endorsements."  Such a section
-     may not be included in the Modified Version.
-     N. Do not retitle any existing section as "Endorsements"    or to
-     conflict in title with any Invariant Section.
-
-     If the Modified Version includes new front-matter sections or
-     appendices that qualify as Secondary Sections and contain no
-     material copied from the Document, you may at your option
-     designate some or all of these sections as invariant.  To do this,
-     add their titles to the list of Invariant Sections in the Modified
-     Version's license notice.  These titles must be distinct from any
-     other section titles.
-
-     You may add a section entitled "Endorsements", provided it contains
-     nothing but endorsements of your Modified Version by various
-     parties-for example, statements of peer review or that the text has
-     been approved by an organization as the authoritative definition
-     of a standard.
-
-     You may add a passage of up to five words as a Front-Cover Text,
-     and a passage of up to 25 words as a Back-Cover Text, to the end
-     of the list of Cover Texts in the Modified Version.  Only one
-     passage of Front-Cover Text and one of Back-Cover Text may be
-     added by (or through arrangements made by) any one entity.  If the
-     Document already includes a cover text for the same cover,
-     previously added by you or by arrangement made by the same entity
-     you are acting on behalf of, you may not add another; but you may
-     replace the old one, on explicit permission from the previous
-     publisher that added the old one.
-
-     The author(s) and publisher(s) of the Document do not by this
-     License give permission to use their names for publicity for or to
-     assert or imply endorsement of any Modified Version.
-
-  5. COMBINING DOCUMENTS
-
-     You may combine the Document with other documents released under
-     this License, under the terms defined in section 4 above for
-     modified versions, provided that you include in the combination
-     all of the Invariant Sections of all of the original documents,
-     unmodified, and list them all as Invariant Sections of your
-     combined work in its license notice.
-
-     The combined work need only contain one copy of this License, and
-     multiple identical Invariant Sections may be replaced with a single
-     copy.  If there are multiple Invariant Sections with the same name
-     but different contents, make the title of each such section unique
-     by adding at the end of it, in parentheses, the name of the
-     original author or publisher of that section if known, or else a
-     unique number.  Make the same adjustment to the section titles in
-     the list of Invariant Sections in the license notice of the
-     combined work.
-
-     In the combination, you must combine any sections entitled
-     "History" in the various original documents, forming one section
-     entitled "History"; likewise combine any sections entitled
-     "Acknowledgements", and any sections entitled "Dedications."  You
-     must delete all sections entitled "Endorsements."
-
-  6. COLLECTIONS OF DOCUMENTS
-
-     You may make a collection consisting of the Document and other
-     documents released under this License, and replace the individual
-     copies of this License in the various documents with a single copy
-     that is included in the collection, provided that you follow the
-     rules of this License for verbatim copying of each of the
-     documents in all other respects.
-
-     You may extract a single document from such a collection, and
-     distribute it individually under this License, provided you insert
-     a copy of this License into the extracted document, and follow
-     this License in all other respects regarding verbatim copying of
-     that document.
-
-  7. AGGREGATION WITH INDEPENDENT WORKS
-
-     A compilation of the Document or its derivatives with other
-     separate and independent documents or works, in or on a volume of
-     a storage or distribution medium, does not as a whole count as a
-     Modified Version of the Document, provided no compilation
-     copyright is claimed for the compilation.  Such a compilation is
-     called an "aggregate", and this License does not apply to the
-     other self-contained works thus compiled with the Document, on
-     account of their being thus compiled, if they are not themselves
-     derivative works of the Document.
-
-     If the Cover Text requirement of section 3 is applicable to these
-     copies of the Document, then if the Document is less than one
-     quarter of the entire aggregate, the Document's Cover Texts may be
-     placed on covers that surround only the Document within the
-     aggregate.  Otherwise they must appear on covers around the whole
-     aggregate.
-
-  8. TRANSLATION
-
-     Translation is considered a kind of modification, so you may
-     distribute translations of the Document under the terms of section
-     4.  Replacing Invariant Sections with translations requires special
-     permission from their copyright holders, but you may include
-     translations of some or all Invariant Sections in addition to the
-     original versions of these Invariant Sections.  You may include a
-     translation of this License provided that you also include the
-     original English version of this License.  In case of a
-     disagreement between the translation and the original English
-     version of this License, the original English version will prevail.
-
-  9. TERMINATION
-
-     You may not copy, modify, sublicense, or distribute the Document
-     except as expressly provided for under this License.  Any other
-     attempt to copy, modify, sublicense or distribute the Document is
-     void, and will automatically terminate your rights under this
-     License.  However, parties who have received copies, or rights,
-     from you under this License will not have their licenses
-     terminated so long as such parties remain in full compliance.
-
- 10. FUTURE REVISIONS OF THIS LICENSE
-
-     The Free Software Foundation may publish new, revised versions of
-     the GNU Free Documentation License from time to time.  Such new
-     versions will be similar in spirit to the present version, but may
-     differ in detail to address new problems or concerns.  See
-     http://www.gnu.org/copyleft/.
-
-     Each version of the License is given a distinguishing version
-     number.  If the Document specifies that a particular numbered
-     version of this License "or any later version" applies to it, you
-     have the option of following the terms and conditions either of
-     that specified version or of any later version that has been
-     published (not as a draft) by the Free Software Foundation.  If
-     the Document does not specify a version number of this License,
-     you may choose any version ever published (not as a draft) by the
-     Free Software Foundation.
-
-
-ADDENDUM: How to use this License for your documents
-====================================================
-
-To use this License in a document you have written, include a copy of
-the License in the document and put the following copyright and license
-notices just after the title page:
-
-     Copyright (C)  YEAR  YOUR NAME.
-     Permission is granted to copy, distribute and/or modify this document
-     under the terms of the GNU Free Documentation License, Version 1.1
-     or any later version published by the Free Software Foundation;
-     with the Invariant Sections being LIST THEIR TITLES, with the
-     Front-Cover Texts being LIST, and with the Back-Cover Texts being LIST.
-     A copy of the license is included in the section entitled "GNU
-     Free Documentation License."
-
-   If you have no Invariant Sections, write "with no Invariant Sections"
-instead of saying which ones are invariant.  If you have no Front-Cover
-Texts, write "no Front-Cover Texts" instead of "Front-Cover Texts being
-LIST"; likewise for Back-Cover Texts.
-
-   If your document contains nontrivial examples of program code, we
-recommend releasing these examples in parallel under your choice of
-free software license, such as the GNU General Public License, to
-permit their use in free software.
-
-
-File: bfd.info,  Node: Index,  Prev: GNU Free Documentation License,  Up: Top
-
-Index
-*****
-
- [index ]
-* Menu:
-
-* _bfd_final_link_relocate:              Relocating the section contents.
-                                                             (line   22)
-* _bfd_generic_link_add_archive_symbols: Adding symbols from an archive.
-                                                             (line   12)
-* _bfd_generic_link_add_one_symbol:      Adding symbols from an object file.
-                                                             (line   19)
-* _bfd_generic_make_empty_symbol:        symbol handling functions.
-                                                             (line   92)
-* _bfd_link_add_symbols in target vector: Adding Symbols to the Hash Table.
-                                                             (line    6)
-* _bfd_link_final_link in target vector: Performing the Final Link.
-                                                             (line    6)
-* _bfd_link_hash_table_create in target vector: Creating a Linker Hash Table.
-                                                             (line    6)
-* _bfd_relocate_contents:                Relocating the section contents.
-                                                             (line   22)
-* _bfd_strip_section_from_output:        section prototypes. (line  242)
-* aout_SIZE_machine_type:                aout.               (line  146)
-* aout_SIZE_mkobject:                    aout.               (line  138)
-* aout_SIZE_new_section_hook:            aout.               (line  175)
-* aout_SIZE_set_arch_mach:               aout.               (line  162)
-* aout_SIZE_some_aout_object_p:          aout.               (line  125)
-* aout_SIZE_swap_exec_header_in:         aout.               (line  101)
-* aout_SIZE_swap_exec_header_out:        aout.               (line  113)
-* arelent_chain:                         typedef arelent.    (line  338)
-* BFD:                                   Overview.           (line    6)
-* BFD canonical format:                  Canonical format.   (line   11)
-* bfd_alloc:                             Opening and Closing.
-                                                             (line  179)
-* bfd_alt_mach_code:                     BFD front end.      (line  588)
-* bfd_arch_bits_per_address:             Architectures.      (line  453)
-* bfd_arch_bits_per_byte:                Architectures.      (line  445)
-* bfd_arch_get_compatible:               Architectures.      (line  388)
-* bfd_arch_list:                         Architectures.      (line  379)
-* bfd_arch_mach_octets_per_byte:         Architectures.      (line  522)
-* bfd_cache_close:                       File Caching.       (line   53)
-* bfd_cache_close_all:                   File Caching.       (line   66)
-* bfd_cache_init:                        File Caching.       (line   45)
-* bfd_cache_lookup:                      File Caching.       (line   32)
-* bfd_cache_lookup_worker:               File Caching.       (line   91)
-* BFD_CACHE_MAX_OPEN macro:              File Caching.       (line   15)
-* bfd_calc_gnu_debuglink_crc32:          Opening and Closing.
-                                                             (line  197)
-* bfd_canonicalize_reloc:                BFD front end.      (line  315)
-* bfd_canonicalize_symtab:               symbol handling functions.
-                                                             (line   50)
-* bfd_check_format:                      Formats.            (line   18)
-* bfd_check_format_matches:              Formats.            (line   49)
-* bfd_check_overflow:                    typedef arelent.    (line  350)
-* bfd_close:                             Opening and Closing.
-                                                             (line  104)
-* bfd_close_all_done:                    Opening and Closing.
-                                                             (line  122)
-* bfd_coff_backend_data:                 coff.               (line  246)
-* bfd_copy_private_bfd_data:             BFD front end.      (line  454)
-* bfd_copy_private_header_data:          BFD front end.      (line  436)
-* bfd_copy_private_section_data:         section prototypes. (line  224)
-* bfd_copy_private_symbol_data:          symbol handling functions.
-                                                             (line  140)
-* bfd_core_file_failing_command:         Core Files.         (line    9)
-* bfd_core_file_failing_signal:          Core Files.         (line   18)
-* bfd_create:                            Opening and Closing.
-                                                             (line  141)
-* bfd_create_gnu_debuglink_section:      Opening and Closing.
-                                                             (line  263)
-* bfd_decode_symclass:                   symbol handling functions.
-                                                             (line  111)
-* bfd_default_arch_struct:               Architectures.      (line  400)
-* bfd_default_compatible:                Architectures.      (line  462)
-* bfd_default_reloc_type_lookup:         howto manager.      (line 1704)
-* bfd_default_scan:                      Architectures.      (line  471)
-* bfd_default_set_arch_mach:             Architectures.      (line  418)
-* bfd_elf_find_section:                  elf.                (line   15)
-* bfd_errmsg:                            BFD front end.      (line  243)
-* bfd_fdopenr:                           Opening and Closing.
-                                                             (line   22)
-* bfd_fill_in_gnu_debuglink_section:     Opening and Closing.
-                                                             (line  277)
-* bfd_find_target:                       bfd_target.         (line  420)
-* bfd_follow_gnu_debuglink:              Opening and Closing.
-                                                             (line  242)
-* bfd_format_string:                     Formats.            (line   76)
-* bfd_generic_discard_group:             section prototypes. (line  264)
-* bfd_generic_gc_sections:               howto manager.      (line 1735)
-* bfd_generic_get_relocated_section_contents: howto manager. (line 1755)
-* bfd_generic_is_group_section:          section prototypes. (line  256)
-* bfd_generic_merge_sections:            howto manager.      (line 1745)
-* bfd_generic_relax_section:             howto manager.      (line 1722)
-* bfd_get_arch:                          Architectures.      (line  429)
-* bfd_get_arch_info:                     Architectures.      (line  481)
-* bfd_get_arch_size:                     BFD front end.      (line  359)
-* bfd_get_error:                         BFD front end.      (line  226)
-* bfd_get_error_handler:                 BFD front end.      (line  294)
-* bfd_get_gp_size:                       BFD front end.      (line  400)
-* bfd_get_mach:                          Architectures.      (line  437)
-* bfd_get_mtime:                         BFD front end.      (line  676)
-* bfd_get_next_mapent:                   Archives.           (line   49)
-* bfd_get_reloc_code_name:               howto manager.      (line 1713)
-* bfd_get_reloc_size:                    typedef arelent.    (line  329)
-* bfd_get_reloc_upper_bound:             BFD front end.      (line  305)
-* bfd_get_section_by_name:               section prototypes. (line   17)
-* bfd_get_section_by_name_if:            section prototypes. (line   31)
-* bfd_get_section_contents:              section prototypes. (line  197)
-* bfd_get_sign_extend_vma:               BFD front end.      (line  372)
-* bfd_get_size <1>:                      Internal.           (line   22)
-* bfd_get_size:                          BFD front end.      (line  685)
-* bfd_get_symtab_upper_bound:            symbol handling functions.
-                                                             (line    6)
-* bfd_get_unique_section_name:           section prototypes. (line   50)
-* bfd_h_put_size:                        Internal.           (line   94)
-* bfd_hash_allocate:                     Creating and Freeing a Hash Table.
-                                                             (line   17)
-* bfd_hash_lookup:                       Looking Up or Entering a String.
-                                                             (line    6)
-* bfd_hash_newfunc:                      Creating and Freeing a Hash Table.
-                                                             (line   12)
-* bfd_hash_set_default_size:             Creating and Freeing a Hash Table.
-                                                             (line   25)
-* bfd_hash_table_free:                   Creating and Freeing a Hash Table.
-                                                             (line   21)
-* bfd_hash_table_init:                   Creating and Freeing a Hash Table.
-                                                             (line    6)
-* bfd_hash_table_init_n:                 Creating and Freeing a Hash Table.
-                                                             (line    6)
-* bfd_hash_traverse:                     Traversing a Hash Table.
-                                                             (line    6)
-* bfd_init:                              Initialization.     (line    8)
-* bfd_install_relocation:                typedef arelent.    (line  391)
-* bfd_is_local_label:                    symbol handling functions.
-                                                             (line   17)
-* bfd_is_local_label_name:               symbol handling functions.
-                                                             (line   26)
-* bfd_is_target_special_symbol:          symbol handling functions.
-                                                             (line   38)
-* bfd_is_undefined_symclass:             symbol handling functions.
-                                                             (line  120)
-* bfd_last_cache:                        File Caching.       (line   22)
-* bfd_link_split_section:                Writing the symbol table.
-                                                             (line   44)
-* bfd_log2:                              Internal.           (line  161)
-* bfd_lookup_arch:                       Architectures.      (line  489)
-* bfd_make_debug_symbol:                 symbol handling functions.
-                                                             (line  102)
-* bfd_make_empty_symbol:                 symbol handling functions.
-                                                             (line   78)
-* bfd_make_readable:                     Opening and Closing.
-                                                             (line  165)
-* bfd_make_section:                      section prototypes. (line   98)
-* bfd_make_section_anyway:               section prototypes. (line   82)
-* bfd_make_section_old_way:              section prototypes. (line   62)
-* bfd_make_writable:                     Opening and Closing.
-                                                             (line  151)
-* bfd_malloc_and_get_section:            section prototypes. (line  214)
-* bfd_map_over_sections:                 section prototypes. (line  124)
-* bfd_merge_private_bfd_data:            BFD front end.      (line  470)
-* bfd_octets_per_byte:                   Architectures.      (line  512)
-* bfd_open_file:                         File Caching.       (line   79)
-* bfd_openr:                             Opening and Closing.
-                                                             (line    6)
-* bfd_openr_iovec:                       Opening and Closing.
-                                                             (line   52)
-* bfd_openr_next_archived_file:          Archives.           (line   75)
-* bfd_openstreamr:                       Opening and Closing.
-                                                             (line   43)
-* bfd_openw:                             Opening and Closing.
-                                                             (line   92)
-* bfd_perform_relocation:                typedef arelent.    (line  366)
-* bfd_perror:                            BFD front end.      (line  252)
-* bfd_preserve_finish:                   BFD front end.      (line  636)
-* bfd_preserve_restore:                  BFD front end.      (line  626)
-* bfd_preserve_save:                     BFD front end.      (line  610)
-* bfd_print_symbol_vandf:                symbol handling functions.
-                                                             (line   70)
-* bfd_printable_arch_mach:               Architectures.      (line  500)
-* bfd_printable_name:                    Architectures.      (line  360)
-* bfd_put_size:                          Internal.           (line   19)
-* BFD_RELOC_12_PCREL:                    howto manager.      (line   39)
-* BFD_RELOC_14:                          howto manager.      (line   31)
-* BFD_RELOC_16:                          howto manager.      (line   30)
-* BFD_RELOC_16_BASEREL:                  howto manager.      (line   80)
-* BFD_RELOC_16_GOT_PCREL:                howto manager.      (line   52)
-* BFD_RELOC_16_GOTOFF:                   howto manager.      (line   55)
-* BFD_RELOC_16_PCREL:                    howto manager.      (line   38)
-* BFD_RELOC_16_PCREL_S2:                 howto manager.      (line   92)
-* BFD_RELOC_16_PLT_PCREL:                howto manager.      (line   63)
-* BFD_RELOC_16_PLTOFF:                   howto manager.      (line   67)
-* BFD_RELOC_16C_ABS20:                   howto manager.      (line 1464)
-* BFD_RELOC_16C_ABS20_C:                 howto manager.      (line 1465)
-* BFD_RELOC_16C_ABS24:                   howto manager.      (line 1466)
-* BFD_RELOC_16C_ABS24_C:                 howto manager.      (line 1467)
-* BFD_RELOC_16C_DISP04:                  howto manager.      (line 1444)
-* BFD_RELOC_16C_DISP04_C:                howto manager.      (line 1445)
-* BFD_RELOC_16C_DISP08:                  howto manager.      (line 1446)
-* BFD_RELOC_16C_DISP08_C:                howto manager.      (line 1447)
-* BFD_RELOC_16C_DISP16:                  howto manager.      (line 1448)
-* BFD_RELOC_16C_DISP16_C:                howto manager.      (line 1449)
-* BFD_RELOC_16C_DISP24:                  howto manager.      (line 1450)
-* BFD_RELOC_16C_DISP24_C:                howto manager.      (line 1451)
-* BFD_RELOC_16C_DISP24a:                 howto manager.      (line 1452)
-* BFD_RELOC_16C_DISP24a_C:               howto manager.      (line 1453)
-* BFD_RELOC_16C_IMM04:                   howto manager.      (line 1468)
-* BFD_RELOC_16C_IMM04_C:                 howto manager.      (line 1469)
-* BFD_RELOC_16C_IMM16:                   howto manager.      (line 1470)
-* BFD_RELOC_16C_IMM16_C:                 howto manager.      (line 1471)
-* BFD_RELOC_16C_IMM20:                   howto manager.      (line 1472)
-* BFD_RELOC_16C_IMM20_C:                 howto manager.      (line 1473)
-* BFD_RELOC_16C_IMM24:                   howto manager.      (line 1474)
-* BFD_RELOC_16C_IMM24_C:                 howto manager.      (line 1475)
-* BFD_RELOC_16C_IMM32:                   howto manager.      (line 1476)
-* BFD_RELOC_16C_IMM32_C:                 howto manager.      (line 1477)
-* BFD_RELOC_16C_NUM08:                   howto manager.      (line 1438)
-* BFD_RELOC_16C_NUM08_C:                 howto manager.      (line 1439)
-* BFD_RELOC_16C_NUM16:                   howto manager.      (line 1440)
-* BFD_RELOC_16C_NUM16_C:                 howto manager.      (line 1441)
-* BFD_RELOC_16C_NUM32:                   howto manager.      (line 1442)
-* BFD_RELOC_16C_NUM32_C:                 howto manager.      (line 1443)
-* BFD_RELOC_16C_REG04:                   howto manager.      (line 1454)
-* BFD_RELOC_16C_REG04_C:                 howto manager.      (line 1455)
-* BFD_RELOC_16C_REG04a:                  howto manager.      (line 1456)
-* BFD_RELOC_16C_REG04a_C:                howto manager.      (line 1457)
-* BFD_RELOC_16C_REG14:                   howto manager.      (line 1458)
-* BFD_RELOC_16C_REG14_C:                 howto manager.      (line 1459)
-* BFD_RELOC_16C_REG16:                   howto manager.      (line 1460)
-* BFD_RELOC_16C_REG16_C:                 howto manager.      (line 1461)
-* BFD_RELOC_16C_REG20:                   howto manager.      (line 1462)
-* BFD_RELOC_16C_REG20_C:                 howto manager.      (line 1463)
-* BFD_RELOC_23_PCREL_S2:                 howto manager.      (line   93)
-* BFD_RELOC_24:                          howto manager.      (line   29)
-* BFD_RELOC_24_PCREL:                    howto manager.      (line   37)
-* BFD_RELOC_24_PLT_PCREL:                howto manager.      (line   62)
-* BFD_RELOC_26:                          howto manager.      (line   28)
-* BFD_RELOC_32:                          howto manager.      (line   27)
-* BFD_RELOC_32_BASEREL:                  howto manager.      (line   79)
-* BFD_RELOC_32_GOT_PCREL:                howto manager.      (line   51)
-* BFD_RELOC_32_GOTOFF:                   howto manager.      (line   54)
-* BFD_RELOC_32_PCREL:                    howto manager.      (line   36)
-* BFD_RELOC_32_PCREL_S2:                 howto manager.      (line   91)
-* BFD_RELOC_32_PLT_PCREL:                howto manager.      (line   61)
-* BFD_RELOC_32_PLTOFF:                   howto manager.      (line   66)
-* BFD_RELOC_32_SECREL:                   howto manager.      (line   48)
-* BFD_RELOC_386_COPY:                    howto manager.      (line  422)
-* BFD_RELOC_386_GLOB_DAT:                howto manager.      (line  423)
-* BFD_RELOC_386_GOT32:                   howto manager.      (line  420)
-* BFD_RELOC_386_GOTOFF:                  howto manager.      (line  426)
-* BFD_RELOC_386_GOTPC:                   howto manager.      (line  427)
-* BFD_RELOC_386_JUMP_SLOT:               howto manager.      (line  424)
-* BFD_RELOC_386_PLT32:                   howto manager.      (line  421)
-* BFD_RELOC_386_RELATIVE:                howto manager.      (line  425)
-* BFD_RELOC_386_TLS_DTPMOD32:            howto manager.      (line  437)
-* BFD_RELOC_386_TLS_DTPOFF32:            howto manager.      (line  438)
-* BFD_RELOC_386_TLS_GD:                  howto manager.      (line  432)
-* BFD_RELOC_386_TLS_GOTIE:               howto manager.      (line  430)
-* BFD_RELOC_386_TLS_IE:                  howto manager.      (line  429)
-* BFD_RELOC_386_TLS_IE_32:               howto manager.      (line  435)
-* BFD_RELOC_386_TLS_LDM:                 howto manager.      (line  433)
-* BFD_RELOC_386_TLS_LDO_32:              howto manager.      (line  434)
-* BFD_RELOC_386_TLS_LE:                  howto manager.      (line  431)
-* BFD_RELOC_386_TLS_LE_32:               howto manager.      (line  436)
-* BFD_RELOC_386_TLS_TPOFF:               howto manager.      (line  428)
-* BFD_RELOC_386_TLS_TPOFF32:             howto manager.      (line  439)
-* BFD_RELOC_390_12:                      howto manager.      (line 1155)
-* BFD_RELOC_390_20:                      howto manager.      (line 1255)
-* BFD_RELOC_390_COPY:                    howto manager.      (line 1164)
-* BFD_RELOC_390_GLOB_DAT:                howto manager.      (line 1167)
-* BFD_RELOC_390_GOT12:                   howto manager.      (line 1158)
-* BFD_RELOC_390_GOT16:                   howto manager.      (line 1179)
-* BFD_RELOC_390_GOT20:                   howto manager.      (line 1256)
-* BFD_RELOC_390_GOT64:                   howto manager.      (line 1197)
-* BFD_RELOC_390_GOTENT:                  howto manager.      (line 1203)
-* BFD_RELOC_390_GOTOFF64:                howto manager.      (line 1206)
-* BFD_RELOC_390_GOTPC:                   howto manager.      (line 1176)
-* BFD_RELOC_390_GOTPCDBL:                howto manager.      (line 1194)
-* BFD_RELOC_390_GOTPLT12:                howto manager.      (line 1209)
-* BFD_RELOC_390_GOTPLT16:                howto manager.      (line 1212)
-* BFD_RELOC_390_GOTPLT20:                howto manager.      (line 1257)
-* BFD_RELOC_390_GOTPLT32:                howto manager.      (line 1215)
-* BFD_RELOC_390_GOTPLT64:                howto manager.      (line 1218)
-* BFD_RELOC_390_GOTPLTENT:               howto manager.      (line 1221)
-* BFD_RELOC_390_JMP_SLOT:                howto manager.      (line 1170)
-* BFD_RELOC_390_PC16DBL:                 howto manager.      (line 1182)
-* BFD_RELOC_390_PC32DBL:                 howto manager.      (line 1188)
-* BFD_RELOC_390_PLT16DBL:                howto manager.      (line 1185)
-* BFD_RELOC_390_PLT32:                   howto manager.      (line 1161)
-* BFD_RELOC_390_PLT32DBL:                howto manager.      (line 1191)
-* BFD_RELOC_390_PLT64:                   howto manager.      (line 1200)
-* BFD_RELOC_390_PLTOFF16:                howto manager.      (line 1224)
-* BFD_RELOC_390_PLTOFF32:                howto manager.      (line 1227)
-* BFD_RELOC_390_PLTOFF64:                howto manager.      (line 1230)
-* BFD_RELOC_390_RELATIVE:                howto manager.      (line 1173)
-* BFD_RELOC_390_TLS_DTPMOD:              howto manager.      (line 1250)
-* BFD_RELOC_390_TLS_DTPOFF:              howto manager.      (line 1251)
-* BFD_RELOC_390_TLS_GD32:                howto manager.      (line 1236)
-* BFD_RELOC_390_TLS_GD64:                howto manager.      (line 1237)
-* BFD_RELOC_390_TLS_GDCALL:              howto manager.      (line 1234)
-* BFD_RELOC_390_TLS_GOTIE12:             howto manager.      (line 1238)
-* BFD_RELOC_390_TLS_GOTIE20:             howto manager.      (line 1258)
-* BFD_RELOC_390_TLS_GOTIE32:             howto manager.      (line 1239)
-* BFD_RELOC_390_TLS_GOTIE64:             howto manager.      (line 1240)
-* BFD_RELOC_390_TLS_IE32:                howto manager.      (line 1243)
-* BFD_RELOC_390_TLS_IE64:                howto manager.      (line 1244)
-* BFD_RELOC_390_TLS_IEENT:               howto manager.      (line 1245)
-* BFD_RELOC_390_TLS_LDCALL:              howto manager.      (line 1235)
-* BFD_RELOC_390_TLS_LDM32:               howto manager.      (line 1241)
-* BFD_RELOC_390_TLS_LDM64:               howto manager.      (line 1242)
-* BFD_RELOC_390_TLS_LDO32:               howto manager.      (line 1248)
-* BFD_RELOC_390_TLS_LDO64:               howto manager.      (line 1249)
-* BFD_RELOC_390_TLS_LE32:                howto manager.      (line 1246)
-* BFD_RELOC_390_TLS_LE64:                howto manager.      (line 1247)
-* BFD_RELOC_390_TLS_LOAD:                howto manager.      (line 1233)
-* BFD_RELOC_390_TLS_TPOFF:               howto manager.      (line 1252)
-* BFD_RELOC_64:                          howto manager.      (line   26)
-* BFD_RELOC_64_PCREL:                    howto manager.      (line   35)
-* BFD_RELOC_64_PLT_PCREL:                howto manager.      (line   60)
-* BFD_RELOC_64_PLTOFF:                   howto manager.      (line   65)
-* BFD_RELOC_68K_GLOB_DAT:                howto manager.      (line   74)
-* BFD_RELOC_68K_JMP_SLOT:                howto manager.      (line   75)
-* BFD_RELOC_68K_RELATIVE:                howto manager.      (line   76)
-* BFD_RELOC_8:                           howto manager.      (line   32)
-* BFD_RELOC_860_COPY:                    howto manager.      (line 1543)
-* BFD_RELOC_860_GLOB_DAT:                howto manager.      (line 1544)
-* BFD_RELOC_860_HAGOT:                   howto manager.      (line 1569)
-* BFD_RELOC_860_HAGOTOFF:                howto manager.      (line 1570)
-* BFD_RELOC_860_HAPC:                    howto manager.      (line 1571)
-* BFD_RELOC_860_HIGH:                    howto manager.      (line 1572)
-* BFD_RELOC_860_HIGHADJ:                 howto manager.      (line 1568)
-* BFD_RELOC_860_HIGOT:                   howto manager.      (line 1573)
-* BFD_RELOC_860_HIGOTOFF:                howto manager.      (line 1574)
-* BFD_RELOC_860_JUMP_SLOT:               howto manager.      (line 1545)
-* BFD_RELOC_860_LOGOT0:                  howto manager.      (line 1557)
-* BFD_RELOC_860_LOGOT1:                  howto manager.      (line 1559)
-* BFD_RELOC_860_LOGOTOFF0:               howto manager.      (line 1561)
-* BFD_RELOC_860_LOGOTOFF1:               howto manager.      (line 1563)
-* BFD_RELOC_860_LOGOTOFF2:               howto manager.      (line 1565)
-* BFD_RELOC_860_LOGOTOFF3:               howto manager.      (line 1566)
-* BFD_RELOC_860_LOPC:                    howto manager.      (line 1567)
-* BFD_RELOC_860_LOW0:                    howto manager.      (line 1550)
-* BFD_RELOC_860_LOW1:                    howto manager.      (line 1552)
-* BFD_RELOC_860_LOW2:                    howto manager.      (line 1554)
-* BFD_RELOC_860_LOW3:                    howto manager.      (line 1556)
-* BFD_RELOC_860_PC16:                    howto manager.      (line 1549)
-* BFD_RELOC_860_PC26:                    howto manager.      (line 1547)
-* BFD_RELOC_860_PLT26:                   howto manager.      (line 1548)
-* BFD_RELOC_860_RELATIVE:                howto manager.      (line 1546)
-* BFD_RELOC_860_SPGOT0:                  howto manager.      (line 1558)
-* BFD_RELOC_860_SPGOT1:                  howto manager.      (line 1560)
-* BFD_RELOC_860_SPGOTOFF0:               howto manager.      (line 1562)
-* BFD_RELOC_860_SPGOTOFF1:               howto manager.      (line 1564)
-* BFD_RELOC_860_SPLIT0:                  howto manager.      (line 1551)
-* BFD_RELOC_860_SPLIT1:                  howto manager.      (line 1553)
-* BFD_RELOC_860_SPLIT2:                  howto manager.      (line 1555)
-* BFD_RELOC_8_BASEREL:                   howto manager.      (line   84)
-* BFD_RELOC_8_FFnn:                      howto manager.      (line   88)
-* BFD_RELOC_8_GOT_PCREL:                 howto manager.      (line   53)
-* BFD_RELOC_8_GOTOFF:                    howto manager.      (line   59)
-* BFD_RELOC_8_PCREL:                     howto manager.      (line   40)
-* BFD_RELOC_8_PLT_PCREL:                 howto manager.      (line   64)
-* BFD_RELOC_8_PLTOFF:                    howto manager.      (line   71)
-* BFD_RELOC_ALPHA_BRSGP:                 howto manager.      (line  259)
-* BFD_RELOC_ALPHA_CODEADDR:              howto manager.      (line  250)
-* BFD_RELOC_ALPHA_DTPMOD64:              howto manager.      (line  266)
-* BFD_RELOC_ALPHA_DTPREL16:              howto manager.      (line  271)
-* BFD_RELOC_ALPHA_DTPREL64:              howto manager.      (line  268)
-* BFD_RELOC_ALPHA_DTPREL_HI16:           howto manager.      (line  269)
-* BFD_RELOC_ALPHA_DTPREL_LO16:           howto manager.      (line  270)
-* BFD_RELOC_ALPHA_ELF_LITERAL:           howto manager.      (line  215)
-* BFD_RELOC_ALPHA_GOTDTPREL16:           howto manager.      (line  267)
-* BFD_RELOC_ALPHA_GOTTPREL16:            howto manager.      (line  272)
-* BFD_RELOC_ALPHA_GPDISP:                howto manager.      (line  209)
-* BFD_RELOC_ALPHA_GPDISP_HI16:           howto manager.      (line  195)
-* BFD_RELOC_ALPHA_GPDISP_LO16:           howto manager.      (line  203)
-* BFD_RELOC_ALPHA_GPREL_HI16:            howto manager.      (line  254)
-* BFD_RELOC_ALPHA_GPREL_LO16:            howto manager.      (line  255)
-* BFD_RELOC_ALPHA_HINT:                  howto manager.      (line  241)
-* BFD_RELOC_ALPHA_LINKAGE:               howto manager.      (line  246)
-* BFD_RELOC_ALPHA_LITERAL:               howto manager.      (line  214)
-* BFD_RELOC_ALPHA_LITUSE:                howto manager.      (line  216)
-* BFD_RELOC_ALPHA_TLSGD:                 howto manager.      (line  264)
-* BFD_RELOC_ALPHA_TLSLDM:                howto manager.      (line  265)
-* BFD_RELOC_ALPHA_TPREL16:               howto manager.      (line  276)
-* BFD_RELOC_ALPHA_TPREL64:               howto manager.      (line  273)
-* BFD_RELOC_ALPHA_TPREL_HI16:            howto manager.      (line  274)
-* BFD_RELOC_ALPHA_TPREL_LO16:            howto manager.      (line  275)
-* BFD_RELOC_ARC_B22_PCREL:               howto manager.      (line  754)
-* BFD_RELOC_ARC_B26:                     howto manager.      (line  759)
-* BFD_RELOC_ARM_ADR_IMM:                 howto manager.      (line  615)
-* BFD_RELOC_ARM_ADRL_IMMEDIATE:          howto manager.      (line  607)
-* BFD_RELOC_ARM_COPY:                    howto manager.      (line  628)
-* BFD_RELOC_ARM_CP_OFF_IMM:              howto manager.      (line  613)
-* BFD_RELOC_ARM_CP_OFF_IMM_S2:           howto manager.      (line  614)
-* BFD_RELOC_ARM_GLOB_DAT:                howto manager.      (line  629)
-* BFD_RELOC_ARM_GOT12:                   howto manager.      (line  625)
-* BFD_RELOC_ARM_GOT32:                   howto manager.      (line  626)
-* BFD_RELOC_ARM_GOTOFF:                  howto manager.      (line  632)
-* BFD_RELOC_ARM_GOTPC:                   howto manager.      (line  633)
-* BFD_RELOC_ARM_HWLITERAL:               howto manager.      (line  620)
-* BFD_RELOC_ARM_IMMEDIATE:               howto manager.      (line  606)
-* BFD_RELOC_ARM_IN_POOL:                 howto manager.      (line  618)
-* BFD_RELOC_ARM_JUMP_SLOT:               howto manager.      (line  627)
-* BFD_RELOC_ARM_LDR_IMM:                 howto manager.      (line  616)
-* BFD_RELOC_ARM_LITERAL:                 howto manager.      (line  617)
-* BFD_RELOC_ARM_MULTI:                   howto manager.      (line  612)
-* BFD_RELOC_ARM_OFFSET_IMM:              howto manager.      (line  608)
-* BFD_RELOC_ARM_OFFSET_IMM8:             howto manager.      (line  619)
-* BFD_RELOC_ARM_PCREL_BLX:               howto manager.      (line  596)
-* BFD_RELOC_ARM_PCREL_BRANCH:            howto manager.      (line  592)
-* BFD_RELOC_ARM_PLT32:                   howto manager.      (line  630)
-* BFD_RELOC_ARM_PREL31:                  howto manager.      (line  652)
-* BFD_RELOC_ARM_RELATIVE:                howto manager.      (line  631)
-* BFD_RELOC_ARM_ROSEGREL32:              howto manager.      (line  641)
-* BFD_RELOC_ARM_SBREL32:                 howto manager.      (line  644)
-* BFD_RELOC_ARM_SHIFT_IMM:               howto manager.      (line  609)
-* BFD_RELOC_ARM_SMI:                     howto manager.      (line  610)
-* BFD_RELOC_ARM_SWI:                     howto manager.      (line  611)
-* BFD_RELOC_ARM_TARGET1:                 howto manager.      (line  637)
-* BFD_RELOC_ARM_TARGET2:                 howto manager.      (line  647)
-* BFD_RELOC_ARM_THUMB_ADD:               howto manager.      (line  621)
-* BFD_RELOC_ARM_THUMB_IMM:               howto manager.      (line  622)
-* BFD_RELOC_ARM_THUMB_OFFSET:            howto manager.      (line  624)
-* BFD_RELOC_ARM_THUMB_SHIFT:             howto manager.      (line  623)
-* BFD_RELOC_AVR_13_PCREL:                howto manager.      (line 1076)
-* BFD_RELOC_AVR_16_PM:                   howto manager.      (line 1080)
-* BFD_RELOC_AVR_6:                       howto manager.      (line 1147)
-* BFD_RELOC_AVR_6_ADIW:                  howto manager.      (line 1151)
-* BFD_RELOC_AVR_7_PCREL:                 howto manager.      (line 1072)
-* BFD_RELOC_AVR_CALL:                    howto manager.      (line 1139)
-* BFD_RELOC_AVR_HH8_LDI:                 howto manager.      (line 1092)
-* BFD_RELOC_AVR_HH8_LDI_NEG:             howto manager.      (line 1107)
-* BFD_RELOC_AVR_HH8_LDI_PM:              howto manager.      (line 1120)
-* BFD_RELOC_AVR_HH8_LDI_PM_NEG:          howto manager.      (line 1134)
-* BFD_RELOC_AVR_HI8_LDI:                 howto manager.      (line 1088)
-* BFD_RELOC_AVR_HI8_LDI_NEG:             howto manager.      (line 1102)
-* BFD_RELOC_AVR_HI8_LDI_PM:              howto manager.      (line 1116)
-* BFD_RELOC_AVR_HI8_LDI_PM_NEG:          howto manager.      (line 1129)
-* BFD_RELOC_AVR_LDI:                     howto manager.      (line 1143)
-* BFD_RELOC_AVR_LO8_LDI:                 howto manager.      (line 1084)
-* BFD_RELOC_AVR_LO8_LDI_NEG:             howto manager.      (line 1097)
-* BFD_RELOC_AVR_LO8_LDI_PM:              howto manager.      (line 1112)
-* BFD_RELOC_AVR_LO8_LDI_PM_NEG:          howto manager.      (line 1125)
-* bfd_reloc_code_type:                   howto manager.      (line   10)
-* BFD_RELOC_CRIS_16_GOT:                 howto manager.      (line 1524)
-* BFD_RELOC_CRIS_16_GOTPLT:              howto manager.      (line 1530)
-* BFD_RELOC_CRIS_32_GOT:                 howto manager.      (line 1521)
-* BFD_RELOC_CRIS_32_GOTPLT:              howto manager.      (line 1527)
-* BFD_RELOC_CRIS_32_GOTREL:              howto manager.      (line 1533)
-* BFD_RELOC_CRIS_32_PLT_GOTREL:          howto manager.      (line 1536)
-* BFD_RELOC_CRIS_32_PLT_PCREL:           howto manager.      (line 1539)
-* BFD_RELOC_CRIS_BDISP8:                 howto manager.      (line 1502)
-* BFD_RELOC_CRIS_COPY:                   howto manager.      (line 1515)
-* BFD_RELOC_CRIS_GLOB_DAT:               howto manager.      (line 1516)
-* BFD_RELOC_CRIS_JUMP_SLOT:              howto manager.      (line 1517)
-* BFD_RELOC_CRIS_LAPCQ_OFFSET:           howto manager.      (line 1510)
-* BFD_RELOC_CRIS_RELATIVE:               howto manager.      (line 1518)
-* BFD_RELOC_CRIS_SIGNED_16:              howto manager.      (line 1508)
-* BFD_RELOC_CRIS_SIGNED_6:               howto manager.      (line 1504)
-* BFD_RELOC_CRIS_SIGNED_8:               howto manager.      (line 1506)
-* BFD_RELOC_CRIS_UNSIGNED_16:            howto manager.      (line 1509)
-* BFD_RELOC_CRIS_UNSIGNED_4:             howto manager.      (line 1511)
-* BFD_RELOC_CRIS_UNSIGNED_5:             howto manager.      (line 1503)
-* BFD_RELOC_CRIS_UNSIGNED_6:             howto manager.      (line 1505)
-* BFD_RELOC_CRIS_UNSIGNED_8:             howto manager.      (line 1507)
-* BFD_RELOC_CRX_ABS16:                   howto manager.      (line 1490)
-* BFD_RELOC_CRX_ABS32:                   howto manager.      (line 1491)
-* BFD_RELOC_CRX_IMM16:                   howto manager.      (line 1495)
-* BFD_RELOC_CRX_IMM32:                   howto manager.      (line 1496)
-* BFD_RELOC_CRX_NUM16:                   howto manager.      (line 1493)
-* BFD_RELOC_CRX_NUM32:                   howto manager.      (line 1494)
-* BFD_RELOC_CRX_NUM8:                    howto manager.      (line 1492)
-* BFD_RELOC_CRX_REGREL12:                howto manager.      (line 1486)
-* BFD_RELOC_CRX_REGREL22:                howto manager.      (line 1487)
-* BFD_RELOC_CRX_REGREL28:                howto manager.      (line 1488)
-* BFD_RELOC_CRX_REGREL32:                howto manager.      (line 1489)
-* BFD_RELOC_CRX_REL16:                   howto manager.      (line 1483)
-* BFD_RELOC_CRX_REL24:                   howto manager.      (line 1484)
-* BFD_RELOC_CRX_REL32:                   howto manager.      (line 1485)
-* BFD_RELOC_CRX_REL4:                    howto manager.      (line 1480)
-* BFD_RELOC_CRX_REL8:                    howto manager.      (line 1481)
-* BFD_RELOC_CRX_REL8_CMP:                howto manager.      (line 1482)
-* BFD_RELOC_CRX_SWITCH16:                howto manager.      (line 1498)
-* BFD_RELOC_CRX_SWITCH32:                howto manager.      (line 1499)
-* BFD_RELOC_CRX_SWITCH8:                 howto manager.      (line 1497)
-* BFD_RELOC_CTOR:                        howto manager.      (line  586)
-* BFD_RELOC_D10V_10_PCREL_L:             howto manager.      (line  768)
-* BFD_RELOC_D10V_10_PCREL_R:             howto manager.      (line  764)
-* BFD_RELOC_D10V_18:                     howto manager.      (line  773)
-* BFD_RELOC_D10V_18_PCREL:               howto manager.      (line  776)
-* BFD_RELOC_D30V_15:                     howto manager.      (line  791)
-* BFD_RELOC_D30V_15_PCREL:               howto manager.      (line  795)
-* BFD_RELOC_D30V_15_PCREL_R:             howto manager.      (line  799)
-* BFD_RELOC_D30V_21:                     howto manager.      (line  804)
-* BFD_RELOC_D30V_21_PCREL:               howto manager.      (line  808)
-* BFD_RELOC_D30V_21_PCREL_R:             howto manager.      (line  812)
-* BFD_RELOC_D30V_32:                     howto manager.      (line  817)
-* BFD_RELOC_D30V_32_PCREL:               howto manager.      (line  820)
-* BFD_RELOC_D30V_6:                      howto manager.      (line  779)
-* BFD_RELOC_D30V_9_PCREL:                howto manager.      (line  782)
-* BFD_RELOC_D30V_9_PCREL_R:              howto manager.      (line  786)
-* BFD_RELOC_DLX_HI16_S:                  howto manager.      (line  823)
-* BFD_RELOC_DLX_JMP26:                   howto manager.      (line  829)
-* BFD_RELOC_DLX_LO16:                    howto manager.      (line  826)
-* BFD_RELOC_FR30_10_IN_8:                howto manager.      (line 1002)
-* BFD_RELOC_FR30_12_PCREL:               howto manager.      (line 1010)
-* BFD_RELOC_FR30_20:                     howto manager.      (line  986)
-* BFD_RELOC_FR30_48:                     howto manager.      (line  983)
-* BFD_RELOC_FR30_6_IN_4:                 howto manager.      (line  990)
-* BFD_RELOC_FR30_8_IN_8:                 howto manager.      (line  994)
-* BFD_RELOC_FR30_9_IN_8:                 howto manager.      (line  998)
-* BFD_RELOC_FR30_9_PCREL:                howto manager.      (line 1006)
-* BFD_RELOC_FRV_FUNCDESC:                howto manager.      (line  364)
-* BFD_RELOC_FRV_FUNCDESC_GOT12:          howto manager.      (line  365)
-* BFD_RELOC_FRV_FUNCDESC_GOTHI:          howto manager.      (line  366)
-* BFD_RELOC_FRV_FUNCDESC_GOTLO:          howto manager.      (line  367)
-* BFD_RELOC_FRV_FUNCDESC_GOTOFF12:       howto manager.      (line  369)
-* BFD_RELOC_FRV_FUNCDESC_GOTOFFHI:       howto manager.      (line  370)
-* BFD_RELOC_FRV_FUNCDESC_GOTOFFLO:       howto manager.      (line  371)
-* BFD_RELOC_FRV_FUNCDESC_VALUE:          howto manager.      (line  368)
-* BFD_RELOC_FRV_GETTLSOFF:               howto manager.      (line  375)
-* BFD_RELOC_FRV_GETTLSOFF_RELAX:         howto manager.      (line  388)
-* BFD_RELOC_FRV_GOT12:                   howto manager.      (line  361)
-* BFD_RELOC_FRV_GOTHI:                   howto manager.      (line  362)
-* BFD_RELOC_FRV_GOTLO:                   howto manager.      (line  363)
-* BFD_RELOC_FRV_GOTOFF12:                howto manager.      (line  372)
-* BFD_RELOC_FRV_GOTOFFHI:                howto manager.      (line  373)
-* BFD_RELOC_FRV_GOTOFFLO:                howto manager.      (line  374)
-* BFD_RELOC_FRV_GOTTLSDESC12:            howto manager.      (line  377)
-* BFD_RELOC_FRV_GOTTLSDESCHI:            howto manager.      (line  378)
-* BFD_RELOC_FRV_GOTTLSDESCLO:            howto manager.      (line  379)
-* BFD_RELOC_FRV_GOTTLSOFF12:             howto manager.      (line  383)
-* BFD_RELOC_FRV_GOTTLSOFFHI:             howto manager.      (line  384)
-* BFD_RELOC_FRV_GOTTLSOFFLO:             howto manager.      (line  385)
-* BFD_RELOC_FRV_GPREL12:                 howto manager.      (line  356)
-* BFD_RELOC_FRV_GPREL32:                 howto manager.      (line  358)
-* BFD_RELOC_FRV_GPRELHI:                 howto manager.      (line  359)
-* BFD_RELOC_FRV_GPRELLO:                 howto manager.      (line  360)
-* BFD_RELOC_FRV_GPRELU12:                howto manager.      (line  357)
-* BFD_RELOC_FRV_HI16:                    howto manager.      (line  355)
-* BFD_RELOC_FRV_LABEL16:                 howto manager.      (line  352)
-* BFD_RELOC_FRV_LABEL24:                 howto manager.      (line  353)
-* BFD_RELOC_FRV_LO16:                    howto manager.      (line  354)
-* BFD_RELOC_FRV_TLSDESC_RELAX:           howto manager.      (line  387)
-* BFD_RELOC_FRV_TLSDESC_VALUE:           howto manager.      (line  376)
-* BFD_RELOC_FRV_TLSMOFF:                 howto manager.      (line  390)
-* BFD_RELOC_FRV_TLSMOFF12:               howto manager.      (line  380)
-* BFD_RELOC_FRV_TLSMOFFHI:               howto manager.      (line  381)
-* BFD_RELOC_FRV_TLSMOFFLO:               howto manager.      (line  382)
-* BFD_RELOC_FRV_TLSOFF:                  howto manager.      (line  386)
-* BFD_RELOC_FRV_TLSOFF_RELAX:            howto manager.      (line  389)
-* BFD_RELOC_GPREL16:                     howto manager.      (line  106)
-* BFD_RELOC_GPREL32:                     howto manager.      (line  107)
-* BFD_RELOC_H8_DIR16A8:                  howto manager.      (line 1581)
-* BFD_RELOC_H8_DIR16R8:                  howto manager.      (line 1582)
-* BFD_RELOC_H8_DIR24A8:                  howto manager.      (line 1583)
-* BFD_RELOC_H8_DIR24R8:                  howto manager.      (line 1584)
-* BFD_RELOC_H8_DIR32A16:                 howto manager.      (line 1585)
-* BFD_RELOC_HI16:                        howto manager.      (line  289)
-* BFD_RELOC_HI16_BASEREL:                howto manager.      (line   82)
-* BFD_RELOC_HI16_GOTOFF:                 howto manager.      (line   57)
-* BFD_RELOC_HI16_PLTOFF:                 howto manager.      (line   69)
-* BFD_RELOC_HI16_S:                      howto manager.      (line  292)
-* BFD_RELOC_HI16_S_BASEREL:              howto manager.      (line   83)
-* BFD_RELOC_HI16_S_GOTOFF:               howto manager.      (line   58)
-* BFD_RELOC_HI16_S_PLTOFF:               howto manager.      (line   70)
-* BFD_RELOC_HI22:                        howto manager.      (line  101)
-* BFD_RELOC_I370_D12:                    howto manager.      (line  583)
-* BFD_RELOC_I960_CALLJ:                  howto manager.      (line  113)
-* BFD_RELOC_IA64_COPY:                   howto manager.      (line 1374)
-* BFD_RELOC_IA64_DIR32LSB:               howto manager.      (line 1319)
-* BFD_RELOC_IA64_DIR32MSB:               howto manager.      (line 1318)
-* BFD_RELOC_IA64_DIR64LSB:               howto manager.      (line 1321)
-* BFD_RELOC_IA64_DIR64MSB:               howto manager.      (line 1320)
-* BFD_RELOC_IA64_DTPMOD64LSB:            howto manager.      (line 1384)
-* BFD_RELOC_IA64_DTPMOD64MSB:            howto manager.      (line 1383)
-* BFD_RELOC_IA64_DTPREL14:               howto manager.      (line 1386)
-* BFD_RELOC_IA64_DTPREL22:               howto manager.      (line 1387)
-* BFD_RELOC_IA64_DTPREL32LSB:            howto manager.      (line 1390)
-* BFD_RELOC_IA64_DTPREL32MSB:            howto manager.      (line 1389)
-* BFD_RELOC_IA64_DTPREL64I:              howto manager.      (line 1388)
-* BFD_RELOC_IA64_DTPREL64LSB:            howto manager.      (line 1392)
-* BFD_RELOC_IA64_DTPREL64MSB:            howto manager.      (line 1391)
-* BFD_RELOC_IA64_FPTR32LSB:              howto manager.      (line 1336)
-* BFD_RELOC_IA64_FPTR32MSB:              howto manager.      (line 1335)
-* BFD_RELOC_IA64_FPTR64I:                howto manager.      (line 1334)
-* BFD_RELOC_IA64_FPTR64LSB:              howto manager.      (line 1338)
-* BFD_RELOC_IA64_FPTR64MSB:              howto manager.      (line 1337)
-* BFD_RELOC_IA64_GPREL22:                howto manager.      (line 1322)
-* BFD_RELOC_IA64_GPREL32LSB:             howto manager.      (line 1325)
-* BFD_RELOC_IA64_GPREL32MSB:             howto manager.      (line 1324)
-* BFD_RELOC_IA64_GPREL64I:               howto manager.      (line 1323)
-* BFD_RELOC_IA64_GPREL64LSB:             howto manager.      (line 1327)
-* BFD_RELOC_IA64_GPREL64MSB:             howto manager.      (line 1326)
-* BFD_RELOC_IA64_IMM14:                  howto manager.      (line 1315)
-* BFD_RELOC_IA64_IMM22:                  howto manager.      (line 1316)
-* BFD_RELOC_IA64_IMM64:                  howto manager.      (line 1317)
-* BFD_RELOC_IA64_IPLTLSB:                howto manager.      (line 1373)
-* BFD_RELOC_IA64_IPLTMSB:                howto manager.      (line 1372)
-* BFD_RELOC_IA64_LDXMOV:                 howto manager.      (line 1376)
-* BFD_RELOC_IA64_LTOFF22:                howto manager.      (line 1328)
-* BFD_RELOC_IA64_LTOFF22X:               howto manager.      (line 1375)
-* BFD_RELOC_IA64_LTOFF64I:               howto manager.      (line 1329)
-* BFD_RELOC_IA64_LTOFF_DTPMOD22:         howto manager.      (line 1385)
-* BFD_RELOC_IA64_LTOFF_DTPREL22:         howto manager.      (line 1393)
-* BFD_RELOC_IA64_LTOFF_FPTR22:           howto manager.      (line 1350)
-* BFD_RELOC_IA64_LTOFF_FPTR32LSB:        howto manager.      (line 1353)
-* BFD_RELOC_IA64_LTOFF_FPTR32MSB:        howto manager.      (line 1352)
-* BFD_RELOC_IA64_LTOFF_FPTR64I:          howto manager.      (line 1351)
-* BFD_RELOC_IA64_LTOFF_FPTR64LSB:        howto manager.      (line 1355)
-* BFD_RELOC_IA64_LTOFF_FPTR64MSB:        howto manager.      (line 1354)
-* BFD_RELOC_IA64_LTOFF_TPREL22:          howto manager.      (line 1382)
-* BFD_RELOC_IA64_LTV32LSB:               howto manager.      (line 1369)
-* BFD_RELOC_IA64_LTV32MSB:               howto manager.      (line 1368)
-* BFD_RELOC_IA64_LTV64LSB:               howto manager.      (line 1371)
-* BFD_RELOC_IA64_LTV64MSB:               howto manager.      (line 1370)
-* BFD_RELOC_IA64_PCREL21B:               howto manager.      (line 1339)
-* BFD_RELOC_IA64_PCREL21BI:              howto manager.      (line 1340)
-* BFD_RELOC_IA64_PCREL21F:               howto manager.      (line 1342)
-* BFD_RELOC_IA64_PCREL21M:               howto manager.      (line 1341)
-* BFD_RELOC_IA64_PCREL22:                howto manager.      (line 1343)
-* BFD_RELOC_IA64_PCREL32LSB:             howto manager.      (line 1347)
-* BFD_RELOC_IA64_PCREL32MSB:             howto manager.      (line 1346)
-* BFD_RELOC_IA64_PCREL60B:               howto manager.      (line 1344)
-* BFD_RELOC_IA64_PCREL64I:               howto manager.      (line 1345)
-* BFD_RELOC_IA64_PCREL64LSB:             howto manager.      (line 1349)
-* BFD_RELOC_IA64_PCREL64MSB:             howto manager.      (line 1348)
-* BFD_RELOC_IA64_PLTOFF22:               howto manager.      (line 1330)
-* BFD_RELOC_IA64_PLTOFF64I:              howto manager.      (line 1331)
-* BFD_RELOC_IA64_PLTOFF64LSB:            howto manager.      (line 1333)
-* BFD_RELOC_IA64_PLTOFF64MSB:            howto manager.      (line 1332)
-* BFD_RELOC_IA64_REL32LSB:               howto manager.      (line 1365)
-* BFD_RELOC_IA64_REL32MSB:               howto manager.      (line 1364)
-* BFD_RELOC_IA64_REL64LSB:               howto manager.      (line 1367)
-* BFD_RELOC_IA64_REL64MSB:               howto manager.      (line 1366)
-* BFD_RELOC_IA64_SECREL32LSB:            howto manager.      (line 1361)
-* BFD_RELOC_IA64_SECREL32MSB:            howto manager.      (line 1360)
-* BFD_RELOC_IA64_SECREL64LSB:            howto manager.      (line 1363)
-* BFD_RELOC_IA64_SECREL64MSB:            howto manager.      (line 1362)
-* BFD_RELOC_IA64_SEGREL32LSB:            howto manager.      (line 1357)
-* BFD_RELOC_IA64_SEGREL32MSB:            howto manager.      (line 1356)
-* BFD_RELOC_IA64_SEGREL64LSB:            howto manager.      (line 1359)
-* BFD_RELOC_IA64_SEGREL64MSB:            howto manager.      (line 1358)
-* BFD_RELOC_IA64_TPREL14:                howto manager.      (line 1377)
-* BFD_RELOC_IA64_TPREL22:                howto manager.      (line 1378)
-* BFD_RELOC_IA64_TPREL64I:               howto manager.      (line 1379)
-* BFD_RELOC_IA64_TPREL64LSB:             howto manager.      (line 1381)
-* BFD_RELOC_IA64_TPREL64MSB:             howto manager.      (line 1380)
-* BFD_RELOC_IP2K_ADDR16CJP:              howto manager.      (line 1267)
-* BFD_RELOC_IP2K_BANK:                   howto manager.      (line 1264)
-* BFD_RELOC_IP2K_EX8DATA:                howto manager.      (line 1275)
-* BFD_RELOC_IP2K_FR9:                    howto manager.      (line 1261)
-* BFD_RELOC_IP2K_FR_OFFSET:              howto manager.      (line 1288)
-* BFD_RELOC_IP2K_HI8DATA:                howto manager.      (line 1274)
-* BFD_RELOC_IP2K_HI8INSN:                howto manager.      (line 1279)
-* BFD_RELOC_IP2K_LO8DATA:                howto manager.      (line 1273)
-* BFD_RELOC_IP2K_LO8INSN:                howto manager.      (line 1278)
-* BFD_RELOC_IP2K_PAGE3:                  howto manager.      (line 1270)
-* BFD_RELOC_IP2K_PC_SKIP:                howto manager.      (line 1282)
-* BFD_RELOC_IP2K_TEXT:                   howto manager.      (line 1285)
-* BFD_RELOC_IQ2000_OFFSET_16:            howto manager.      (line 1608)
-* BFD_RELOC_IQ2000_OFFSET_21:            howto manager.      (line 1609)
-* BFD_RELOC_IQ2000_UHI16:                howto manager.      (line 1610)
-* BFD_RELOC_LO10:                        howto manager.      (line  102)
-* BFD_RELOC_LO16:                        howto manager.      (line  298)
-* BFD_RELOC_LO16_BASEREL:                howto manager.      (line   81)
-* BFD_RELOC_LO16_GOTOFF:                 howto manager.      (line   56)
-* BFD_RELOC_LO16_PLTOFF:                 howto manager.      (line   68)
-* BFD_RELOC_M32R_10_PCREL:               howto manager.      (line  836)
-* BFD_RELOC_M32R_18_PCREL:               howto manager.      (line  840)
-* BFD_RELOC_M32R_24:                     howto manager.      (line  832)
-* BFD_RELOC_M32R_26_PCREL:               howto manager.      (line  843)
-* BFD_RELOC_M32R_26_PLTREL:              howto manager.      (line  862)
-* BFD_RELOC_M32R_COPY:                   howto manager.      (line  863)
-* BFD_RELOC_M32R_GLOB_DAT:               howto manager.      (line  864)
-* BFD_RELOC_M32R_GOT16_HI_SLO:           howto manager.      (line  873)
-* BFD_RELOC_M32R_GOT16_HI_ULO:           howto manager.      (line  872)
-* BFD_RELOC_M32R_GOT16_LO:               howto manager.      (line  874)
-* BFD_RELOC_M32R_GOT24:                  howto manager.      (line  861)
-* BFD_RELOC_M32R_GOTOFF:                 howto manager.      (line  867)
-* BFD_RELOC_M32R_GOTOFF_HI_SLO:          howto manager.      (line  869)
-* BFD_RELOC_M32R_GOTOFF_HI_ULO:          howto manager.      (line  868)
-* BFD_RELOC_M32R_GOTOFF_LO:              howto manager.      (line  870)
-* BFD_RELOC_M32R_GOTPC24:                howto manager.      (line  871)
-* BFD_RELOC_M32R_GOTPC_HI_SLO:           howto manager.      (line  876)
-* BFD_RELOC_M32R_GOTPC_HI_ULO:           howto manager.      (line  875)
-* BFD_RELOC_M32R_GOTPC_LO:               howto manager.      (line  877)
-* BFD_RELOC_M32R_HI16_SLO:               howto manager.      (line  850)
-* BFD_RELOC_M32R_HI16_ULO:               howto manager.      (line  846)
-* BFD_RELOC_M32R_JMP_SLOT:               howto manager.      (line  865)
-* BFD_RELOC_M32R_LO16:                   howto manager.      (line  854)
-* BFD_RELOC_M32R_RELATIVE:               howto manager.      (line  866)
-* BFD_RELOC_M32R_SDA16:                  howto manager.      (line  857)
-* BFD_RELOC_M68HC11_24:                  howto manager.      (line 1429)
-* BFD_RELOC_M68HC11_3B:                  howto manager.      (line 1404)
-* BFD_RELOC_M68HC11_HI8:                 howto manager.      (line 1396)
-* BFD_RELOC_M68HC11_LO16:                howto manager.      (line 1418)
-* BFD_RELOC_M68HC11_LO8:                 howto manager.      (line 1400)
-* BFD_RELOC_M68HC11_PAGE:                howto manager.      (line 1424)
-* BFD_RELOC_M68HC11_RL_GROUP:            howto manager.      (line 1413)
-* BFD_RELOC_M68HC11_RL_JUMP:             howto manager.      (line 1407)
-* BFD_RELOC_M68HC12_5B:                  howto manager.      (line 1435)
-* BFD_RELOC_MCORE_PCREL_32:              howto manager.      (line 1017)
-* BFD_RELOC_MCORE_PCREL_IMM11BY2:        howto manager.      (line 1015)
-* BFD_RELOC_MCORE_PCREL_IMM4BY2:         howto manager.      (line 1016)
-* BFD_RELOC_MCORE_PCREL_IMM8BY4:         howto manager.      (line 1014)
-* BFD_RELOC_MCORE_PCREL_JSR_IMM11BY2:    howto manager.      (line 1018)
-* BFD_RELOC_MCORE_RVA:                   howto manager.      (line 1019)
-* BFD_RELOC_MIPS16_GPREL:                howto manager.      (line  286)
-* BFD_RELOC_MIPS16_HI16:                 howto manager.      (line  301)
-* BFD_RELOC_MIPS16_HI16_S:               howto manager.      (line  304)
-* BFD_RELOC_MIPS16_JMP:                  howto manager.      (line  283)
-* BFD_RELOC_MIPS16_LO16:                 howto manager.      (line  310)
-* BFD_RELOC_MIPS_CALL16:                 howto manager.      (line  317)
-* BFD_RELOC_MIPS_CALL_HI16:              howto manager.      (line  320)
-* BFD_RELOC_MIPS_CALL_LO16:              howto manager.      (line  321)
-* BFD_RELOC_MIPS_DELETE:                 howto manager.      (line  330)
-* BFD_RELOC_MIPS_GOT16:                  howto manager.      (line  316)
-* BFD_RELOC_MIPS_GOT_DISP:               howto manager.      (line  325)
-* BFD_RELOC_MIPS_GOT_HI16:               howto manager.      (line  318)
-* BFD_RELOC_MIPS_GOT_LO16:               howto manager.      (line  319)
-* BFD_RELOC_MIPS_GOT_OFST:               howto manager.      (line  324)
-* BFD_RELOC_MIPS_GOT_PAGE:               howto manager.      (line  323)
-* BFD_RELOC_MIPS_HIGHER:                 howto manager.      (line  332)
-* BFD_RELOC_MIPS_HIGHEST:                howto manager.      (line  331)
-* BFD_RELOC_MIPS_INSERT_A:               howto manager.      (line  328)
-* BFD_RELOC_MIPS_INSERT_B:               howto manager.      (line  329)
-* BFD_RELOC_MIPS_JALR:                   howto manager.      (line  336)
-* BFD_RELOC_MIPS_JMP:                    howto manager.      (line  279)
-* BFD_RELOC_MIPS_LITERAL:                howto manager.      (line  313)
-* BFD_RELOC_MIPS_REL16:                  howto manager.      (line  334)
-* BFD_RELOC_MIPS_RELGOT:                 howto manager.      (line  335)
-* BFD_RELOC_MIPS_SCN_DISP:               howto manager.      (line  333)
-* BFD_RELOC_MIPS_SHIFT5:                 howto manager.      (line  326)
-* BFD_RELOC_MIPS_SHIFT6:                 howto manager.      (line  327)
-* BFD_RELOC_MIPS_SUB:                    howto manager.      (line  322)
-* BFD_RELOC_MIPS_TLS_DTPMOD32:           howto manager.      (line  337)
-* BFD_RELOC_MIPS_TLS_DTPMOD64:           howto manager.      (line  339)
-* BFD_RELOC_MIPS_TLS_DTPREL32:           howto manager.      (line  338)
-* BFD_RELOC_MIPS_TLS_DTPREL64:           howto manager.      (line  340)
-* BFD_RELOC_MIPS_TLS_DTPREL_HI16:        howto manager.      (line  343)
-* BFD_RELOC_MIPS_TLS_DTPREL_LO16:        howto manager.      (line  344)
-* BFD_RELOC_MIPS_TLS_GD:                 howto manager.      (line  341)
-* BFD_RELOC_MIPS_TLS_GOTTPREL:           howto manager.      (line  345)
-* BFD_RELOC_MIPS_TLS_LDM:                howto manager.      (line  342)
-* BFD_RELOC_MIPS_TLS_TPREL32:            howto manager.      (line  346)
-* BFD_RELOC_MIPS_TLS_TPREL64:            howto manager.      (line  347)
-* BFD_RELOC_MIPS_TLS_TPREL_HI16:         howto manager.      (line  348)
-* BFD_RELOC_MIPS_TLS_TPREL_LO16:         howto manager.      (line  349)
-* BFD_RELOC_MMIX_ADDR19:                 howto manager.      (line 1048)
-* BFD_RELOC_MMIX_ADDR27:                 howto manager.      (line 1052)
-* BFD_RELOC_MMIX_BASE_PLUS_OFFSET:       howto manager.      (line 1064)
-* BFD_RELOC_MMIX_CBRANCH:                howto manager.      (line 1028)
-* BFD_RELOC_MMIX_CBRANCH_1:              howto manager.      (line 1030)
-* BFD_RELOC_MMIX_CBRANCH_2:              howto manager.      (line 1031)
-* BFD_RELOC_MMIX_CBRANCH_3:              howto manager.      (line 1032)
-* BFD_RELOC_MMIX_CBRANCH_J:              howto manager.      (line 1029)
-* BFD_RELOC_MMIX_GETA:                   howto manager.      (line 1022)
-* BFD_RELOC_MMIX_GETA_1:                 howto manager.      (line 1023)
-* BFD_RELOC_MMIX_GETA_2:                 howto manager.      (line 1024)
-* BFD_RELOC_MMIX_GETA_3:                 howto manager.      (line 1025)
-* BFD_RELOC_MMIX_JMP:                    howto manager.      (line 1042)
-* BFD_RELOC_MMIX_JMP_1:                  howto manager.      (line 1043)
-* BFD_RELOC_MMIX_JMP_2:                  howto manager.      (line 1044)
-* BFD_RELOC_MMIX_JMP_3:                  howto manager.      (line 1045)
-* BFD_RELOC_MMIX_LOCAL:                  howto manager.      (line 1068)
-* BFD_RELOC_MMIX_PUSHJ:                  howto manager.      (line 1035)
-* BFD_RELOC_MMIX_PUSHJ_1:                howto manager.      (line 1036)
-* BFD_RELOC_MMIX_PUSHJ_2:                howto manager.      (line 1037)
-* BFD_RELOC_MMIX_PUSHJ_3:                howto manager.      (line 1038)
-* BFD_RELOC_MMIX_PUSHJ_STUBBABLE:        howto manager.      (line 1039)
-* BFD_RELOC_MMIX_REG:                    howto manager.      (line 1060)
-* BFD_RELOC_MMIX_REG_OR_BYTE:            howto manager.      (line 1056)
-* BFD_RELOC_MN10300_16_PCREL:            howto manager.      (line  952)
-* BFD_RELOC_MN10300_32_PCREL:            howto manager.      (line  948)
-* BFD_RELOC_MN10300_COPY:                howto manager.      (line  408)
-* BFD_RELOC_MN10300_GLOB_DAT:            howto manager.      (line  411)
-* BFD_RELOC_MN10300_GOT16:               howto manager.      (line  404)
-* BFD_RELOC_MN10300_GOT24:               howto manager.      (line  400)
-* BFD_RELOC_MN10300_GOT32:               howto manager.      (line  396)
-* BFD_RELOC_MN10300_GOTOFF24:            howto manager.      (line  393)
-* BFD_RELOC_MN10300_JMP_SLOT:            howto manager.      (line  414)
-* BFD_RELOC_MN10300_RELATIVE:            howto manager.      (line  417)
-* BFD_RELOC_MSP430_10_PCREL:             howto manager.      (line 1599)
-* BFD_RELOC_MSP430_16:                   howto manager.      (line 1601)
-* BFD_RELOC_MSP430_16_BYTE:              howto manager.      (line 1603)
-* BFD_RELOC_MSP430_16_PCREL:             howto manager.      (line 1600)
-* BFD_RELOC_MSP430_16_PCREL_BYTE:        howto manager.      (line 1602)
-* BFD_RELOC_MSP430_2X_PCREL:             howto manager.      (line 1604)
-* BFD_RELOC_MSP430_RL_PCREL:             howto manager.      (line 1605)
-* BFD_RELOC_NONE:                        howto manager.      (line  116)
-* BFD_RELOC_NS32K_DISP_16:               howto manager.      (line  467)
-* BFD_RELOC_NS32K_DISP_16_PCREL:         howto manager.      (line  470)
-* BFD_RELOC_NS32K_DISP_32:               howto manager.      (line  468)
-* BFD_RELOC_NS32K_DISP_32_PCREL:         howto manager.      (line  471)
-* BFD_RELOC_NS32K_DISP_8:                howto manager.      (line  466)
-* BFD_RELOC_NS32K_DISP_8_PCREL:          howto manager.      (line  469)
-* BFD_RELOC_NS32K_IMM_16:                howto manager.      (line  461)
-* BFD_RELOC_NS32K_IMM_16_PCREL:          howto manager.      (line  464)
-* BFD_RELOC_NS32K_IMM_32:                howto manager.      (line  462)
-* BFD_RELOC_NS32K_IMM_32_PCREL:          howto manager.      (line  465)
-* BFD_RELOC_NS32K_IMM_8:                 howto manager.      (line  460)
-* BFD_RELOC_NS32K_IMM_8_PCREL:           howto manager.      (line  463)
-* BFD_RELOC_OPENRISC_ABS_26:             howto manager.      (line 1577)
-* BFD_RELOC_OPENRISC_REL_26:             howto manager.      (line 1578)
-* BFD_RELOC_PDP11_DISP_6_PCREL:          howto manager.      (line  475)
-* BFD_RELOC_PDP11_DISP_8_PCREL:          howto manager.      (line  474)
-* BFD_RELOC_PJ_CODE_DIR16:               howto manager.      (line  480)
-* BFD_RELOC_PJ_CODE_DIR32:               howto manager.      (line  481)
-* BFD_RELOC_PJ_CODE_HI16:                howto manager.      (line  478)
-* BFD_RELOC_PJ_CODE_LO16:                howto manager.      (line  479)
-* BFD_RELOC_PJ_CODE_REL16:               howto manager.      (line  482)
-* BFD_RELOC_PJ_CODE_REL32:               howto manager.      (line  483)
-* BFD_RELOC_PPC64_ADDR16_DS:             howto manager.      (line  528)
-* BFD_RELOC_PPC64_ADDR16_LO_DS:          howto manager.      (line  529)
-* BFD_RELOC_PPC64_DTPREL16_DS:           howto manager.      (line  575)
-* BFD_RELOC_PPC64_DTPREL16_HIGHER:       howto manager.      (line  577)
-* BFD_RELOC_PPC64_DTPREL16_HIGHERA:      howto manager.      (line  578)
-* BFD_RELOC_PPC64_DTPREL16_HIGHEST:      howto manager.      (line  579)
-* BFD_RELOC_PPC64_DTPREL16_HIGHESTA:     howto manager.      (line  580)
-* BFD_RELOC_PPC64_DTPREL16_LO_DS:        howto manager.      (line  576)
-* BFD_RELOC_PPC64_GOT16_DS:              howto manager.      (line  530)
-* BFD_RELOC_PPC64_GOT16_LO_DS:           howto manager.      (line  531)
-* BFD_RELOC_PPC64_HIGHER:                howto manager.      (line  516)
-* BFD_RELOC_PPC64_HIGHER_S:              howto manager.      (line  517)
-* BFD_RELOC_PPC64_HIGHEST:               howto manager.      (line  518)
-* BFD_RELOC_PPC64_HIGHEST_S:             howto manager.      (line  519)
-* BFD_RELOC_PPC64_PLT16_LO_DS:           howto manager.      (line  532)
-* BFD_RELOC_PPC64_PLTGOT16:              howto manager.      (line  524)
-* BFD_RELOC_PPC64_PLTGOT16_DS:           howto manager.      (line  537)
-* BFD_RELOC_PPC64_PLTGOT16_HA:           howto manager.      (line  527)
-* BFD_RELOC_PPC64_PLTGOT16_HI:           howto manager.      (line  526)
-* BFD_RELOC_PPC64_PLTGOT16_LO:           howto manager.      (line  525)
-* BFD_RELOC_PPC64_PLTGOT16_LO_DS:        howto manager.      (line  538)
-* BFD_RELOC_PPC64_SECTOFF_DS:            howto manager.      (line  533)
-* BFD_RELOC_PPC64_SECTOFF_LO_DS:         howto manager.      (line  534)
-* BFD_RELOC_PPC64_TOC:                   howto manager.      (line  523)
-* BFD_RELOC_PPC64_TOC16_DS:              howto manager.      (line  535)
-* BFD_RELOC_PPC64_TOC16_HA:              howto manager.      (line  522)
-* BFD_RELOC_PPC64_TOC16_HI:              howto manager.      (line  521)
-* BFD_RELOC_PPC64_TOC16_LO:              howto manager.      (line  520)
-* BFD_RELOC_PPC64_TOC16_LO_DS:           howto manager.      (line  536)
-* BFD_RELOC_PPC64_TPREL16_DS:            howto manager.      (line  569)
-* BFD_RELOC_PPC64_TPREL16_HIGHER:        howto manager.      (line  571)
-* BFD_RELOC_PPC64_TPREL16_HIGHERA:       howto manager.      (line  572)
-* BFD_RELOC_PPC64_TPREL16_HIGHEST:       howto manager.      (line  573)
-* BFD_RELOC_PPC64_TPREL16_HIGHESTA:      howto manager.      (line  574)
-* BFD_RELOC_PPC64_TPREL16_LO_DS:         howto manager.      (line  570)
-* BFD_RELOC_PPC_B16:                     howto manager.      (line  489)
-* BFD_RELOC_PPC_B16_BRNTAKEN:            howto manager.      (line  491)
-* BFD_RELOC_PPC_B16_BRTAKEN:             howto manager.      (line  490)
-* BFD_RELOC_PPC_B26:                     howto manager.      (line  486)
-* BFD_RELOC_PPC_BA16:                    howto manager.      (line  492)
-* BFD_RELOC_PPC_BA16_BRNTAKEN:           howto manager.      (line  494)
-* BFD_RELOC_PPC_BA16_BRTAKEN:            howto manager.      (line  493)
-* BFD_RELOC_PPC_BA26:                    howto manager.      (line  487)
-* BFD_RELOC_PPC_COPY:                    howto manager.      (line  495)
-* BFD_RELOC_PPC_DTPMOD:                  howto manager.      (line  542)
-* BFD_RELOC_PPC_DTPREL:                  howto manager.      (line  552)
-* BFD_RELOC_PPC_DTPREL16:                howto manager.      (line  548)
-* BFD_RELOC_PPC_DTPREL16_HA:             howto manager.      (line  551)
-* BFD_RELOC_PPC_DTPREL16_HI:             howto manager.      (line  550)
-* BFD_RELOC_PPC_DTPREL16_LO:             howto manager.      (line  549)
-* BFD_RELOC_PPC_EMB_BIT_FLD:             howto manager.      (line  514)
-* BFD_RELOC_PPC_EMB_MRKREF:              howto manager.      (line  509)
-* BFD_RELOC_PPC_EMB_NADDR16:             howto manager.      (line  501)
-* BFD_RELOC_PPC_EMB_NADDR16_HA:          howto manager.      (line  504)
-* BFD_RELOC_PPC_EMB_NADDR16_HI:          howto manager.      (line  503)
-* BFD_RELOC_PPC_EMB_NADDR16_LO:          howto manager.      (line  502)
-* BFD_RELOC_PPC_EMB_NADDR32:             howto manager.      (line  500)
-* BFD_RELOC_PPC_EMB_RELSDA:              howto manager.      (line  515)
-* BFD_RELOC_PPC_EMB_RELSEC16:            howto manager.      (line  510)
-* BFD_RELOC_PPC_EMB_RELST_HA:            howto manager.      (line  513)
-* BFD_RELOC_PPC_EMB_RELST_HI:            howto manager.      (line  512)
-* BFD_RELOC_PPC_EMB_RELST_LO:            howto manager.      (line  511)
-* BFD_RELOC_PPC_EMB_SDA21:               howto manager.      (line  508)
-* BFD_RELOC_PPC_EMB_SDA2I16:             howto manager.      (line  506)
-* BFD_RELOC_PPC_EMB_SDA2REL:             howto manager.      (line  507)
-* BFD_RELOC_PPC_EMB_SDAI16:              howto manager.      (line  505)
-* BFD_RELOC_PPC_GLOB_DAT:                howto manager.      (line  496)
-* BFD_RELOC_PPC_GOT_DTPREL16:            howto manager.      (line  565)
-* BFD_RELOC_PPC_GOT_DTPREL16_HA:         howto manager.      (line  568)
-* BFD_RELOC_PPC_GOT_DTPREL16_HI:         howto manager.      (line  567)
-* BFD_RELOC_PPC_GOT_DTPREL16_LO:         howto manager.      (line  566)
-* BFD_RELOC_PPC_GOT_TLSGD16:             howto manager.      (line  553)
-* BFD_RELOC_PPC_GOT_TLSGD16_HA:          howto manager.      (line  556)
-* BFD_RELOC_PPC_GOT_TLSGD16_HI:          howto manager.      (line  555)
-* BFD_RELOC_PPC_GOT_TLSGD16_LO:          howto manager.      (line  554)
-* BFD_RELOC_PPC_GOT_TLSLD16:             howto manager.      (line  557)
-* BFD_RELOC_PPC_GOT_TLSLD16_HA:          howto manager.      (line  560)
-* BFD_RELOC_PPC_GOT_TLSLD16_HI:          howto manager.      (line  559)
-* BFD_RELOC_PPC_GOT_TLSLD16_LO:          howto manager.      (line  558)
-* BFD_RELOC_PPC_GOT_TPREL16:             howto manager.      (line  561)
-* BFD_RELOC_PPC_GOT_TPREL16_HA:          howto manager.      (line  564)
-* BFD_RELOC_PPC_GOT_TPREL16_HI:          howto manager.      (line  563)
-* BFD_RELOC_PPC_GOT_TPREL16_LO:          howto manager.      (line  562)
-* BFD_RELOC_PPC_JMP_SLOT:                howto manager.      (line  497)
-* BFD_RELOC_PPC_LOCAL24PC:               howto manager.      (line  499)
-* BFD_RELOC_PPC_RELATIVE:                howto manager.      (line  498)
-* BFD_RELOC_PPC_TLS:                     howto manager.      (line  541)
-* BFD_RELOC_PPC_TOC16:                   howto manager.      (line  488)
-* BFD_RELOC_PPC_TPREL:                   howto manager.      (line  547)
-* BFD_RELOC_PPC_TPREL16:                 howto manager.      (line  543)
-* BFD_RELOC_PPC_TPREL16_HA:              howto manager.      (line  546)
-* BFD_RELOC_PPC_TPREL16_HI:              howto manager.      (line  545)
-* BFD_RELOC_PPC_TPREL16_LO:              howto manager.      (line  544)
-* BFD_RELOC_RVA:                         howto manager.      (line   85)
-* BFD_RELOC_SH_ALIGN:                    howto manager.      (line  677)
-* BFD_RELOC_SH_CODE:                     howto manager.      (line  678)
-* BFD_RELOC_SH_COPY:                     howto manager.      (line  683)
-* BFD_RELOC_SH_COPY64:                   howto manager.      (line  708)
-* BFD_RELOC_SH_COUNT:                    howto manager.      (line  676)
-* BFD_RELOC_SH_DATA:                     howto manager.      (line  679)
-* BFD_RELOC_SH_DISP12:                   howto manager.      (line  659)
-* BFD_RELOC_SH_DISP12BY2:                howto manager.      (line  660)
-* BFD_RELOC_SH_DISP12BY4:                howto manager.      (line  661)
-* BFD_RELOC_SH_DISP12BY8:                howto manager.      (line  662)
-* BFD_RELOC_SH_DISP20:                   howto manager.      (line  663)
-* BFD_RELOC_SH_DISP20BY8:                howto manager.      (line  664)
-* BFD_RELOC_SH_GLOB_DAT:                 howto manager.      (line  684)
-* BFD_RELOC_SH_GLOB_DAT64:               howto manager.      (line  709)
-* BFD_RELOC_SH_GOT10BY4:                 howto manager.      (line  712)
-* BFD_RELOC_SH_GOT10BY8:                 howto manager.      (line  713)
-* BFD_RELOC_SH_GOT_HI16:                 howto manager.      (line  691)
-* BFD_RELOC_SH_GOT_LOW16:                howto manager.      (line  688)
-* BFD_RELOC_SH_GOT_MEDHI16:              howto manager.      (line  690)
-* BFD_RELOC_SH_GOT_MEDLOW16:             howto manager.      (line  689)
-* BFD_RELOC_SH_GOTOFF_HI16:              howto manager.      (line  703)
-* BFD_RELOC_SH_GOTOFF_LOW16:             howto manager.      (line  700)
-* BFD_RELOC_SH_GOTOFF_MEDHI16:           howto manager.      (line  702)
-* BFD_RELOC_SH_GOTOFF_MEDLOW16:          howto manager.      (line  701)
-* BFD_RELOC_SH_GOTPC:                    howto manager.      (line  687)
-* BFD_RELOC_SH_GOTPC_HI16:               howto manager.      (line  707)
-* BFD_RELOC_SH_GOTPC_LOW16:              howto manager.      (line  704)
-* BFD_RELOC_SH_GOTPC_MEDHI16:            howto manager.      (line  706)
-* BFD_RELOC_SH_GOTPC_MEDLOW16:           howto manager.      (line  705)
-* BFD_RELOC_SH_GOTPLT10BY4:              howto manager.      (line  714)
-* BFD_RELOC_SH_GOTPLT10BY8:              howto manager.      (line  715)
-* BFD_RELOC_SH_GOTPLT32:                 howto manager.      (line  716)
-* BFD_RELOC_SH_GOTPLT_HI16:              howto manager.      (line  695)
-* BFD_RELOC_SH_GOTPLT_LOW16:             howto manager.      (line  692)
-* BFD_RELOC_SH_GOTPLT_MEDHI16:           howto manager.      (line  694)
-* BFD_RELOC_SH_GOTPLT_MEDLOW16:          howto manager.      (line  693)
-* BFD_RELOC_SH_IMM3:                     howto manager.      (line  657)
-* BFD_RELOC_SH_IMM3U:                    howto manager.      (line  658)
-* BFD_RELOC_SH_IMM4:                     howto manager.      (line  665)
-* BFD_RELOC_SH_IMM4BY2:                  howto manager.      (line  666)
-* BFD_RELOC_SH_IMM4BY4:                  howto manager.      (line  667)
-* BFD_RELOC_SH_IMM8:                     howto manager.      (line  668)
-* BFD_RELOC_SH_IMM8BY2:                  howto manager.      (line  669)
-* BFD_RELOC_SH_IMM8BY4:                  howto manager.      (line  670)
-* BFD_RELOC_SH_IMM_HI16:                 howto manager.      (line  734)
-* BFD_RELOC_SH_IMM_HI16_PCREL:           howto manager.      (line  735)
-* BFD_RELOC_SH_IMM_LOW16:                howto manager.      (line  728)
-* BFD_RELOC_SH_IMM_LOW16_PCREL:          howto manager.      (line  729)
-* BFD_RELOC_SH_IMM_MEDHI16:              howto manager.      (line  732)
-* BFD_RELOC_SH_IMM_MEDHI16_PCREL:        howto manager.      (line  733)
-* BFD_RELOC_SH_IMM_MEDLOW16:             howto manager.      (line  730)
-* BFD_RELOC_SH_IMM_MEDLOW16_PCREL:       howto manager.      (line  731)
-* BFD_RELOC_SH_IMMS10:                   howto manager.      (line  722)
-* BFD_RELOC_SH_IMMS10BY2:                howto manager.      (line  723)
-* BFD_RELOC_SH_IMMS10BY4:                howto manager.      (line  724)
-* BFD_RELOC_SH_IMMS10BY8:                howto manager.      (line  725)
-* BFD_RELOC_SH_IMMS16:                   howto manager.      (line  726)
-* BFD_RELOC_SH_IMMS6:                    howto manager.      (line  719)
-* BFD_RELOC_SH_IMMS6BY32:                howto manager.      (line  720)
-* BFD_RELOC_SH_IMMU16:                   howto manager.      (line  727)
-* BFD_RELOC_SH_IMMU5:                    howto manager.      (line  718)
-* BFD_RELOC_SH_IMMU6:                    howto manager.      (line  721)
-* BFD_RELOC_SH_JMP_SLOT:                 howto manager.      (line  685)
-* BFD_RELOC_SH_JMP_SLOT64:               howto manager.      (line  710)
-* BFD_RELOC_SH_LABEL:                    howto manager.      (line  680)
-* BFD_RELOC_SH_LOOP_END:                 howto manager.      (line  682)
-* BFD_RELOC_SH_LOOP_START:               howto manager.      (line  681)
-* BFD_RELOC_SH_PCDISP12BY2:              howto manager.      (line  656)
-* BFD_RELOC_SH_PCDISP8BY2:               howto manager.      (line  655)
-* BFD_RELOC_SH_PCRELIMM8BY2:             howto manager.      (line  671)
-* BFD_RELOC_SH_PCRELIMM8BY4:             howto manager.      (line  672)
-* BFD_RELOC_SH_PLT_HI16:                 howto manager.      (line  699)
-* BFD_RELOC_SH_PLT_LOW16:                howto manager.      (line  696)
-* BFD_RELOC_SH_PLT_MEDHI16:              howto manager.      (line  698)
-* BFD_RELOC_SH_PLT_MEDLOW16:             howto manager.      (line  697)
-* BFD_RELOC_SH_PT_16:                    howto manager.      (line  736)
-* BFD_RELOC_SH_RELATIVE:                 howto manager.      (line  686)
-* BFD_RELOC_SH_RELATIVE64:               howto manager.      (line  711)
-* BFD_RELOC_SH_SHMEDIA_CODE:             howto manager.      (line  717)
-* BFD_RELOC_SH_SWITCH16:                 howto manager.      (line  673)
-* BFD_RELOC_SH_SWITCH32:                 howto manager.      (line  674)
-* BFD_RELOC_SH_TLS_DTPMOD32:             howto manager.      (line  742)
-* BFD_RELOC_SH_TLS_DTPOFF32:             howto manager.      (line  743)
-* BFD_RELOC_SH_TLS_GD_32:                howto manager.      (line  737)
-* BFD_RELOC_SH_TLS_IE_32:                howto manager.      (line  740)
-* BFD_RELOC_SH_TLS_LD_32:                howto manager.      (line  738)
-* BFD_RELOC_SH_TLS_LDO_32:               howto manager.      (line  739)
-* BFD_RELOC_SH_TLS_LE_32:                howto manager.      (line  741)
-* BFD_RELOC_SH_TLS_TPOFF32:              howto manager.      (line  744)
-* BFD_RELOC_SH_USES:                     howto manager.      (line  675)
-* BFD_RELOC_SPARC13:                     howto manager.      (line  119)
-* BFD_RELOC_SPARC22:                     howto manager.      (line  118)
-* BFD_RELOC_SPARC_10:                    howto manager.      (line  141)
-* BFD_RELOC_SPARC_11:                    howto manager.      (line  142)
-* BFD_RELOC_SPARC_5:                     howto manager.      (line  154)
-* BFD_RELOC_SPARC_6:                     howto manager.      (line  153)
-* BFD_RELOC_SPARC_64:                    howto manager.      (line  140)
-* BFD_RELOC_SPARC_7:                     howto manager.      (line  152)
-* BFD_RELOC_SPARC_BASE13:                howto manager.      (line  136)
-* BFD_RELOC_SPARC_BASE22:                howto manager.      (line  137)
-* BFD_RELOC_SPARC_COPY:                  howto manager.      (line  126)
-* BFD_RELOC_SPARC_DISP64:                howto manager.      (line  155)
-* BFD_RELOC_SPARC_GLOB_DAT:              howto manager.      (line  127)
-* BFD_RELOC_SPARC_GOT10:                 howto manager.      (line  120)
-* BFD_RELOC_SPARC_GOT13:                 howto manager.      (line  121)
-* BFD_RELOC_SPARC_GOT22:                 howto manager.      (line  122)
-* BFD_RELOC_SPARC_H44:                   howto manager.      (line  160)
-* BFD_RELOC_SPARC_HH22:                  howto manager.      (line  144)
-* BFD_RELOC_SPARC_HIX22:                 howto manager.      (line  158)
-* BFD_RELOC_SPARC_HM10:                  howto manager.      (line  145)
-* BFD_RELOC_SPARC_JMP_SLOT:              howto manager.      (line  128)
-* BFD_RELOC_SPARC_L44:                   howto manager.      (line  162)
-* BFD_RELOC_SPARC_LM22:                  howto manager.      (line  146)
-* BFD_RELOC_SPARC_LOX10:                 howto manager.      (line  159)
-* BFD_RELOC_SPARC_M44:                   howto manager.      (line  161)
-* BFD_RELOC_SPARC_OLO10:                 howto manager.      (line  143)
-* BFD_RELOC_SPARC_PC10:                  howto manager.      (line  123)
-* BFD_RELOC_SPARC_PC22:                  howto manager.      (line  124)
-* BFD_RELOC_SPARC_PC_HH22:               howto manager.      (line  147)
-* BFD_RELOC_SPARC_PC_HM10:               howto manager.      (line  148)
-* BFD_RELOC_SPARC_PC_LM22:               howto manager.      (line  149)
-* BFD_RELOC_SPARC_PLT32:                 howto manager.      (line  156)
-* BFD_RELOC_SPARC_PLT64:                 howto manager.      (line  157)
-* BFD_RELOC_SPARC_REGISTER:              howto manager.      (line  163)
-* BFD_RELOC_SPARC_RELATIVE:              howto manager.      (line  129)
-* BFD_RELOC_SPARC_REV32:                 howto manager.      (line  166)
-* BFD_RELOC_SPARC_TLS_DTPMOD32:          howto manager.      (line  187)
-* BFD_RELOC_SPARC_TLS_DTPMOD64:          howto manager.      (line  188)
-* BFD_RELOC_SPARC_TLS_DTPOFF32:          howto manager.      (line  189)
-* BFD_RELOC_SPARC_TLS_DTPOFF64:          howto manager.      (line  190)
-* BFD_RELOC_SPARC_TLS_GD_ADD:            howto manager.      (line  171)
-* BFD_RELOC_SPARC_TLS_GD_CALL:           howto manager.      (line  172)
-* BFD_RELOC_SPARC_TLS_GD_HI22:           howto manager.      (line  169)
-* BFD_RELOC_SPARC_TLS_GD_LO10:           howto manager.      (line  170)
-* BFD_RELOC_SPARC_TLS_IE_ADD:            howto manager.      (line  184)
-* BFD_RELOC_SPARC_TLS_IE_HI22:           howto manager.      (line  180)
-* BFD_RELOC_SPARC_TLS_IE_LD:             howto manager.      (line  182)
-* BFD_RELOC_SPARC_TLS_IE_LDX:            howto manager.      (line  183)
-* BFD_RELOC_SPARC_TLS_IE_LO10:           howto manager.      (line  181)
-* BFD_RELOC_SPARC_TLS_LDM_ADD:           howto manager.      (line  175)
-* BFD_RELOC_SPARC_TLS_LDM_CALL:          howto manager.      (line  176)
-* BFD_RELOC_SPARC_TLS_LDM_HI22:          howto manager.      (line  173)
-* BFD_RELOC_SPARC_TLS_LDM_LO10:          howto manager.      (line  174)
-* BFD_RELOC_SPARC_TLS_LDO_ADD:           howto manager.      (line  179)
-* BFD_RELOC_SPARC_TLS_LDO_HIX22:         howto manager.      (line  177)
-* BFD_RELOC_SPARC_TLS_LDO_LOX10:         howto manager.      (line  178)
-* BFD_RELOC_SPARC_TLS_LE_HIX22:          howto manager.      (line  185)
-* BFD_RELOC_SPARC_TLS_LE_LOX10:          howto manager.      (line  186)
-* BFD_RELOC_SPARC_TLS_TPOFF32:           howto manager.      (line  191)
-* BFD_RELOC_SPARC_TLS_TPOFF64:           howto manager.      (line  192)
-* BFD_RELOC_SPARC_UA16:                  howto manager.      (line  130)
-* BFD_RELOC_SPARC_UA32:                  howto manager.      (line  131)
-* BFD_RELOC_SPARC_UA64:                  howto manager.      (line  132)
-* BFD_RELOC_SPARC_WDISP16:               howto manager.      (line  150)
-* BFD_RELOC_SPARC_WDISP19:               howto manager.      (line  151)
-* BFD_RELOC_SPARC_WDISP22:               howto manager.      (line  117)
-* BFD_RELOC_SPARC_WPLT30:                howto manager.      (line  125)
-* BFD_RELOC_THUMB_PCREL_BLX:             howto manager.      (line  601)
-* BFD_RELOC_THUMB_PCREL_BRANCH12:        howto manager.      (line  749)
-* BFD_RELOC_THUMB_PCREL_BRANCH23:        howto manager.      (line  750)
-* BFD_RELOC_THUMB_PCREL_BRANCH9:         howto manager.      (line  748)
-* BFD_RELOC_TIC30_LDP:                   howto manager.      (line  956)
-* BFD_RELOC_TIC54X_16_OF_23:             howto manager.      (line  974)
-* BFD_RELOC_TIC54X_23:                   howto manager.      (line  971)
-* BFD_RELOC_TIC54X_MS7_OF_23:            howto manager.      (line  979)
-* BFD_RELOC_TIC54X_PARTLS7:              howto manager.      (line  961)
-* BFD_RELOC_TIC54X_PARTMS9:              howto manager.      (line  966)
-* bfd_reloc_type_lookup:                 howto manager.      (line 1693)
-* BFD_RELOC_V850_22_PCREL:               howto manager.      (line  883)
-* BFD_RELOC_V850_9_PCREL:                howto manager.      (line  880)
-* BFD_RELOC_V850_ALIGN:                  howto manager.      (line  941)
-* BFD_RELOC_V850_CALLT_16_16_OFFSET:     howto manager.      (line  932)
-* BFD_RELOC_V850_CALLT_6_7_OFFSET:       howto manager.      (line  929)
-* BFD_RELOC_V850_LO16_SPLIT_OFFSET:      howto manager.      (line  944)
-* BFD_RELOC_V850_LONGCALL:               howto manager.      (line  935)
-* BFD_RELOC_V850_LONGJUMP:               howto manager.      (line  938)
-* BFD_RELOC_V850_SDA_15_16_OFFSET:       howto manager.      (line  889)
-* BFD_RELOC_V850_SDA_16_16_OFFSET:       howto manager.      (line  886)
-* BFD_RELOC_V850_SDA_16_16_SPLIT_OFFSET: howto manager.      (line  921)
-* BFD_RELOC_V850_TDA_16_16_OFFSET:       howto manager.      (line  911)
-* BFD_RELOC_V850_TDA_4_4_OFFSET:         howto manager.      (line  918)
-* BFD_RELOC_V850_TDA_4_5_OFFSET:         howto manager.      (line  914)
-* BFD_RELOC_V850_TDA_6_8_OFFSET:         howto manager.      (line  900)
-* BFD_RELOC_V850_TDA_7_7_OFFSET:         howto manager.      (line  908)
-* BFD_RELOC_V850_TDA_7_8_OFFSET:         howto manager.      (line  904)
-* BFD_RELOC_V850_ZDA_15_16_OFFSET:       howto manager.      (line  896)
-* BFD_RELOC_V850_ZDA_16_16_OFFSET:       howto manager.      (line  893)
-* BFD_RELOC_V850_ZDA_16_16_SPLIT_OFFSET: howto manager.      (line  925)
-* BFD_RELOC_VAX_GLOB_DAT:                howto manager.      (line 1594)
-* BFD_RELOC_VAX_JMP_SLOT:                howto manager.      (line 1595)
-* BFD_RELOC_VAX_RELATIVE:                howto manager.      (line 1596)
-* BFD_RELOC_VPE4KMATH_DATA:              howto manager.      (line 1291)
-* BFD_RELOC_VPE4KMATH_INSN:              howto manager.      (line 1292)
-* BFD_RELOC_VTABLE_ENTRY:                howto manager.      (line 1296)
-* BFD_RELOC_VTABLE_INHERIT:              howto manager.      (line 1295)
-* BFD_RELOC_X86_64_32S:                  howto manager.      (line  449)
-* BFD_RELOC_X86_64_COPY:                 howto manager.      (line  444)
-* BFD_RELOC_X86_64_DTPMOD64:             howto manager.      (line  450)
-* BFD_RELOC_X86_64_DTPOFF32:             howto manager.      (line  455)
-* BFD_RELOC_X86_64_DTPOFF64:             howto manager.      (line  451)
-* BFD_RELOC_X86_64_GLOB_DAT:             howto manager.      (line  445)
-* BFD_RELOC_X86_64_GOT32:                howto manager.      (line  442)
-* BFD_RELOC_X86_64_GOTPCREL:             howto manager.      (line  448)
-* BFD_RELOC_X86_64_GOTTPOFF:             howto manager.      (line  456)
-* BFD_RELOC_X86_64_JUMP_SLOT:            howto manager.      (line  446)
-* BFD_RELOC_X86_64_PLT32:                howto manager.      (line  443)
-* BFD_RELOC_X86_64_RELATIVE:             howto manager.      (line  447)
-* BFD_RELOC_X86_64_TLSGD:                howto manager.      (line  453)
-* BFD_RELOC_X86_64_TLSLD:                howto manager.      (line  454)
-* BFD_RELOC_X86_64_TPOFF32:              howto manager.      (line  457)
-* BFD_RELOC_X86_64_TPOFF64:              howto manager.      (line  452)
-* BFD_RELOC_XSTORMY16_12:                howto manager.      (line 1589)
-* BFD_RELOC_XSTORMY16_24:                howto manager.      (line 1590)
-* BFD_RELOC_XSTORMY16_FPTR16:            howto manager.      (line 1591)
-* BFD_RELOC_XSTORMY16_REL_12:            howto manager.      (line 1588)
-* BFD_RELOC_XTENSA_ASM_EXPAND:           howto manager.      (line 1682)
-* BFD_RELOC_XTENSA_ASM_SIMPLIFY:         howto manager.      (line 1687)
-* BFD_RELOC_XTENSA_DIFF16:               howto manager.      (line 1629)
-* BFD_RELOC_XTENSA_DIFF32:               howto manager.      (line 1630)
-* BFD_RELOC_XTENSA_DIFF8:                howto manager.      (line 1628)
-* BFD_RELOC_XTENSA_GLOB_DAT:             howto manager.      (line 1618)
-* BFD_RELOC_XTENSA_JMP_SLOT:             howto manager.      (line 1619)
-* BFD_RELOC_XTENSA_OP0:                  howto manager.      (line 1676)
-* BFD_RELOC_XTENSA_OP1:                  howto manager.      (line 1677)
-* BFD_RELOC_XTENSA_OP2:                  howto manager.      (line 1678)
-* BFD_RELOC_XTENSA_PLT:                  howto manager.      (line 1623)
-* BFD_RELOC_XTENSA_RELATIVE:             howto manager.      (line 1620)
-* BFD_RELOC_XTENSA_RTLD:                 howto manager.      (line 1613)
-* BFD_RELOC_XTENSA_SLOT0_ALT:            howto manager.      (line 1658)
-* BFD_RELOC_XTENSA_SLOT0_OP:             howto manager.      (line 1638)
-* BFD_RELOC_XTENSA_SLOT10_ALT:           howto manager.      (line 1668)
-* BFD_RELOC_XTENSA_SLOT10_OP:            howto manager.      (line 1648)
-* BFD_RELOC_XTENSA_SLOT11_ALT:           howto manager.      (line 1669)
-* BFD_RELOC_XTENSA_SLOT11_OP:            howto manager.      (line 1649)
-* BFD_RELOC_XTENSA_SLOT12_ALT:           howto manager.      (line 1670)
-* BFD_RELOC_XTENSA_SLOT12_OP:            howto manager.      (line 1650)
-* BFD_RELOC_XTENSA_SLOT13_ALT:           howto manager.      (line 1671)
-* BFD_RELOC_XTENSA_SLOT13_OP:            howto manager.      (line 1651)
-* BFD_RELOC_XTENSA_SLOT14_ALT:           howto manager.      (line 1672)
-* BFD_RELOC_XTENSA_SLOT14_OP:            howto manager.      (line 1652)
-* BFD_RELOC_XTENSA_SLOT1_ALT:            howto manager.      (line 1659)
-* BFD_RELOC_XTENSA_SLOT1_OP:             howto manager.      (line 1639)
-* BFD_RELOC_XTENSA_SLOT2_ALT:            howto manager.      (line 1660)
-* BFD_RELOC_XTENSA_SLOT2_OP:             howto manager.      (line 1640)
-* BFD_RELOC_XTENSA_SLOT3_ALT:            howto manager.      (line 1661)
-* BFD_RELOC_XTENSA_SLOT3_OP:             howto manager.      (line 1641)
-* BFD_RELOC_XTENSA_SLOT4_ALT:            howto manager.      (line 1662)
-* BFD_RELOC_XTENSA_SLOT4_OP:             howto manager.      (line 1642)
-* BFD_RELOC_XTENSA_SLOT5_ALT:            howto manager.      (line 1663)
-* BFD_RELOC_XTENSA_SLOT5_OP:             howto manager.      (line 1643)
-* BFD_RELOC_XTENSA_SLOT6_ALT:            howto manager.      (line 1664)
-* BFD_RELOC_XTENSA_SLOT6_OP:             howto manager.      (line 1644)
-* BFD_RELOC_XTENSA_SLOT7_ALT:            howto manager.      (line 1665)
-* BFD_RELOC_XTENSA_SLOT7_OP:             howto manager.      (line 1645)
-* BFD_RELOC_XTENSA_SLOT8_ALT:            howto manager.      (line 1666)
-* BFD_RELOC_XTENSA_SLOT8_OP:             howto manager.      (line 1646)
-* BFD_RELOC_XTENSA_SLOT9_ALT:            howto manager.      (line 1667)
-* BFD_RELOC_XTENSA_SLOT9_OP:             howto manager.      (line 1647)
-* bfd_scan_arch:                         Architectures.      (line  369)
-* bfd_scan_vma:                          BFD front end.      (line  420)
-* bfd_seach_for_target:                  bfd_target.         (line  445)
-* bfd_section_already_linked:            Writing the symbol table.
-                                                             (line   55)
-* bfd_section_list_clear:                section prototypes. (line    8)
-* bfd_sections_find_if:                  section prototypes. (line  145)
-* bfd_set_arch_info:                     Architectures.      (line  410)
-* bfd_set_archive_head:                  Archives.           (line   66)
-* bfd_set_default_target:                bfd_target.         (line  410)
-* bfd_set_error:                         BFD front end.      (line  235)
-* bfd_set_error_handler:                 BFD front end.      (line  275)
-* bfd_set_error_program_name:            BFD front end.      (line  284)
-* bfd_set_file_flags:                    BFD front end.      (line  340)
-* bfd_set_format:                        Formats.            (line   65)
-* bfd_set_gp_size:                       BFD front end.      (line  410)
-* bfd_set_private_flags:                 BFD front end.      (line  487)
-* bfd_set_reloc:                         BFD front end.      (line  330)
-* bfd_set_section_contents:              section prototypes. (line  176)
-* bfd_set_section_flags:                 section prototypes. (line  109)
-* bfd_set_section_size:                  section prototypes. (line  162)
-* bfd_set_start_address:                 BFD front end.      (line  389)
-* bfd_set_symtab:                        symbol handling functions.
-                                                             (line   60)
-* bfd_symbol_info:                       symbol handling functions.
-                                                             (line  130)
-* bfd_target_list:                       bfd_target.         (line  436)
-* bfd_write_bigendian_4byte_int:         Internal.           (line   10)
-* bfd_zalloc:                            Opening and Closing.
-                                                             (line  188)
-* coff_symbol_type:                      coff.               (line  186)
-* core_file_matches_executable_p:        Core Files.         (line   27)
-* find_separate_debug_file:              Opening and Closing.
-                                                             (line  230)
-* get_debug_link_info:                   Opening and Closing.
-                                                             (line  211)
-* Hash tables:                           Hash Tables.        (line    6)
-* internal object-file format:           Canonical format.   (line   11)
-* Linker:                                Linker Functions.   (line    6)
-* Other functions:                       BFD front end.      (line  502)
-* separate_debug_file_exists:            Opening and Closing.
-                                                             (line  221)
-* struct bfd_iovec:                      BFD front end.      (line  646)
-* target vector (_bfd_final_link):       Performing the Final Link.
-                                                             (line    6)
-* target vector (_bfd_link_add_symbols): Adding Symbols to the Hash Table.
-                                                             (line    6)
-* target vector (_bfd_link_hash_table_create): Creating a Linker Hash Table.
-                                                             (line    6)
-* The HOWTO Macro:                       typedef arelent.    (line  290)
-* what is it?:                           Overview.           (line    6)
-
-
diff -urN binutils-2.16.1/bfd/elf32-arm.c binutils-2.16.1-STEP/bfd/elf32-arm.c
--- binutils-2.16.1/bfd/elf32-arm.c	2005-05-03 07:43:06.000000000 +1200
+++ binutils-2.16.1-STEP/bfd/elf32-arm.c	2005-09-02 11:16:19.302384168 +1200
@@ -1005,7 +1005,7 @@
 
 /* The name of the dynamic interpreter.  This is put in the .interp
    section.  */
-#define ELF_DYNAMIC_INTERPRETER     "/usr/lib/ld.so.1"
+#define ELF_DYNAMIC_INTERPRETER     "/System/Library/Libraries/ld.so.1"
 
 #ifdef FOUR_WORD_PLT
 
diff -urN binutils-2.16.1/bfd/elf32-i386.c binutils-2.16.1-STEP/bfd/elf32-i386.c
--- binutils-2.16.1/bfd/elf32-i386.c	2005-06-13 05:37:58.000000000 +1200
+++ binutils-2.16.1-STEP/bfd/elf32-i386.c	2005-09-02 11:16:19.309383104 +1200
@@ -458,7 +458,7 @@
 /* The name of the dynamic interpreter.  This is put in the .interp
    section.  */
 
-#define ELF_DYNAMIC_INTERPRETER "/usr/lib/libc.so.1"
+#define ELF_DYNAMIC_INTERPRETER "/System/Library/Libraries/libc.so.1"
 
 /* If ELIMINATE_COPY_RELOCS is non-zero, the linker will try to avoid
    copying dynamic variables from a shared lib into an app's dynbss
diff -urN binutils-2.16.1/bfd/elf32-m32r.c binutils-2.16.1-STEP/bfd/elf32-m32r.c
--- binutils-2.16.1/bfd/elf32-m32r.c	2005-02-12 06:18:41.000000000 +1300
+++ binutils-2.16.1-STEP/bfd/elf32-m32r.c	2005-09-02 11:16:19.314382344 +1200
@@ -122,7 +122,7 @@
 /* The name of the dynamic interpreter.  This is put in the .interp
    section.  */
 
-#define ELF_DYNAMIC_INTERPRETER "/usr/lib/libc.so.1"
+#define ELF_DYNAMIC_INTERPRETER "/System/Library/Libraries/libc.so.1"
 
 /* The nop opcode we use.  */
 
diff -urN binutils-2.16.1/bfd/elf32-m68k.c binutils-2.16.1-STEP/bfd/elf32-m68k.c
--- binutils-2.16.1/bfd/elf32-m68k.c	2005-02-21 03:59:06.000000000 +1300
+++ binutils-2.16.1-STEP/bfd/elf32-m68k.c	2005-09-02 11:16:19.317381888 +1200
@@ -187,7 +187,7 @@
 /* The name of the dynamic interpreter.  This is put in the .interp
    section.  */
 
-#define ELF_DYNAMIC_INTERPRETER "/usr/lib/libc.so.1"
+#define ELF_DYNAMIC_INTERPRETER "/System/Library/Libraries/libc.so.1"
 
 /* The size in bytes of an entry in the procedure linkage table.  */
 
diff -urN binutils-2.16.1/bfd/elf32-ppc.c binutils-2.16.1-STEP/bfd/elf32-ppc.c
--- binutils-2.16.1/bfd/elf32-ppc.c	2005-04-20 05:09:30.000000000 +1200
+++ binutils-2.16.1-STEP/bfd/elf32-ppc.c	2005-09-02 11:16:19.326380520 +1200
@@ -49,7 +49,7 @@
 
 /* The name of the dynamic interpreter.  This is put in the .interp
    section.  */
-#define ELF_DYNAMIC_INTERPRETER "/usr/lib/ld.so.1"
+#define ELF_DYNAMIC_INTERPRETER "/System/Library/Libraries/ld.so.1"
 
 /* The size in bytes of an entry in the procedure linkage table.  */
 #define PLT_ENTRY_SIZE 12
diff -urN binutils-2.16.1/bfd/elf32-s390.c binutils-2.16.1-STEP/bfd/elf32-s390.c
--- binutils-2.16.1/bfd/elf32-s390.c	2005-01-11 22:32:50.000000000 +1300
+++ binutils-2.16.1-STEP/bfd/elf32-s390.c	2005-09-02 11:16:19.342378088 +1200
@@ -453,7 +453,7 @@
 /* The name of the dynamic interpreter.  This is put in the .interp
    section.  */
 
-#define ELF_DYNAMIC_INTERPRETER "/usr/lib/ld.so.1"
+#define ELF_DYNAMIC_INTERPRETER "/System/Library/Libraries/ld.so.1"
 
 /* If ELIMINATE_COPY_RELOCS is non-zero, the linker will try to avoid
    copying dynamic variables from a shared lib into an app's dynbss
diff -urN binutils-2.16.1/bfd/elf32-sh.c binutils-2.16.1-STEP/bfd/elf32-sh.c
--- binutils-2.16.1/bfd/elf32-sh.c	2005-02-21 03:59:06.000000000 +1300
+++ binutils-2.16.1-STEP/bfd/elf32-sh.c	2005-09-02 11:16:19.350376872 +1200
@@ -50,7 +50,7 @@
 /* The name of the dynamic interpreter.  This is put in the .interp
    section.  */
 
-#define ELF_DYNAMIC_INTERPRETER "/usr/lib/libc.so.1"
+#define ELF_DYNAMIC_INTERPRETER "/System/Library/Libraries/libc.so.1"
 
 static reloc_howto_type sh_elf_howto_table[] =
 {
diff -urN binutils-2.16.1/bfd/elf32-sparc.c binutils-2.16.1-STEP/bfd/elf32-sparc.c
--- binutils-2.16.1/bfd/elf32-sparc.c	2005-01-11 22:32:51.000000000 +1300
+++ binutils-2.16.1-STEP/bfd/elf32-sparc.c	2005-09-02 11:16:19.354376264 +1200
@@ -538,7 +538,7 @@
 /* The name of the dynamic interpreter.  This is put in the .interp
    section.  */
 
-#define ELF_DYNAMIC_INTERPRETER "/usr/lib/ld.so.1"
+#define ELF_DYNAMIC_INTERPRETER "/System/Library/Libraries/ld.so.1"
 
 /* The nop opcode we use.  */
 
diff -urN binutils-2.16.1/bfd/elf64-alpha.c binutils-2.16.1-STEP/bfd/elf64-alpha.c
--- binutils-2.16.1/bfd/elf64-alpha.c	2005-05-29 09:52:32.000000000 +1200
+++ binutils-2.16.1-STEP/bfd/elf64-alpha.c	2005-09-02 11:16:19.379372464 +1200
@@ -2286,7 +2286,7 @@
 
 #define MAX_GOT_SIZE		(64*1024)
 
-#define ELF_DYNAMIC_INTERPRETER "/usr/lib/ld.so"
+#define ELF_DYNAMIC_INTERPRETER "/System/Library/Libraries/ld.so"
 
 /* Handle an Alpha specific section when reading an object file.  This
    is called when elfcode.h finds a section with an unknown type.
diff -urN binutils-2.16.1/bfd/elf64-hppa.c binutils-2.16.1-STEP/bfd/elf64-hppa.c
--- binutils-2.16.1/bfd/elf64-hppa.c	2005-02-02 14:39:00.000000000 +1300
+++ binutils-2.16.1-STEP/bfd/elf64-hppa.c	2005-09-02 11:16:19.383371856 +1200
@@ -32,7 +32,7 @@
 #define DLT_ENTRY_SIZE 0x8
 #define OPD_ENTRY_SIZE 0x20
 
-#define ELF_DYNAMIC_INTERPRETER "/usr/lib/pa20_64/dld.sl"
+#define ELF_DYNAMIC_INTERPRETER "/System/Library/Libraries/pa20_64/dld.sl"
 
 /* The stub is supposed to load the target address and target's DP
    value out of the PLT, then do an external branch to the target
diff -urN binutils-2.16.1/bfd/elf64-ppc.c binutils-2.16.1-STEP/bfd/elf64-ppc.c
--- binutils-2.16.1/bfd/elf64-ppc.c	2005-06-13 05:37:59.000000000 +1200
+++ binutils-2.16.1-STEP/bfd/elf64-ppc.c	2005-09-02 11:16:19.393370336 +1200
@@ -105,7 +105,7 @@
 
 /* The name of the dynamic interpreter.  This is put in the .interp
    section.  */
-#define ELF_DYNAMIC_INTERPRETER "/usr/lib/ld.so.1"
+#define ELF_DYNAMIC_INTERPRETER "/System/Library/Libraries/ld.so.1"
 
 /* The size in bytes of an entry in the procedure linkage table.  */
 #define PLT_ENTRY_SIZE 24
diff -urN binutils-2.16.1/bfd/elf64-s390.c binutils-2.16.1-STEP/bfd/elf64-s390.c
--- binutils-2.16.1/bfd/elf64-s390.c	2005-01-11 22:32:52.000000000 +1300
+++ binutils-2.16.1-STEP/bfd/elf64-s390.c	2005-09-02 11:16:19.403368816 +1200
@@ -474,7 +474,7 @@
 /* The name of the dynamic interpreter.  This is put in the .interp
    section.  */
 
-#define ELF_DYNAMIC_INTERPRETER "/usr/lib/ld.so.1"
+#define ELF_DYNAMIC_INTERPRETER "/System/Library/Libraries/ld.so.1"
 
 /* If ELIMINATE_COPY_RELOCS is non-zero, the linker will try to avoid
    copying dynamic variables from a shared lib into an app's dynbss
diff -urN binutils-2.16.1/bfd/elf64-sh64.c binutils-2.16.1-STEP/bfd/elf64-sh64.c
--- binutils-2.16.1/bfd/elf64-sh64.c	2005-02-21 03:59:06.000000000 +1300
+++ binutils-2.16.1-STEP/bfd/elf64-sh64.c	2005-09-02 11:16:19.411367600 +1200
@@ -55,7 +55,7 @@
 /* Return offset of the relocation in PLT entry.  */
 #define elf_sh64_plt_reloc_offset(info) (info->shared ? 52 : 44)
 
-#define ELF_DYNAMIC_INTERPRETER "/usr/lib/libc.so.1"
+#define ELF_DYNAMIC_INTERPRETER "/System/Library/Libraries/libc.so.1"
 
 /* The sh linker needs to keep track of the number of relocs that it
    decides to copy in check_relocs for each symbol.  This is so that
diff -urN binutils-2.16.1/bfd/elf64-sparc.c binutils-2.16.1-STEP/bfd/elf64-sparc.c
--- binutils-2.16.1/bfd/elf64-sparc.c	2005-03-04 00:41:00.000000000 +1300
+++ binutils-2.16.1-STEP/bfd/elf64-sparc.c	2005-09-02 11:16:19.424365624 +1200
@@ -1021,7 +1021,7 @@
 #define LARGE_PLT_THRESHOLD	32768
 #define GOT_RESERVED_ENTRIES	1
 
-#define ELF_DYNAMIC_INTERPRETER "/usr/lib/sparcv9/ld.so.1"
+#define ELF_DYNAMIC_INTERPRETER "/System/Library/Libraries/sparcv9/ld.so.1"
 
 /* Fill in the .plt section.  */
 
diff -urN binutils-2.16.1/bfd/elfxx-ia64.c binutils-2.16.1-STEP/bfd/elfxx-ia64.c
--- binutils-2.16.1/bfd/elfxx-ia64.c	2005-02-16 17:45:23.000000000 +1300
+++ binutils-2.16.1-STEP/bfd/elfxx-ia64.c	2005-09-02 11:16:19.437363648 +1200
@@ -643,7 +643,7 @@
   0x60, 0x00, 0x80, 0x00               /*               br.few b6;;        */
 };
 
-#define ELF_DYNAMIC_INTERPRETER "/usr/lib/ld.so.1"
+#define ELF_DYNAMIC_INTERPRETER "/System/Library/Libraries/ld.so.1"
 
 static const bfd_byte oor_brl[16] =
 {
diff -urN binutils-2.16.1/bfd/elfxx-mips.c binutils-2.16.1-STEP/bfd/elfxx-mips.c
--- binutils-2.16.1/bfd/elfxx-mips.c	2005-05-29 09:58:29.000000000 +1200
+++ binutils-2.16.1-STEP/bfd/elfxx-mips.c	2005-09-02 11:16:19.456360760 +1200
@@ -578,7 +578,7 @@
 #define ELF_DYNAMIC_INTERPRETER(abfd) 		\
    (ABI_N32_P (abfd) ? "/usr/lib32/libc.so.1" 	\
     : ABI_64_P (abfd) ? "/usr/lib64/libc.so.1" 	\
-    : "/usr/lib/libc.so.1")
+    : "/System/Library/Libraries/libc.so.1")
 
 #ifdef BFD64
 #define MNAME(bfd,pre,pos) \
diff -urN binutils-2.16.1/bfd/po/Make-in binutils-2.16.1-STEP/bfd/po/Make-in
--- binutils-2.16.1/bfd/po/Make-in	2005-03-04 00:41:03.000000000 +1300
+++ binutils-2.16.1-STEP/bfd/po/Make-in	2005-09-02 11:16:19.509352704 +1200
@@ -10,7 +10,7 @@
 PACKAGE = @PACKAGE@
 VERSION = @VERSION@
 
-SHELL = /bin/sh
+SHELL = /System/Tools/sh
 @SET_MAKE@
 
 srcdir = @srcdir@
@@ -219,7 +219,7 @@
 dist distdir: update-po $(DISTFILES)
 	dists="$(DISTFILES)"; \
 	for file in $$dists; do \
-	  ln $(srcdir)/$$file $(distdir) 2> /dev/null \
+	  ln $(srcdir)/$$file $(distdir) 2> /System/Devices/null \
 	    || cp -p $(srcdir)/$$file $(distdir); \
 	done
 
diff -urN binutils-2.16.1/binutils/ChangeLog-9197 binutils-2.16.1-STEP/binutils/ChangeLog-9197
--- binutils-2.16.1/binutils/ChangeLog-9197	2003-12-06 13:06:12.000000000 +1300
+++ binutils-2.16.1-STEP/binutils/ChangeLog-9197	2005-09-02 11:16:19.554345864 +1200
@@ -4227,7 +4227,7 @@
 
 	* strings.c (print_strings): Handle STREAM being NULL.
 	(strings_a_section): Pass a NULL.
-	(main): Don't open /dev/null.
+	(main): Don't open /System/Devices/null.
 
 Thu Jul 15 12:44:09 1993  Ian Lance Taylor  (ian@tweedledumb.cygnus.com)
 
@@ -4507,7 +4507,7 @@
 	except for texinfo/texinfo.tex.
 	* ardup.c:  Add extern declaration of strdup.
 	* Makefile.in (testsuite):  Add 'else true' since otherwise
-	Ultrix /bin/sh complains.
+	Ultrix /System/Tools/sh complains.
 
 Wed Feb 24 19:44:18 1993  Per Bothner  (bothner@rtl.cygnus.com)
 
diff -urN binutils-2.16.1/binutils/Makefile.am binutils-2.16.1-STEP/binutils/Makefile.am
--- binutils-2.16.1/binutils/Makefile.am	2005-02-23 01:57:26.000000000 +1300
+++ binutils-2.16.1-STEP/binutils/Makefile.am	2005-09-02 11:16:19.627334768 +1200
@@ -149,7 +149,7 @@
 	  export TCL_LIBRARY; \
 	fi; \
 	runtest=$(RUNTEST); \
-	if $(SHELL) -c "$$runtest --version" > /dev/null 2>&1; then \
+	if $(SHELL) -c "$$runtest --version" > /System/Devices/null 2>&1; then \
 	  CC_FOR_TARGET="$(CC_FOR_TARGET)" CFLAGS_FOR_TARGET="$(CFLAGS)" \
 		$$runtest --tool $(DEJATOOL) --srcdir $${srcdir}/testsuite \
 			$(RUNTESTFLAGS); \
@@ -157,7 +157,7 @@
 	fi
 
 installcheck:
-	/bin/sh $(srcdir)/sanity.sh $(bindir)
+	/System/Tools/sh $(srcdir)/sanity.sh $(bindir)
 
 LDADD = $(BFDLIB) $(LIBIBERTY) $(INTLLIBS)
 
@@ -290,7 +290,7 @@
 	$(MAKE) MKDEP="$(MKDEP)" DEP1
 	sed -f dep.sed < DEP1 > DEPA
 	echo '# IF YOU PUT ANYTHING HERE IT WILL GO AWAY' >> DEPA
-	if grep ' /' DEPA > /dev/null 2> /dev/null; then \
+	if grep ' /' DEPA > /System/Devices/null 2> /System/Devices/null; then \
 	  echo 'make DEP failed!'; exit 1; \
 	else \
 	  mv -f DEPA $@; \
@@ -350,10 +350,10 @@
 	  if [ -f $$i$(EXEEXT) ]; then \
 	    j=`echo $$i | sed -e 's/-new//'`; \
 	    k=`echo $$j | sed '$(transform)'`; \
-	    if [ "$(bindir)/$$k" != "$(tooldir)/bin/$$j" ]; then \
-	      rm -f $(DESTDIR)$(tooldir)/bin/$$j$(EXEEXT); \
-	      ln $(DESTDIR)$(bindir)/$$k$(EXEEXT) $(DESTDIR)$(tooldir)/bin/$$j$(EXEEXT) >/dev/null 2>/dev/null \
-		|| $(LIBTOOL) --mode=install $(INSTALL_PROGRAM) $$i$(EXEEXT) $(DESTDIR)$(tooldir)/bin/$$j$(EXEEXT); \
+	    if [ "$(bindir)/$$k" != "$(tooldir)/bin$$j" ]; then \
+	      rm -f $(DESTDIR)$(tooldir)/bin$$j$(EXEEXT); \
+	      ln $(DESTDIR)$(bindir)/$$k$(EXEEXT) $(DESTDIR)$(tooldir)/bin$$j$(EXEEXT) >/System/Devices/null 2>/System/Devices/null \
+		|| $(LIBTOOL) --mode=install $(INSTALL_PROGRAM) $$i$(EXEEXT) $(DESTDIR)$(tooldir)/bin$$j$(EXEEXT); \
 	    fi; \
 	  else true; \
 	  fi; \
diff -urN binutils-2.16.1/binutils/Makefile.in binutils-2.16.1-STEP/binutils/Makefile.in
--- binutils-2.16.1/binutils/Makefile.in	2005-02-23 01:57:27.000000000 +1300
+++ binutils-2.16.1-STEP/binutils/Makefile.in	2005-09-02 11:16:19.630334312 +1200
@@ -485,7 +485,7 @@
 	cd $(top_builddir) \
 	  && CONFIG_FILES= CONFIG_HEADERS=config.h:config.in \
 	     $(SHELL) ./config.status
-	@echo timestamp > stamp-h 2> /dev/null
+	@echo timestamp > stamp-h 2> /System/Devices/null
 $(srcdir)/config.in: @MAINTAINER_MODE_TRUE@$(srcdir)/stamp-h.in
 	@if test ! -f $@; then \
 		rm -f $(srcdir)/stamp-h.in; \
@@ -493,7 +493,7 @@
 	else :; fi
 $(srcdir)/stamp-h.in: $(top_srcdir)/configure.in $(ACLOCAL_M4) 
 	cd $(top_srcdir) && $(AUTOHEADER)
-	@echo timestamp > $(srcdir)/stamp-h.in 2> /dev/null
+	@echo timestamp > $(srcdir)/stamp-h.in 2> /System/Devices/null
 
 mostlyclean-hdr:
 
@@ -796,7 +796,7 @@
 	    cp -pr $$d/$$file $(distdir)/$$file; \
 	  else \
 	    test -f $(distdir)/$$file \
-	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
+	    || ln $$d/$$file $(distdir)/$$file 2> /System/Devices/null \
 	    || cp -p $$d/$$file $(distdir)/$$file || :; \
 	  fi; \
 	done
@@ -949,7 +949,7 @@
 	  export TCL_LIBRARY; \
 	fi; \
 	runtest=$(RUNTEST); \
-	if $(SHELL) -c "$$runtest --version" > /dev/null 2>&1; then \
+	if $(SHELL) -c "$$runtest --version" > /System/Devices/null 2>&1; then \
 	  CC_FOR_TARGET="$(CC_FOR_TARGET)" CFLAGS_FOR_TARGET="$(CFLAGS)" \
 		$$runtest --tool $(DEJATOOL) --srcdir $${srcdir}/testsuite \
 			$(RUNTESTFLAGS); \
@@ -957,7 +957,7 @@
 	fi
 
 installcheck:
-	/bin/sh $(srcdir)/sanity.sh $(bindir)
+	/System/Tools/sh $(srcdir)/sanity.sh $(bindir)
 
 objdump.o:objdump.c
 	$(COMPILE) -c $(OBJDUMP_DEFS) $(srcdir)/objdump.c
@@ -1035,7 +1035,7 @@
 	$(MAKE) MKDEP="$(MKDEP)" DEP1
 	sed -f dep.sed < DEP1 > DEPA
 	echo '# IF YOU PUT ANYTHING HERE IT WILL GO AWAY' >> DEPA
-	if grep ' /' DEPA > /dev/null 2> /dev/null; then \
+	if grep ' /' DEPA > /System/Devices/null 2> /System/Devices/null; then \
 	  echo 'make DEP failed!'; exit 1; \
 	else \
 	  mv -f DEPA $@; \
@@ -1089,10 +1089,10 @@
 	  if [ -f $$i$(EXEEXT) ]; then \
 	    j=`echo $$i | sed -e 's/-new//'`; \
 	    k=`echo $$j | sed '$(transform)'`; \
-	    if [ "$(bindir)/$$k" != "$(tooldir)/bin/$$j" ]; then \
-	      rm -f $(DESTDIR)$(tooldir)/bin/$$j$(EXEEXT); \
-	      ln $(DESTDIR)$(bindir)/$$k$(EXEEXT) $(DESTDIR)$(tooldir)/bin/$$j$(EXEEXT) >/dev/null 2>/dev/null \
-		|| $(LIBTOOL) --mode=install $(INSTALL_PROGRAM) $$i$(EXEEXT) $(DESTDIR)$(tooldir)/bin/$$j$(EXEEXT); \
+	    if [ "$(bindir)/$$k" != "$(tooldir)/bin$$j" ]; then \
+	      rm -f $(DESTDIR)$(tooldir)/bin$$j$(EXEEXT); \
+	      ln $(DESTDIR)$(bindir)/$$k$(EXEEXT) $(DESTDIR)$(tooldir)/bin$$j$(EXEEXT) >/System/Devices/null 2>/System/Devices/null \
+		|| $(LIBTOOL) --mode=install $(INSTALL_PROGRAM) $$i$(EXEEXT) $(DESTDIR)$(tooldir)/bin$$j$(EXEEXT); \
 	    fi; \
 	  else true; \
 	  fi; \
diff -urN binutils-2.16.1/binutils/README binutils-2.16.1-STEP/binutils/README
--- binutils-2.16.1/binutils/README	2003-11-10 16:06:05.000000000 +1300
+++ binutils-2.16.1-STEP/binutils/README	2005-09-02 11:16:19.656330360 +1200
@@ -102,7 +102,7 @@
 binutils build process will not work.  In this case, run configure as
 usual.  Before running make, run this script:
 
-#!/bin/sh
+#!/System/Tools/sh
 MAKE_PROG="${MAKE-make}"
 MAKE="${MAKE_PROG} AR=true LINK=true"
 export MAKE
diff -urN binutils-2.16.1/binutils/aclocal.m4 binutils-2.16.1-STEP/binutils/aclocal.m4
--- binutils-2.16.1/binutils/aclocal.m4	2004-03-19 20:03:40.000000000 +1300
+++ binutils-2.16.1-STEP/binutils/aclocal.m4	2005-09-02 11:16:19.542347688 +1200
@@ -142,7 +142,7 @@
 # (eg FreeBSD returns the mod time of the symlink's containing
 # directory).
 if (
-   set X `ls -Lt $srcdir/configure conftestfile 2> /dev/null`
+   set X `ls -Lt $srcdir/configure conftestfile 2> /System/Devices/null`
    if test "[$]*" = "X"; then
       # -L didn't work.
       set X `ls -t $srcdir/configure conftestfile`
@@ -177,7 +177,7 @@
 # Run test in a subshell; some versions of sh will print an error if
 # an executable is not found, even if stderr is redirected.
 # Redirect stdin to placate older versions of autoconf.  Sigh.
-if ($2 --version) < /dev/null > /dev/null 2>&1; then
+if ($2 --version) < /System/Devices/null > /System/Devices/null 2>&1; then
    $1=$2
    AC_MSG_RESULT(found)
 else
diff -urN binutils-2.16.1/binutils/configure binutils-2.16.1-STEP/binutils/configure
--- binutils-2.16.1/binutils/configure	2005-03-23 03:31:04.000000000 +1200
+++ binutils-2.16.1-STEP/binutils/configure	2005-09-02 11:16:19.568343736 +1200
@@ -1,4 +1,4 @@
-#! /bin/sh
+#! /System/Tools/sh
 
 # Guess values for system-dependent variables and create Makefiles.
 # Generated automatically using autoconf version 2.13 
@@ -74,7 +74,7 @@
 # Initialize some other variables.
 subdirs=
 MFLAGS= MAKEFLAGS=
-SHELL=${CONFIG_SHELL-/bin/sh}
+SHELL=${CONFIG_SHELL-/System/Tools/sh}
 # Maximum number of lines to put in a shell here document.
 ac_max_here_lines=12
 
@@ -427,12 +427,12 @@
 # 0 standard input
 # 1 file creation
 # 2 errors and warnings
-# 3 some systems may open it to /dev/tty
+# 3 some systems may open it to /System/Devices/tty
 # 4 used on the Kubota Titan
 # 6 checking for... messages and results
 # 5 compiler messages saved in config.log
 if test "$silent" = yes; then
-  exec 6>/dev/null
+  exec 6>/System/Devices/null
 else
   exec 6>&1
 fi
@@ -533,9 +533,9 @@
 
 ac_exeext=
 ac_objext=o
-if (echo "testing\c"; echo 1,2,3) | grep c >/dev/null; then
+if (echo "testing\c"; echo 1,2,3) | grep c >/System/Devices/null; then
   # Stardent Vistra SVR4 grep lacks -e, says ghazi@caip.rutgers.edu.
-  if (echo -n testing; echo 1,2,3) | sed s/-n/xn/ | grep xn >/dev/null; then
+  if (echo -n testing; echo 1,2,3) | sed s/-n/xn/ | grep xn >/System/Devices/null; then
     ac_n= ac_c='
 ' ac_t='	'
   else
@@ -651,7 +651,7 @@
 
 
 # Make sure we can run config.sub.
-if ${CONFIG_SHELL-/bin/sh} $ac_config_sub sun4 >/dev/null 2>&1; then :
+if ${CONFIG_SHELL-/System/Tools/sh} $ac_config_sub sun4 >/System/Devices/null 2>&1; then :
 else { echo "configure: error: can not run $ac_config_sub" 1>&2; exit 1; }
 fi
 
@@ -663,14 +663,14 @@
 NONE)
   case $nonopt in
   NONE)
-    if host_alias=`${CONFIG_SHELL-/bin/sh} $ac_config_guess`; then :
+    if host_alias=`${CONFIG_SHELL-/System/Tools/sh} $ac_config_guess`; then :
     else { echo "configure: error: can not guess host type; you must specify one" 1>&2; exit 1; }
     fi ;;
   *) host_alias=$nonopt ;;
   esac ;;
 esac
 
-host=`${CONFIG_SHELL-/bin/sh} $ac_config_sub $host_alias`
+host=`${CONFIG_SHELL-/System/Tools/sh} $ac_config_sub $host_alias`
 host_cpu=`echo $host | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\1/'`
 host_vendor=`echo $host | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\2/'`
 host_os=`echo $host | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\3/'`
@@ -688,7 +688,7 @@
   esac ;;
 esac
 
-target=`${CONFIG_SHELL-/bin/sh} $ac_config_sub $target_alias`
+target=`${CONFIG_SHELL-/System/Tools/sh} $ac_config_sub $target_alias`
 target_cpu=`echo $target | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\1/'`
 target_vendor=`echo $target | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\2/'`
 target_os=`echo $target | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\3/'`
@@ -706,7 +706,7 @@
   esac ;;
 esac
 
-build=`${CONFIG_SHELL-/bin/sh} $ac_config_sub $build_alias`
+build=`${CONFIG_SHELL-/System/Tools/sh} $ac_config_sub $build_alias`
 build_cpu=`echo $build | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\1/'`
 build_vendor=`echo $build | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\2/'`
 build_os=`echo $build | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\3/'`
@@ -766,12 +766,12 @@
 # Find a good install program.  We prefer a C program (faster),
 # so one script is as good as another.  But avoid the broken or
 # incompatible versions:
-# SysV /etc/install, /usr/sbin/install
+# SysV/System/Settings/install, /usr/System/AdminTools/install
 # SunOS /usr/etc/install
-# IRIX /sbin/install
-# AIX /bin/install
-# AIX 4 /usr/bin/installbsd, which doesn't work without a -g flag
-# AFS /usr/afsws/bin/install, which mishandles nonexistent args
+# IRIX /System/AdminTools/install
+# AIX /System/Tools/install
+# AIX 4 /System/Tools/installbsd, which doesn't work without a -g flag
+# AFS /usr/afsws/System/Tools/install, which mishandles nonexistent args
 # SVR4 /usr/ucb/install, which tries to use the nonexistent group "staff"
 # ./install, which can be erroneously created by make from ./install.sh.
 echo $ac_n "checking for a BSD compatible install""... $ac_c" 1>&6
@@ -784,7 +784,7 @@
   for ac_dir in $PATH; do
     # Account for people who put trailing slashes in PATH elements.
     case "$ac_dir/" in
-    /|./|.//|/etc/*|/usr/sbin/*|/usr/etc/*|/sbin/*|/usr/afsws/bin/*|/usr/ucb/*) ;;
+    /|./|.//|/etc/*|/usr/System/AdminTools/*|/usr/etc/*|/System/AdminTools/*|/usr/afsws/System/Tools/*|/usr/ucb/*) ;;
     *)
       # OSF1 and SCO ODT 3.0 have their own names for install.
       # Don't use installbsd from OSF since it installs stuff as root
@@ -792,7 +792,7 @@
       for ac_prog in ginstall scoinst install; do
         if test -f $ac_dir/$ac_prog; then
 	  if test $ac_prog = install &&
-            grep dspmsg $ac_dir/$ac_prog >/dev/null 2>&1; then
+            grep dspmsg $ac_dir/$ac_prog >/System/Devices/null 2>&1; then
 	    # AIX install.  It has an incompatible calling convention.
 	    :
 	  else
@@ -838,7 +838,7 @@
 # (eg FreeBSD returns the mod time of the symlink's containing
 # directory).
 if (
-   set X `ls -Lt $srcdir/configure conftestfile 2> /dev/null`
+   set X `ls -Lt $srcdir/configure conftestfile 2> /System/Devices/null`
    if test "$*" = "X"; then
       # -L didn't work.
       set X `ls -t $srcdir/configure conftestfile`
@@ -895,7 +895,7 @@
 	@echo 'ac_maketemp="${MAKE}"'
 EOF
 # GNU make sometimes prints "make[1]: Entering...", which would confuse us.
-eval `${MAKE-make} -f conftestmake 2>/dev/null | grep temp=`
+eval `${MAKE-make} -f conftestmake 2>/System/Devices/null | grep temp=`
 if test -n "$ac_maketemp"; then
   eval ac_cv_prog_make_${ac_make}_set=yes
 else
@@ -935,7 +935,7 @@
 # Run test in a subshell; some versions of sh will print an error if
 # an executable is not found, even if stderr is redirected.
 # Redirect stdin to placate older versions of autoconf.  Sigh.
-if (aclocal-${am__api_version} --version) < /dev/null > /dev/null 2>&1; then
+if (aclocal-${am__api_version} --version) < /System/Devices/null > /System/Devices/null 2>&1; then
    ACLOCAL=aclocal-${am__api_version}
    echo "$ac_t""found" 1>&6
 else
@@ -948,7 +948,7 @@
 # Run test in a subshell; some versions of sh will print an error if
 # an executable is not found, even if stderr is redirected.
 # Redirect stdin to placate older versions of autoconf.  Sigh.
-if (autoconf --version) < /dev/null > /dev/null 2>&1; then
+if (autoconf --version) < /System/Devices/null > /System/Devices/null 2>&1; then
    AUTOCONF=autoconf
    echo "$ac_t""found" 1>&6
 else
@@ -961,7 +961,7 @@
 # Run test in a subshell; some versions of sh will print an error if
 # an executable is not found, even if stderr is redirected.
 # Redirect stdin to placate older versions of autoconf.  Sigh.
-if (automake-${am__api_version} --version) < /dev/null > /dev/null 2>&1; then
+if (automake-${am__api_version} --version) < /System/Devices/null > /System/Devices/null 2>&1; then
    AUTOMAKE=automake-${am__api_version}
    echo "$ac_t""found" 1>&6
 else
@@ -974,7 +974,7 @@
 # Run test in a subshell; some versions of sh will print an error if
 # an executable is not found, even if stderr is redirected.
 # Redirect stdin to placate older versions of autoconf.  Sigh.
-if (autoheader --version) < /dev/null > /dev/null 2>&1; then
+if (autoheader --version) < /System/Devices/null > /System/Devices/null 2>&1; then
    AUTOHEADER=autoheader
    echo "$ac_t""found" 1>&6
 else
@@ -987,7 +987,7 @@
 # Run test in a subshell; some versions of sh will print an error if
 # an executable is not found, even if stderr is redirected.
 # Redirect stdin to placate older versions of autoconf.  Sigh.
-if (makeinfo --version) < /dev/null > /dev/null 2>&1; then
+if (makeinfo --version) < /System/Devices/null > /System/Devices/null 2>&1; then
    MAKEINFO=makeinfo
    echo "$ac_t""found" 1>&6
 else
@@ -1201,7 +1201,7 @@
 if { (eval echo configure:1202: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   ac_cv_prog_cc_works=yes
   # If we can't run a trivial program, we are probably using a cross compiler.
-  if (./conftest; exit) 2>/dev/null; then
+  if (./conftest; exit) 2>/System/Devices/null; then
     ac_cv_prog_cc_cross=no
   else
     ac_cv_prog_cc_cross=yes
@@ -1238,7 +1238,7 @@
   yes;
 #endif
 EOF
-if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:1242: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then
+if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:1242: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/System/Devices/null 2>&1; then
   ac_cv_prog_gcc=yes
 else
   ac_cv_prog_gcc=no
@@ -1314,7 +1314,7 @@
       re_direlt='/[^/][^/]*/\.\./'
       # Canonicalize the path of ld
       ac_prog=`echo $ac_prog| sed 's%\\\\%/%g'`
-      while echo $ac_prog | grep "$re_direlt" > /dev/null 2>&1; do
+      while echo $ac_prog | grep "$re_direlt" > /System/Devices/null 2>&1; do
 	ac_prog=`echo $ac_prog| sed "s%$re_direlt%/%"`
       done
       test -z "$LD" && LD="$ac_prog"
@@ -1347,7 +1347,7 @@
       # Check to see if the program is GNU ld.  I'd rather use --version,
       # but apparently some GNU ld's only accept -v.
       # Break only if it was the GNU/non-GNU ld that we prefer.
-      if "$lt_cv_path_LD" -v 2>&1 < /dev/null | egrep '(GNU|with BFD)' > /dev/null; then
+      if "$lt_cv_path_LD" -v 2>&1 < /System/Devices/null | egrep '(GNU|with BFD)' > /System/Devices/null; then
 	test "$with_gnu_ld" != no && break
       else
 	test "$with_gnu_ld" != yes && break
@@ -1373,7 +1373,7 @@
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   # I'd rather use --version here, but apparently some GNU ld's only accept -v.
-if $LD -v 2>&1 </dev/null | egrep '(GNU|with BFD)' 1>&5; then
+if $LD -v 2>&1 </System/Devices/null | egrep '(GNU|with BFD)' 1>&5; then
   lt_cv_prog_gnu_ld=yes
 else
   lt_cv_prog_gnu_ld=no
@@ -1413,11 +1413,11 @@
       # Check to see if the nm accepts a BSD-compat flag.
       # Adding the `sed 1q' prevents false positives on HP-UX, which says:
       #   nm: unknown option "B" ignored
-      # Tru64's nm complains that /dev/null is an invalid object file
-      if ($tmp_nm -B /dev/null 2>&1 | sed '1q'; exit 0) | egrep '(/dev/null|Invalid file or object type)' >/dev/null; then
+      # Tru64's nm complains that /System/Devices/null is an invalid object file
+      if ($tmp_nm -B /System/Devices/null 2>&1 | sed '1q'; exit 0) | egrep '(/System/Devices/null|Invalid file or object type)' >/System/Devices/null; then
 	lt_cv_path_NM="$tmp_nm -B"
 	break
-      elif ($tmp_nm -p /dev/null 2>&1 | sed '1q'; exit 0) | egrep /dev/null >/dev/null; then
+      elif ($tmp_nm -p /System/Devices/null 2>&1 | sed '1q'; exit 0) | egrep /System/Devices/null >/System/Devices/null; then
 	lt_cv_path_NM="$tmp_nm -p"
 	break
       else
@@ -1440,7 +1440,7 @@
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   rm -f conftestdata
-if ln -s X conftestdata 2>/dev/null
+if ln -s X conftestdata 2>/System/Devices/null
 then
   rm -f conftestdata
   ac_cv_prog_LN_S="ln -s"
@@ -1485,7 +1485,7 @@
 
 bsdi4*)
   lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (shared object|dynamic lib)'
-  lt_cv_file_magic_cmd='/usr/bin/file -L'
+  lt_cv_file_magic_cmd='/System/Tools/file -L'
   lt_cv_file_magic_test_file=/shlib/libc.so
   ;;
 
@@ -1496,26 +1496,26 @@
 
 darwin* | rhapsody*)
   lt_cv_deplibs_check_method='file_magic Mach-O dynamically linked shared library'
-  lt_cv_file_magic_cmd='/usr/bin/file -L'
+  lt_cv_file_magic_cmd='/System/Tools/file -L'
   case "$host_os" in
   rhapsody* | darwin1.012)
     lt_cv_file_magic_test_file='/System/Library/Frameworks/System.framework/System'
     ;;
   *) # Darwin 1.3 on
-    lt_cv_file_magic_test_file='/usr/lib/libSystem.dylib'
+    lt_cv_file_magic_test_file='/System/Library/Libraries/libSystem.dylib'
     ;;
   esac
   ;;
 
 freebsd* | kfreebsd*-gnu)
-  if echo __ELF__ | $CC -E - | grep __ELF__ > /dev/null; then
+  if echo __ELF__ | $CC -E - | grep __ELF__ > /System/Devices/null; then
     case $host_cpu in
     i*86 )
       # Not sure whether the presence of OpenBSD here was a mistake.
       # Let's accept both of them until this is cleared up.
       lt_cv_deplibs_check_method='file_magic (FreeBSD|OpenBSD)/i[3-9]86 (compact )?demand paged shared library'
-      lt_cv_file_magic_cmd=/usr/bin/file
-      lt_cv_file_magic_test_file=`echo /usr/lib/libc.so.*`
+      lt_cv_file_magic_cmd=/System/Tools/file
+      lt_cv_file_magic_test_file=`echo /System/Library/Libraries/libc.so.*`
       ;;
     esac
   else
@@ -1531,13 +1531,13 @@
   case $host_cpu in
   hppa*)
     lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|PA-RISC[0-9].[0-9]) shared library'
-    lt_cv_file_magic_cmd=/usr/bin/file
-    lt_cv_file_magic_test_file=/usr/lib/libc.sl
+    lt_cv_file_magic_cmd=/System/Tools/file
+    lt_cv_file_magic_test_file=/System/Library/Libraries/libc.sl
     ;;
   ia64*)
     lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF-[0-9][0-9]) shared object file - IA64'
-    lt_cv_file_magic_cmd=/usr/bin/file
-    lt_cv_file_magic_test_file=/usr/lib/hpux32/libc.so
+    lt_cv_file_magic_cmd=/System/Tools/file
+    lt_cv_file_magic_test_file=/System/Library/Libraries/hpux32/libc.so
     ;;
   esac
   ;;
@@ -1576,7 +1576,7 @@
   ;;
 
 netbsd* | knetbsd*-gnu)
-  if echo __ELF__ | $CC -E - | grep __ELF__ > /dev/null; then
+  if echo __ELF__ | $CC -E - | grep __ELF__ > /System/Devices/null; then
     lt_cv_deplibs_check_method='match_pattern /lib[^/\.]+\.so\.[0-9]+\.[0-9]+$'
   else
     lt_cv_deplibs_check_method='match_pattern /lib[^/\.]+\.so$'
@@ -1585,8 +1585,8 @@
 
 newsos6)
   lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (executable|dynamic lib)'
-  lt_cv_file_magic_cmd=/usr/bin/file
-  lt_cv_file_magic_test_file=/usr/lib/libnls.so
+  lt_cv_file_magic_cmd=/System/Tools/file
+  lt_cv_file_magic_test_file=/System/Library/Libraries/libnls.so
   ;;
 
 osf3* | osf4* | osf5*)
@@ -1616,7 +1616,7 @@
     ;;
   motorola)
     lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (shared object|dynamic lib) M[0-9][0-9]* Version [0-9]'
-    lt_cv_file_magic_test_file=`echo /usr/lib/libc.so*`
+    lt_cv_file_magic_test_file=`echo /System/Library/Libraries/libc.so*`
     ;;
   esac
   ;;
@@ -1722,8 +1722,8 @@
 	"file_magic "*)
 	  file_magic_regex="`expr \"$deplibs_check_method\" : \"file_magic \(.*\)\"`"
 	  MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
-	  if eval $file_magic_cmd \$file_magic_test_file 2> /dev/null |
-	    egrep "$file_magic_regex" > /dev/null; then
+	  if eval $file_magic_cmd \$file_magic_test_file 2> /System/Devices/null |
+	    egrep "$file_magic_regex" > /System/Devices/null; then
 	    :
 	  else
 	    cat <<EOF 1>&2
@@ -1784,8 +1784,8 @@
 	"file_magic "*)
 	  file_magic_regex="`expr \"$deplibs_check_method\" : \"file_magic \(.*\)\"`"
 	  MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
-	  if eval $file_magic_cmd \$file_magic_test_file 2> /dev/null |
-	    egrep "$file_magic_regex" > /dev/null; then
+	  if eval $file_magic_cmd \$file_magic_test_file 2> /System/Devices/null |
+	    egrep "$file_magic_regex" > /System/Devices/null; then
 	    :
 	  else
 	    cat <<EOF 1>&2
@@ -2000,7 +2000,7 @@
   echo '#line 2001 "configure"' > conftest.$ac_ext
   if { (eval echo configure:2002: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
    if test "$lt_cv_prog_gnu_ld" = yes; then
-    case `/usr/bin/file conftest.$ac_objext` in
+    case `/System/Tools/file conftest.$ac_objext` in
     *32-bit*)
       LD="${LD-ld} -melf32bsmip"
       ;;
@@ -2012,7 +2012,7 @@
       ;;
     esac
    else
-    case `/usr/bin/file conftest.$ac_objext` in
+    case `/System/Tools/file conftest.$ac_objext` in
     *32-bit*)
       LD="${LD-ld} -32"
       ;;
@@ -2032,7 +2032,7 @@
   # Find out which ABI we are using.
   echo 'int i;' > conftest.$ac_ext
   if { (eval echo configure:2035: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
-    case "`/usr/bin/file conftest.o`" in
+    case "`/System/Tools/file conftest.o`" in
     *ELF-32*)
       HPUX_IA64_MODE="32"
       ;;
@@ -2111,7 +2111,7 @@
 # the --cache-file=FILE option to use a different cache file; that is
 # what configure does when it calls configure scripts in
 # subdirectories, so they share the cache.
-# Giving --cache-file=/dev/null disables caching, for debugging configure.
+# Giving --cache-file=/System/Devices/null disables caching, for debugging configure.
 # config.status only pays attention to the cache file if you give it the
 # --recheck option to rerun configure.
 #
@@ -2155,7 +2155,7 @@
 AS="$AS" DLLTOOL="$DLLTOOL" OBJDUMP="$OBJDUMP" \
 objext="$OBJEXT" exeext="$EXEEXT" reload_flag="$reload_flag" \
 deplibs_check_method="$deplibs_check_method" file_magic_cmd="$file_magic_cmd" \
-${CONFIG_SHELL-/bin/sh} $ac_aux_dir/ltconfig --no-reexec \
+${CONFIG_SHELL-/System/Tools/sh} $ac_aux_dir/ltconfig --no-reexec \
 $libtool_flags --no-verify --build="$build" $ac_aux_dir/ltmain.sh $host \
 || { echo "configure: error: libtool configure failed" 1>&2; exit 1; }
 
@@ -2374,7 +2374,7 @@
 if { (eval echo configure:2375: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   ac_cv_prog_cc_works=yes
   # If we can't run a trivial program, we are probably using a cross compiler.
-  if (./conftest; exit) 2>/dev/null; then
+  if (./conftest; exit) 2>/System/Devices/null; then
     ac_cv_prog_cc_cross=no
   else
     ac_cv_prog_cc_cross=yes
@@ -2411,7 +2411,7 @@
   yes;
 #endif
 EOF
-if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:2415: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then
+if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:2415: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/System/Devices/null 2>&1; then
   ac_cv_prog_gcc=yes
 else
   ac_cv_prog_gcc=no
@@ -2518,7 +2518,7 @@
 #include <assert.h>
 Syntax Error
 EOF
-ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
+ac_try="$ac_cpp conftest.$ac_ext >/System/Devices/null 2>conftest.out"
 { (eval echo configure:2523: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
@@ -2535,7 +2535,7 @@
 #include <assert.h>
 Syntax Error
 EOF
-ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
+ac_try="$ac_cpp conftest.$ac_ext >/System/Devices/null 2>conftest.out"
 { (eval echo configure:2540: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
@@ -2552,7 +2552,7 @@
 #include <assert.h>
 Syntax Error
 EOF
-ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
+ac_try="$ac_cpp conftest.$ac_ext >/System/Devices/null 2>conftest.out"
 { (eval echo configure:2557: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
@@ -2798,7 +2798,7 @@
 #include <string.h>
 #include <float.h>
 EOF
-ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
+ac_try="$ac_cpp conftest.$ac_ext >/System/Devices/null 2>conftest.out"
 { (eval echo configure:2803: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
@@ -2821,7 +2821,7 @@
 #include <string.h>
 EOF
 if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  egrep "memchr" >/dev/null 2>&1; then
+  egrep "memchr" >/System/Devices/null 2>&1; then
   :
 else
   rm -rf conftest*
@@ -2839,7 +2839,7 @@
 #include <stdlib.h>
 EOF
 if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  egrep "free" >/dev/null 2>&1; then
+  egrep "free" >/System/Devices/null 2>&1; then
   :
 else
   rm -rf conftest*
@@ -2850,7 +2850,7 @@
 fi
 
 if test $ac_cv_header_stdc = yes; then
-  # /bin/cc in Irix-4.0.5 gets non-ANSI ctype macros unless using -ansi.
+  # /System/Tools/cc in Irix-4.0.5 gets non-ANSI ctype macros unless using -ansi.
 if test "$cross_compiling" = yes; then
   :
 else
@@ -2866,7 +2866,7 @@
 exit (0); }
 
 EOF
-if { (eval echo configure:2870: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null
+if { (eval echo configure:2870: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/System/Devices/null
 then
   :
 else
@@ -3019,7 +3019,7 @@
 #endif
 EOF
 if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  egrep "(^|[^a-zA-Z_0-9])off_t[^a-zA-Z_0-9]" >/dev/null 2>&1; then
+  egrep "(^|[^a-zA-Z_0-9])off_t[^a-zA-Z_0-9]" >/System/Devices/null 2>&1; then
   rm -rf conftest*
   ac_cv_type_off_t=yes
 else
@@ -3052,7 +3052,7 @@
 #endif
 EOF
 if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  egrep "(^|[^a-zA-Z_0-9])size_t[^a-zA-Z_0-9]" >/dev/null 2>&1; then
+  egrep "(^|[^a-zA-Z_0-9])size_t[^a-zA-Z_0-9]" >/System/Devices/null 2>&1; then
   rm -rf conftest*
   ac_cv_type_size_t=yes
 else
@@ -3186,7 +3186,7 @@
 
 EOF
 if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  egrep "webecray" >/dev/null 2>&1; then
+  egrep "webecray" >/System/Devices/null 2>&1; then
   rm -rf conftest*
   ac_cv_os_cray=yes
 else
@@ -3283,7 +3283,7 @@
   exit (find_stack_direction() < 0);
 }
 EOF
-if { (eval echo configure:3287: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null
+if { (eval echo configure:3287: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/System/Devices/null
 then
   ac_cv_c_stack_direction=1
 else
@@ -3317,7 +3317,7 @@
 #include "confdefs.h"
 #include <$ac_hdr>
 EOF
-ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
+ac_try="$ac_cpp conftest.$ac_ext >/System/Devices/null 2>conftest.out"
 { (eval echo configure:3322: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
@@ -3548,7 +3548,7 @@
 }
 
 EOF
-if { (eval echo configure:3552: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null
+if { (eval echo configure:3552: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/System/Devices/null
 then
   ac_cv_func_mmap_fixed_mapped=yes
 else
@@ -3585,7 +3585,7 @@
 #include "confdefs.h"
 #include <$ac_hdr>
 EOF
-ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
+ac_try="$ac_cpp conftest.$ac_ext >/System/Devices/null 2>conftest.out"
 { (eval echo configure:3590: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
@@ -3812,7 +3812,7 @@
 #include "confdefs.h"
 #include <libintl.h>
 EOF
-ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
+ac_try="$ac_cpp conftest.$ac_ext >/System/Devices/null 2>conftest.out"
 { (eval echo configure:3817: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
@@ -4246,7 +4246,7 @@
       fi
 
             if test "$XGETTEXT" != ":"; then
-			if $XGETTEXT --omit-header /dev/null 2> /dev/null; then
+			if $XGETTEXT --omit-header /System/Devices/null 2> /System/Devices/null; then
 	  : ;
 	else
 	  echo "$ac_t""found xgettext programs is not GNU xgettext; ignore it" 1>&6
@@ -4335,7 +4335,7 @@
 #include "confdefs.h"
 #include <linux/version.h>
 EOF
-ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
+ac_try="$ac_cpp conftest.$ac_ext >/System/Devices/null 2>conftest.out"
 { (eval echo configure:4340: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
@@ -4507,12 +4507,12 @@
 # Find a good install program.  We prefer a C program (faster),
 # so one script is as good as another.  But avoid the broken or
 # incompatible versions:
-# SysV /etc/install, /usr/sbin/install
+# SysV/System/Settings/install, /usr/System/AdminTools/install
 # SunOS /usr/etc/install
-# IRIX /sbin/install
-# AIX /bin/install
-# AIX 4 /usr/bin/installbsd, which doesn't work without a -g flag
-# AFS /usr/afsws/bin/install, which mishandles nonexistent args
+# IRIX /System/AdminTools/install
+# AIX /System/Tools/install
+# AIX 4 /System/Tools/installbsd, which doesn't work without a -g flag
+# AFS /usr/afsws/System/Tools/install, which mishandles nonexistent args
 # SVR4 /usr/ucb/install, which tries to use the nonexistent group "staff"
 # ./install, which can be erroneously created by make from ./install.sh.
 echo $ac_n "checking for a BSD compatible install""... $ac_c" 1>&6
@@ -4525,7 +4525,7 @@
   for ac_dir in $PATH; do
     # Account for people who put trailing slashes in PATH elements.
     case "$ac_dir/" in
-    /|./|.//|/etc/*|/usr/sbin/*|/usr/etc/*|/sbin/*|/usr/afsws/bin/*|/usr/ucb/*) ;;
+    /|./|.//|/etc/*|/usr/System/AdminTools/*|/usr/etc/*|/System/AdminTools/*|/usr/afsws/System/Tools/*|/usr/ucb/*) ;;
     *)
       # OSF1 and SCO ODT 3.0 have their own names for install.
       # Don't use installbsd from OSF since it installs stuff as root
@@ -4533,7 +4533,7 @@
       for ac_prog in ginstall scoinst install; do
         if test -f $ac_dir/$ac_prog; then
 	  if test $ac_prog = install &&
-            grep dspmsg $ac_dir/$ac_prog >/dev/null 2>&1; then
+            grep dspmsg $ac_dir/$ac_prog >/System/Devices/null 2>&1; then
 	    # AIX install.  It has an incompatible calling convention.
 	    :
 	  else
@@ -4627,7 +4627,7 @@
 #include "confdefs.h"
 #include <$ac_hdr>
 EOF
-ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
+ac_try="$ac_cpp conftest.$ac_ext >/System/Devices/null 2>conftest.out"
 { (eval echo configure:4632: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
@@ -4812,7 +4812,7 @@
 
 EOF
 if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  egrep "webecray" >/dev/null 2>&1; then
+  egrep "webecray" >/System/Devices/null 2>&1; then
   rm -rf conftest*
   ac_cv_os_cray=yes
 else
@@ -4909,7 +4909,7 @@
   exit (find_stack_direction() < 0);
 }
 EOF
-if { (eval echo configure:4913: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null
+if { (eval echo configure:4913: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/System/Devices/null
 then
   ac_cv_c_stack_direction=1
 else
@@ -4998,7 +4998,7 @@
 #include "confdefs.h"
 #include <stdio.h>
 int main() {
-FILE *f = fopen64 ("/tmp/foo","r");
+FILE *f = fopen64 ("/System/TemporaryFiles/foo","r");
 ; return 0; }
 EOF
 if { (eval echo configure:5005: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
@@ -5015,7 +5015,7 @@
 #include "confdefs.h"
 #include <stdio.h>
 int main() {
-FILE *f = fopen64 ("/tmp/foo","r");
+FILE *f = fopen64 ("/System/TemporaryFiles/foo","r");
 ; return 0; }
 EOF
 if { (eval echo configure:5022: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
@@ -5050,7 +5050,7 @@
 #include "confdefs.h"
 #include <sys/stat.h>
 int main() {
-struct stat64 st; stat64 ("/tmp/foo", &st);
+struct stat64 st; stat64 ("/System/TemporaryFiles/foo", &st);
 ; return 0; }
 EOF
 if { (eval echo configure:5057: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
@@ -5067,7 +5067,7 @@
 #include "confdefs.h"
 #include <sys/stat.h>
 int main() {
-struct stat64 st; stat64 ("/tmp/foo", &st);
+struct stat64 st; stat64 ("/System/TemporaryFiles/foo", &st);
 ; return 0; }
 EOF
 if { (eval echo configure:5074: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
@@ -5521,7 +5521,7 @@
 if test -n "$enable_targets"; then
     for targ in `echo $enable_targets | sed 's/,/ /g'`
     do
-	result=`$ac_config_sub $targ 2>/dev/null`
+	result=`$ac_config_sub $targ 2>/System/Devices/null`
 	if test -n "$result"; then
 	    canon_targets="$canon_targets $result"
 	else
@@ -5668,7 +5668,7 @@
 for targ_alias in `echo $target_alias $enable_targets | sed 's/,/ /g'`
 do
   # Canonicalize the secondary target names.
- result=`$ac_config_sub $targ_alias 2>/dev/null`
+ result=`$ac_config_sub $targ_alias 2>/System/Devices/null`
  if test -n "$result"; then
    targ=$result
  else
@@ -5696,7 +5696,7 @@
 # the --cache-file=FILE option to use a different cache file; that is
 # what configure does when it calls configure scripts in
 # subdirectories, so they share the cache.
-# Giving --cache-file=/dev/null disables caching, for debugging configure.
+# Giving --cache-file=/System/Devices/null disables caching, for debugging configure.
 # config.status only pays attention to the cache file if you give it the
 # --recheck option to rerun configure.
 #
@@ -5755,11 +5755,11 @@
 echo creating $CONFIG_STATUS
 rm -f $CONFIG_STATUS
 cat > $CONFIG_STATUS <<EOF
-#! /bin/sh
+#! /System/Tools/sh
 # Generated automatically by configure.
 # Run this file to recreate the current configuration.
 # This directory was configured as follows,
-# on host `(hostname || uname -n) 2>/dev/null | sed 1q`:
+# on host `(hostname || uname -n) 2>/System/Devices/null | sed 1q`:
 #
 # $0 $ac_configure_args
 #
@@ -5771,8 +5771,8 @@
 do
   case "\$ac_option" in
   -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
-    echo "running \${CONFIG_SHELL-/bin/sh} $0 $ac_configure_args --no-create --no-recursion"
-    exec \${CONFIG_SHELL-/bin/sh} $0 $ac_configure_args --no-create --no-recursion ;;
+    echo "running \${CONFIG_SHELL-/System/Tools/sh} $0 $ac_configure_args --no-create --no-recursion"
+    exec \${CONFIG_SHELL-/System/Tools/sh} $0 $ac_configure_args --no-create --no-recursion ;;
   -version | --version | --versio | --versi | --vers | --ver | --ve | --v)
     echo "$CONFIG_STATUS generated by autoconf version 2.13"
     exit 0 ;;
@@ -6088,7 +6088,7 @@
   echo "/* $ac_file.  Generated automatically by configure.  */" > conftest.h
   cat conftest.in >> conftest.h
   rm -f conftest.in
-  if cmp -s $ac_file conftest.h 2>/dev/null; then
+  if cmp -s $ac_file conftest.h 2>/System/Devices/null; then
     echo "$ac_file is unchanged"
     rm -f conftest.h
   else
@@ -6119,5 +6119,5 @@
 EOF
 chmod +x $CONFIG_STATUS
 rm -fr confdefs* $ac_clean_files
-test "$no_create" = yes || ${CONFIG_SHELL-/bin/sh} $CONFIG_STATUS || exit 1
+test "$no_create" = yes || ${CONFIG_SHELL-/System/Tools/sh} $CONFIG_STATUS || exit 1
 
diff -urN binutils-2.16.1/binutils/configure.com binutils-2.16.1-STEP/binutils/configure.com
--- binutils-2.16.1/binutils/configure.com	1999-05-03 19:29:09.000000000 +1200
+++ binutils-2.16.1-STEP/binutils/configure.com	2005-09-02 11:16:19.569343584 +1200
@@ -1,6 +1,6 @@
 $!
 $! This file configures binutils for use with openVMS/Alpha
-$! We do not use the configure script, since we do not have /bin/sh
+$! We do not use the configure script, since we do not have /System/Tools/sh
 $! to execute it.
 $!
 $! Written by Klaus K"ampf (kkaempf@rmi.de)
diff -urN binutils-2.16.1/binutils/configure.in binutils-2.16.1-STEP/binutils/configure.in
--- binutils-2.16.1/binutils/configure.in	2005-03-23 03:31:04.000000000 +1200
+++ binutils-2.16.1-STEP/binutils/configure.in	2005-09-02 11:16:19.571343280 +1200
@@ -106,11 +106,11 @@
 # needs to be defined for it
 AC_MSG_CHECKING([for fopen64])
 AC_CACHE_VAL(bu_cv_have_fopen64,
-[AC_TRY_LINK([#include <stdio.h>], [FILE *f = fopen64 ("/tmp/foo","r");],
+[AC_TRY_LINK([#include <stdio.h>], [FILE *f = fopen64 ("/System/TemporaryFiles/foo","r");],
 bu_cv_have_fopen64=yes,
 [saved_CPPFLAGS=$CPPFLAGS
  CPPFLAGS="$CPPFLAGS -D_LARGEFILE64_SOURCE"
- AC_TRY_LINK([#include <stdio.h>], [FILE *f = fopen64 ("/tmp/foo","r");],
+ AC_TRY_LINK([#include <stdio.h>], [FILE *f = fopen64 ("/System/TemporaryFiles/foo","r");],
 bu_cv_have_fopen64="need -D_LARGEFILE64_SOURCE",
 bu_cv_have_fopen64=no)
  CPPFLAGS=$saved_CPPFLAGS])])
@@ -121,11 +121,11 @@
 fi
 AC_MSG_CHECKING([for stat64])
 AC_CACHE_VAL(bu_cv_have_stat64,
-[AC_TRY_LINK([#include <sys/stat.h>], [struct stat64 st; stat64 ("/tmp/foo", &st);],
+[AC_TRY_LINK([#include <sys/stat.h>], [struct stat64 st; stat64 ("/System/TemporaryFiles/foo", &st);],
 bu_cv_have_stat64=yes,
 [saved_CPPFLAGS=$CPPFLAGS
  CPPFLAGS="$CPPFLAGS -D_LARGEFILE64_SOURCE"
- AC_TRY_LINK([#include <sys/stat.h>], [struct stat64 st; stat64 ("/tmp/foo", &st);],
+ AC_TRY_LINK([#include <sys/stat.h>], [struct stat64 st; stat64 ("/System/TemporaryFiles/foo", &st);],
 bu_cv_have_stat64="need -D_LARGEFILE64_SOURCE",
 bu_cv_have_stat64=no)
  CPPFLAGS=$saved_CPPFLAGS])])
@@ -194,7 +194,7 @@
 if test -n "$enable_targets"; then
     for targ in `echo $enable_targets | sed 's/,/ /g'`
     do
-	result=`$ac_config_sub $targ 2>/dev/null`
+	result=`$ac_config_sub $targ 2>/System/Devices/null`
 	if test -n "$result"; then
 	    canon_targets="$canon_targets $result"
 	else
@@ -344,7 +344,7 @@
 for targ_alias in `echo $target_alias $enable_targets | sed 's/,/ /g'`
 do
   # Canonicalize the secondary target names.
- result=`$ac_config_sub $targ_alias 2>/dev/null`
+ result=`$ac_config_sub $targ_alias 2>/System/Devices/null`
  if test -n "$result"; then
    targ=$result
  else
diff -urN binutils-2.16.1/binutils/dlltool.c binutils-2.16.1-STEP/binutils/dlltool.c
--- binutils-2.16.1/binutils/dlltool.c	2005-02-24 01:25:57.000000000 +1300
+++ binutils-2.16.1-STEP/binutils/dlltool.c	2005-09-02 11:16:19.579342064 +1200
@@ -3409,11 +3409,11 @@
    If argv[0] contains the full path, then try to find the program
    in the same place, with and then without a target-like prefix.
 
-   Given, argv[0] = /usr/local/bin/i586-cygwin32-dlltool,
+   Given, argv[0] = /usr/local/System/Tools/i586-cygwin32-dlltool,
    deduce_name("as") uses the following search order:
 
-     /usr/local/bin/i586-cygwin32-as
-     /usr/local/bin/as
+     /usr/local/System/Tools/i586-cygwin32-as
+     /usr/local/System/Tools/as
      as
 
    If there's an EXECUTABLE_SUFFIX, it'll use that as well; for each
diff -urN binutils-2.16.1/binutils/dllwrap.c binutils-2.16.1-STEP/binutils/dllwrap.c
--- binutils-2.16.1/binutils/dllwrap.c	2004-08-02 20:14:17.000000000 +1200
+++ binutils-2.16.1-STEP/binutils/dllwrap.c	2005-09-02 11:16:19.585341152 +1200
@@ -226,11 +226,11 @@
    If argv[0] contains the full path, then try to find the program
    in the same place, with and then without a target-like prefix.
 
-   Given, argv[0] = /usr/local/bin/i586-cygwin32-dlltool,
+   Given, argv[0] = /usr/local/System/Tools/i586-cygwin32-dlltool,
    deduce_name("as") uses the following search order:
 
-     /usr/local/bin/i586-cygwin32-as
-     /usr/local/bin/as
+     /usr/local/System/Tools/i586-cygwin32-as
+     /usr/local/System/Tools/as
      as
 
    If there's an EXECUTABLE_SUFFIX, it'll use that as well; for each
diff -urN binutils-2.16.1/binutils/doc/Makefile.in binutils-2.16.1-STEP/binutils/doc/Makefile.in
--- binutils-2.16.1/binutils/doc/Makefile.in	2005-02-22 00:48:59.000000000 +1300
+++ binutils-2.16.1-STEP/binutils/doc/Makefile.in	2005-09-02 11:16:19.617336288 +1200
@@ -260,7 +260,7 @@
 	  done; \
 	done
 	@$(POST_INSTALL)
-	@if $(SHELL) -c 'install-info --version | sed 1q | fgrep -s -v -i debian' >/dev/null 2>&1; then \
+	@if $(SHELL) -c 'install-info --version | sed 1q | fgrep -s -v -i debian' >/System/Devices/null 2>&1; then \
 	  list='$(INFO_DEPS)'; \
 	  for file in $$list; do \
 	    echo " install-info --info-dir=$(DESTDIR)$(infodir) $(DESTDIR)$(infodir)/$$file";\
@@ -270,7 +270,7 @@
 
 uninstall-info:
 	$(PRE_UNINSTALL)
-	@if $(SHELL) -c 'install-info --version | sed 1q | fgrep -s -v -i debian' >/dev/null 2>&1; then \
+	@if $(SHELL) -c 'install-info --version | sed 1q | fgrep -s -v -i debian' >/System/Devices/null 2>&1; then \
 	  ii=yes; \
 	else ii=; fi; \
 	list='$(INFO_DEPS)'; \
@@ -290,7 +290,7 @@
 	  if test -f $$base; then d=.; else d=$(srcdir); fi; \
 	  for file in `cd $$d && eval echo $$base*`; do \
 	    test -f $(distdir)/$$file \
-	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
+	    || ln $$d/$$file $(distdir)/$$file 2> /System/Devices/null \
 	    || cp -p $$d/$$file $(distdir)/$$file; \
 	  done; \
 	done
@@ -368,7 +368,7 @@
 	    cp -pr $$d/$$file $(distdir)/$$file; \
 	  else \
 	    test -f $(distdir)/$$file \
-	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
+	    || ln $$d/$$file $(distdir)/$$file 2> /System/Devices/null \
 	    || cp -p $$d/$$file $(distdir)/$$file || :; \
 	  fi; \
 	done
diff -urN binutils-2.16.1/binutils/po/Make-in binutils-2.16.1-STEP/binutils/po/Make-in
--- binutils-2.16.1/binutils/po/Make-in	2005-03-04 00:46:13.000000000 +1300
+++ binutils-2.16.1-STEP/binutils/po/Make-in	2005-09-02 11:16:19.646331880 +1200
@@ -10,7 +10,7 @@
 PACKAGE = @PACKAGE@
 VERSION = @VERSION@
 
-SHELL = /bin/sh
+SHELL = /System/Tools/sh
 @SET_MAKE@
 
 srcdir = @srcdir@
@@ -205,7 +205,7 @@
 dist distdir: update-po $(DISTFILES)
 	dists="$(DISTFILES)"; \
 	for file in $$dists; do \
-	  ln $(srcdir)/$$file $(distdir) 2> /dev/null \
+	  ln $(srcdir)/$$file $(distdir) 2> /System/Devices/null \
 	    || cp -p $(srcdir)/$$file $(distdir); \
 	done
 
diff -urN binutils-2.16.1/binutils/ranlib.sh binutils-2.16.1-STEP/binutils/ranlib.sh
--- binutils-2.16.1/binutils/ranlib.sh	2004-04-30 19:37:15.000000000 +1200
+++ binutils-2.16.1-STEP/binutils/ranlib.sh	2005-09-02 11:16:19.647331728 +1200
@@ -1,3 +1,3 @@
-#!/bin/sh
+#!/System/Tools/sh
 # A simple ranlib script, to use less disk space than a ranlib program.
 ar s "$1"
diff -urN binutils-2.16.1/binutils/sanity.sh binutils-2.16.1-STEP/binutils/sanity.sh
--- binutils-2.16.1/binutils/sanity.sh	1999-05-03 19:29:10.000000000 +1200
+++ binutils-2.16.1-STEP/binutils/sanity.sh	2005-09-02 11:16:19.663329296 +1200
@@ -1,4 +1,4 @@
-#!/bin/sh
+#!/System/Tools/sh
 ### quick sanity test for the binutils.
 ###
 ### This file was written and is maintained by K. Richard Pixley,
@@ -15,17 +15,17 @@
 
 ### size
 for i in size objdump nm ar strip ranlib ; do
-	${BIN}/size ${BIN}/$i > /dev/null
+	${BIN}/size ${BIN}/$i > /System/Devices/null
 done
 
 ### objdump
 for i in size objdump nm ar strip ranlib ; do
-	${BIN}/objdump -ahifdrtxsl ${BIN}/$i > /dev/null
+	${BIN}/objdump -ahifdrtxsl ${BIN}/$i > /System/Devices/null
 done
 
 ### nm
 for i in size objdump nm ar strip ranlib ; do
-	${BIN}/nm ${BIN}/$i > /dev/null
+	${BIN}/nm ${BIN}/$i > /System/Devices/null
 done
 
 ### strip
diff -urN binutils-2.16.1/binutils/testsuite/ChangeLog-9303 binutils-2.16.1-STEP/binutils/testsuite/ChangeLog-9303
--- binutils-2.16.1/binutils/testsuite/ChangeLog-9303	2004-01-03 00:16:19.000000000 +1300
+++ binutils-2.16.1-STEP/binutils/testsuite/ChangeLog-9303	2005-09-02 11:16:19.704323064 +1200
@@ -654,7 +654,7 @@
 Mon Jun 24 14:33:04 1996  Ian Lance Taylor  <ian@cygnus.com>
 
 	* binutils-all/objcopy.exp: On OSF/1, the simple copy test will
-	succeed with gas, and fail with /bin/as, so mark it as an expected
+	succeed with gas, and fail with /System/Tools/as, so mark it as an expected
 	failure only if it fails.
 
 Tue Mar 26 16:55:08 1996  Jeffrey A Law  (law@cygnus.com)
diff -urN binutils-2.16.1/binutils/testsuite/binutils-all/objcopy.exp binutils-2.16.1-STEP/binutils/testsuite/binutils-all/objcopy.exp
--- binutils-2.16.1/binutils/testsuite/binutils-all/objcopy.exp	2005-03-04 00:46:14.000000000 +1300
+++ binutils-2.16.1-STEP/binutils/testsuite/binutils-all/objcopy.exp	2005-09-02 11:16:19.682326408 +1200
@@ -92,7 +92,7 @@
 	send_log "$exec_output\n"
 	verbose "$exec_output" 1
 
-	# On OSF/1, this succeeds with gas and fails with /bin/as.
+	# On OSF/1, this succeeds with gas and fails with /System/Tools/as.
 	setup_xfail "alpha*-*-osf*"
 
 	# This fails for COFF i960-vxworks targets.
diff -urN binutils-2.16.1/binutils/testsuite/binutils-all/windres/msupdate binutils-2.16.1-STEP/binutils/testsuite/binutils-all/windres/msupdate
--- binutils-2.16.1/binutils/testsuite/binutils-all/windres/msupdate	2001-07-19 11:56:41.000000000 +1200
+++ binutils-2.16.1-STEP/binutils/testsuite/binutils-all/windres/msupdate	2005-09-02 11:16:19.694324584 +1200
@@ -1,4 +1,4 @@
-#!/bin/sh
+#!/System/Tools/sh
 # Copyright 2001 Free Software Foundation, Inc.
 
 # This program is free software; you can redistribute it and/or modify
diff -urN binutils-2.16.1/config/ChangeLog binutils-2.16.1-STEP/config/ChangeLog
--- binutils-2.16.1/config/ChangeLog	2005-03-01 03:07:03.000000000 +1300
+++ binutils-2.16.1-STEP/config/ChangeLog	2005-09-02 11:16:19.742317288 +1200
@@ -685,7 +685,7 @@
 
 Wed May  4 20:14:47 1994  D. V. Henkel-Wallace  (gumby@cygnus.com)
 
-	* mh-lynxrs6k: set SHELL to /bin/bash
+	* mh-lynxrs6k: set SHELL to /System/Tools/bash
 
 Tue Apr 12 12:38:17 1994  Ian Lance Taylor  (ian@tweedledumb.cygnus.com)
 
@@ -843,7 +843,7 @@
 
 Tue Jun  9 23:29:38 1992  Per Bothner  (bothner@rtl.cygnus.com)
 
-	* Everywhere: Change RANLIB=echo>/dev/null (which confuses
+	* Everywhere: Change RANLIB=echo>/System/Devices/null (which confuses
 	some shells - and I don't blame them) to RANLIB=true.
 	* mh-solaris:  Use /usr/ucb/install for INSTALL.
 
diff -urN binutils-2.16.1/config/acinclude.m4 binutils-2.16.1-STEP/config/acinclude.m4
--- binutils-2.16.1/config/acinclude.m4	2004-01-15 02:41:37.000000000 +1300
+++ binutils-2.16.1-STEP/config/acinclude.m4	2005-09-02 11:16:19.738317896 +1200
@@ -881,7 +881,7 @@
 if test x"${ac_cv_c_tclh}" = x ; then
     dnl find the top level Tcl source directory
     for i in $dirlist; do
-        if test -n "`ls -dr $srcdir/$i/tcl* 2>/dev/null`" ; then
+        if test -n "`ls -dr $srcdir/$i/tcl* 2>/System/Devices/null`" ; then
 	    tclpath=$srcdir/$i
 	    break
 	fi
@@ -889,7 +889,7 @@
 
     dnl find the exact Tcl source dir. We do it this way, cause there
     dnl might be multiple version of Tcl, and we want the most recent one.
-    for i in `ls -dr $tclpath/tcl* 2>/dev/null ` ; do
+    for i in `ls -dr $tclpath/tcl* 2>/System/Devices/null ` ; do
         if test -f $i/generic/tcl.h ; then
           ac_cv_c_tclh=`(cd $i/generic; ${PWDCMD-pwd})`
           break
@@ -900,7 +900,7 @@
 dnl check if its installed with the compiler
 if test x"${ac_cv_c_tclh}" = x ; then
     dnl Get the path to the compiler
-    ccpath=`which ${CC}  | sed -e 's:/bin/.*::'`/include
+    ccpath=`which ${CC}  | sed -e 's:/System/Tools/.*::'`/include
     if test -f $ccpath/tcl.h; then
         ac_cv_c_tclh=$ccpath
     fi
@@ -976,7 +976,7 @@
     if test x"${ac_cv_c_tclconfig}" = x ; then
         dnl find the top level Tcl source directory
         for i in $dirlist; do
-            if test -n "`ls -dr $i/tcl* 2>/dev/null`" ; then
+            if test -n "`ls -dr $i/tcl* 2>/System/Devices/null`" ; then
 	        tclconfpath=$i
 	        break
 	    fi
@@ -984,7 +984,7 @@
 
         dnl find the exact Tcl dir. We do it this way, cause there
         dnl might be multiple version of Tcl, and we want the most recent one.
-        for i in `ls -dr $tclconfpath/tcl* 2>/dev/null ` ; do
+        for i in `ls -dr $tclconfpath/tcl* 2>/System/Devices/null ` ; do
             dnl need to test both unix and win directories, since 
             dnl cygwin's tclConfig.sh could be in either directory depending
             dnl on the cygwin port of tcl.
@@ -1003,7 +1003,7 @@
     dnl to find it, cause our $prefix may not match the compilers.
     if test x"${ac_cv_c_tclconfig}" = x ; then
         dnl Get the path to the compiler
-	ccpath=`which ${CC}  | sed -e 's:/bin/.*::'`/lib
+	ccpath=`which ${CC}  | sed -e 's:/System/Tools/.*::'`/lib
         if test -f $ccpath/tclConfig.sh; then
 	    ac_cv_c_tclconfig=$ccpath
         fi
@@ -1120,7 +1120,7 @@
 if test x"${ac_cv_c_tkh}" = x ; then
     dnl find the top level Tk source directory
     for i in $dirlist; do
-        if test -n "`ls -dr $srcdir/$i/tk* 2>/dev/null`" ; then
+        if test -n "`ls -dr $srcdir/$i/tk* 2>/System/Devices/null`" ; then
 	    tkpath=$srcdir/$i
 	    break
 	fi
@@ -1128,7 +1128,7 @@
 
     dnl find the exact Tk source dir. We do it this way, cause there
     dnl might be multiple version of Tk, and we want the most recent one.
-    for i in `ls -dr $tkpath/tk* 2>/dev/null ` ; do
+    for i in `ls -dr $tkpath/tk* 2>/System/Devices/null ` ; do
         if test -f $i/generic/tk.h ; then
           ac_cv_c_tkh=`(cd $i/generic; ${PWDCMD-pwd})`
           break
@@ -1141,7 +1141,7 @@
     AC_MSG_RESULT(none)
     dnl Get the path to the compiler. We do it this way instead of using
     dnl AC_CHECK_HEADER, cause this doesn't depend in having X configured.
-    ccpath=`which ${CC}  | sed -e 's:/bin/.*::'`/include
+    ccpath=`which ${CC}  | sed -e 's:/System/Tools/.*::'`/include
     if test -f $ccpath/tk.h; then
 	ac_cv_c_tkh=$ccpath
     fi
@@ -1209,7 +1209,7 @@
     if test x"${ac_cv_c_tkconfig}" = x ; then
         dnl find the top level Tk source directory
         for i in $dirlist; do
-            if test -n "`ls -dr $i/tk* 2>/dev/null`" ; then
+            if test -n "`ls -dr $i/tk* 2>/System/Devices/null`" ; then
 	        tkconfpath=$i
 	        break
 	    fi
@@ -1217,7 +1217,7 @@
 
         dnl find the exact Tk dir. We do it this way, cause there
         dnl might be multiple version of Tk, and we want the most recent one.
-        for i in `ls -dr $tkconfpath/tk* 2>/dev/null ` ; do
+        for i in `ls -dr $tkconfpath/tk* 2>/System/Devices/null ` ; do
             dnl need to test both unix and win directories, since 
             dnl cygwin's tkConfig.sh could be in either directory depending
             dnl on the cygwin port of tk.
@@ -1236,7 +1236,7 @@
     dnl to find it, cause our $prefix may not match the compilers.
     if test x"${ac_cv_c_tkconfig}" = x ; then
         dnl Get the path to the compiler
-	ccpath=`which ${CC}  | sed -e 's:/bin/.*::'`/lib
+	ccpath=`which ${CC}  | sed -e 's:/System/Tools/.*::'`/lib
         if test -f $ccpath/tkConfig.sh; then
 	    ac_cv_c_tkconfig=$ccpath
         fi
@@ -1325,7 +1325,7 @@
 if test x"${ac_cv_c_itclh}" = x ; then
     dnl find the top level Itcl source directory
     for i in $dirlist; do
-        if test -n "`ls -dr $srcdir/$i/itcl* 2>/dev/null`" ; then
+        if test -n "`ls -dr $srcdir/$i/itcl* 2>/System/Devices/null`" ; then
 	    itclpath=$srcdir/$i
 	    break
 	fi
@@ -1333,7 +1333,7 @@
 
     dnl find the exact Itcl source dir. We do it this way, cause there
     dnl might be multiple version of Itcl, and we want the most recent one.
-    for i in `ls -dr $itclpath/itcl* 2>/dev/null ` ; do
+    for i in `ls -dr $itclpath/itcl* 2>/System/Devices/null ` ; do
         if test -f $i/src/itcl.h ; then
           ac_cv_c_itclh=`(cd $i/src; ${PWDCMD-pwd})`
           break
@@ -1392,7 +1392,7 @@
     if test x"${ac_cv_c_itcllib}" = x ; then
         dnl find the top level Itcl build directory
         for i in $dirlist; do
-            if test -n "`ls -dr $i/itcl* 2>/dev/null`" ; then
+            if test -n "`ls -dr $i/itcl* 2>/System/Devices/null`" ; then
 	        itclpath=$i/itcl
 	        break
 	    fi
@@ -1407,12 +1407,12 @@
     dnl check in a few other private locations
     if test x"${ac_cv_c_itcllib}" = x ; then
         for i in ${dirlist}; do
-            if test -n "`ls -dr ${srcdir}/$i/itcl* 2>/dev/null`" ; then
+            if test -n "`ls -dr ${srcdir}/$i/itcl* 2>/System/Devices/null`" ; then
 	        itclpath=${srcdir}/$i
 	        break
 	    fi
         done
-        for i in `ls -dr ${itclpath}/itcl* 2>/dev/null` ; do
+        for i in `ls -dr ${itclpath}/itcl* 2>/System/Devices/null` ; do
             dnl Itcl 7.5 and greater puts library in subdir.  Look there first.
             if test -f "$i/src/libitcl$TCL_SHLIB_SUFFIX" ; then
 	        ac_cv_c_itcllib=`(cd $i/src; ${PWDCMD-pwd})`
@@ -1427,7 +1427,7 @@
     dnl see if one is conveniently installed with the compiler
     if test x"${ac_cv_c_itcllib}" = x ; then
         dnl Get the path to the compiler
-	ccpath=`which ${CC}  | sed -e 's:/bin/.*::'`/lib
+	ccpath=`which ${CC}  | sed -e 's:/System/Tools/.*::'`/lib
         dnl Itcl 7.5 and greater puts library in subdir.  Look there first.
         if test -f "${ccpath}/libitcl$TCL_SHLIB_SUFFIX" ; then
 	    ac_cv_c_itcllib=`(cd ${ccpath}; ${PWDCMD-pwd})`
@@ -1476,7 +1476,7 @@
 if test x"${ac_cv_c_itclsh}" = x ; then
     dnl find the top level Itcl source directory
     for i in $dirlist; do
-        if test -n "`ls -dr $srcdir/$i/itcl* 2>/dev/null`" ; then
+        if test -n "`ls -dr $srcdir/$i/itcl* 2>/System/Devices/null`" ; then
 	    itclpath=$srcdir/$i
 	    break
 	fi
@@ -1484,7 +1484,7 @@
 
     dnl find the exact Itcl source dir. We do it this way, cause there
     dnl might be multiple version of Itcl, and we want the most recent one.
-    for i in `ls -dr $itclpath/itcl* 2>/dev/null ` ; do
+    for i in `ls -dr $itclpath/itcl* 2>/System/Devices/null ` ; do
         if test -f $i/src/itcl_sh ; then
           ac_cv_c_itclsh=`(cd $i/src; ${PWDCMD-pwd})`/itcl_sh
           break
@@ -1538,7 +1538,7 @@
 if test x"${ac_cv_c_itclmkidx}" = x ; then
     dnl find the top level Itcl source directory
     for i in $dirlist; do
-        if test -n "`ls -dr $srcdir/$i/itcl* 2>/dev/null`" ; then
+        if test -n "`ls -dr $srcdir/$i/itcl* 2>/System/Devices/null`" ; then
 	    itclpath=$srcdir/$i
 	    break
 	fi
@@ -1546,7 +1546,7 @@
 
     dnl find the exact Itcl source dir. We do it this way, cause there
     dnl might be multiple version of Itcl, and we want the most recent one.
-    for i in `ls -dr $itclpath/itcl* 2>/dev/null ` ; do
+    for i in `ls -dr $itclpath/itcl* 2>/System/Devices/null ` ; do
         if test -f $i/library/itcl_mkindex.tcl ; then
           ac_cv_c_itclmkidx=`(cd $i/library; ${PWDCMD-pwd})`/itcl_mkindex.tcl
           break
@@ -1555,9 +1555,9 @@
 fi
 if test x"${ac_cv_c_itclmkidx}" = x ; then
     dnl Get the path to the compiler
-    ccpath=`which ${CC}  | sed -e 's:/bin/.*::'`/share
+    ccpath=`which ${CC}  | sed -e 's:/System/Tools/.*::'`/share
     dnl Itcl 7.5 and greater puts library in subdir.  Look there first.
-    for i in `ls -dr $ccpath/itcl* 2>/dev/null ` ; do
+    for i in `ls -dr $ccpath/itcl* 2>/System/Devices/null ` ; do
         if test -f $i/itcl_mkindex.tcl ; then
             ac_cv_c_itclmkidx=`(cd $i; ${PWDCMD-pwd})`/itcl_mkindex.tcl
             break
@@ -1618,7 +1618,7 @@
 if test x"${ac_cv_c_tixh}" = x ; then
     dnl find the top level Tix source directory
     for i in $dirlist; do
-        if test -n "`ls -dr $srcdir/$i/tix* 2>/dev/null`" ; then
+        if test -n "`ls -dr $srcdir/$i/tix* 2>/System/Devices/null`" ; then
 	    tixpath=$srcdir/$i
 	    break
 	fi
@@ -1626,7 +1626,7 @@
 
     dnl find the exact Tix source dir. We do it this way, cause there
     dnl might be multiple version of Tix, and we want the most recent one.
-    for i in `ls -dr $tixpath/tix* 2>/dev/null ` ; do
+    for i in `ls -dr $tixpath/tix* 2>/System/Devices/null ` ; do
         if test -f $i/generic/tix.h ; then
           ac_cv_c_tixh=`(cd $i/generic; ${PWDCMD-pwd})`
           break
@@ -1641,7 +1641,7 @@
 
    dnl Get the path to the compiler. We do it this way instead of using
     dnl AC_CHECK_HEADER, cause this doesn't depend in having X configured.
-    ccpath=`which ${CC}  | sed -e 's:/bin/.*::'`/include
+    ccpath=`which ${CC}  | sed -e 's:/System/Tools/.*::'`/include
     if test -f $ccpath/tix.h; then
 	ac_cv_c_tixh=installed
     fi
@@ -1691,11 +1691,11 @@
   if test x"${ac_cv_c_tixconfig}" = x ; then
     for i in \
 		../tix \
-		`ls -dr ../tix[[4]]* 2>/dev/null` \
+		`ls -dr ../tix[[4]]* 2>/System/Devices/null` \
 		../../tix \
-		`ls -dr ../../tix[[4]]* 2>/dev/null` \
+		`ls -dr ../../tix[[4]]* 2>/System/Devices/null` \
 		../../../tix \
-		`ls -dr ../../../tix[[4]]* 2>/dev/null` ; do
+		`ls -dr ../../../tix[[4]]* 2>/System/Devices/null` ; do
       if test -f "$i/tixConfig.sh" ; then
         ac_cv_c_tixconfig=`(cd $i; ${PWDCMD-pwd})`
 	break
@@ -1704,7 +1704,7 @@
   fi
   # check in a few common install locations
   if test x"${ac_cv_c_tixconfig}" = x ; then
-    for i in `ls -d ${prefix}/lib /usr/local/lib 2>/dev/null` ; do
+    for i in `ls -d ${prefix}/lib /usr/local/lib 2>/System/Devices/null` ; do
       if test -f "$i/tixConfig.sh" ; then
         ac_cv_c_tkconfig=`(cd $i; ${PWDCMD-pwd})`
 	break
@@ -1715,7 +1715,7 @@
   if test x"${ac_cv_c_tixconfig}" = x ; then
     for i in \
 		${srcdir}/../tix \
-		`ls -dr ${srcdir}/../tix[[4-9]]* 2>/dev/null` ; do
+		`ls -dr ${srcdir}/../tix[[4-9]]* 2>/System/Devices/null` ; do
       if test -f "$i/tixConfig.sh" ; then
         ac_cv_c_tixconfig=`(cd $i; ${PWDCMD-pwd})`
 	break
@@ -1774,11 +1774,11 @@
   if test x"${ac_cv_c_itclconfig}" = x ; then
     for i in \
 		../itcl/itcl \
-		`ls -dr ../itcl/itcl[[3]]* 2>/dev/null` \
+		`ls -dr ../itcl/itcl[[3]]* 2>/System/Devices/null` \
 		../../itcl/itcl \
-		`ls -dr ../../itcl/itcl[[3]]* 2>/dev/null` \
+		`ls -dr ../../itcl/itcl[[3]]* 2>/System/Devices/null` \
 		../../../itcl/itcl \
-		`ls -dr ../../../itcl/itcl[[3]]* 2>/dev/null` ; do
+		`ls -dr ../../../itcl/itcl[[3]]* 2>/System/Devices/null` ; do
       if test -f "$i/itclConfig.sh" ; then
         ac_cv_c_itclconfig=`(cd $i; ${PWDCMD-pwd})`
 	break
@@ -1787,7 +1787,7 @@
   fi
   # check in a few common install locations
   if test x"${ac_cv_c_itclconfig}" = x ; then
-    for i in `ls -d ${prefix}/lib /usr/local/lib 2>/dev/null` ; do
+    for i in `ls -d ${prefix}/lib /usr/local/lib 2>/System/Devices/null` ; do
       if test -f "$i/itclConfig.sh" ; then
         ac_cv_c_itclconfig=`(cd $i; ${PWDCMD-pwd})`
 	break
@@ -1798,7 +1798,7 @@
   if test x"${ac_cv_c_itclconfig}" = x ; then
     for i in \
 		${srcdir}/../itcl/itcl \
-		`ls -dr ${srcdir}/../itcl/itcl[[3]]* 2>/dev/null` ; do
+		`ls -dr ${srcdir}/../itcl/itcl[[3]]* 2>/System/Devices/null` ; do
       if test -f "$i/itcl/itclConfig.sh" ; then
         ac_cv_c_itclconfig=`(cd $i; ${PWDCMD-pwd})`
 	break
@@ -1861,11 +1861,11 @@
   if test x"${ac_cv_c_itkconfig}" = x ; then
     for i in \
 		../itcl/itk \
-		`ls -dr ../itcl/itk[[3]]* 2>/dev/null` \
+		`ls -dr ../itcl/itk[[3]]* 2>/System/Devices/null` \
 		../../itcl/itk \
-		`ls -dr ../../itcl/itk[[3]]* 2>/dev/null` \
+		`ls -dr ../../itcl/itk[[3]]* 2>/System/Devices/null` \
 		../../../itcl/itk \
-		`ls -dr ../../../itcl/itk[[3]]* 2>/dev/null` ; do
+		`ls -dr ../../../itcl/itk[[3]]* 2>/System/Devices/null` ; do
       if test -f "$i/itkConfig.sh" ; then
         ac_cv_c_itkconfig=`(cd $i; ${PWDCMD-pwd})`
 	break
@@ -1874,7 +1874,7 @@
   fi
   # check in a few common install locations
   if test x"${ac_cv_c_itkconfig}" = x ; then
-    for i in `ls -d ${prefix}/lib /usr/local/lib 2>/dev/null` ; do
+    for i in `ls -d ${prefix}/lib /usr/local/lib 2>/System/Devices/null` ; do
       if test -f "$i/itcl/itkConfig.sh" ; then
         ac_cv_c_itkconfig=`(cd $i; ${PWDCMD-pwd})`
 	break
@@ -1885,7 +1885,7 @@
   if test x"${ac_cv_c_itkconfig}" = x ; then
     for i in \
 		${srcdir}/../itcl/itk \
-		`ls -dr ${srcdir}/../itcl/itk[[3]]* 2>/dev/null` ; do
+		`ls -dr ${srcdir}/../itcl/itk[[3]]* 2>/System/Devices/null` ; do
       if test -f "$i/itkConfig.sh" ; then
         ac_cv_c_itkconfig=`(cd $i; ${PWDCMD-pwd})`
 	break
@@ -1957,7 +1957,7 @@
 if test x"${ac_cv_c_libguih}" = x ; then
     dnl find the top level Libgui source directory
     for i in $dirlist; do
-        if test -n "`ls -dr $srcdir/$i/libgui* 2>/dev/null`" ; then
+        if test -n "`ls -dr $srcdir/$i/libgui* 2>/System/Devices/null`" ; then
 	    libguipath=$srcdir/$i
 	    break
 	fi
@@ -1965,7 +1965,7 @@
 
     dnl find the exact Libgui source dir. We do it this way, cause there
     dnl might be multiple version of Libgui, and we want the most recent one.
-    for i in `ls -dr $libguipath/libgui* 2>/dev/null ` ; do
+    for i in `ls -dr $libguipath/libgui* 2>/System/Devices/null ` ; do
         if test -f $i/src/guitcl.h ; then
           ac_cv_c_libguih=`(cd $i/src; ${PWDCMD-pwd})`
           break
diff -urN binutils-2.16.1/config/acx.m4 binutils-2.16.1-STEP/config/acx.m4
--- binutils-2.16.1/config/acx.m4	2005-03-01 03:07:03.000000000 +1300
+++ binutils-2.16.1-STEP/config/acx.m4	2005-09-02 11:16:19.740317592 +1200
@@ -234,15 +234,15 @@
 [ echo abfoo >t1
   echo cdfoo >t2
   gcc_cv_prog_cmp_skip='tail +16c $$f1 > tmp-foo1; tail +16c $$f2 > tmp-foo2; cmp tmp-foo1 tmp-foo2'
-  if cmp t1 t2 2 2 > /dev/null 2>&1; then
-    if cmp t1 t2 1 1 > /dev/null 2>&1; then
+  if cmp t1 t2 2 2 > /System/Devices/null 2>&1; then
+    if cmp t1 t2 1 1 > /System/Devices/null 2>&1; then
       :
     else
       gcc_cv_prog_cmp_skip='cmp $$f1 $$f2 16 16'
     fi
   fi
-  if cmp --ignore-initial=2 t1 t2 > /dev/null 2>&1; then
-    if cmp --ignore-initial=1 t1 t2 > /dev/null 2>&1; then
+  if cmp --ignore-initial=2 t1 t2 > /System/Devices/null 2>&1; then
+    if cmp --ignore-initial=1 t1 t2 > /System/Devices/null 2>&1; then
       :
     else
       gcc_cv_prog_cmp_skip='cmp --ignore-initial=16 $$f1 $$f2'
@@ -293,7 +293,7 @@
 AC_CACHE_VAL(acx_cv_prog_LN,
 [rm -f conftestdata_t
 echo >conftestdata_f
-if ln conftestdata_f conftestdata_t 2>/dev/null
+if ln conftestdata_f conftestdata_t 2>/System/Devices/null
 then
   acx_cv_prog_LN=ln
 else
diff -urN binutils-2.16.1/config/lib-ld.m4 binutils-2.16.1-STEP/config/lib-ld.m4
--- binutils-2.16.1/config/lib-ld.m4	2004-09-24 07:43:47.000000000 +1200
+++ binutils-2.16.1-STEP/config/lib-ld.m4	2005-09-02 11:16:19.743317136 +1200
@@ -14,7 +14,7 @@
 AC_DEFUN([AC_LIB_PROG_LD_GNU],
 [AC_CACHE_CHECK([if the linker ($LD) is GNU ld], acl_cv_prog_gnu_ld,
 [# I'd rather use --version here, but apparently some GNU ld's only accept -v.
-if $LD -v 2>&1 </dev/null | egrep '(GNU|with BFD)' 1>&5; then
+if $LD -v 2>&1 </System/Devices/null | egrep '(GNU|with BFD)' 1>&5; then
   acl_cv_prog_gnu_ld=yes
 else
   acl_cv_prog_gnu_ld=no
@@ -32,10 +32,10 @@
 # Prepare PATH_SEPARATOR.
 # The user is always right.
 if test "${PATH_SEPARATOR+set}" != set; then
-  echo "#! /bin/sh" >conf$$.sh
+  echo "#! /System/Tools/sh" >conf$$.sh
   echo  "exit 0"   >>conf$$.sh
   chmod +x conf$$.sh
-  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
+  if (PATH="/nonexistent;."; conf$$.sh) >/System/Devices/null 2>&1; then
     PATH_SEPARATOR=';'
   else
     PATH_SEPARATOR=:
@@ -59,7 +59,7 @@
       [re_direlt='/[^/][^/]*/\.\./']
       # Canonicalize the path of ld
       ac_prog=`echo $ac_prog| sed 's%\\\\%/%g'`
-      while echo $ac_prog | grep "$re_direlt" > /dev/null 2>&1; do
+      while echo $ac_prog | grep "$re_direlt" > /System/Devices/null 2>&1; do
 	ac_prog=`echo $ac_prog| sed "s%$re_direlt%/%"`
       done
       test -z "$LD" && LD="$ac_prog"
@@ -88,7 +88,7 @@
       # Check to see if the program is GNU ld.  I'd rather use --version,
       # but apparently some GNU ld's only accept -v.
       # Break only if it was the GNU/non-GNU ld that we prefer.
-      if "$acl_cv_path_LD" -v 2>&1 < /dev/null | egrep '(GNU|with BFD)' > /dev/null; then
+      if "$acl_cv_path_LD" -v 2>&1 < /System/Devices/null | egrep '(GNU|with BFD)' > /System/Devices/null; then
 	test "$with_gnu_ld" != no && break
       else
 	test "$with_gnu_ld" != yes && break
diff -urN binutils-2.16.1/config/lib-link.m4 binutils-2.16.1-STEP/config/lib-link.m4
--- binutils-2.16.1/config/lib-link.m4	2004-09-24 07:43:47.000000000 +1200
+++ binutils-2.16.1-STEP/config/lib-link.m4	2005-09-02 11:16:19.745316832 +1200
@@ -101,7 +101,7 @@
   AC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT]) dnl we use $ac_aux_dir
   AC_CACHE_CHECK([for shared library run path origin], acl_cv_rpath, [
     CC="$CC" GCC="$GCC" LDFLAGS="$LDFLAGS" LD="$LD" with_gnu_ld="$with_gnu_ld" \
-    ${CONFIG_SHELL-/bin/sh} "$ac_aux_dir/config.rpath" "$host" > conftest.sh
+    ${CONFIG_SHELL-/System/Tools/sh} "$ac_aux_dir/config.rpath" "$host" > conftest.sh
     . ./conftest.sh
     rm -f ./conftest.sh
     acl_cv_rpath=done
diff -urN binutils-2.16.1/config/mh-lynxrs6k binutils-2.16.1-STEP/config/mh-lynxrs6k
--- binutils-2.16.1/config/mh-lynxrs6k	2002-12-28 20:09:15.000000000 +1300
+++ binutils-2.16.1-STEP/config/mh-lynxrs6k	2005-09-02 11:16:19.746316680 +1200
@@ -1,2 +1,2 @@
-# /bin/sh is too buggy, so use /bin/bash instead.
-SHELL = /bin/bash
+# /System/Tools/sh is too buggy, so use /System/Tools/bash instead.
+SHELL = /System/Tools/bash
diff -urN binutils-2.16.1/config/po.m4 binutils-2.16.1-STEP/config/po.m4
--- binutils-2.16.1/config/po.m4	2004-09-24 07:43:47.000000000 +1200
+++ binutils-2.16.1-STEP/config/po.m4	2005-09-02 11:16:19.747316528 +1200
@@ -34,8 +34,8 @@
   dnl The first test excludes Solaris msgfmt and early GNU msgfmt versions.
   dnl The second test excludes FreeBSD msgfmt.
   AM_PATH_PROG_WITH_TEST(MSGFMT, msgfmt,
-    [$ac_dir/$ac_word --statistics /dev/null >/dev/null 2>&1 &&
-     (if $ac_dir/$ac_word --statistics /dev/null 2>&1 >/dev/null | grep usage >/dev/null; then exit 1; else exit 0; fi)],
+    [$ac_dir/$ac_word --statistics /System/Devices/null >/System/Devices/null 2>&1 &&
+     (if $ac_dir/$ac_word --statistics /System/Devices/null 2>&1 >/System/Devices/null | grep usage >/System/Devices/null; then exit 1; else exit 0; fi)],
     :)
   AC_PATH_PROG(GMSGFMT, gmsgfmt, $MSGFMT)
 
@@ -43,23 +43,23 @@
   dnl The first test excludes Solaris xgettext and early GNU xgettext versions.
   dnl The second test excludes FreeBSD xgettext.
   AM_PATH_PROG_WITH_TEST(XGETTEXT, xgettext,
-    [$ac_dir/$ac_word --omit-header --copyright-holder= --msgid-bugs-address= /dev/null >/dev/null 2>&1 &&
-     (if $ac_dir/$ac_word --omit-header --copyright-holder= --msgid-bugs-address= /dev/null 2>&1 >/dev/null | grep usage >/dev/null; then exit 1; else exit 0; fi)],
+    [$ac_dir/$ac_word --omit-header --copyright-holder= --msgid-bugs-address= /System/Devices/null >/System/Devices/null 2>&1 &&
+     (if $ac_dir/$ac_word --omit-header --copyright-holder= --msgid-bugs-address= /System/Devices/null 2>&1 >/System/Devices/null | grep usage >/System/Devices/null; then exit 1; else exit 0; fi)],
     :)
   dnl Remove leftover from FreeBSD xgettext call.
   rm -f messages.po
 
   dnl Search for GNU msgmerge 0.11 or newer in the PATH.
   AM_PATH_PROG_WITH_TEST(MSGMERGE, msgmerge,
-    [$ac_dir/$ac_word --update -q /dev/null /dev/null >/dev/null 2>&1], :)
+    [$ac_dir/$ac_word --update -q /System/Devices/null /System/Devices/null >/System/Devices/null 2>&1], :)
 
   dnl This could go away some day; the PATH_PROG_WITH_TEST already does it.
   dnl Test whether we really found GNU msgfmt.
   if test "$GMSGFMT" != ":"; then
     dnl If it is no GNU msgfmt we define it as : so that the
     dnl Makefiles still can work.
-    if $GMSGFMT --statistics /dev/null >/dev/null 2>&1 &&
-       (if $GMSGFMT --statistics /dev/null 2>&1 >/dev/null | grep usage >/dev/null; then exit 1; else exit 0; fi); then
+    if $GMSGFMT --statistics /System/Devices/null >/System/Devices/null 2>&1 &&
+       (if $GMSGFMT --statistics /System/Devices/null 2>&1 >/System/Devices/null | grep usage >/System/Devices/null; then exit 1; else exit 0; fi); then
       : ;
     else
       GMSGFMT=`echo "$GMSGFMT" | sed -e 's,^.*/,,'`
@@ -74,8 +74,8 @@
   if test "$XGETTEXT" != ":"; then
     dnl If it is no GNU xgettext we define it as : so that the
     dnl Makefiles still can work.
-    if $XGETTEXT --omit-header --copyright-holder= --msgid-bugs-address= /dev/null >/dev/null 2>&1 &&
-       (if $XGETTEXT --omit-header --copyright-holder= --msgid-bugs-address= /dev/null 2>&1 >/dev/null | grep usage >/dev/null; then exit 1; else exit 0; fi); then
+    if $XGETTEXT --omit-header --copyright-holder= --msgid-bugs-address= /System/Devices/null >/System/Devices/null 2>&1 &&
+       (if $XGETTEXT --omit-header --copyright-holder= --msgid-bugs-address= /System/Devices/null 2>&1 >/System/Devices/null | grep usage >/System/Devices/null; then exit 1; else exit 0; fi); then
       : ;
     else
       AC_MSG_RESULT(
diff -urN binutils-2.16.1/config/progtest.m4 binutils-2.16.1-STEP/config/progtest.m4
--- binutils-2.16.1/config/progtest.m4	2003-07-15 06:38:36.000000000 +1200
+++ binutils-2.16.1-STEP/config/progtest.m4	2005-09-02 11:16:19.757315008 +1200
@@ -27,10 +27,10 @@
 # Prepare PATH_SEPARATOR.
 # The user is always right.
 if test "${PATH_SEPARATOR+set}" != set; then
-  echo "#! /bin/sh" >conf$$.sh
+  echo "#! /System/Tools/sh" >conf$$.sh
   echo  "exit 0"   >>conf$$.sh
   chmod +x conf$$.sh
-  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
+  if (PATH="/nonexistent;."; conf$$.sh) >/System/Devices/null 2>&1; then
     PATH_SEPARATOR=';'
   else
     PATH_SEPARATOR=:
@@ -41,11 +41,11 @@
 # Find out how to test for executable files. Don't use a zero-byte file,
 # as systems may use methods other than mode bits to determine executability.
 cat >conf$$.file <<_ASEOF
-#! /bin/sh
+#! /System/Tools/sh
 exit 0
 _ASEOF
 chmod +x conf$$.file
-if test -x conf$$.file >/dev/null 2>&1; then
+if test -x conf$$.file >/System/Devices/null 2>&1; then
   ac_executable_p="test -x"
 else
   ac_executable_p="test -f"
diff -urN binutils-2.16.1/config-ml.in binutils-2.16.1-STEP/config-ml.in
--- binutils-2.16.1/config-ml.in	2004-11-09 04:28:01.000000000 +1300
+++ binutils-2.16.1-STEP/config-ml.in	2005-09-02 11:16:19.782311208 +1200
@@ -100,7 +100,7 @@
 # configured for a particular host.
 
 Makefile=${ac_file-Makefile}
-ml_config_shell=${CONFIG_SHELL-/bin/sh}
+ml_config_shell=${CONFIG_SHELL-/System/Tools/sh}
 ml_realsrcdir=${srcdir}
 
 # Scan all the arguments and set all the ones we need.
@@ -197,7 +197,7 @@
 if [ "${ml_toplevel_p}" = yes ]; then
 
 multidirs=
-for i in `${CC-gcc} --print-multi-lib 2>/dev/null`; do
+for i in `${CC-gcc} --print-multi-lib 2>/System/Devices/null`; do
   dir=`echo $i | sed -e 's/;.*$//'`
   if [ "${dir}" = "." ]; then
     true
@@ -537,7 +537,7 @@
 	  srcrootpre=`cd $(srcdir); ${PWD_COMMAND}`/; export srcrootpre; \
 	  lib=`echo $${rootpre} | sed -e 's,^.*/\([^/][^/]*\)/$$,\1,'`; \
 	  compiler="$(CC)"; \
-	  for i in `$${compiler} --print-multi-lib 2>/dev/null`; do \
+	  for i in `$${compiler} --print-multi-lib 2>/System/Devices/null`; do \
 	    dir=`echo $$i | sed -e 's/;.*$$//'`; \
 	    if [ "$${dir}" = "." ]; then \
 	      true; \
@@ -711,7 +711,7 @@
         esac
         if test ! -d "$pathcomp"; then
            echo "mkdir $pathcomp" 1>&2
-           mkdir "$pathcomp" > /dev/null 2>&1 || lasterr=$?
+           mkdir "$pathcomp" > /System/Devices/null 2>&1 || lasterr=$?
         fi
         if test ! -d "$pathcomp"; then
 	   exit $lasterr
@@ -773,7 +773,7 @@
     fi
 
     # find compiler flag corresponding to ${ml_dir}
-    for i in `${CC-gcc} --print-multi-lib 2>/dev/null`; do
+    for i in `${CC-gcc} --print-multi-lib 2>/System/Devices/null`; do
       dir=`echo $i | sed -e 's/;.*$//'`
       if [ "${dir}" = "${ml_dir}" ]; then
         flags=`echo $i | sed -e 's/^[^;]*;//' -e 's/@/ -/g'`
diff -urN binutils-2.16.1/config.guess binutils-2.16.1-STEP/config.guess
--- binutils-2.16.1/config.guess	2004-11-16 14:18:39.000000000 +1300
+++ binutils-2.16.1-STEP/config.guess	2005-09-02 11:17:39.420204408 +1200
@@ -1,4 +1,4 @@
-#! /bin/sh
+#! /System/Tools/sh
 # Attempt to guess a canonical system name.
 #   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
 #   2000, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.
@@ -101,10 +101,10 @@
 # Portable tmp directory creation inspired by the Autoconf team.
 
 set_cc_for_build='
-trap "exitcode=\$?; (rm -f \$tmpfiles 2>/dev/null; rmdir \$tmp 2>/dev/null) && exit \$exitcode" 0 ;
-trap "rm -f \$tmpfiles 2>/dev/null; rmdir \$tmp 2>/dev/null; exit 1" 1 2 13 15 ;
-: ${TMPDIR=/tmp} ;
- { tmp=`(umask 077 && mktemp -d -q "$TMPDIR/cgXXXXXX") 2>/dev/null` && test -n "$tmp" && test -d "$tmp" ; } ||
+trap "exitcode=\$?; (rm -f \$tmpfiles 2>/System/Devices/null; rmdir \$tmp 2>/System/Devices/null) && exit \$exitcode" 0 ;
+trap "rm -f \$tmpfiles 2>/System/Devices/null; rmdir \$tmp 2>/System/Devices/null; exit 1" 1 2 13 15 ;
+: ${TMPDIR=/System/TemporaryFiles} ;
+ { tmp=`(umask 077 && mktemp -d -q "$TMPDIR/cgXXXXXX") 2>/System/Devices/null` && test -n "$tmp" && test -d "$tmp" ; } ||
  { test -n "$RANDOM" && tmp=$TMPDIR/cg$$-$RANDOM && (umask 077 && mkdir $tmp) ; } ||
  { tmp=$TMPDIR/cg-$$ && (umask 077 && mkdir $tmp) && echo "Warning: creating insecure temp directory" >&2 ; } ||
  { echo "$me: cannot create a temporary directory in $TMPDIR" >&2 ; exit 1 ; } ;
@@ -113,7 +113,7 @@
 case $CC_FOR_BUILD,$HOST_CC,$CC in
  ,,)    echo "int x;" > $dummy.c ;
 	for c in cc gcc c89 c99 ; do
-	  if ($c -c -o $dummy.o $dummy.c) >/dev/null 2>&1 ; then
+	  if ($c -c -o $dummy.o $dummy.c) >/System/Devices/null 2>&1 ; then
 	     CC_FOR_BUILD="$c"; break ;
 	  fi ;
 	done ;
@@ -127,14 +127,14 @@
 
 # This is needed to find uname on a Pyramid OSx when run in the BSD universe.
 # (ghazi@noc.rutgers.edu 1994-08-24)
-if (test -f /.attbin/uname) >/dev/null 2>&1 ; then
+if (test -f /.attbin/uname) >/System/Devices/null 2>&1 ; then
 	PATH=$PATH:/.attbin ; export PATH
 fi
 
-UNAME_MACHINE=`(uname -m) 2>/dev/null` || UNAME_MACHINE=unknown
-UNAME_RELEASE=`(uname -r) 2>/dev/null` || UNAME_RELEASE=unknown
-UNAME_SYSTEM=`(uname -s) 2>/dev/null`  || UNAME_SYSTEM=unknown
-UNAME_VERSION=`(uname -v) 2>/dev/null` || UNAME_VERSION=unknown
+UNAME_MACHINE=`(uname -m) 2>/System/Devices/null` || UNAME_MACHINE=unknown
+UNAME_RELEASE=`(uname -r) 2>/System/Devices/null` || UNAME_RELEASE=unknown
+UNAME_SYSTEM=`(uname -s) 2>/System/Devices/null`  || UNAME_SYSTEM=unknown
+UNAME_VERSION=`(uname -v) 2>/System/Devices/null` || UNAME_VERSION=unknown
 
 # Note: order is significant - the case branches are not exclusive.
 
@@ -151,8 +151,8 @@
 	# Note: NetBSD doesn't particularly care about the vendor
 	# portion of the name.  We always set it to "unknown".
 	sysctl="sysctl -n hw.machine_arch"
-	UNAME_MACHINE_ARCH=`(/sbin/$sysctl 2>/dev/null || \
-	    /usr/sbin/$sysctl 2>/dev/null || echo unknown)`
+	UNAME_MACHINE_ARCH=`(/System/AdminTools/$sysctl 2>/System/Devices/null || \
+	    /usr/System/AdminTools/$sysctl 2>/System/Devices/null || echo unknown)`
 	case "${UNAME_MACHINE_ARCH}" in
 	    armeb) machine=armeb-unknown ;;
 	    arm*) machine=arm-unknown ;;
@@ -165,8 +165,8 @@
 	case "${UNAME_MACHINE_ARCH}" in
 	    arm*|i386|m68k|ns32k|sh3*|sparc|vax)
 		eval $set_cc_for_build
-		if echo __ELF__ | $CC_FOR_BUILD -E - 2>/dev/null \
-			| grep __ELF__ >/dev/null
+		if echo __ELF__ | $CC_FOR_BUILD -E - 2>/System/Devices/null \
+			| grep __ELF__ >/System/Devices/null
 		then
 		    # Once all utilities can be ECOFF (netbsdecoff) or a.out (netbsdaout).
 		    # Return netbsd for either.  FIX?
@@ -248,17 +248,17 @@
     alpha:OSF1:*:*)
 	case $UNAME_RELEASE in
 	*4.0)
-		UNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $3}'`
+		UNAME_RELEASE=`/usr/System/AdminTools/sizer -v | awk '{print $3}'`
 		;;
 	*5.*)
-	        UNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $4}'`
+	        UNAME_RELEASE=`/usr/System/AdminTools/sizer -v | awk '{print $4}'`
 		;;
 	esac
-	# According to Compaq, /usr/sbin/psrinfo has been available on
+	# According to Compaq, /usr/System/AdminTools/psrinfo has been available on
 	# OSF/1 and Tru64 systems produced since 1995.  I hope that
 	# covers most systems running today.  This code pipes the CPU
 	# types through head -n 1, so we only detect the type of CPU 0.
-	ALPHA_CPU_TYPE=`/usr/sbin/psrinfo -v | sed -n -e 's/^  The alpha \(.*\) processor.*$/\1/p' | head -n 1`
+	ALPHA_CPU_TYPE=`/usr/System/AdminTools/psrinfo -v | sed -n -e 's/^  The alpha \(.*\) processor.*$/\1/p' | head -n 1`
 	case "$ALPHA_CPU_TYPE" in
 	    "EV4 (21064)")
 		UNAME_MACHINE="alpha" ;;
@@ -333,7 +333,7 @@
 	exit 0;;
     Pyramid*:OSx*:*:* | MIS*:OSx*:*:* | MIS*:SMP_DC-OSx*:*:*)
 	# akee@wpdis03.wpafb.af.mil (Earle F. Ake) contributed MIS and NILE.
-	if test "`(/bin/universe) 2>/dev/null`" = att ; then
+	if test "`(/System/Tools/universe) 2>/System/Devices/null`" = att ; then
 		echo pyramid-pyramid-sysv3
 	else
 		echo pyramid-pyramid-bsd
@@ -346,7 +346,7 @@
 	echo sparc-icl-nx6
 	exit 0 ;;
     DRS?6000:UNIX_SV:4.2*:7* | DRS?6000:isis:4.2*:7*)
-	case `/usr/bin/uname -p` in
+	case `/System/Tools/uname -p` in
 	    sparc) echo sparc-icl-nx7 && exit 0 ;;
 	esac ;;
     sun4H:SunOS:5.*:*)
@@ -365,7 +365,7 @@
 	echo sparc-sun-solaris3`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
 	exit 0 ;;
     sun4*:SunOS:*:*)
-	case "`/usr/bin/arch -k`" in
+	case "`/System/Tools/arch -k`" in
 	    Series*|S4*)
 		UNAME_RELEASE=`uname -v`
 		;;
@@ -377,9 +377,9 @@
 	echo m68k-sun-sunos${UNAME_RELEASE}
 	exit 0 ;;
     sun*:*:4.2BSD:*)
-	UNAME_RELEASE=`(sed 1q /etc/motd | awk '{print substr($5,1,3)}') 2>/dev/null`
+	UNAME_RELEASE=`(sed 1q/System/Settings/motd | awk '{print substr($5,1,3)}') 2>/System/Devices/null`
 	test "x${UNAME_RELEASE}" = "x" && UNAME_RELEASE=3
-	case "`/bin/arch`" in
+	case "`/System/Tools/arch`" in
 	    sun3)
 		echo m68k-sun-sunos${UNAME_RELEASE}
 		;;
@@ -486,7 +486,7 @@
 	exit 0 ;;
     AViiON:dgux:*:*)
         # DG/UX returns AViiON for all architectures
-        UNAME_PROCESSOR=`/usr/bin/uname -p`
+        UNAME_PROCESSOR=`/System/Tools/uname -p`
 	if [ $UNAME_PROCESSOR = mc88100 ] || [ $UNAME_PROCESSOR = mc88110 ]
 	then
 	    if [ ${TARGET_BINARY_INTERFACE}x = m88kdguxelfx ] || \
@@ -523,15 +523,15 @@
 	echo i386-ibm-aix
 	exit 0 ;;
     ia64:AIX:*:*)
-	if [ -x /usr/bin/oslevel ] ; then
-		IBM_REV=`/usr/bin/oslevel`
+	if [ -x /System/Tools/oslevel ] ; then
+		IBM_REV=`/System/Tools/oslevel`
 	else
 		IBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}
 	fi
 	echo ${UNAME_MACHINE}-ibm-aix${IBM_REV}
 	exit 0 ;;
     *:AIX:2:3)
-	if grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then
+	if grep bos325 /usr/include/stdio.h >/System/Devices/null 2>&1; then
 		eval $set_cc_for_build
 		sed 's/^		//' << EOF >$dummy.c
 		#include <sys/systemcfg.h>
@@ -546,21 +546,21 @@
 EOF
 		$CC_FOR_BUILD -o $dummy $dummy.c && $dummy && exit 0
 		echo rs6000-ibm-aix3.2.5
-	elif grep bos324 /usr/include/stdio.h >/dev/null 2>&1; then
+	elif grep bos324 /usr/include/stdio.h >/System/Devices/null 2>&1; then
 		echo rs6000-ibm-aix3.2.4
 	else
 		echo rs6000-ibm-aix3.2
 	fi
 	exit 0 ;;
     *:AIX:*:[45])
-	IBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }'`
-	if /usr/sbin/lsattr -El ${IBM_CPU_ID} | grep ' POWER' >/dev/null 2>&1; then
+	IBM_CPU_ID=`/usr/System/AdminTools/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }'`
+	if /usr/System/AdminTools/lsattr -El ${IBM_CPU_ID} | grep ' POWER' >/System/Devices/null 2>&1; then
 		IBM_ARCH=rs6000
 	else
 		IBM_ARCH=powerpc
 	fi
-	if [ -x /usr/bin/oslevel ] ; then
-		IBM_REV=`/usr/bin/oslevel`
+	if [ -x /System/Tools/oslevel ] ; then
+		IBM_REV=`/System/Tools/oslevel`
 	else
 		IBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}
 	fi
@@ -593,9 +593,9 @@
 	    9000/31? )            HP_ARCH=m68000 ;;
 	    9000/[34]?? )         HP_ARCH=m68k ;;
 	    9000/[678][0-9][0-9])
-		if [ -x /usr/bin/getconf ]; then
-		    sc_cpu_version=`/usr/bin/getconf SC_CPU_VERSION 2>/dev/null`
-                    sc_kernel_bits=`/usr/bin/getconf SC_KERNEL_BITS 2>/dev/null`
+		if [ -x /System/Tools/getconf ]; then
+		    sc_cpu_version=`/System/Tools/getconf SC_CPU_VERSION 2>/System/Devices/null`
+                    sc_kernel_bits=`/System/Tools/getconf SC_KERNEL_BITS 2>/System/Devices/null`
                     case "${sc_cpu_version}" in
                       523) HP_ARCH="hppa1.0" ;; # CPU_PA_RISC1_0
                       528) HP_ARCH="hppa1.1" ;; # CPU_PA_RISC1_1
@@ -642,7 +642,7 @@
                   exit (0);
               }
 EOF
-		    (CCOPTS= $CC_FOR_BUILD -o $dummy $dummy.c 2>/dev/null) && HP_ARCH=`$dummy`
+		    (CCOPTS= $CC_FOR_BUILD -o $dummy $dummy.c 2>/System/Devices/null) && HP_ARCH=`$dummy`
 		    test -z "$HP_ARCH" && HP_ARCH=hppa
 		fi ;;
 	esac
@@ -650,7 +650,7 @@
 	then
 	    # avoid double evaluation of $set_cc_for_build
 	    test -n "$CC_FOR_BUILD" || eval $set_cc_for_build
-	    if echo __LP64__ | (CCOPTS= $CC_FOR_BUILD -E -) | grep __LP64__ >/dev/null
+	    if echo __LP64__ | (CCOPTS= $CC_FOR_BUILD -E -) | grep __LP64__ >/System/Devices/null
 	    then
 		HP_ARCH="hppa2.0w"
 	    else
@@ -709,7 +709,7 @@
 	echo hppa1.0-hp-osf
 	exit 0 ;;
     i*86:OSF1:*:*)
-	if [ -x /usr/sbin/sysversion ] ; then
+	if [ -x /usr/System/AdminTools/sysversion ] ; then
 	    echo ${UNAME_MACHINE}-unknown-osf1mk
 	else
 	    echo ${UNAME_MACHINE}-unknown-osf1
@@ -858,7 +858,7 @@
 	#endif
 	#endif
 EOF
-	eval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep ^CPU=`
+	eval `$CC_FOR_BUILD -E $dummy.c 2>/System/Devices/null | grep ^CPU=`
 	test x"${CPU}" != x && echo "${CPU}-unknown-linux-gnu" && exit 0
 	;;
     mips64:Linux:*:*)
@@ -877,7 +877,7 @@
 	#endif
 	#endif
 EOF
-	eval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep ^CPU=`
+	eval `$CC_FOR_BUILD -E $dummy.c 2>/System/Devices/null | grep ^CPU=`
 	test x"${CPU}" != x && echo "${CPU}-unknown-linux-gnu" && exit 0
 	;;
     ppc:Linux:*:*)
@@ -887,7 +887,7 @@
 	echo powerpc64-unknown-linux-gnu
 	exit 0 ;;
     alpha:Linux:*:*)
-	case `sed -n '/^cpu model/s/^.*: \(.*\)/\1/p' < /proc/cpuinfo` in
+	case `sed -n '/^cpu model/s/^.*: \(.*\)/\1/p' < /System/Processes/cpuinfo` in
 	  EV5)   UNAME_MACHINE=alphaev5 ;;
 	  EV56)  UNAME_MACHINE=alphaev56 ;;
 	  PCA56) UNAME_MACHINE=alphapca56 ;;
@@ -896,13 +896,13 @@
 	  EV67)  UNAME_MACHINE=alphaev67 ;;
 	  EV68*) UNAME_MACHINE=alphaev68 ;;
         esac
-	objdump --private-headers /bin/sh | grep ld.so.1 >/dev/null
+	objdump --private-headers /System/Tools/sh | grep ld.so.1 >/System/Devices/null
 	if test "$?" = 0 ; then LIBC="libc1" ; else LIBC="" ; fi
 	echo ${UNAME_MACHINE}-unknown-linux-gnu${LIBC}
 	exit 0 ;;
     parisc:Linux:*:* | hppa:Linux:*:*)
 	# Look for CPU level
-	case `grep '^cpu[^a-z]*:' /proc/cpuinfo 2>/dev/null | cut -d' ' -f2` in
+	case `grep '^cpu[^a-z]*:' /System/Processes/cpuinfo 2>/System/Devices/null | cut -d' ' -f2` in
 	  PA7*) echo hppa1.1-unknown-linux-gnu ;;
 	  PA8*) echo hppa2.0-unknown-linux-gnu ;;
 	  *)    echo hppa-unknown-linux-gnu ;;
@@ -978,7 +978,7 @@
 	LIBC=dietlibc
 	#endif
 EOF
-	eval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep ^LIBC=`
+	eval `$CC_FOR_BUILD -E $dummy.c 2>/System/Devices/null | grep ^LIBC=`
 	test x"${LIBC}" != x && echo "${UNAME_MACHINE}-pc-linux-${LIBC}" && exit 0
 	test x"${TENTATIVE}" != x && echo "${TENTATIVE}" && exit 0
 	;;
@@ -1018,14 +1018,14 @@
 	exit 0 ;;
     i*86:*:4.*:* | i*86:SYSTEM_V:4.*:*)
 	UNAME_REL=`echo ${UNAME_RELEASE} | sed 's/\/MP$//'`
-	if grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then
+	if grep Novell /usr/include/link.h >/System/Devices/null 2>/System/Devices/null; then
 		echo ${UNAME_MACHINE}-univel-sysv${UNAME_REL}
 	else
 		echo ${UNAME_MACHINE}-pc-sysv${UNAME_REL}
 	fi
 	exit 0 ;;
     i*86:*:5:[78]*)
-	case `/bin/uname -X | grep "^Machine"` in
+	case `/System/Tools/uname -X | grep "^Machine"` in
 	    *486*)	     UNAME_MACHINE=i486 ;;
 	    *Pentium)	     UNAME_MACHINE=i586 ;;
 	    *Pent*|*Celeron) UNAME_MACHINE=i686 ;;
@@ -1036,14 +1036,14 @@
 	if test -f /usr/options/cb.name; then
 		UNAME_REL=`sed -n 's/.*Version //p' </usr/options/cb.name`
 		echo ${UNAME_MACHINE}-pc-isc$UNAME_REL
-	elif /bin/uname -X 2>/dev/null >/dev/null ; then
-		UNAME_REL=`(/bin/uname -X|grep Release|sed -e 's/.*= //')`
-		(/bin/uname -X|grep i80486 >/dev/null) && UNAME_MACHINE=i486
-		(/bin/uname -X|grep '^Machine.*Pentium' >/dev/null) \
+	elif /System/Tools/uname -X 2>/System/Devices/null >/System/Devices/null ; then
+		UNAME_REL=`(/System/Tools/uname -X|grep Release|sed -e 's/.*= //')`
+		(/System/Tools/uname -X|grep i80486 >/System/Devices/null) && UNAME_MACHINE=i486
+		(/System/Tools/uname -X|grep '^Machine.*Pentium' >/System/Devices/null) \
 			&& UNAME_MACHINE=i586
-		(/bin/uname -X|grep '^Machine.*Pent *II' >/dev/null) \
+		(/System/Tools/uname -X|grep '^Machine.*Pent *II' >/System/Devices/null) \
 			&& UNAME_MACHINE=i686
-		(/bin/uname -X|grep '^Machine.*Pentium Pro' >/dev/null) \
+		(/System/Tools/uname -X|grep '^Machine.*Pentium Pro' >/System/Devices/null) \
 			&& UNAME_MACHINE=i686
 		echo ${UNAME_MACHINE}-pc-sco$UNAME_REL
 	else
@@ -1063,7 +1063,7 @@
 	echo i860-intel-osf1
 	exit 0 ;;
     i860:*:4.*:*) # i860-SVR4
-	if grep Stardent /usr/include/sys/uadmin.h >/dev/null 2>&1 ; then
+	if grep Stardent /usr/include/sys/uadmin.h >/System/Devices/null 2>&1 ; then
 	  echo i860-stardent-sysv${UNAME_RELEASE} # Stardent Vistra i860-SVR4
 	else # Add other i860-SVR4 vendors below as they are discovered.
 	  echo i860-unknown-sysv${UNAME_RELEASE}  # Unknown i860-SVR4
@@ -1083,14 +1083,14 @@
 	test -r /sysV68 && echo 'm68k-motorola-sysv' && exit 0 ;;
     3[345]??:*:4.0:3.0 | 3[34]??A:*:4.0:3.0 | 3[34]??,*:*:4.0:3.0 | 3[34]??/*:*:4.0:3.0 | 4400:*:4.0:3.0 | 4850:*:4.0:3.0 | SKA40:*:4.0:3.0 | SDS2:*:4.0:3.0 | SHG2:*:4.0:3.0 | S7501*:*:4.0:3.0)
 	OS_REL=''
-	test -r /etc/.relid \
-	&& OS_REL=.`sed -n 's/[^ ]* [^ ]* \([0-9][0-9]\).*/\1/p' < /etc/.relid`
-	/bin/uname -p 2>/dev/null | grep 86 >/dev/null \
+	test -r/System/Settings/.relid \
+	&& OS_REL=.`sed -n 's/[^ ]* [^ ]* \([0-9][0-9]\).*/\1/p' </System/Settings/.relid`
+	/System/Tools/uname -p 2>/System/Devices/null | grep 86 >/System/Devices/null \
 	  && echo i486-ncr-sysv4.3${OS_REL} && exit 0
-	/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \
+	/System/Tools/uname -p 2>/System/Devices/null | /System/Tools/grep entium >/System/Devices/null \
 	  && echo i586-ncr-sysv4.3${OS_REL} && exit 0 ;;
     3[34]??:*:4.0:* | 3[34]??,*:*:4.0:*)
-        /bin/uname -p 2>/dev/null | grep 86 >/dev/null \
+        /System/Tools/uname -p 2>/System/Devices/null | grep 86 >/System/Devices/null \
           && echo i486-ncr-sysv4 && exit 0 ;;
     m68*:LynxOS:2.*:* | m68*:LynxOS:3.0*:*)
 	echo m68k-unknown-lynxos${UNAME_RELEASE}
@@ -1117,8 +1117,8 @@
 	echo mips-sni-sysv4
 	exit 0 ;;
     *:SINIX-*:*:*)
-	if uname -p 2>/dev/null >/dev/null ; then
-		UNAME_MACHINE=`(uname -p) 2>/dev/null`
+	if uname -p 2>/System/Devices/null >/System/Devices/null ; then
+		UNAME_MACHINE=`(uname -p) 2>/System/Devices/null`
 		echo ${UNAME_MACHINE}-sni-sysv4
 	else
 		echo ns32k-sni-sysv
@@ -1245,7 +1245,7 @@
 	echo ${UNAME_MACHINE}-unknown-dragonfly`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`
 	exit 0 ;;
     *:*VMS:*:*)
-    	UNAME_MACHINE=`(uname -p) 2>/dev/null`
+    	UNAME_MACHINE=`(uname -p) 2>/System/Devices/null`
 	case "${UNAME_MACHINE}" in
 	    A*) echo alpha-dec-vms && exit 0 ;;
 	    I*) echo ia64-dec-vms && exit 0 ;;
@@ -1297,7 +1297,7 @@
 #define __ARCHITECTURE__ "m68k"
 #endif
   int version;
-  version=`(hostinfo | sed -n 's/.*NeXT Mach \([0-9]*\).*/\1/p') 2>/dev/null`;
+  version=`(hostinfo | sed -n 's/.*NeXT Mach \([0-9]*\).*/\1/p') 2>/System/Devices/null`;
   if (version < 4)
     printf ("%s-next-nextstep%d\n", __ARCHITECTURE__, version);
   else
@@ -1374,7 +1374,7 @@
 }
 EOF
 
-$CC_FOR_BUILD -o $dummy $dummy.c 2>/dev/null && $dummy && exit 0
+$CC_FOR_BUILD -o $dummy $dummy.c 2>/System/Devices/null && $dummy && exit 0
 
 # Apollos put the system type in the environment.
 
@@ -1422,20 +1422,20 @@
 
 config.guess timestamp = $timestamp
 
-uname -m = `(uname -m) 2>/dev/null || echo unknown`
-uname -r = `(uname -r) 2>/dev/null || echo unknown`
-uname -s = `(uname -s) 2>/dev/null || echo unknown`
-uname -v = `(uname -v) 2>/dev/null || echo unknown`
-
-/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null`
-/bin/uname -X     = `(/bin/uname -X) 2>/dev/null`
-
-hostinfo               = `(hostinfo) 2>/dev/null`
-/bin/universe          = `(/bin/universe) 2>/dev/null`
-/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null`
-/bin/arch              = `(/bin/arch) 2>/dev/null`
-/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null`
-/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null`
+uname -m = `(uname -m) 2>/System/Devices/null || echo unknown`
+uname -r = `(uname -r) 2>/System/Devices/null || echo unknown`
+uname -s = `(uname -s) 2>/System/Devices/null || echo unknown`
+uname -v = `(uname -v) 2>/System/Devices/null || echo unknown`
+
+/System/Tools/uname -p = `(/System/Tools/uname -p) 2>/System/Devices/null`
+/System/Tools/uname -X     = `(/System/Tools/uname -X) 2>/System/Devices/null`
+
+hostinfo               = `(hostinfo) 2>/System/Devices/null`
+/System/Tools/universe          = `(/System/Tools/universe) 2>/System/Devices/null`
+/System/Tools/arch -k       = `(/System/Tools/arch -k) 2>/System/Devices/null`
+/System/Tools/arch              = `(/System/Tools/arch) 2>/System/Devices/null`
+/System/Tools/oslevel       = `(/System/Tools/oslevel) 2>/System/Devices/null`
+/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/System/Devices/null`
 
 UNAME_MACHINE = ${UNAME_MACHINE}
 UNAME_RELEASE = ${UNAME_RELEASE}
diff -urN binutils-2.16.1/config.sub binutils-2.16.1-STEP/config.sub
--- binutils-2.16.1/config.sub	2005-01-19 13:34:56.000000000 +1300
+++ binutils-2.16.1-STEP/config.sub	2005-09-02 11:16:19.795309232 +1200
@@ -1,4 +1,4 @@
-#! /bin/sh
+#! /System/Tools/sh
 # Configuration validation subroutine script.
 #   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
 #   2000, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.
diff -urN binutils-2.16.1/configure binutils-2.16.1-STEP/configure
--- binutils-2.16.1/configure	2005-03-01 03:06:59.000000000 +1300
+++ binutils-2.16.1-STEP/configure	2005-09-02 11:16:19.801308320 +1200
@@ -1,4 +1,4 @@
-#! /bin/sh
+#! /System/Tools/sh
 
 # Guess values for system-dependent variables and create Makefiles.
 # Generated automatically using autoconf version 2.13 
@@ -71,7 +71,7 @@
 # Initialize some other variables.
 subdirs=
 MFLAGS= MAKEFLAGS=
-SHELL=${CONFIG_SHELL-/bin/sh}
+SHELL=${CONFIG_SHELL-/System/Tools/sh}
 # Maximum number of lines to put in a shell here document.
 ac_max_here_lines=12
 
@@ -424,12 +424,12 @@
 # 0 standard input
 # 1 file creation
 # 2 errors and warnings
-# 3 some systems may open it to /dev/tty
+# 3 some systems may open it to /System/Devices/tty
 # 4 used on the Kubota Titan
 # 6 checking for... messages and results
 # 5 compiler messages saved in config.log
 if test "$silent" = yes; then
-  exec 6>/dev/null
+  exec 6>/System/Devices/null
 else
   exec 6>&1
 fi
@@ -530,9 +530,9 @@
 
 ac_exeext=
 ac_objext=o
-if (echo "testing\c"; echo 1,2,3) | grep c >/dev/null; then
+if (echo "testing\c"; echo 1,2,3) | grep c >/System/Devices/null; then
   # Stardent Vistra SVR4 grep lacks -e, says ghazi@caip.rutgers.edu.
-  if (echo -n testing; echo 1,2,3) | sed s/-n/xn/ | grep xn >/dev/null; then
+  if (echo -n testing; echo 1,2,3) | sed s/-n/xn/ | grep xn >/System/Devices/null; then
     ac_n= ac_c='
 ' ac_t='	'
   else
@@ -586,7 +586,7 @@
 
 
 # Make sure we can run config.sub.
-if ${CONFIG_SHELL-/bin/sh} $ac_config_sub sun4 >/dev/null 2>&1; then :
+if ${CONFIG_SHELL-/System/Tools/sh} $ac_config_sub sun4 >/System/Devices/null 2>&1; then :
 else { echo "configure: error: can not run $ac_config_sub" 1>&2; exit 1; }
 fi
 
@@ -598,14 +598,14 @@
 NONE)
   case $nonopt in
   NONE)
-    if host_alias=`${CONFIG_SHELL-/bin/sh} $ac_config_guess`; then :
+    if host_alias=`${CONFIG_SHELL-/System/Tools/sh} $ac_config_guess`; then :
     else { echo "configure: error: can not guess host type; you must specify one" 1>&2; exit 1; }
     fi ;;
   *) host_alias=$nonopt ;;
   esac ;;
 esac
 
-host=`${CONFIG_SHELL-/bin/sh} $ac_config_sub $host_alias`
+host=`${CONFIG_SHELL-/System/Tools/sh} $ac_config_sub $host_alias`
 host_cpu=`echo $host | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\1/'`
 host_vendor=`echo $host | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\2/'`
 host_os=`echo $host | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\3/'`
@@ -623,7 +623,7 @@
   esac ;;
 esac
 
-target=`${CONFIG_SHELL-/bin/sh} $ac_config_sub $target_alias`
+target=`${CONFIG_SHELL-/System/Tools/sh} $ac_config_sub $target_alias`
 target_cpu=`echo $target | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\1/'`
 target_vendor=`echo $target | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\2/'`
 target_os=`echo $target | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\3/'`
@@ -641,7 +641,7 @@
   esac ;;
 esac
 
-build=`${CONFIG_SHELL-/bin/sh} $ac_config_sub $build_alias`
+build=`${CONFIG_SHELL-/System/Tools/sh} $ac_config_sub $build_alias`
 build_cpu=`echo $build | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\1/'`
 build_vendor=`echo $build | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\2/'`
 build_os=`echo $build | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\3/'`
@@ -676,12 +676,12 @@
 # Find a good install program.  We prefer a C program (faster),
 # so one script is as good as another.  But avoid the broken or
 # incompatible versions:
-# SysV /etc/install, /usr/sbin/install
+# SysV/System/Settings/install, /usr/System/AdminTools/install
 # SunOS /usr/etc/install
-# IRIX /sbin/install
-# AIX /bin/install
-# AIX 4 /usr/bin/installbsd, which doesn't work without a -g flag
-# AFS /usr/afsws/bin/install, which mishandles nonexistent args
+# IRIX /System/AdminTools/install
+# AIX /System/Tools/install
+# AIX 4 /System/Tools/installbsd, which doesn't work without a -g flag
+# AFS /usr/afsws/System/Tools/install, which mishandles nonexistent args
 # SVR4 /usr/ucb/install, which tries to use the nonexistent group "staff"
 # ./install, which can be erroneously created by make from ./install.sh.
 echo $ac_n "checking for a BSD compatible install""... $ac_c" 1>&6
@@ -694,7 +694,7 @@
   for ac_dir in $PATH; do
     # Account for people who put trailing slashes in PATH elements.
     case "$ac_dir/" in
-    /|./|.//|/etc/*|/usr/sbin/*|/usr/etc/*|/sbin/*|/usr/afsws/bin/*|/usr/ucb/*) ;;
+    /|./|.//|/etc/*|/usr/System/AdminTools/*|/usr/etc/*|/System/AdminTools/*|/usr/afsws/System/Tools/*|/usr/ucb/*) ;;
     *)
       # OSF1 and SCO ODT 3.0 have their own names for install.
       # Don't use installbsd from OSF since it installs stuff as root
@@ -702,7 +702,7 @@
       for ac_prog in ginstall scoinst install; do
         if test -f $ac_dir/$ac_prog; then
 	  if test $ac_prog = install &&
-            grep dspmsg $ac_dir/$ac_prog >/dev/null 2>&1; then
+            grep dspmsg $ac_dir/$ac_prog >/System/Devices/null 2>&1; then
 	    # AIX install.  It has an incompatible calling convention.
 	    :
 	  else
@@ -744,7 +744,7 @@
 else
   rm -f conftestdata_t
 echo >conftestdata_f
-if ln conftestdata_f conftestdata_t 2>/dev/null
+if ln conftestdata_f conftestdata_t 2>/System/Devices/null
 then
   acx_cv_prog_LN=ln
 else
@@ -767,7 +767,7 @@
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   rm -f conftestdata
-if ln -s X conftestdata 2>/dev/null
+if ln -s X conftestdata 2>/System/Devices/null
 then
   rm -f conftestdata
   ac_cv_prog_LN_S="ln -s"
@@ -783,15 +783,15 @@
 fi
 
 
-### we might need to use some other shell than /bin/sh for running subshells
+### we might need to use some other shell than /System/Tools/sh for running subshells
 ### If we are on Windows, search for the shell.  This will permit people
-### to not have /bin/sh, but to be able to see /SOME/PATH/sh configure
+### to not have /System/Tools/sh, but to be able to see /SOME/PATH/sh configure
 ### without also having to set CONFIG_SHELL.  This code will work when
 ### using bash, which sets OSTYPE.
 case "${OSTYPE}" in
 *win32*)
   if test x${CONFIG_SHELL} = x ; then
-    if test ! -f /bin/sh ; then
+    if test ! -f /System/Tools/sh ; then
       if test x${SHELL} != x && test -f ${SHELL} ; then
 	CONFIG_SHELL=${SHELL}
 	export CONFIG_SHELL
@@ -815,7 +815,7 @@
   ;;
 esac
 
-config_shell=${CONFIG_SHELL-/bin/sh}
+config_shell=${CONFIG_SHELL-/System/Tools/sh}
 
 progname=$0
 # if PWD already has a value, it is probably wrong.
@@ -1596,7 +1596,7 @@
 
 # Work in distributions that contain no compiler tools, like Autoconf.
 tentative_cc=""
-host_makefile_frag=/dev/null
+host_makefile_frag=/System/Devices/null
 if test -d ${srcdir}/config ; then
 case "${host}" in
   m68k-hp-hpux*)
@@ -1679,7 +1679,7 @@
     ;;
   i[3456789]86-ncr-sysv4*)
     # for an NCR 3000 (i486/SVR4) system.
-    # The NCR 3000 ships with a MetaWare compiler installed as /bin/cc.
+    # The NCR 3000 ships with a MetaWare compiler installed as /System/Tools/cc.
     # This compiler not only emits obnoxious copyright messages every time
     # you run it, but it chokes and dies on a whole bunch of GNU source
     # files.  Default to using the AT&T compiler installed in /usr/ccs/ATT/cc.
@@ -1731,16 +1731,16 @@
     tentative_cc="cc -Wp,-H256000"
     ;;
   rs6000-*-lynxos*)
-    # /bin/cc is less than useful for our purposes.  Always use GCC
-    tentative_cc="/usr/cygnus/progressive/bin/gcc"
+    # /System/Tools/cc is less than useful for our purposes.  Always use GCC
+    tentative_cc="/usr/cygnus/progressive/System/Tools/gcc"
     host_makefile_frag="config/mh-lynxrs6k"
     ;;
   powerpc-*-darwin*)
     host_makefile_frag="config/mh-ppc-darwin"
     ;;
   *-*-lynxos*)
-    # /bin/cc is less than useful for our purposes.  Always use GCC
-    tentative_cc="/bin/gcc"
+    # /System/Tools/cc is less than useful for our purposes.  Always use GCC
+    tentative_cc="/System/Tools/gcc"
     ;;
   *-*-sysv4*)
     host_makefile_frag="config/mh-sysv4"
@@ -1937,7 +1937,7 @@
 if { (eval echo configure:1938: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   ac_cv_prog_cc_works=yes
   # If we can't run a trivial program, we are probably using a cross compiler.
-  if (./conftest; exit) 2>/dev/null; then
+  if (./conftest; exit) 2>/System/Devices/null; then
     ac_cv_prog_cc_cross=no
   else
     ac_cv_prog_cc_cross=yes
@@ -1974,7 +1974,7 @@
   yes;
 #endif
 EOF
-if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:1978: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then
+if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:1978: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/System/Devices/null 2>&1; then
   ac_cv_prog_gcc=yes
 else
   ac_cv_prog_gcc=no
@@ -2165,15 +2165,15 @@
    echo abfoo >t1
   echo cdfoo >t2
   gcc_cv_prog_cmp_skip='tail +16c $$f1 > tmp-foo1; tail +16c $$f2 > tmp-foo2; cmp tmp-foo1 tmp-foo2'
-  if cmp t1 t2 2 2 > /dev/null 2>&1; then
-    if cmp t1 t2 1 1 > /dev/null 2>&1; then
+  if cmp t1 t2 2 2 > /System/Devices/null 2>&1; then
+    if cmp t1 t2 1 1 > /System/Devices/null 2>&1; then
       :
     else
       gcc_cv_prog_cmp_skip='cmp $$f1 $$f2 16 16'
     fi
   fi
-  if cmp --ignore-initial=2 t1 t2 > /dev/null 2>&1; then
-    if cmp --ignore-initial=1 t1 t2 > /dev/null 2>&1; then
+  if cmp --ignore-initial=2 t1 t2 > /System/Devices/null 2>&1; then
+    if cmp --ignore-initial=1 t1 t2 > /System/Devices/null 2>&1; then
       :
     else
       gcc_cv_prog_cmp_skip='cmp --ignore-initial=16 $$f1 $$f2'
@@ -2470,30 +2470,30 @@
 notsupp=""
 for dir in . $skipdirs $noconfigdirs ; do
   dirname=`echo $dir | sed -e s/target-//g -e s/build-//g`
-  if test $dir != .  && echo " ${configdirs} " | grep " ${dir} " >/dev/null 2>&1; then
+  if test $dir != .  && echo " ${configdirs} " | grep " ${dir} " >/System/Devices/null 2>&1; then
     configdirs=`echo " ${configdirs} " | sed -e "s/ ${dir} / /"`
     if test -r $srcdir/$dirname/configure ; then
-      if echo " ${skipdirs} " | grep " ${dir} " >/dev/null 2>&1; then
+      if echo " ${skipdirs} " | grep " ${dir} " >/System/Devices/null 2>&1; then
 	true
       else
 	notsupp="$notsupp $dir"
       fi
     fi
   fi
-  if test $dir != .  && echo " ${build_configdirs} " | grep " ${dir} " >/dev/null 2>&1; then
+  if test $dir != .  && echo " ${build_configdirs} " | grep " ${dir} " >/System/Devices/null 2>&1; then
     build_configdirs=`echo " ${build_configdirs} " | sed -e "s/ ${dir} / /"`
     if test -r $srcdir/$dirname/configure ; then
-      if echo " ${skipdirs} " | grep " ${dir} " >/dev/null 2>&1; then
+      if echo " ${skipdirs} " | grep " ${dir} " >/System/Devices/null 2>&1; then
 	true
       else
 	notsupp="$notsupp $dir"
       fi
     fi
   fi
-  if test $dir != . && echo " ${target_configdirs} " | grep " ${dir} " >/dev/null 2>&1; then
+  if test $dir != . && echo " ${target_configdirs} " | grep " ${dir} " >/System/Devices/null 2>&1; then
     target_configdirs=`echo " ${target_configdirs} " | sed -e "s/ ${dir} / /"`
     if test -r $srcdir/$dirname/configure ; then
-      if echo " ${skipdirs} " | grep " ${dir} " >/dev/null 2>&1; then
+      if echo " ${skipdirs} " | grep " ${dir} " >/System/Devices/null 2>&1; then
 	true
       else
 	notsupp="$notsupp $dir"
@@ -2561,11 +2561,11 @@
   if test -n "$appdirs" ; then
     for dir in $appdirs ; do
       if test -r $dir/Makefile.in ; then
-	if echo " ${configdirs} " | grep " ${dir} " >/dev/null 2>&1; then
+	if echo " ${configdirs} " | grep " ${dir} " >/System/Devices/null 2>&1; then
 	  appdirs=""
 	  break
 	fi
-	if echo " ${target_configdirs} " | grep " target-${dir} " >/dev/null 2>&1; then
+	if echo " ${target_configdirs} " | grep " target-${dir} " >/System/Devices/null 2>&1; then
 	  appdirs=""
 	  break
 	fi
@@ -2661,7 +2661,7 @@
 extra_arflags_for_target=
 extra_nmflags_for_target=
 extra_ranlibflags_for_target=
-target_makefile_frag=/dev/null
+target_makefile_frag=/System/Devices/null
 case "${target}" in
   *-*-netware*)
     target_makefile_frag="config/mt-netware"
@@ -2685,7 +2685,7 @@
     ;;
 esac
 
-alphaieee_frag=/dev/null
+alphaieee_frag=/System/Devices/null
 case $target in
   alpha*-*-*)
     # This just makes sure to use the -mieee option to build target libs.
@@ -2697,7 +2697,7 @@
 # If --enable-target-optspace always use -Os instead of -O2 to build
 # the target libraries, similarly if it is not specified, use -Os
 # on selected platforms.
-ospace_frag=/dev/null
+ospace_frag=/System/Devices/null
 case "${enable_target_optspace}:${target}" in
   yes:*)
     ospace_frag="config/mt-ospace"
@@ -2729,13 +2729,13 @@
 # --without-gnu-ld options for the configure script.
 
 if test x${use_gnu_as} = x &&
-   echo " ${configdirs} " | grep " gas " > /dev/null 2>&1 ; then
+   echo " ${configdirs} " | grep " gas " > /System/Devices/null 2>&1 ; then
   with_gnu_as=yes
   extra_host_args="$extra_host_args --with-gnu-as"
 fi
 
 if test x${use_gnu_ld} = x &&
-   echo " ${configdirs} " | grep " ld " > /dev/null 2>&1 ; then
+   echo " ${configdirs} " | grep " ld " > /System/Devices/null 2>&1 ; then
   with_gnu_ld=yes
   extra_host_args="$extra_host_args --with-gnu-ld"
 fi
@@ -2743,7 +2743,7 @@
 # If using newlib, add --with-newlib to the extra_host_args so that gcc/configure
 # can detect this case.
 
-if test x${with_newlib} != xno && echo " ${target_configdirs} " | grep " target-newlib " > /dev/null 2>&1 ; then
+if test x${with_newlib} != xno && echo " ${target_configdirs} " | grep " target-newlib " > /System/Devices/null 2>&1 ; then
   with_newlib=yes
   extra_host_args="$extra_host_args --with-newlib"
 fi
@@ -2764,7 +2764,7 @@
 # them automatically.
 case "${host}" in
   hppa*64*-*-hpux11*)	
-    extra_host_args="$extra_host_args -x-libraries=/usr/lib/pa20_64 -x-includes=/usr/X11R6/include"
+    extra_host_args="$extra_host_args -x-libraries=/System/Library/Libraries/pa20_64 -x-includes=/usr/X11R6/include"
     ;;
 esac
 
@@ -3367,7 +3367,7 @@
 
 # Pass --with-newlib if appropriate.  Note that target_configdirs has
 # changed from the earlier setting of with_newlib.
-if test x${with_newlib} != xno && echo " ${target_configdirs} " | grep " newlib " > /dev/null 2>&1 && test -d ${srcdir}/newlib ; then
+if test x${with_newlib} != xno && echo " ${target_configdirs} " | grep " newlib " > /System/Devices/null 2>&1 && test -d ${srcdir}/newlib ; then
   target_configargs="--with-newlib ${target_configargs}"
 fi
 
@@ -3463,11 +3463,11 @@
 # being built; programs in there won't even run.
 if test "${build}" = "${host}" && test -d ${srcdir}/gcc; then
   # Search for pre-installed headers if nothing else fits.
-  FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -B$(build_tooldir)/bin/ -B$(build_tooldir)/lib/ -isystem $(build_tooldir)/include -isystem $(build_tooldir)/sys-include'
+  FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -B$(build_tooldir)/System/Tools/ -B$(build_tooldir)/lib/ -isystem $(build_tooldir)/include -isystem $(build_tooldir)/sys-include'
 fi
 
 if test "x${use_gnu_ld}" = x &&
-   echo " ${configdirs} " | grep " ld " > /dev/null ; then
+   echo " ${configdirs} " | grep " ld " > /System/Devices/null ; then
   # Arrange for us to find uninstalled linker scripts.
   FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -L$$r/$(HOST_SUBDIR)/ld'
 fi
@@ -3559,7 +3559,7 @@
 for frag in host_makefile_frag target_makefile_frag alphaieee_frag ospace_frag;
 do
   eval fragval=\$$frag
-  if test $fragval != /dev/null; then
+  if test $fragval != /System/Devices/null; then
     eval $frag=${srcdir}/$fragval
   fi
 done
@@ -4935,7 +4935,7 @@
 # the --cache-file=FILE option to use a different cache file; that is
 # what configure does when it calls configure scripts in
 # subdirectories, so they share the cache.
-# Giving --cache-file=/dev/null disables caching, for debugging configure.
+# Giving --cache-file=/System/Devices/null disables caching, for debugging configure.
 # config.status only pays attention to the cache file if you give it the
 # --recheck option to rerun configure.
 #
@@ -5006,11 +5006,11 @@
 echo creating $CONFIG_STATUS
 rm -f $CONFIG_STATUS
 cat > $CONFIG_STATUS <<EOF
-#! /bin/sh
+#! /System/Tools/sh
 # Generated automatically by configure.
 # Run this file to recreate the current configuration.
 # This directory was configured as follows,
-# on host `(hostname || uname -n) 2>/dev/null | sed 1q`:
+# on host `(hostname || uname -n) 2>/System/Devices/null | sed 1q`:
 #
 # $0 $ac_configure_args
 #
@@ -5022,8 +5022,8 @@
 do
   case "\$ac_option" in
   -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
-    echo "running \${CONFIG_SHELL-/bin/sh} $0 $ac_configure_args --no-create --no-recursion"
-    exec \${CONFIG_SHELL-/bin/sh} $0 $ac_configure_args --no-create --no-recursion ;;
+    echo "running \${CONFIG_SHELL-/System/Tools/sh} $0 $ac_configure_args --no-create --no-recursion"
+    exec \${CONFIG_SHELL-/System/Tools/sh} $0 $ac_configure_args --no-create --no-recursion ;;
   -version | --version | --versio | --versi | --vers | --ver | --ve | --v)
     echo "$CONFIG_STATUS generated by autoconf version 2.13"
     exit 0 ;;
@@ -5304,5 +5304,5 @@
 EOF
 chmod +x $CONFIG_STATUS
 rm -fr confdefs* $ac_clean_files
-test "$no_create" = yes || ${CONFIG_SHELL-/bin/sh} $CONFIG_STATUS || exit 1
+test "$no_create" = yes || ${CONFIG_SHELL-/System/Tools/sh} $CONFIG_STATUS || exit 1
 
diff -urN binutils-2.16.1/configure.in binutils-2.16.1-STEP/configure.in
--- binutils-2.16.1/configure.in	2005-06-13 07:33:06.000000000 +1200
+++ binutils-2.16.1-STEP/configure.in	2005-09-02 11:16:19.805307712 +1200
@@ -32,15 +32,15 @@
 ACX_PROG_LN
 AC_PROG_LN_S
 
-### we might need to use some other shell than /bin/sh for running subshells
+### we might need to use some other shell than /System/Tools/sh for running subshells
 ### If we are on Windows, search for the shell.  This will permit people
-### to not have /bin/sh, but to be able to see /SOME/PATH/sh configure
+### to not have /System/Tools/sh, but to be able to see /SOME/PATH/sh configure
 ### without also having to set CONFIG_SHELL.  This code will work when
 ### using bash, which sets OSTYPE.
 case "${OSTYPE}" in
 *win32*)
   if test x${CONFIG_SHELL} = x ; then
-    if test ! -f /bin/sh ; then
+    if test ! -f /System/Tools/sh ; then
       if test x${SHELL} != x && test -f ${SHELL} ; then
 	CONFIG_SHELL=${SHELL}
 	export CONFIG_SHELL
@@ -64,7 +64,7 @@
   ;;
 esac
 
-config_shell=${CONFIG_SHELL-/bin/sh}
+config_shell=${CONFIG_SHELL-/System/Tools/sh}
 
 progname=$0
 # if PWD already has a value, it is probably wrong.
@@ -800,7 +800,7 @@
 
 # Work in distributions that contain no compiler tools, like Autoconf.
 tentative_cc=""
-host_makefile_frag=/dev/null
+host_makefile_frag=/System/Devices/null
 if test -d ${srcdir}/config ; then
 case "${host}" in
   m68k-hp-hpux*)
@@ -883,7 +883,7 @@
     ;;
   i[[3456789]]86-ncr-sysv4*)
     # for an NCR 3000 (i486/SVR4) system.
-    # The NCR 3000 ships with a MetaWare compiler installed as /bin/cc.
+    # The NCR 3000 ships with a MetaWare compiler installed as /System/Tools/cc.
     # This compiler not only emits obnoxious copyright messages every time
     # you run it, but it chokes and dies on a whole bunch of GNU source
     # files.  Default to using the AT&T compiler installed in /usr/ccs/ATT/cc.
@@ -935,16 +935,16 @@
     tentative_cc="cc -Wp,-H256000"
     ;;
   rs6000-*-lynxos*)
-    # /bin/cc is less than useful for our purposes.  Always use GCC
-    tentative_cc="/usr/cygnus/progressive/bin/gcc"
+    # /System/Tools/cc is less than useful for our purposes.  Always use GCC
+    tentative_cc="/usr/cygnus/progressive/System/Tools/gcc"
     host_makefile_frag="config/mh-lynxrs6k"
     ;;
   powerpc-*-darwin*)
     host_makefile_frag="config/mh-ppc-darwin"
     ;;
   *-*-lynxos*)
-    # /bin/cc is less than useful for our purposes.  Always use GCC
-    tentative_cc="/bin/gcc"
+    # /System/Tools/cc is less than useful for our purposes.  Always use GCC
+    tentative_cc="/System/Tools/gcc"
     ;;
   *-*-sysv4*)
     host_makefile_frag="config/mh-sysv4"
@@ -1263,30 +1263,30 @@
 notsupp=""
 for dir in . $skipdirs $noconfigdirs ; do
   dirname=`echo $dir | sed -e s/target-//g -e s/build-//g`
-  if test $dir != .  && echo " ${configdirs} " | grep " ${dir} " >/dev/null 2>&1; then
+  if test $dir != .  && echo " ${configdirs} " | grep " ${dir} " >/System/Devices/null 2>&1; then
     configdirs=`echo " ${configdirs} " | sed -e "s/ ${dir} / /"`
     if test -r $srcdir/$dirname/configure ; then
-      if echo " ${skipdirs} " | grep " ${dir} " >/dev/null 2>&1; then
+      if echo " ${skipdirs} " | grep " ${dir} " >/System/Devices/null 2>&1; then
 	true
       else
 	notsupp="$notsupp $dir"
       fi
     fi
   fi
-  if test $dir != .  && echo " ${build_configdirs} " | grep " ${dir} " >/dev/null 2>&1; then
+  if test $dir != .  && echo " ${build_configdirs} " | grep " ${dir} " >/System/Devices/null 2>&1; then
     build_configdirs=`echo " ${build_configdirs} " | sed -e "s/ ${dir} / /"`
     if test -r $srcdir/$dirname/configure ; then
-      if echo " ${skipdirs} " | grep " ${dir} " >/dev/null 2>&1; then
+      if echo " ${skipdirs} " | grep " ${dir} " >/System/Devices/null 2>&1; then
 	true
       else
 	notsupp="$notsupp $dir"
       fi
     fi
   fi
-  if test $dir != . && echo " ${target_configdirs} " | grep " ${dir} " >/dev/null 2>&1; then
+  if test $dir != . && echo " ${target_configdirs} " | grep " ${dir} " >/System/Devices/null 2>&1; then
     target_configdirs=`echo " ${target_configdirs} " | sed -e "s/ ${dir} / /"`
     if test -r $srcdir/$dirname/configure ; then
-      if echo " ${skipdirs} " | grep " ${dir} " >/dev/null 2>&1; then
+      if echo " ${skipdirs} " | grep " ${dir} " >/System/Devices/null 2>&1; then
 	true
       else
 	notsupp="$notsupp $dir"
@@ -1354,11 +1354,11 @@
   if test -n "$appdirs" ; then
     for dir in $appdirs ; do
       if test -r $dir/Makefile.in ; then
-	if echo " ${configdirs} " | grep " ${dir} " >/dev/null 2>&1; then
+	if echo " ${configdirs} " | grep " ${dir} " >/System/Devices/null 2>&1; then
 	  appdirs=""
 	  break
 	fi
-	if echo " ${target_configdirs} " | grep " target-${dir} " >/dev/null 2>&1; then
+	if echo " ${target_configdirs} " | grep " target-${dir} " >/System/Devices/null 2>&1; then
 	  appdirs=""
 	  break
 	fi
@@ -1454,7 +1454,7 @@
 extra_arflags_for_target=
 extra_nmflags_for_target=
 extra_ranlibflags_for_target=
-target_makefile_frag=/dev/null
+target_makefile_frag=/System/Devices/null
 case "${target}" in
   *-*-netware*)
     target_makefile_frag="config/mt-netware"
@@ -1478,7 +1478,7 @@
     ;;
 esac
 
-alphaieee_frag=/dev/null
+alphaieee_frag=/System/Devices/null
 case $target in
   alpha*-*-*)
     # This just makes sure to use the -mieee option to build target libs.
@@ -1490,7 +1490,7 @@
 # If --enable-target-optspace always use -Os instead of -O2 to build
 # the target libraries, similarly if it is not specified, use -Os
 # on selected platforms.
-ospace_frag=/dev/null
+ospace_frag=/System/Devices/null
 case "${enable_target_optspace}:${target}" in
   yes:*)
     ospace_frag="config/mt-ospace"
@@ -1522,13 +1522,13 @@
 # --without-gnu-ld options for the configure script.
 
 if test x${use_gnu_as} = x &&
-   echo " ${configdirs} " | grep " gas " > /dev/null 2>&1 ; then
+   echo " ${configdirs} " | grep " gas " > /System/Devices/null 2>&1 ; then
   with_gnu_as=yes
   extra_host_args="$extra_host_args --with-gnu-as"
 fi
 
 if test x${use_gnu_ld} = x &&
-   echo " ${configdirs} " | grep " ld " > /dev/null 2>&1 ; then
+   echo " ${configdirs} " | grep " ld " > /System/Devices/null 2>&1 ; then
   with_gnu_ld=yes
   extra_host_args="$extra_host_args --with-gnu-ld"
 fi
@@ -1536,7 +1536,7 @@
 # If using newlib, add --with-newlib to the extra_host_args so that gcc/configure
 # can detect this case.
 
-if test x${with_newlib} != xno && echo " ${target_configdirs} " | grep " target-newlib " > /dev/null 2>&1 ; then
+if test x${with_newlib} != xno && echo " ${target_configdirs} " | grep " target-newlib " > /System/Devices/null 2>&1 ; then
   with_newlib=yes
   extra_host_args="$extra_host_args --with-newlib"
 fi
@@ -1557,7 +1557,7 @@
 # them automatically.
 case "${host}" in
   hppa*64*-*-hpux11*)	
-    extra_host_args="$extra_host_args -x-libraries=/usr/lib/pa20_64 -x-includes=/usr/X11R6/include"
+    extra_host_args="$extra_host_args -x-libraries=/System/Library/Libraries/pa20_64 -x-includes=/usr/X11R6/include"
     ;;
 esac
 
@@ -1950,7 +1950,7 @@
 
 # Pass --with-newlib if appropriate.  Note that target_configdirs has
 # changed from the earlier setting of with_newlib.
-if test x${with_newlib} != xno && echo " ${target_configdirs} " | grep " newlib " > /dev/null 2>&1 && test -d ${srcdir}/newlib ; then
+if test x${with_newlib} != xno && echo " ${target_configdirs} " | grep " newlib " > /System/Devices/null 2>&1 && test -d ${srcdir}/newlib ; then
   target_configargs="--with-newlib ${target_configargs}"
 fi
 
@@ -2030,11 +2030,11 @@
 # being built; programs in there won't even run.
 if test "${build}" = "${host}" && test -d ${srcdir}/gcc; then
   # Search for pre-installed headers if nothing else fits.
-  FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -B$(build_tooldir)/bin/ -B$(build_tooldir)/lib/ -isystem $(build_tooldir)/include -isystem $(build_tooldir)/sys-include'
+  FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -B$(build_tooldir)/System/Tools/ -B$(build_tooldir)/lib/ -isystem $(build_tooldir)/include -isystem $(build_tooldir)/sys-include'
 fi
 
 if test "x${use_gnu_ld}" = x &&
-   echo " ${configdirs} " | grep " ld " > /dev/null ; then
+   echo " ${configdirs} " | grep " ld " > /System/Devices/null ; then
   # Arrange for us to find uninstalled linker scripts.
   FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -L$$r/$(HOST_SUBDIR)/ld'
 fi
@@ -2126,7 +2126,7 @@
 for frag in host_makefile_frag target_makefile_frag alphaieee_frag ospace_frag;
 do
   eval fragval=\$$frag
-  if test $fragval != /dev/null; then
+  if test $fragval != /System/Devices/null; then
     eval $frag=${srcdir}/$fragval
   fi
 done
diff -urN binutils-2.16.1/etc/Makefile.in binutils-2.16.1-STEP/etc/Makefile.in
--- binutils-2.16.1/etc/Makefile.in	2003-01-03 09:51:02.000000000 +1300
+++ binutils-2.16.1-STEP/etc/Makefile.in	2005-09-02 11:16:19.835303152 +1200
@@ -27,7 +27,7 @@
 man9dir = $(mandir)/man9
 infodir = @infodir@
 
-SHELL = /bin/sh
+SHELL = /System/Tools/sh
 
 INSTALL 	= @INSTALL@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
diff -urN binutils-2.16.1/etc/configure binutils-2.16.1-STEP/etc/configure
--- binutils-2.16.1/etc/configure	1999-05-03 19:29:06.000000000 +1200
+++ binutils-2.16.1-STEP/etc/configure	2005-09-02 11:16:19.822305128 +1200
@@ -1,4 +1,4 @@
-#! /bin/sh
+#! /System/Tools/sh
 
 # Guess values for system-dependent variables and create Makefiles.
 # Generated automatically using autoconf version 2.12.1 
@@ -49,7 +49,7 @@
 # Initialize some other variables.
 subdirs=
 MFLAGS= MAKEFLAGS=
-SHELL=${CONFIG_SHELL-/bin/sh}
+SHELL=${CONFIG_SHELL-/System/Tools/sh}
 # Maximum number of lines to put in a shell here document.
 ac_max_here_lines=12
 
@@ -402,12 +402,12 @@
 # 0 standard input
 # 1 file creation
 # 2 errors and warnings
-# 3 some systems may open it to /dev/tty
+# 3 some systems may open it to /System/Devices/tty
 # 4 used on the Kubota Titan
 # 6 checking for... messages and results
 # 5 compiler messages saved in config.log
 if test "$silent" = yes; then
-  exec 6>/dev/null
+  exec 6>/System/Devices/null
 else
   exec 6>&1
 fi
@@ -506,9 +506,9 @@
 ac_link='${CC-cc} -o conftest $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS 1>&5'
 cross_compiling=$ac_cv_prog_cc_cross
 
-if (echo "testing\c"; echo 1,2,3) | grep c >/dev/null; then
+if (echo "testing\c"; echo 1,2,3) | grep c >/System/Devices/null; then
   # Stardent Vistra SVR4 grep lacks -e, says ghazi@caip.rutgers.edu.
-  if (echo -n testing; echo 1,2,3) | sed s/-n/xn/ | grep xn >/dev/null; then
+  if (echo -n testing; echo 1,2,3) | sed s/-n/xn/ | grep xn >/System/Devices/null; then
     ac_n= ac_c='
 ' ac_t='	'
   else
@@ -542,12 +542,12 @@
 # Find a good install program.  We prefer a C program (faster),
 # so one script is as good as another.  But avoid the broken or
 # incompatible versions:
-# SysV /etc/install, /usr/sbin/install
+# SysV/System/Settings/install, /usr/System/AdminTools/install
 # SunOS /usr/etc/install
-# IRIX /sbin/install
-# AIX /bin/install
-# AIX 4 /usr/bin/installbsd, which doesn't work without a -g flag
-# AFS /usr/afsws/bin/install, which mishandles nonexistent args
+# IRIX /System/AdminTools/install
+# AIX /System/Tools/install
+# AIX 4 /System/Tools/installbsd, which doesn't work without a -g flag
+# AFS /usr/afsws/System/Tools/install, which mishandles nonexistent args
 # SVR4 /usr/ucb/install, which tries to use the nonexistent group "staff"
 # ./install, which can be erroneously created by make from ./install.sh.
 echo $ac_n "checking for a BSD compatible install""... $ac_c" 1>&6
@@ -560,7 +560,7 @@
   for ac_dir in $PATH; do
     # Account for people who put trailing slashes in PATH elements.
     case "$ac_dir/" in
-    /|./|.//|/etc/*|/usr/sbin/*|/usr/etc/*|/sbin/*|/usr/afsws/bin/*|/usr/ucb/*) ;;
+    /|./|.//|/etc/*|/usr/System/AdminTools/*|/usr/etc/*|/System/AdminTools/*|/usr/afsws/System/Tools/*|/usr/ucb/*) ;;
     *)
       # OSF1 and SCO ODT 3.0 have their own names for install.
       # Don't use installbsd from OSF since it installs stuff as root
@@ -568,7 +568,7 @@
       for ac_prog in ginstall scoinst install; do
         if test -f $ac_dir/$ac_prog; then
 	  if test $ac_prog = install &&
-            grep dspmsg $ac_dir/$ac_prog >/dev/null 2>&1; then
+            grep dspmsg $ac_dir/$ac_prog >/System/Devices/null 2>&1; then
 	    # AIX install.  It has an incompatible calling convention.
 	    :
 	  else
@@ -614,7 +614,7 @@
 # the --cache-file=FILE option to use a different cache file; that is
 # what configure does when it calls configure scripts in
 # subdirectories, so they share the cache.
-# Giving --cache-file=/dev/null disables caching, for debugging configure.
+# Giving --cache-file=/System/Devices/null disables caching, for debugging configure.
 # config.status only pays attention to the cache file if you give it the
 # --recheck option to rerun configure.
 #
@@ -685,11 +685,11 @@
 echo creating $CONFIG_STATUS
 rm -f $CONFIG_STATUS
 cat > $CONFIG_STATUS <<EOF
-#! /bin/sh
+#! /System/Tools/sh
 # Generated automatically by configure.
 # Run this file to recreate the current configuration.
 # This directory was configured as follows,
-# on host `(hostname || uname -n) 2>/dev/null | sed 1q`:
+# on host `(hostname || uname -n) 2>/System/Devices/null | sed 1q`:
 #
 # $0 $ac_configure_args
 #
@@ -701,8 +701,8 @@
 do
   case "\$ac_option" in
   -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
-    echo "running \${CONFIG_SHELL-/bin/sh} $0 $ac_configure_args --no-create --no-recursion"
-    exec \${CONFIG_SHELL-/bin/sh} $0 $ac_configure_args --no-create --no-recursion ;;
+    echo "running \${CONFIG_SHELL-/System/Tools/sh} $0 $ac_configure_args --no-create --no-recursion"
+    exec \${CONFIG_SHELL-/System/Tools/sh} $0 $ac_configure_args --no-create --no-recursion ;;
   -version | --version | --versio | --versi | --vers | --ver | --ve | --v)
     echo "$CONFIG_STATUS generated by autoconf version 2.12.1"
     exit 0 ;;
@@ -858,5 +858,5 @@
 EOF
 chmod +x $CONFIG_STATUS
 rm -fr confdefs* $ac_clean_files
-test "$no_create" = yes || ${CONFIG_SHELL-/bin/sh} $CONFIG_STATUS || exit 1
+test "$no_create" = yes || ${CONFIG_SHELL-/System/Tools/sh} $CONFIG_STATUS || exit 1
 
diff -urN binutils-2.16.1/etc/configure.info binutils-2.16.1-STEP/etc/configure.info
--- binutils-2.16.1/etc/configure.info	2005-03-09 06:19:46.000000000 +1300
+++ binutils-2.16.1-STEP/etc/configure.info	2005-09-02 11:16:19.830303912 +1200
@@ -2155,7 +2155,7 @@
 compiler can find the function, that means that the function is present
 in the host environment.
 
-   Tests like `test -f /dev/ptyp0', on the other hand, will test the
+   Tests like `test -f /System/Devices/ptyp0', on the other hand, will test the
 build environment.  Remember that the configure script is running on the
 build system, not the host system.  If your configure scripts examines
 files, those files will be on the build system.  Whatever you determine
diff -urN binutils-2.16.1/etc/configure.texi binutils-2.16.1-STEP/etc/configure.texi
--- binutils-2.16.1/etc/configure.texi	2003-05-17 04:30:26.000000000 +1200
+++ binutils-2.16.1-STEP/etc/configure.texi	2005-09-02 11:16:19.834303304 +1200
@@ -2196,7 +2196,7 @@
 compiler can find the function, that means that the function is present
 in the host environment.
 
-Tests like @samp{test -f /dev/ptyp0}, on the other hand, will test the
+Tests like @samp{test -f /System/Devices/ptyp0}, on the other hand, will test the
 build environment.  Remember that the configure script is running on the
 build system, not the host system.  If your configure scripts examines
 files, those files will be on the build system.  Whatever you determine
diff -urN binutils-2.16.1/etc/make-stds.texi binutils-2.16.1-STEP/etc/make-stds.texi
--- binutils-2.16.1/etc/make-stds.texi	2002-02-27 15:13:33.000000000 +1300
+++ binutils-2.16.1-STEP/etc/make-stds.texi	2005-09-02 11:16:19.837302848 +1200
@@ -51,7 +51,7 @@
 Every Makefile should contain this line:
 
 @example
-SHELL = /bin/sh
+SHELL = /System/Tools/sh
 @end example
 
 @noindent
@@ -619,7 +619,7 @@
 # We use `$(SHELL) -c' because some shells do not
 # fail gracefully when there is an unknown command.
         if $(SHELL) -c 'install-info --version' \
-           >/dev/null 2>&1; then \
+           >/System/Devices/null 2>&1; then \
           install-info --dir-file=$(DESTDIR)$(infodir)/dir \
                        $(DESTDIR)$(infodir)/foo.info; \
         else true; fi
diff -urN binutils-2.16.1/etc/standards.info binutils-2.16.1-STEP/etc/standards.info
--- binutils-2.16.1/etc/standards.info	2005-03-09 06:19:47.000000000 +1300
+++ binutils-2.16.1-STEP/etc/standards.info	2005-09-02 11:16:19.848301176 +1200
@@ -3371,7 +3371,7 @@
 
 Every Makefile should contain this line:
 
-     SHELL = /bin/sh
+     SHELL = /System/Tools/sh
 
 to avoid trouble on systems where the `SHELL' variable might be
 inherited from the environment.  (This is never a problem with GNU
@@ -3889,7 +3889,7 @@
           # We use `$(SHELL) -c' because some shells do not
           # fail gracefully when there is an unknown command.
                   if $(SHELL) -c 'install-info --version' \
-                     >/dev/null 2>&1; then \
+                     >/System/Devices/null 2>&1; then \
                     install-info --dir-file=$(DESTDIR)$(infodir)/dir \
                                  $(DESTDIR)$(infodir)/foo.info; \
                   else true; fi
diff -urN binutils-2.16.1/etc/texi2pod.pl binutils-2.16.1-STEP/etc/texi2pod.pl
--- binutils-2.16.1/etc/texi2pod.pl	2002-06-12 03:34:33.000000000 +1200
+++ binutils-2.16.1-STEP/etc/texi2pod.pl	2005-09-02 11:16:19.856299960 +1200
@@ -1,4 +1,4 @@
-#! /usr/bin/perl -w
+#! /System/Tools/perl -w
 
 #   Copyright (C) 1999, 2000, 2001, 200 Free Software Foundation, Inc.
 
diff -urN binutils-2.16.1/gas/ChangeLog-9295 binutils-2.16.1-STEP/gas/ChangeLog-9295
--- binutils-2.16.1/gas/ChangeLog-9295	2005-03-03 14:27:10.000000000 +1300
+++ binutils-2.16.1-STEP/gas/ChangeLog-9295	2005-09-02 11:16:19.903292816 +1200
@@ -4366,7 +4366,7 @@
 	* config/tc-i386.c (md_assemble): Fix typo in GOTPC check; had =
 	for ==.
 
-	* configure.in: If target_frag doesn't exist, use /dev/null.
+	* configure.in: If target_frag doesn't exist, use /System/Devices/null.
 
 	* as.c (parse_args): For non-VMS systems, re-add `v' to
 	std_shortopts.  Add "verbose" to list of long options.
@@ -6067,7 +6067,7 @@
 
 Wed May 18 13:08:07 1994  Ian Lance Taylor  (ian@tweedledumb.cygnus.com)
 
-	* Makefile.in (install): Redirect ln output to /dev/null.  If ln
+	* Makefile.in (install): Redirect ln output to /System/Devices/null.  If ln
 	fails on gasp, install gasp.new, not gasp.
 
 Wed May 18 09:16:36 1994  Jeff Law  (law@snake.cs.utah.edu)
@@ -12076,7 +12076,7 @@
 	obj_format coffbfd and gas_target i386coff for target.
 	(i[34]86-*-isc*): New host (uses sysv).
 	* config/i386aix.mt: Removed (no longer used).
-	* config/mh-i386aix (RANLIB): Use true rather than /bin/true.
+	* config/mh-i386aix (RANLIB): Use true rather than /System/Tools/true.
 	(MINUS_G): Removed.
 	(LDFLAGS): Added, defined as -shlib.
 	* config/te-i386aix.h (REVERSE_SORT_RELOCS): Undefine.
diff -urN binutils-2.16.1/gas/Makefile.am binutils-2.16.1-STEP/gas/Makefile.am
--- binutils-2.16.1/gas/Makefile.am	2005-03-23 03:31:44.000000000 +1200
+++ binutils-2.16.1-STEP/gas/Makefile.am	2005-09-02 11:16:20.079266064 +1200
@@ -556,7 +556,7 @@
 	fi; \
 	runtest=$(RUNTEST); \
 	cd testsuite; \
-	if $(SHELL) -c "$$runtest --version" > /dev/null 2>&1; then \
+	if $(SHELL) -c "$$runtest --version" > /System/Devices/null 2>&1; then \
 	  $$runtest --tool $(DEJATOOL) --srcdir $${srcdir}/testsuite \
 		$(RUNTESTFLAGS); \
 	else echo "WARNING: could not find \`runtest'" 1>&2; :;\
@@ -636,9 +636,9 @@
 m68k-parse.c: $(srcdir)/config/m68k-parse.y
 	f=$(srcdir)/config/m68k-parse.y; \
 	if [ $$f = "./config/m68k-parse.y" ]; then \
-	  ln -s config/m68k-parse.y . > /dev/null 2>/dev/null || \
-	   ln config/m68k-parse.y . > /dev/null 2>/dev/null || \
-	   cp config/m68k-parse.y . >/dev/null 2>/dev/null; \
+	  ln -s config/m68k-parse.y . > /System/Devices/null 2>/System/Devices/null || \
+	   ln config/m68k-parse.y . > /System/Devices/null 2>/System/Devices/null || \
+	   cp config/m68k-parse.y . >/System/Devices/null 2>/System/Devices/null; \
 	  f=m68k-parse.y; \
 	else true; fi; \
 	$(SHELL) $(YLWRAP) "$(YACC)" $$f y.tab.c m68k-parse.c --; \
@@ -709,10 +709,10 @@
 install-exec-tooldir: install-exec-bindir $(noinst_PROGRAMS)
 	$(mkinstalldirs) $(DESTDIR)$(tooldir)/bin
 	n=`echo as | sed '$(transform)'`; \
-	if [ "$(bindir)/$$n$(EXEEXT)" != "$(tooldir)/bin/as$(EXEEXT)" ]; then \
-	  rm -f $(DESTDIR)$(tooldir)/bin/as$(EXEEXT); \
-	  ln $(DESTDIR)$(bindir)/$$n$(EXEEXT) $(DESTDIR)$(tooldir)/bin/as$(EXEEXT) >/dev/null 2>/dev/null \
-	    || $(LIBTOOL) --mode=install $(INSTALL_PROGRAM) as-new$(EXEEXT) $(DESTDIR)$(tooldir)/bin/as$(EXEEXT); \
+	if [ "$(bindir)/$$n$(EXEEXT)" != "$(tooldir)/binas$(EXEEXT)" ]; then \
+	  rm -f $(DESTDIR)$(tooldir)/binas$(EXEEXT); \
+	  ln $(DESTDIR)$(bindir)/$$n$(EXEEXT) $(DESTDIR)$(tooldir)/binas$(EXEEXT) >/System/Devices/null 2>/System/Devices/null \
+	    || $(LIBTOOL) --mode=install $(INSTALL_PROGRAM) as-new$(EXEEXT) $(DESTDIR)$(tooldir)/binas$(EXEEXT); \
 	else \
 	  true ; \
 	fi
@@ -768,7 +768,7 @@
 	x=0 ; \
 	for file in *.o ; do \
 	  tail +16c ./$$file > tmp-foo1; \
-	  if tail +16c ${against}/$$file > tmp-foo2 2>/dev/null ; then \
+	  if tail +16c ${against}/$$file > tmp-foo2 2>/System/Devices/null ; then \
 	    if cmp tmp-foo1 tmp-foo2 ; then \
 	      true ; \
 	    else \
@@ -821,7 +821,7 @@
 	echo '$$(TARG_CPU_O): $$(DEPTC_@target''_cpu_type@_@obj''_format@)' >> DEPA
 	echo '$$(OBJ_FORMAT_O): $$(DEPOBJ_@target''_cpu_type@_@obj''_format@)' >> DEPA
 	echo '#MKDEP    DO NOT PUT ANYTHING BETWEEN THIS LINE AND THE MATCHING WARNING ABOVE.' >> DEPA
-	if grep ' /' DEPA > /dev/null 2> /dev/null; then \
+	if grep ' /' DEPA > /System/Devices/null 2> /System/Devices/null; then \
 	  echo 'make DEP failed!'; exit 1; \
 	else \
 	  mv -f DEPA $@; \
diff -urN binutils-2.16.1/gas/Makefile.in binutils-2.16.1-STEP/gas/Makefile.in
--- binutils-2.16.1/gas/Makefile.in	2005-04-30 01:57:16.000000000 +1200
+++ binutils-2.16.1-STEP/gas/Makefile.in	2005-09-02 11:16:20.093263936 +1200
@@ -2767,7 +2767,7 @@
 		$(TAGS_FILES) $(LISP)
 	tags=; \
 	here=`pwd`; \
-	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
+	if ($(ETAGS) --etags-include --version) >/System/Devices/null 2>&1; then \
 	  include_option=--etags-include; \
 	  empty_fix=.; \
 	else \
@@ -2982,7 +2982,7 @@
 	fi; \
 	runtest=$(RUNTEST); \
 	cd testsuite; \
-	if $(SHELL) -c "$$runtest --version" > /dev/null 2>&1; then \
+	if $(SHELL) -c "$$runtest --version" > /System/Devices/null 2>&1; then \
 	  $$runtest --tool $(DEJATOOL) --srcdir $${srcdir}/testsuite \
 		$(RUNTESTFLAGS); \
 	else echo "WARNING: could not find \`runtest'" 1>&2; :;\
@@ -3058,9 +3058,9 @@
 m68k-parse.c: $(srcdir)/config/m68k-parse.y
 	f=$(srcdir)/config/m68k-parse.y; \
 	if [ $$f = "./config/m68k-parse.y" ]; then \
-	  ln -s config/m68k-parse.y . > /dev/null 2>/dev/null || \
-	   ln config/m68k-parse.y . > /dev/null 2>/dev/null || \
-	   cp config/m68k-parse.y . >/dev/null 2>/dev/null; \
+	  ln -s config/m68k-parse.y . > /System/Devices/null 2>/System/Devices/null || \
+	   ln config/m68k-parse.y . > /System/Devices/null 2>/System/Devices/null || \
+	   cp config/m68k-parse.y . >/System/Devices/null 2>/System/Devices/null; \
 	  f=m68k-parse.y; \
 	else true; fi; \
 	$(SHELL) $(YLWRAP) "$(YACC)" $$f y.tab.c m68k-parse.c --; \
@@ -3113,10 +3113,10 @@
 install-exec-tooldir: install-exec-bindir $(noinst_PROGRAMS)
 	$(mkinstalldirs) $(DESTDIR)$(tooldir)/bin
 	n=`echo as | sed '$(transform)'`; \
-	if [ "$(bindir)/$$n$(EXEEXT)" != "$(tooldir)/bin/as$(EXEEXT)" ]; then \
-	  rm -f $(DESTDIR)$(tooldir)/bin/as$(EXEEXT); \
-	  ln $(DESTDIR)$(bindir)/$$n$(EXEEXT) $(DESTDIR)$(tooldir)/bin/as$(EXEEXT) >/dev/null 2>/dev/null \
-	    || $(LIBTOOL) --mode=install $(INSTALL_PROGRAM) as-new$(EXEEXT) $(DESTDIR)$(tooldir)/bin/as$(EXEEXT); \
+	if [ "$(bindir)/$$n$(EXEEXT)" != "$(tooldir)/binas$(EXEEXT)" ]; then \
+	  rm -f $(DESTDIR)$(tooldir)/binas$(EXEEXT); \
+	  ln $(DESTDIR)$(bindir)/$$n$(EXEEXT) $(DESTDIR)$(tooldir)/binas$(EXEEXT) >/System/Devices/null 2>/System/Devices/null \
+	    || $(LIBTOOL) --mode=install $(INSTALL_PROGRAM) as-new$(EXEEXT) $(DESTDIR)$(tooldir)/binas$(EXEEXT); \
 	else \
 	  true ; \
 	fi
@@ -3170,7 +3170,7 @@
 	x=0 ; \
 	for file in *.o ; do \
 	  tail +16c ./$$file > tmp-foo1; \
-	  if tail +16c ${against}/$$file > tmp-foo2 2>/dev/null ; then \
+	  if tail +16c ${against}/$$file > tmp-foo2 2>/System/Devices/null ; then \
 	    if cmp tmp-foo1 tmp-foo2 ; then \
 	      true ; \
 	    else \
@@ -3218,7 +3218,7 @@
 	echo '$$(TARG_CPU_O): $$(DEPTC_@target''_cpu_type@_@obj''_format@)' >> DEPA
 	echo '$$(OBJ_FORMAT_O): $$(DEPOBJ_@target''_cpu_type@_@obj''_format@)' >> DEPA
 	echo '#MKDEP    DO NOT PUT ANYTHING BETWEEN THIS LINE AND THE MATCHING WARNING ABOVE.' >> DEPA
-	if grep ' /' DEPA > /dev/null 2> /dev/null; then \
+	if grep ' /' DEPA > /System/Devices/null 2> /System/Devices/null; then \
 	  echo 'make DEP failed!'; exit 1; \
 	else \
 	  mv -f DEPA $@; \
diff -urN binutils-2.16.1/gas/aclocal.m4 binutils-2.16.1-STEP/gas/aclocal.m4
--- binutils-2.16.1/gas/aclocal.m4	2005-03-23 03:31:44.000000000 +1200
+++ binutils-2.16.1-STEP/gas/aclocal.m4	2005-09-02 11:16:19.874297224 +1200
@@ -192,7 +192,7 @@
     for i in 1 2 3 4 5 6; do
       echo '#include "conftst'$i'.h"' >> sub/conftest.c
       # Using `: > sub/conftst$i.h' creates only sub/conftst1.h with
-      # Solaris 8's {/usr,}/bin/sh.
+      # Solaris 8's {/usr,}/System/Tools/sh.
       touch sub/conftst$i.h
     done
     echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf
@@ -216,10 +216,10 @@
        source=sub/conftest.c object=sub/conftest.${OBJEXT-o} \
        depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
        $SHELL ./depcomp $depcc -c -o sub/conftest.${OBJEXT-o} sub/conftest.c \
-         >/dev/null 2>conftest.err &&
-       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
-       grep sub/conftest.${OBJEXT-o} sub/conftest.Po > /dev/null 2>&1 &&
-       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
+         >/System/Devices/null 2>conftest.err &&
+       grep sub/conftst6.h sub/conftest.Po > /System/Devices/null 2>&1 &&
+       grep sub/conftest.${OBJEXT-o} sub/conftest.Po > /System/Devices/null 2>&1 &&
+       ${MAKE-make} -s -f confmf > /System/Devices/null 2>&1; then
       # icc doesn't choke on unknown options, it will just issue warnings
       # or remarks (even with -Werror).  So we grep stderr for any message
       # that says an option was ignored or not supported.
@@ -228,7 +228,7 @@
       # The diagnosis changed in icc 8.0:
       #   icc: Command line remark: option '-MP' not supported
       if (grep 'ignoring option' conftest.err ||
-          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
+          grep 'not supported' conftest.err) >/System/Devices/null 2>&1; then :; else
         am_cv_$1_dependencies_compiler_type=$depmode
         break
       fi
@@ -295,7 +295,7 @@
   # Grep'ing the first line is not enough: some people post-process
   # each Makefile.in and add a new line on top of each file to say so.
   # So let's grep whole file.
-  if grep '^#.*generated by automake' $mf > /dev/null 2>&1; then
+  if grep '^#.*generated by automake' $mf > /System/Devices/null 2>&1; then
     dirpart=`AS_DIRNAME("$mf")`
   else
     continue
@@ -392,7 +392,7 @@
 
 # test whether we have cygpath
 if test -z "$CYGPATH_W"; then
-  if (cygpath --version) >/dev/null 2>/dev/null; then
+  if (cygpath --version) >/System/Devices/null 2>/System/Devices/null; then
     CYGPATH_W='cygpath -w'
   else
     CYGPATH_W=echo
@@ -491,14 +491,14 @@
 # Check whether the underlying file-system supports filenames
 # with a leading dot.  For instance MS-DOS doesn't.
 AC_DEFUN([AM_SET_LEADING_DOT],
-[rm -rf .tst 2>/dev/null
-mkdir .tst 2>/dev/null
+[rm -rf .tst 2>/System/Devices/null
+mkdir .tst 2>/System/Devices/null
 if test -d .tst; then
   am__leading_dot=.
 else
   am__leading_dot=_
 fi
-rmdir .tst 2>/dev/null
+rmdir .tst 2>/System/Devices/null
 AC_SUBST([am__leading_dot])])
 
 # Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2005
@@ -583,7 +583,7 @@
 # In particular we don't look at `^make:' because GNU make might
 # be invoked under some other name (usually "gmake"), in which
 # case it prints its new name instead of `make'.
-if test "`$am_make -s -f confmf 2> /dev/null | grep -v 'ing directory'`" = "done"; then
+if test "`$am_make -s -f confmf 2> /System/Devices/null | grep -v 'ing directory'`" = "done"; then
    am__include=include
    am__quote=
    _am_result=GNU
@@ -591,7 +591,7 @@
 # Now try BSD make style include.
 if test "$am__include" = "#"; then
    echo '.include "confinc"' > confmf
-   if test "`$am_make -s -f confmf 2> /dev/null`" = "done"; then
+   if test "`$am_make -s -f confmf 2> /System/Devices/null`" = "done"; then
       am__include=.include
       am__quote="\""
       _am_result=BSD
@@ -667,7 +667,7 @@
 # restrict ourselves to GNU make (using the --version option ensures
 # this.)
 AC_DEFUN([AM_PROG_MKDIR_P],
-[if mkdir -p --version . >/dev/null 2>&1 && test ! -d ./--version; then
+[if mkdir -p --version . >/System/Devices/null 2>&1 && test ! -d ./--version; then
   # We used to keeping the `.' as first argument, in order to
   # allow $(mkdir_p) to be used without argument.  As in
   #   $(mkdir_p) $(somedir)
@@ -758,7 +758,7 @@
 # (eg FreeBSD returns the mod time of the symlink's containing
 # directory).
 if (
-   set X `ls -Lt $srcdir/configure conftest.file 2> /dev/null`
+   set X `ls -Lt $srcdir/configure conftest.file 2> /System/Devices/null`
    if test "$[*]" = "X"; then
       # -L didn't work.
       set X `ls -t $srcdir/configure conftest.file`
@@ -865,7 +865,7 @@
   plaintar)
     # Must skip GNU tar: if it does not support --format= it doesn't create
     # ustar tarball either.
-    (tar --version) >/dev/null 2>&1 && continue
+    (tar --version) >/System/Devices/null 2>&1 && continue
     am__tar='tar chf - "$$tardir"'
     am__tar_='tar chf - "$tardir"'
     am__untar='tar xf -'
@@ -899,7 +899,7 @@
   rm -rf conftest.dir
   if test -s conftest.tar; then
     AM_RUN_LOG([$am__untar <conftest.tar])
-    grep GrepMe conftest.dir/file >/dev/null 2>&1 && break
+    grep GrepMe conftest.dir/file >/System/Devices/null 2>&1 && break
   fi
 done
 rm -rf conftest.dir
diff -urN binutils-2.16.1/gas/config-gas.com binutils-2.16.1-STEP/gas/config-gas.com
--- binutils-2.16.1/gas/config-gas.com	1999-05-03 19:28:40.000000000 +1200
+++ binutils-2.16.1-STEP/gas/config-gas.com	2005-09-02 11:16:19.920290232 +1200
@@ -1,7 +1,7 @@
 $!config-gas.com
 $! This file sets things up to build gas on a VMS system to generate object
 $! files for a VMS system.  We do not use the configure script, since we
-$! do not have /bin/sh to execute it.
+$! do not have /System/Tools/sh to execute it.
 $!
 $!
 $ gas_host="vms"
diff -urN binutils-2.16.1/gas/configure binutils-2.16.1-STEP/gas/configure
--- binutils-2.16.1/gas/configure	2005-03-01 13:43:51.000000000 +1300
+++ binutils-2.16.1-STEP/gas/configure	2005-09-02 11:16:19.941287040 +1200
@@ -1,4 +1,4 @@
-#! /bin/sh
+#! /System/Tools/sh
 # Guess values for system-dependent variables and create Makefiles.
 # Generated by GNU Autoconf 2.59.
 #
@@ -10,19 +10,19 @@
 ## --------------------- ##
 
 # Be Bourne compatible
-if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
+if test -n "${ZSH_VERSION+set}" && (emulate sh) >/System/Devices/null 2>&1; then
   emulate sh
   NULLCMD=:
   # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
   # is contrary to our usage.  Disable this feature.
   alias -g '${1+"$@"}'='"$@"'
-elif test -n "${BASH_VERSION+set}" && (set -o posix) >/dev/null 2>&1; then
+elif test -n "${BASH_VERSION+set}" && (set -o posix) >/System/Devices/null 2>&1; then
   set -o posix
 fi
 DUALCASE=1; export DUALCASE # for MKS sh
 
 # Support unset when possible.
-if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
+if ( (MAIL=60; unset MAIL) || exit) >/System/Devices/null 2>&1; then
   as_unset=unset
 else
   as_unset=false
@@ -49,13 +49,13 @@
 done
 
 # Required to use basename.
-if expr a : '\(a\)' >/dev/null 2>&1; then
+if expr a : '\(a\)' >/System/Devices/null 2>&1; then
   as_expr=expr
 else
   as_expr=false
 fi
 
-if (basename /) >/dev/null 2>&1 && test "X`basename / 2>&1`" = "X/"; then
+if (basename /) >/System/Devices/null 2>&1 && test "X`basename / 2>&1`" = "X/"; then
   as_basename=basename
 else
   as_basename=false
@@ -67,7 +67,7 @@
 $as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
 	 X"$0" : 'X\(//\)$' \| \
 	 X"$0" : 'X\(/\)$' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X/"$0" |
     sed '/^.*\/\([^/][^/]*\)\/*$/{ s//\1/; q; }
   	  /^X\/\(\/\/\)$/{ s//\1/; q; }
@@ -85,10 +85,10 @@
 
 # The user is always right.
 if test "${PATH_SEPARATOR+set}" != set; then
-  echo "#! /bin/sh" >conf$$.sh
+  echo "#! /System/Tools/sh" >conf$$.sh
   echo  "exit 0"   >>conf$$.sh
   chmod +x conf$$.sh
-  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
+  if (PATH="/nonexistent;."; conf$$.sh) >/System/Devices/null 2>&1; then
     PATH_SEPARATOR=';'
   else
     PATH_SEPARATOR=:
@@ -99,7 +99,7 @@
 
   as_lineno_1=$LINENO
   as_lineno_2=$LINENO
-  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
+  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/System/Devices/null`
   test "x$as_lineno_1" != "x$as_lineno_2" &&
   test "x$as_lineno_3"  = "x$as_lineno_2"  || {
   # Find who we are.  Look in the path if we contain no path at all
@@ -138,9 +138,9 @@
 	   if ("$as_dir/$as_base" -c '
   as_lineno_1=$LINENO
   as_lineno_2=$LINENO
-  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
+  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/System/Devices/null`
   test "x$as_lineno_1" != "x$as_lineno_2" &&
-  test "x$as_lineno_3"  = "x$as_lineno_2" ') 2>/dev/null; then
+  test "x$as_lineno_3"  = "x$as_lineno_2" ') 2>/System/Devices/null; then
 	     $as_unset BASH_ENV || test "${BASH_ENV+set}" != set || { BASH_ENV=; export BASH_ENV; }
 	     $as_unset ENV || test "${ENV+set}" != set || { ENV=; export ENV; }
 	     CONFIG_SHELL=$as_dir/$as_base
@@ -191,7 +191,7 @@
   *)       ECHO_N= ECHO_C='\c' ECHO_T= ;;
 esac
 
-if expr a : '\(a\)' >/dev/null 2>&1; then
+if expr a : '\(a\)' >/System/Devices/null 2>&1; then
   as_expr=expr
 else
   as_expr=false
@@ -199,7 +199,7 @@
 
 rm -f conf$$ conf$$.exe conf$$.file
 echo >conf$$.file
-if ln -s conf$$.file conf$$ 2>/dev/null; then
+if ln -s conf$$.file conf$$ 2>/System/Devices/null; then
   # We could just check for DJGPP; but this test a) works b) is more generic
   # and c) will remain valid once DJGPP supports symlinks (DJGPP 2.04).
   if test -f conf$$.exe; then
@@ -208,14 +208,14 @@
   else
     as_ln_s='ln -s'
   fi
-elif ln conf$$.file conf$$ 2>/dev/null; then
+elif ln conf$$.file conf$$ 2>/System/Devices/null; then
   as_ln_s=ln
 else
   as_ln_s='cp -p'
 fi
 rm -f conf$$ conf$$.exe conf$$.file
 
-if mkdir -p . 2>/dev/null; then
+if mkdir -p . 2>/System/Devices/null; then
   as_mkdir_p=:
 else
   test -d ./-p && rmdir ./-p
@@ -244,7 +244,7 @@
 # Name of the host.
 # hostname on some systems (SVR3.2, Linux) returns a bogus exit status,
 # so uname gets run too.
-ac_hostname=`(hostname || uname -n) 2>/dev/null | sed 1q`
+ac_hostname=`(hostname || uname -n) 2>/System/Devices/null | sed 1q`
 
 exec 6>&1
 
@@ -257,7 +257,7 @@
 subdirs=
 MFLAGS=
 MAKEFLAGS=
-SHELL=${CONFIG_SHELL-/bin/sh}
+SHELL=${CONFIG_SHELL-/System/Tools/sh}
 
 # Maximum number of lines to put in a shell here document.
 # This variable seems obsolete.  It should probably be removed, and
@@ -317,7 +317,7 @@
 ac_init_version=false
 # The variables have the same names as the options, with
 # dashes changed to underlines.
-cache_file=/dev/null
+cache_file=/System/Devices/null
 exec_prefix=NONE
 no_create=
 no_recursion=
@@ -395,7 +395,7 @@
   -disable-* | --disable-*)
     ac_feature=`expr "x$ac_option" : 'x-*disable-\(.*\)'`
     # Reject names that are not valid shell variable names.
-    expr "x$ac_feature" : ".*[^-_$as_cr_alnum]" >/dev/null &&
+    expr "x$ac_feature" : ".*[^-_$as_cr_alnum]" >/System/Devices/null &&
       { echo "$as_me: error: invalid feature name: $ac_feature" >&2
    { (exit 1); exit 1; }; }
     ac_feature=`echo $ac_feature | sed 's/-/_/g'`
@@ -404,7 +404,7 @@
   -enable-* | --enable-*)
     ac_feature=`expr "x$ac_option" : 'x-*enable-\([^=]*\)'`
     # Reject names that are not valid shell variable names.
-    expr "x$ac_feature" : ".*[^-_$as_cr_alnum]" >/dev/null &&
+    expr "x$ac_feature" : ".*[^-_$as_cr_alnum]" >/System/Devices/null &&
       { echo "$as_me: error: invalid feature name: $ac_feature" >&2
    { (exit 1); exit 1; }; }
     ac_feature=`echo $ac_feature | sed 's/-/_/g'`
@@ -586,7 +586,7 @@
   -with-* | --with-*)
     ac_package=`expr "x$ac_option" : 'x-*with-\([^=]*\)'`
     # Reject names that are not valid shell variable names.
-    expr "x$ac_package" : ".*[^-_$as_cr_alnum]" >/dev/null &&
+    expr "x$ac_package" : ".*[^-_$as_cr_alnum]" >/System/Devices/null &&
       { echo "$as_me: error: invalid package name: $ac_package" >&2
    { (exit 1); exit 1; }; }
     ac_package=`echo $ac_package| sed 's/-/_/g'`
@@ -599,7 +599,7 @@
   -without-* | --without-*)
     ac_package=`expr "x$ac_option" : 'x-*without-\(.*\)'`
     # Reject names that are not valid shell variable names.
-    expr "x$ac_package" : ".*[^-_$as_cr_alnum]" >/dev/null &&
+    expr "x$ac_package" : ".*[^-_$as_cr_alnum]" >/System/Devices/null &&
       { echo "$as_me: error: invalid package name: $ac_package" >&2
    { (exit 1); exit 1; }; }
     ac_package=`echo $ac_package | sed 's/-/_/g'`
@@ -631,7 +631,7 @@
   *=*)
     ac_envvar=`expr "x$ac_option" : 'x\([^=]*\)='`
     # Reject names that are not valid shell variable names.
-    expr "x$ac_envvar" : ".*[^_$as_cr_alnum]" >/dev/null &&
+    expr "x$ac_envvar" : ".*[^_$as_cr_alnum]" >/System/Devices/null &&
       { echo "$as_me: error: invalid variable name: $ac_envvar" >&2
    { (exit 1); exit 1; }; }
     ac_optarg=`echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"`
@@ -641,7 +641,7 @@
   *)
     # FIXME: should be removed in autoconf 3.0.
     echo "$as_me: WARNING: you should use --build, --host, --target" >&2
-    expr "x$ac_option" : ".*[^-._$as_cr_alnum]" >/dev/null &&
+    expr "x$ac_option" : ".*[^-._$as_cr_alnum]" >/System/Devices/null &&
       echo "$as_me: WARNING: invalid host type: $ac_option" >&2
     : ${build_alias=$ac_option} ${host_alias=$ac_option} ${target_alias=$ac_option}
     ;;
@@ -699,19 +699,19 @@
 ac_tool_prefix=
 test -n "$host_alias" && ac_tool_prefix=$host_alias-
 
-test "$silent" = yes && exec 6>/dev/null
+test "$silent" = yes && exec 6>/System/Devices/null
 
 
 # Find the source files, if location was not specified.
 if test -z "$srcdir"; then
   ac_srcdir_defaulted=yes
   # Try the directory containing this script, then its parent.
-  ac_confdir=`(dirname "$0") 2>/dev/null ||
+  ac_confdir=`(dirname "$0") 2>/System/Devices/null ||
 $as_expr X"$0" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$0" : 'X\(//\)[^/]' \| \
 	 X"$0" : 'X\(//\)$' \| \
 	 X"$0" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$0" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -734,7 +734,7 @@
    { (exit 1); exit 1; }; }
   fi
 fi
-(cd $srcdir && test -r ./$ac_unique_file) 2>/dev/null ||
+(cd $srcdir && test -r ./$ac_unique_file) 2>/System/Devices/null ||
   { echo "$as_me: error: sources are in $srcdir, but \`cd $srcdir' does not work" >&2
    { (exit 1); exit 1; }; }
 srcdir=`echo "$srcdir" | sed 's%\([^\\/]\)[\\/]*$%\1%'`
@@ -1002,22 +1002,22 @@
 ## Platform. ##
 ## --------- ##
 
-hostname = `(hostname || uname -n) 2>/dev/null | sed 1q`
-uname -m = `(uname -m) 2>/dev/null || echo unknown`
-uname -r = `(uname -r) 2>/dev/null || echo unknown`
-uname -s = `(uname -s) 2>/dev/null || echo unknown`
-uname -v = `(uname -v) 2>/dev/null || echo unknown`
-
-/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`
-/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`
-
-/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`
-/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`
-/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`
-hostinfo               = `(hostinfo) 2>/dev/null               || echo unknown`
-/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`
-/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`
-/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`
+hostname = `(hostname || uname -n) 2>/System/Devices/null | sed 1q`
+uname -m = `(uname -m) 2>/System/Devices/null || echo unknown`
+uname -r = `(uname -r) 2>/System/Devices/null || echo unknown`
+uname -s = `(uname -s) 2>/System/Devices/null || echo unknown`
+uname -v = `(uname -v) 2>/System/Devices/null || echo unknown`
+
+/System/Tools/uname -p = `(/System/Tools/uname -p) 2>/System/Devices/null || echo unknown`
+/System/Tools/uname -X     = `(/System/Tools/uname -X) 2>/System/Devices/null     || echo unknown`
+
+/System/Tools/arch              = `(/System/Tools/arch) 2>/System/Devices/null              || echo unknown`
+/System/Tools/arch -k       = `(/System/Tools/arch -k) 2>/System/Devices/null       || echo unknown`
+/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/System/Devices/null || echo unknown`
+hostinfo               = `(hostinfo) 2>/System/Devices/null               || echo unknown`
+/System/Tools/machine           = `(/System/Tools/machine) 2>/System/Devices/null           || echo unknown`
+/System/Tools/oslevel       = `(/System/Tools/oslevel) 2>/System/Devices/null       || echo unknown`
+/System/Tools/universe          = `(/System/Tools/universe) 2>/System/Devices/null          || echo unknown`
 
 _ASUNAME
 
@@ -1227,7 +1227,7 @@
 done
 
 if test -r "$cache_file"; then
-  # Some versions of bash will fail to source /dev/null (special
+  # Some versions of bash will fail to source /System/Devices/null (special
   # files actually), so we avoid doing that.
   if test -f "$cache_file"; then
     { echo "$as_me:$LINENO: loading cache $cache_file" >&5
@@ -1345,7 +1345,7 @@
 ac_configure="$SHELL $ac_aux_dir/configure" # This should be Cygnus configure.
 
 # Make sure we can run config.sub.
-$ac_config_sub sun4 >/dev/null 2>&1 ||
+$ac_config_sub sun4 >/System/Devices/null 2>&1 ||
   { { echo "$as_me:$LINENO: error: cannot run $ac_config_sub" >&5
 echo "$as_me: error: cannot run $ac_config_sub" >&2;}
    { (exit 1); exit 1; }; }
@@ -1745,18 +1745,18 @@
 echo "$as_me:$LINENO:" \
      "checking for C compiler version" >&5
 ac_compiler=`set X $ac_compile; echo $2`
-{ (eval echo "$as_me:$LINENO: \"$ac_compiler --version </dev/null >&5\"") >&5
-  (eval $ac_compiler --version </dev/null >&5) 2>&5
+{ (eval echo "$as_me:$LINENO: \"$ac_compiler --version </System/Devices/null >&5\"") >&5
+  (eval $ac_compiler --version </System/Devices/null >&5) 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
-{ (eval echo "$as_me:$LINENO: \"$ac_compiler -v </dev/null >&5\"") >&5
-  (eval $ac_compiler -v </dev/null >&5) 2>&5
+{ (eval echo "$as_me:$LINENO: \"$ac_compiler -v </System/Devices/null >&5\"") >&5
+  (eval $ac_compiler -v </System/Devices/null >&5) 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
-{ (eval echo "$as_me:$LINENO: \"$ac_compiler -V </dev/null >&5\"") >&5
-  (eval $ac_compiler -V </dev/null >&5) 2>&5
+{ (eval echo "$as_me:$LINENO: \"$ac_compiler -V </System/Devices/null >&5\"") >&5
+  (eval $ac_compiler -V </System/Devices/null >&5) 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
@@ -1938,7 +1938,7 @@
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }; then
-  for ac_file in `(ls conftest.o conftest.obj; ls conftest.*) 2>/dev/null`; do
+  for ac_file in `(ls conftest.o conftest.obj; ls conftest.*) 2>/System/Devices/null`; do
   case $ac_file in
     *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg ) ;;
     *) ac_cv_objext=`expr "$ac_file" : '.*\.\(.*\)'`
@@ -2489,13 +2489,13 @@
 # Find a good install program.  We prefer a C program (faster),
 # so one script is as good as another.  But avoid the broken or
 # incompatible versions:
-# SysV /etc/install, /usr/sbin/install
+# SysV/System/Settings/install, /usr/System/AdminTools/install
 # SunOS /usr/etc/install
-# IRIX /sbin/install
-# AIX /bin/install
+# IRIX /System/AdminTools/install
+# AIX /System/Tools/install
 # AmigaOS /C/install, which installs bootblocks on floppy discs
-# AIX 4 /usr/bin/installbsd, which doesn't work without a -g flag
-# AFS /usr/afsws/bin/install, which mishandles nonexistent args
+# AIX 4 /System/Tools/installbsd, which doesn't work without a -g flag
+# AFS /usr/afsws/System/Tools/install, which mishandles nonexistent args
 # SVR4 /usr/ucb/install, which tries to use the nonexistent group "staff"
 # OS/2's system install, which has a completely different semantic
 # ./install, which can be erroneously created by make from ./install.sh.
@@ -2513,7 +2513,7 @@
   # Account for people who put trailing slashes in PATH elements.
 case $as_dir/ in
   ./ | .// | /cC/* | \
-  /etc/* | /usr/sbin/* | /usr/etc/* | /sbin/* | /usr/afsws/bin/* | \
+ /System/Settings/* | /usr/System/AdminTools/* | /usr/etc/* | /System/AdminTools/* | /usr/afsws/System/Tools/* | \
   ?:\\/os2\\/install\\/* | ?:\\/OS2\\/INSTALL\\/* | \
   /usr/ucb/* ) ;;
   *)
@@ -2524,11 +2524,11 @@
       for ac_exec_ext in '' $ac_executable_extensions; do
 	if $as_executable_p "$as_dir/$ac_prog$ac_exec_ext"; then
 	  if test $ac_prog = install &&
-	    grep dspmsg "$as_dir/$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
+	    grep dspmsg "$as_dir/$ac_prog$ac_exec_ext" >/System/Devices/null 2>&1; then
 	    # AIX install.  It has an incompatible calling convention.
 	    :
 	  elif test $ac_prog = install &&
-	    grep pwplus "$as_dir/$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
+	    grep pwplus "$as_dir/$ac_prog$ac_exec_ext" >/System/Devices/null 2>&1; then
 	    # program-specific install script used by HP pwplus--don't use.
 	    :
 	  else
@@ -2576,7 +2576,7 @@
 # (eg FreeBSD returns the mod time of the symlink's containing
 # directory).
 if (
-   set X `ls -Lt $srcdir/configure conftest.file 2> /dev/null`
+   set X `ls -Lt $srcdir/configure conftest.file 2> /System/Devices/null`
    if test "$*" = "X"; then
       # -L didn't work.
       set X `ls -t $srcdir/configure conftest.file`
@@ -2636,7 +2636,7 @@
 echo "$as_me: WARNING: \`missing' script is too old or missing" >&2;}
 fi
 
-if mkdir -p --version . >/dev/null 2>&1 && test ! -d ./--version; then
+if mkdir -p --version . >/System/Devices/null 2>&1 && test ! -d ./--version; then
   # We used to keeping the `.' as first argument, in order to
   # allow $(mkdir_p) to be used without argument.  As in
   #   $(mkdir_p) $(somedir)
@@ -2720,7 +2720,7 @@
 	@echo 'ac_maketemp="$(MAKE)"'
 _ACEOF
 # GNU make sometimes prints "make[1]: Entering...", which would confuse us.
-eval `${MAKE-make} -f conftest.make 2>/dev/null | grep temp=`
+eval `${MAKE-make} -f conftest.make 2>/System/Devices/null | grep temp=`
 if test -n "$ac_maketemp"; then
   eval ac_cv_prog_make_${ac_make}_set=yes
 else
@@ -2738,14 +2738,14 @@
   SET_MAKE="MAKE=${MAKE-make}"
 fi
 
-rm -rf .tst 2>/dev/null
-mkdir .tst 2>/dev/null
+rm -rf .tst 2>/System/Devices/null
+mkdir .tst 2>/System/Devices/null
 if test -d .tst; then
   am__leading_dot=.
 else
   am__leading_dot=_
 fi
-rmdir .tst 2>/dev/null
+rmdir .tst 2>/System/Devices/null
 
 DEPDIR="${am__leading_dot}deps"
 
@@ -2771,7 +2771,7 @@
 # In particular we don't look at `^make:' because GNU make might
 # be invoked under some other name (usually "gmake"), in which
 # case it prints its new name instead of `make'.
-if test "`$am_make -s -f confmf 2> /dev/null | grep -v 'ing directory'`" = "done"; then
+if test "`$am_make -s -f confmf 2> /System/Devices/null | grep -v 'ing directory'`" = "done"; then
    am__include=include
    am__quote=
    _am_result=GNU
@@ -2779,7 +2779,7 @@
 # Now try BSD make style include.
 if test "$am__include" = "#"; then
    echo '.include "confinc"' > confmf
-   if test "`$am_make -s -f confmf 2> /dev/null`" = "done"; then
+   if test "`$am_make -s -f confmf 2> /System/Devices/null`" = "done"; then
       am__include=.include
       am__quote="\""
       _am_result=BSD
@@ -2822,7 +2822,7 @@
 
 # test whether we have cygpath
 if test -z "$CYGPATH_W"; then
-  if (cygpath --version) >/dev/null 2>/dev/null; then
+  if (cygpath --version) >/System/Devices/null 2>/System/Devices/null; then
     CYGPATH_W='cygpath -w'
   else
     CYGPATH_W=echo
@@ -3003,7 +3003,7 @@
     for i in 1 2 3 4 5 6; do
       echo '#include "conftst'$i'.h"' >> sub/conftest.c
       # Using `: > sub/conftst$i.h' creates only sub/conftst1.h with
-      # Solaris 8's {/usr,}/bin/sh.
+      # Solaris 8's {/usr,}/System/Tools/sh.
       touch sub/conftst$i.h
     done
     echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf
@@ -3027,10 +3027,10 @@
        source=sub/conftest.c object=sub/conftest.${OBJEXT-o} \
        depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
        $SHELL ./depcomp $depcc -c -o sub/conftest.${OBJEXT-o} sub/conftest.c \
-         >/dev/null 2>conftest.err &&
-       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
-       grep sub/conftest.${OBJEXT-o} sub/conftest.Po > /dev/null 2>&1 &&
-       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
+         >/System/Devices/null 2>conftest.err &&
+       grep sub/conftst6.h sub/conftest.Po > /System/Devices/null 2>&1 &&
+       grep sub/conftest.${OBJEXT-o} sub/conftest.Po > /System/Devices/null 2>&1 &&
+       ${MAKE-make} -s -f confmf > /System/Devices/null 2>&1; then
       # icc doesn't choke on unknown options, it will just issue warnings
       # or remarks (even with -Werror).  So we grep stderr for any message
       # that says an option was ignored or not supported.
@@ -3039,7 +3039,7 @@
       # The diagnosis changed in icc 8.0:
       #   icc: Command line remark: option '-MP' not supported
       if (grep 'ignoring option' conftest.err ||
-          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
+          grep 'not supported' conftest.err) >/System/Devices/null 2>&1; then :; else
         am_cv_CC_dependencies_compiler_type=$depmode
         break
       fi
@@ -3164,7 +3164,7 @@
       re_direlt='/[^/][^/]*/\.\./'
       # Canonicalize the path of ld
       ac_prog=`echo $ac_prog| sed 's%\\\\%/%g'`
-      while echo $ac_prog | grep "$re_direlt" > /dev/null 2>&1; do
+      while echo $ac_prog | grep "$re_direlt" > /System/Devices/null 2>&1; do
 	ac_prog=`echo $ac_prog| sed "s%$re_direlt%/%"`
       done
       test -z "$LD" && LD="$ac_prog"
@@ -3197,7 +3197,7 @@
       # Check to see if the program is GNU ld.  I'd rather use --version,
       # but apparently some GNU ld's only accept -v.
       # Break only if it was the GNU/non-GNU ld that we prefer.
-      if "$lt_cv_path_LD" -v 2>&1 < /dev/null | egrep '(GNU|with BFD)' > /dev/null; then
+      if "$lt_cv_path_LD" -v 2>&1 < /System/Devices/null | egrep '(GNU|with BFD)' > /System/Devices/null; then
 	test "$with_gnu_ld" != no && break
       else
 	test "$with_gnu_ld" != yes && break
@@ -3227,7 +3227,7 @@
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
   # I'd rather use --version here, but apparently some GNU ld's only accept -v.
-if $LD -v 2>&1 </dev/null | egrep '(GNU|with BFD)' 1>&5; then
+if $LD -v 2>&1 </System/Devices/null | egrep '(GNU|with BFD)' 1>&5; then
   lt_cv_prog_gnu_ld=yes
 else
   lt_cv_prog_gnu_ld=no
@@ -3267,11 +3267,11 @@
       # Check to see if the nm accepts a BSD-compat flag.
       # Adding the `sed 1q' prevents false positives on HP-UX, which says:
       #   nm: unknown option "B" ignored
-      # Tru64's nm complains that /dev/null is an invalid object file
-      if ($tmp_nm -B /dev/null 2>&1 | sed '1q'; exit 0) | egrep '(/dev/null|Invalid file or object type)' >/dev/null; then
+      # Tru64's nm complains that /System/Devices/null is an invalid object file
+      if ($tmp_nm -B /System/Devices/null 2>&1 | sed '1q'; exit 0) | egrep '(/System/Devices/null|Invalid file or object type)' >/System/Devices/null; then
 	lt_cv_path_NM="$tmp_nm -B"
 	break
-      elif ($tmp_nm -p /dev/null 2>&1 | sed '1q'; exit 0) | egrep /dev/null >/dev/null; then
+      elif ($tmp_nm -p /System/Devices/null 2>&1 | sed '1q'; exit 0) | egrep /System/Devices/null >/System/Devices/null; then
 	lt_cv_path_NM="$tmp_nm -p"
 	break
       else
@@ -3330,7 +3330,7 @@
 
 bsdi4*)
   lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (shared object|dynamic lib)'
-  lt_cv_file_magic_cmd='/usr/bin/file -L'
+  lt_cv_file_magic_cmd='/System/Tools/file -L'
   lt_cv_file_magic_test_file=/shlib/libc.so
   ;;
 
@@ -3341,26 +3341,26 @@
 
 darwin* | rhapsody*)
   lt_cv_deplibs_check_method='file_magic Mach-O dynamically linked shared library'
-  lt_cv_file_magic_cmd='/usr/bin/file -L'
+  lt_cv_file_magic_cmd='/System/Tools/file -L'
   case "$host_os" in
   rhapsody* | darwin1.012)
     lt_cv_file_magic_test_file='/System/Library/Frameworks/System.framework/System'
     ;;
   *) # Darwin 1.3 on
-    lt_cv_file_magic_test_file='/usr/lib/libSystem.dylib'
+    lt_cv_file_magic_test_file='/System/Library/Libraries/libSystem.dylib'
     ;;
   esac
   ;;
 
 freebsd* | kfreebsd*-gnu)
-  if echo __ELF__ | $CC -E - | grep __ELF__ > /dev/null; then
+  if echo __ELF__ | $CC -E - | grep __ELF__ > /System/Devices/null; then
     case $host_cpu in
     i*86 )
       # Not sure whether the presence of OpenBSD here was a mistake.
       # Let's accept both of them until this is cleared up.
       lt_cv_deplibs_check_method='file_magic (FreeBSD|OpenBSD)/i[3-9]86 (compact )?demand paged shared library'
-      lt_cv_file_magic_cmd=/usr/bin/file
-      lt_cv_file_magic_test_file=`echo /usr/lib/libc.so.*`
+      lt_cv_file_magic_cmd=/System/Tools/file
+      lt_cv_file_magic_test_file=`echo /System/Library/Libraries/libc.so.*`
       ;;
     esac
   else
@@ -3376,13 +3376,13 @@
   case $host_cpu in
   hppa*)
     lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|PA-RISC[0-9].[0-9]) shared library'
-    lt_cv_file_magic_cmd=/usr/bin/file
-    lt_cv_file_magic_test_file=/usr/lib/libc.sl
+    lt_cv_file_magic_cmd=/System/Tools/file
+    lt_cv_file_magic_test_file=/System/Library/Libraries/libc.sl
     ;;
   ia64*)
     lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF-[0-9][0-9]) shared object file - IA64'
-    lt_cv_file_magic_cmd=/usr/bin/file
-    lt_cv_file_magic_test_file=/usr/lib/hpux32/libc.so
+    lt_cv_file_magic_cmd=/System/Tools/file
+    lt_cv_file_magic_test_file=/System/Library/Libraries/hpux32/libc.so
     ;;
   esac
   ;;
@@ -3421,7 +3421,7 @@
   ;;
 
 netbsd* | knetbsd*-gnu)
-  if echo __ELF__ | $CC -E - | grep __ELF__ > /dev/null; then
+  if echo __ELF__ | $CC -E - | grep __ELF__ > /System/Devices/null; then
     lt_cv_deplibs_check_method='match_pattern /lib[^/\.]+\.so\.[0-9]+\.[0-9]+$'
   else
     lt_cv_deplibs_check_method='match_pattern /lib[^/\.]+\.so$'
@@ -3430,8 +3430,8 @@
 
 newsos6)
   lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (executable|dynamic lib)'
-  lt_cv_file_magic_cmd=/usr/bin/file
-  lt_cv_file_magic_test_file=/usr/lib/libnls.so
+  lt_cv_file_magic_cmd=/System/Tools/file
+  lt_cv_file_magic_test_file=/System/Library/Libraries/libnls.so
   ;;
 
 osf3* | osf4* | osf5*)
@@ -3461,7 +3461,7 @@
     ;;
   motorola)
     lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (shared object|dynamic lib) M[0-9][0-9]* Version [0-9]'
-    lt_cv_file_magic_test_file=`echo /usr/lib/libc.so*`
+    lt_cv_file_magic_test_file=`echo /System/Library/Libraries/libc.so*`
     ;;
   esac
   ;;
@@ -3507,8 +3507,8 @@
 	"file_magic "*)
 	  file_magic_regex="`expr \"$deplibs_check_method\" : \"file_magic \(.*\)\"`"
 	  MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
-	  if eval $file_magic_cmd \$file_magic_test_file 2> /dev/null |
-	    egrep "$file_magic_regex" > /dev/null; then
+	  if eval $file_magic_cmd \$file_magic_test_file 2> /System/Devices/null |
+	    egrep "$file_magic_regex" > /System/Devices/null; then
 	    :
 	  else
 	    cat <<EOF 1>&2
@@ -3571,8 +3571,8 @@
 	"file_magic "*)
 	  file_magic_regex="`expr \"$deplibs_check_method\" : \"file_magic \(.*\)\"`"
 	  MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
-	  if eval $file_magic_cmd \$file_magic_test_file 2> /dev/null |
-	    egrep "$file_magic_regex" > /dev/null; then
+	  if eval $file_magic_cmd \$file_magic_test_file 2> /System/Devices/null |
+	    egrep "$file_magic_regex" > /System/Devices/null; then
 	    :
 	  else
 	    cat <<EOF 1>&2
@@ -3818,7 +3818,7 @@
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }; then
    if test "$lt_cv_prog_gnu_ld" = yes; then
-    case `/usr/bin/file conftest.$ac_objext` in
+    case `/System/Tools/file conftest.$ac_objext` in
     *32-bit*)
       LD="${LD-ld} -melf32bsmip"
       ;;
@@ -3830,7 +3830,7 @@
       ;;
     esac
    else
-    case `/usr/bin/file conftest.$ac_objext` in
+    case `/System/Tools/file conftest.$ac_objext` in
     *32-bit*)
       LD="${LD-ld} -32"
       ;;
@@ -3854,7 +3854,7 @@
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }; then
-    case "`/usr/bin/file conftest.o`" in
+    case "`/System/Tools/file conftest.o`" in
     *ELF-32*)
       HPUX_IA64_MODE="32"
       ;;
@@ -3994,9 +3994,9 @@
      t end
      /^ac_cv_env/!s/^\([^=]*\)=\(.*\)$/\1=${\1=\2}/
      : end' >>confcache
-if diff $cache_file confcache >/dev/null 2>&1; then :; else
+if diff $cache_file confcache >/System/Devices/null 2>&1; then :; else
   if test -w $cache_file; then
-    test "x$cache_file" != "x/dev/null" && echo "updating cache $cache_file"
+    test "x$cache_file" != "x/System/Devices/null" && echo "updating cache $cache_file"
     cat confcache >$cache_file
   else
     echo "not updating unwritable cache $cache_file"
@@ -4011,7 +4011,7 @@
 AS="$AS" DLLTOOL="$DLLTOOL" OBJDUMP="$OBJDUMP" \
 objext="$OBJEXT" exeext="$EXEEXT" reload_flag="$reload_flag" \
 deplibs_check_method="$deplibs_check_method" file_magic_cmd="$file_magic_cmd" \
-${CONFIG_SHELL-/bin/sh} $ac_aux_dir/ltconfig --no-reexec \
+${CONFIG_SHELL-/System/Tools/sh} $ac_aux_dir/ltconfig --no-reexec \
 $libtool_flags --no-verify --build="$build" $ac_aux_dir/ltmain.sh $host \
 || { { echo "$as_me:$LINENO: error: libtool configure failed" >&5
 echo "$as_me: error: libtool configure failed" >&2;}
@@ -4019,7 +4019,7 @@
 
 # Reload cache, that may have been modified by ltconfig
 if test -r "$cache_file"; then
-  # Some versions of bash will fail to source /dev/null (special
+  # Some versions of bash will fail to source /System/Devices/null (special
   # files actually), so we avoid doing that.
   if test -f "$cache_file"; then
     { echo "$as_me:$LINENO: loading cache $cache_file" >&5
@@ -4279,10 +4279,10 @@
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }; }; then
-  if grep BIGenDianSyS conftest.$ac_objext >/dev/null ; then
+  if grep BIGenDianSyS conftest.$ac_objext >/System/Devices/null ; then
   ac_cv_c_bigendian=yes
 fi
-if grep LiTTleEnDian conftest.$ac_objext >/dev/null ; then
+if grep LiTTleEnDian conftest.$ac_objext >/System/Devices/null ; then
   if test "$ac_cv_c_bigendian" = unknown; then
     ac_cv_c_bigendian=no
   else
@@ -4374,7 +4374,7 @@
       all_targets=yes
       continue
     fi
-    result=`$ac_config_sub $t 2>/dev/null`
+    result=`$ac_config_sub $t 2>/System/Devices/null`
     if test -n "$result" ; then
       canon_targets="$canon_targets $result"
 #    else
@@ -5407,18 +5407,18 @@
 echo "$as_me:$LINENO:" \
      "checking for C compiler version" >&5
 ac_compiler=`set X $ac_compile; echo $2`
-{ (eval echo "$as_me:$LINENO: \"$ac_compiler --version </dev/null >&5\"") >&5
-  (eval $ac_compiler --version </dev/null >&5) 2>&5
+{ (eval echo "$as_me:$LINENO: \"$ac_compiler --version </System/Devices/null >&5\"") >&5
+  (eval $ac_compiler --version </System/Devices/null >&5) 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
-{ (eval echo "$as_me:$LINENO: \"$ac_compiler -v </dev/null >&5\"") >&5
-  (eval $ac_compiler -v </dev/null >&5) 2>&5
+{ (eval echo "$as_me:$LINENO: \"$ac_compiler -v </System/Devices/null >&5\"") >&5
+  (eval $ac_compiler -v </System/Devices/null >&5) 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
-{ (eval echo "$as_me:$LINENO: \"$ac_compiler -V </dev/null >&5\"") >&5
-  (eval $ac_compiler -V </dev/null >&5) 2>&5
+{ (eval echo "$as_me:$LINENO: \"$ac_compiler -V </System/Devices/null >&5\"") >&5
+  (eval $ac_compiler -V </System/Devices/null >&5) 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
@@ -6265,7 +6265,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -6303,7 +6303,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -6372,7 +6372,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -6410,7 +6410,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -6458,7 +6458,7 @@
 if test "${ac_cv_prog_egrep+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
-  if echo a | (grep -E '(a|b)') >/dev/null 2>&1
+  if echo a | (grep -E '(a|b)') >/System/Devices/null 2>&1
     then ac_cv_prog_egrep='grep -E'
     else ac_cv_prog_egrep='egrep'
     fi
@@ -6535,7 +6535,7 @@
 
 _ACEOF
 if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  $EGREP "memchr" >/dev/null 2>&1; then
+  $EGREP "memchr" >/System/Devices/null 2>&1; then
   :
 else
   ac_cv_header_stdc=no
@@ -6556,7 +6556,7 @@
 
 _ACEOF
 if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  $EGREP "free" >/dev/null 2>&1; then
+  $EGREP "free" >/System/Devices/null 2>&1; then
   :
 else
   ac_cv_header_stdc=no
@@ -6566,7 +6566,7 @@
 fi
 
 if test $ac_cv_header_stdc = yes; then
-  # /bin/cc in Irix-4.0.5 gets non-ANSI ctype macros unless using -ansi.
+  # /System/Tools/cc in Irix-4.0.5 gets non-ANSI ctype macros unless using -ansi.
   if test "$cross_compiling" = yes; then
   :
 else
@@ -7193,7 +7193,7 @@
 
 _ACEOF
 if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  $EGREP "webecray" >/dev/null 2>&1; then
+  $EGREP "webecray" >/System/Devices/null 2>&1; then
   ac_cv_os_cray=yes
 else
   ac_cv_os_cray=no
@@ -7452,7 +7452,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -7889,7 +7889,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -8358,7 +8358,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -9016,7 +9016,7 @@
       fi
 
             if test "$XGETTEXT" != ":"; then
-			if $XGETTEXT --omit-header /dev/null 2> /dev/null; then
+			if $XGETTEXT --omit-header /System/Devices/null 2> /System/Devices/null; then
 	  : ;
 	else
 	  echo "$as_me:$LINENO: result: found xgettext programs is not GNU xgettext; ignore it" >&5
@@ -9169,7 +9169,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -9391,7 +9391,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -9660,7 +9660,7 @@
 
 _ACEOF
 if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  $EGREP "webecray" >/dev/null 2>&1; then
+  $EGREP "webecray" >/System/Devices/null 2>&1; then
   ac_cv_os_cray=yes
 else
   ac_cv_os_cray=no
@@ -10889,9 +10889,9 @@
      t end
      /^ac_cv_env/!s/^\([^=]*\)=\(.*\)$/\1=${\1=\2}/
      : end' >>confcache
-if diff $cache_file confcache >/dev/null 2>&1; then :; else
+if diff $cache_file confcache >/System/Devices/null 2>&1; then :; else
   if test -w $cache_file; then
-    test "x$cache_file" != "x/dev/null" && echo "updating cache $cache_file"
+    test "x$cache_file" != "x/System/Devices/null" && echo "updating cache $cache_file"
     cat confcache >$cache_file
   else
     echo "not updating unwritable cache $cache_file"
@@ -10981,19 +10981,19 @@
 ## --------------------- ##
 
 # Be Bourne compatible
-if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
+if test -n "${ZSH_VERSION+set}" && (emulate sh) >/System/Devices/null 2>&1; then
   emulate sh
   NULLCMD=:
   # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
   # is contrary to our usage.  Disable this feature.
   alias -g '${1+"$@"}'='"$@"'
-elif test -n "${BASH_VERSION+set}" && (set -o posix) >/dev/null 2>&1; then
+elif test -n "${BASH_VERSION+set}" && (set -o posix) >/System/Devices/null 2>&1; then
   set -o posix
 fi
 DUALCASE=1; export DUALCASE # for MKS sh
 
 # Support unset when possible.
-if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
+if ( (MAIL=60; unset MAIL) || exit) >/System/Devices/null 2>&1; then
   as_unset=unset
 else
   as_unset=false
@@ -11020,13 +11020,13 @@
 done
 
 # Required to use basename.
-if expr a : '\(a\)' >/dev/null 2>&1; then
+if expr a : '\(a\)' >/System/Devices/null 2>&1; then
   as_expr=expr
 else
   as_expr=false
 fi
 
-if (basename /) >/dev/null 2>&1 && test "X`basename / 2>&1`" = "X/"; then
+if (basename /) >/System/Devices/null 2>&1 && test "X`basename / 2>&1`" = "X/"; then
   as_basename=basename
 else
   as_basename=false
@@ -11038,7 +11038,7 @@
 $as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
 	 X"$0" : 'X\(//\)$' \| \
 	 X"$0" : 'X\(/\)$' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X/"$0" |
     sed '/^.*\/\([^/][^/]*\)\/*$/{ s//\1/; q; }
   	  /^X\/\(\/\/\)$/{ s//\1/; q; }
@@ -11056,10 +11056,10 @@
 
 # The user is always right.
 if test "${PATH_SEPARATOR+set}" != set; then
-  echo "#! /bin/sh" >conf$$.sh
+  echo "#! /System/Tools/sh" >conf$$.sh
   echo  "exit 0"   >>conf$$.sh
   chmod +x conf$$.sh
-  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
+  if (PATH="/nonexistent;."; conf$$.sh) >/System/Devices/null 2>&1; then
     PATH_SEPARATOR=';'
   else
     PATH_SEPARATOR=:
@@ -11070,7 +11070,7 @@
 
   as_lineno_1=$LINENO
   as_lineno_2=$LINENO
-  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
+  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/System/Devices/null`
   test "x$as_lineno_1" != "x$as_lineno_2" &&
   test "x$as_lineno_3"  = "x$as_lineno_2"  || {
   # Find who we are.  Look in the path if we contain no path at all
@@ -11110,9 +11110,9 @@
 	   if ("$as_dir/$as_base" -c '
   as_lineno_1=$LINENO
   as_lineno_2=$LINENO
-  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
+  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/System/Devices/null`
   test "x$as_lineno_1" != "x$as_lineno_2" &&
-  test "x$as_lineno_3"  = "x$as_lineno_2" ') 2>/dev/null; then
+  test "x$as_lineno_3"  = "x$as_lineno_2" ') 2>/System/Devices/null; then
 	     $as_unset BASH_ENV || test "${BASH_ENV+set}" != set || { BASH_ENV=; export BASH_ENV; }
 	     $as_unset ENV || test "${ENV+set}" != set || { ENV=; export ENV; }
 	     CONFIG_SHELL=$as_dir/$as_base
@@ -11164,7 +11164,7 @@
   *)       ECHO_N= ECHO_C='\c' ECHO_T= ;;
 esac
 
-if expr a : '\(a\)' >/dev/null 2>&1; then
+if expr a : '\(a\)' >/System/Devices/null 2>&1; then
   as_expr=expr
 else
   as_expr=false
@@ -11172,7 +11172,7 @@
 
 rm -f conf$$ conf$$.exe conf$$.file
 echo >conf$$.file
-if ln -s conf$$.file conf$$ 2>/dev/null; then
+if ln -s conf$$.file conf$$ 2>/System/Devices/null; then
   # We could just check for DJGPP; but this test a) works b) is more generic
   # and c) will remain valid once DJGPP supports symlinks (DJGPP 2.04).
   if test -f conf$$.exe; then
@@ -11181,14 +11181,14 @@
   else
     as_ln_s='ln -s'
   fi
-elif ln conf$$.file conf$$ 2>/dev/null; then
+elif ln conf$$.file conf$$ 2>/System/Devices/null; then
   as_ln_s=ln
 else
   as_ln_s='cp -p'
 fi
 rm -f conf$$ conf$$.exe conf$$.file
 
-if mkdir -p . 2>/dev/null; then
+if mkdir -p . 2>/System/Devices/null; then
   as_mkdir_p=:
 else
   test -d ./-p && rmdir ./-p
@@ -11237,7 +11237,7 @@
   $ $0 $@
 
 _CSEOF
-echo "on `(hostname || uname -n) 2>/dev/null | sed 1q`" >&5
+echo "on `(hostname || uname -n) 2>/System/Devices/null | sed 1q`" >&5
 echo >&5
 _ACEOF
 
@@ -11371,7 +11371,7 @@
 ac_configure_extra_args=
 
 if $ac_cs_silent; then
-  exec 6>/dev/null
+  exec 6>/System/Devices/null
   ac_configure_extra_args="$ac_configure_extra_args --silent"
 fi
 
@@ -11441,7 +11441,7 @@
 # Create a (secure) tmp directory for tmp files.
 
 {
-  tmp=`(umask 077 && mktemp -d -q "./confstatXXXXXX") 2>/dev/null` &&
+  tmp=`(umask 077 && mktemp -d -q "./confstatXXXXXX") 2>/System/Devices/null` &&
   test -n "$tmp" && test -d "$tmp"
 }  ||
 {
@@ -11655,12 +11655,12 @@
   esac
 
   # Compute @srcdir@, @top_srcdir@, and @INSTALL@ for subdirectories.
-  ac_dir=`(dirname "$ac_file") 2>/dev/null ||
+  ac_dir=`(dirname "$ac_file") 2>/System/Devices/null ||
 $as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$ac_file" : 'X\(//\)[^/]' \| \
 	 X"$ac_file" : 'X\(//\)$' \| \
 	 X"$ac_file" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$ac_file" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -11674,12 +11674,12 @@
     as_dirs=
     while test ! -d "$as_dir"; do
       as_dirs="$as_dir $as_dirs"
-      as_dir=`(dirname "$as_dir") 2>/dev/null ||
+      as_dir=`(dirname "$as_dir") 2>/System/Devices/null ||
 $as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$as_dir" : 'X\(//\)[^/]' \| \
 	 X"$as_dir" : 'X\(//\)$' \| \
 	 X"$as_dir" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$as_dir" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -11799,7 +11799,7 @@
 	   # Source tree
 	   echo "$srcdir/$f"
 	 else
-	   # /dev/null tree
+	   # /System/Devices/null tree
 	   { { echo "$as_me:$LINENO: error: cannot find input file: $f" >&5
 echo "$as_me: error: cannot find input file: $f" >&2;}
    { (exit 1); exit 1; }; }
@@ -11891,7 +11891,7 @@
 	   # Source tree
 	   echo "$srcdir/$f"
 	 else
-	   # /dev/null tree
+	   # /System/Devices/null tree
 	   { { echo "$as_me:$LINENO: error: cannot find input file: $f" >&5
 echo "$as_me: error: cannot find input file: $f" >&2;}
    { (exit 1); exit 1; }; }
@@ -11944,11 +11944,11 @@
 # Break up conftest.defines because some shells have a limit on the size
 # of here documents, and old seds have small limits too (100 cmds).
 echo '  # Handle all the #define templates only if necessary.' >>$CONFIG_STATUS
-echo '  if grep "^[	 ]*#[	 ]*define" $tmp/in >/dev/null; then' >>$CONFIG_STATUS
+echo '  if grep "^[	 ]*#[	 ]*define" $tmp/in >/System/Devices/null; then' >>$CONFIG_STATUS
 echo '  # If there are no defines, we may have an empty if/fi' >>$CONFIG_STATUS
 echo '  :' >>$CONFIG_STATUS
 rm -f conftest.tail
-while grep . conftest.defines >/dev/null
+while grep . conftest.defines >/System/Devices/null
 do
   # Write a limited-size here document to $tmp/defines.sed.
   echo '  cat >$tmp/defines.sed <<CEOF' >>$CONFIG_STATUS
@@ -11975,7 +11975,7 @@
 # of here documents, and old seds have small limits too (100 cmds).
 echo '  # Handle all the #undef templates' >>$CONFIG_STATUS
 rm -f conftest.tail
-while grep . conftest.undefs >/dev/null
+while grep . conftest.undefs >/System/Devices/null
 do
   # Write a limited-size here document to $tmp/undefs.sed.
   echo '  cat >$tmp/undefs.sed <<CEOF' >>$CONFIG_STATUS
@@ -12008,16 +12008,16 @@
   cat $tmp/in >>$tmp/config.h
   rm -f $tmp/in
   if test x"$ac_file" != x-; then
-    if diff $ac_file $tmp/config.h >/dev/null 2>&1; then
+    if diff $ac_file $tmp/config.h >/System/Devices/null 2>&1; then
       { echo "$as_me:$LINENO: $ac_file is unchanged" >&5
 echo "$as_me: $ac_file is unchanged" >&6;}
     else
-      ac_dir=`(dirname "$ac_file") 2>/dev/null ||
+      ac_dir=`(dirname "$ac_file") 2>/System/Devices/null ||
 $as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$ac_file" : 'X\(//\)[^/]' \| \
 	 X"$ac_file" : 'X\(//\)$' \| \
 	 X"$ac_file" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$ac_file" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -12031,12 +12031,12 @@
     as_dirs=
     while test ! -d "$as_dir"; do
       as_dirs="$as_dir $as_dirs"
-      as_dir=`(dirname "$as_dir") 2>/dev/null ||
+      as_dir=`(dirname "$as_dir") 2>/System/Devices/null ||
 $as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$as_dir" : 'X\(//\)[^/]' \| \
 	 X"$as_dir" : 'X\(//\)$' \| \
 	 X"$as_dir" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$as_dir" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -12066,12 +12066,12 @@
       _am_stamp_count=`expr $_am_stamp_count + 1` ;;
   esac
 done
-echo "timestamp for $ac_file" >`(dirname $ac_file) 2>/dev/null ||
+echo "timestamp for $ac_file" >`(dirname $ac_file) 2>/System/Devices/null ||
 $as_expr X$ac_file : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X$ac_file : 'X\(//\)[^/]' \| \
 	 X$ac_file : 'X\(//\)$' \| \
 	 X$ac_file : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X$ac_file |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -12088,12 +12088,12 @@
 for ac_file in : $CONFIG_COMMANDS; do test "x$ac_file" = x: && continue
   ac_dest=`echo "$ac_file" | sed 's,:.*,,'`
   ac_source=`echo "$ac_file" | sed 's,[^:]*:,,'`
-  ac_dir=`(dirname "$ac_dest") 2>/dev/null ||
+  ac_dir=`(dirname "$ac_dest") 2>/System/Devices/null ||
 $as_expr X"$ac_dest" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$ac_dest" : 'X\(//\)[^/]' \| \
 	 X"$ac_dest" : 'X\(//\)$' \| \
 	 X"$ac_dest" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$ac_dest" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -12107,12 +12107,12 @@
     as_dirs=
     while test ! -d "$as_dir"; do
       as_dirs="$as_dir $as_dirs"
-      as_dir=`(dirname "$as_dir") 2>/dev/null ||
+      as_dir=`(dirname "$as_dir") 2>/System/Devices/null ||
 $as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$as_dir" : 'X\(//\)[^/]' \| \
 	 X"$as_dir" : 'X\(//\)$' \| \
 	 X"$as_dir" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$as_dir" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -12203,13 +12203,13 @@
   # Grep'ing the first line is not enough: some people post-process
   # each Makefile.in and add a new line on top of each file to say so.
   # So let's grep whole file.
-  if grep '^#.*generated by automake' $mf > /dev/null 2>&1; then
-    dirpart=`(dirname "$mf") 2>/dev/null ||
+  if grep '^#.*generated by automake' $mf > /System/Devices/null 2>&1; then
+    dirpart=`(dirname "$mf") 2>/System/Devices/null ||
 $as_expr X"$mf" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$mf" : 'X\(//\)[^/]' \| \
 	 X"$mf" : 'X\(//\)$' \| \
 	 X"$mf" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$mf" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -12237,12 +12237,12 @@
        sed -e 's/\$(DEPDIR)/'"$DEPDIR"'/g' -e 's/\$U/'"$U"'/g'`; do
     # Make sure the directory exists.
     test -f "$dirpart/$file" && continue
-    fdir=`(dirname "$file") 2>/dev/null ||
+    fdir=`(dirname "$file") 2>/System/Devices/null ||
 $as_expr X"$file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$file" : 'X\(//\)[^/]' \| \
 	 X"$file" : 'X\(//\)$' \| \
 	 X"$file" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$file" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -12256,12 +12256,12 @@
     as_dirs=
     while test ! -d "$as_dir"; do
       as_dirs="$as_dir $as_dirs"
-      as_dir=`(dirname "$as_dir") 2>/dev/null ||
+      as_dir=`(dirname "$as_dir") 2>/System/Devices/null ||
 $as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$as_dir" : 'X\(//\)[^/]' \| \
 	 X"$as_dir" : 'X\(//\)$' \| \
 	 X"$as_dir" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$as_dir" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -12305,7 +12305,7 @@
 # config.status does its own redirection, appending to config.log.
 # Unfortunately, on DOS this fails, as config.log is still kept open
 # by configure, so config.status won't be able to write to it; its
-# output is simply discarded.  So we exec the FD to /dev/null,
+# output is simply discarded.  So we exec the FD to /System/Devices/null,
 # effectively closing config.log, so it can be properly (re)opened and
 # appended to by config.status.  When coming back to configure, we
 # need to make the FD available again.
@@ -12314,7 +12314,7 @@
   ac_config_status_args=
   test "$silent" = yes &&
     ac_config_status_args="$ac_config_status_args --quiet"
-  exec 5>/dev/null
+  exec 5>/System/Devices/null
   $SHELL $CONFIG_STATUS $ac_config_status_args || ac_cs_success=false
   exec 5>>config.log
   # Use ||, not &&, to avoid exiting from the if with $? = 1, which
diff -urN binutils-2.16.1/gas/configure.in binutils-2.16.1-STEP/gas/configure.in
--- binutils-2.16.1/gas/configure.in	2005-03-01 13:43:57.000000000 +1300
+++ binutils-2.16.1-STEP/gas/configure.in	2005-09-02 11:16:19.951285520 +1200
@@ -102,7 +102,7 @@
       all_targets=yes
       continue
     fi
-    result=`$ac_config_sub $t 2>/dev/null`
+    result=`$ac_config_sub $t 2>/System/Devices/null`
     if test -n "$result" ; then
       canon_targets="$canon_targets $result"
 #    else
diff -urN binutils-2.16.1/gas/doc/Makefile.am binutils-2.16.1-STEP/gas/doc/Makefile.am
--- binutils-2.16.1/gas/doc/Makefile.am	2005-05-18 07:46:18.000000000 +1200
+++ binutils-2.16.1-STEP/gas/doc/Makefile.am	2005-09-02 11:16:20.071267280 +1200
@@ -19,8 +19,8 @@
 
 asconfig.texi: $(CONFIG).texi
 	rm -f asconfig.texi
-	ln -s $(srcdir)/$(CONFIG).texi ./asconfig.texi >/dev/null 2>&1 \
-	  || ln $(srcdir)/$(CONFIG).texi ./asconfig.texi >/dev/null 2>&1 \
+	ln -s $(srcdir)/$(CONFIG).texi ./asconfig.texi >/System/Devices/null 2>&1 \
+	  || ln $(srcdir)/$(CONFIG).texi ./asconfig.texi >/System/Devices/null 2>&1 \
 	  || cp $(srcdir)/$(CONFIG).texi ./asconfig.texi
 
 CPU_DOCS = \
diff -urN binutils-2.16.1/gas/doc/Makefile.in binutils-2.16.1-STEP/gas/doc/Makefile.in
--- binutils-2.16.1/gas/doc/Makefile.in	2005-05-18 07:46:18.000000000 +1200
+++ binutils-2.16.1-STEP/gas/doc/Makefile.in	2005-09-02 11:16:20.075266672 +1200
@@ -349,7 +349,7 @@
 uninstall-info-am:
 	@$(PRE_UNINSTALL)
 	@if (install-info --version && \
-	     install-info --version 2>&1 | sed 1q | grep -i -v debian) >/dev/null 2>&1; then \
+	     install-info --version 2>&1 | sed 1q | grep -i -v debian) >/System/Devices/null 2>&1; then \
 	  list='$(INFO_DEPS)'; \
 	  for file in $$list; do \
 	    relfile=`echo "$$file" | sed 's|^.*/||'`; \
@@ -526,7 +526,7 @@
 	done
 	@$(POST_INSTALL)
 	@if (install-info --version && \
-	     install-info --version 2>&1 | sed 1q | grep -i -v debian) >/dev/null 2>&1; then \
+	     install-info --version 2>&1 | sed 1q | grep -i -v debian) >/System/Devices/null 2>&1; then \
 	  list='$(INFO_DEPS)'; \
 	  for file in $$list; do \
 	    relfile=`echo "$$file" | sed 's|^.*/||'`; \
@@ -575,8 +575,8 @@
 
 asconfig.texi: $(CONFIG).texi
 	rm -f asconfig.texi
-	ln -s $(srcdir)/$(CONFIG).texi ./asconfig.texi >/dev/null 2>&1 \
-	  || ln $(srcdir)/$(CONFIG).texi ./asconfig.texi >/dev/null 2>&1 \
+	ln -s $(srcdir)/$(CONFIG).texi ./asconfig.texi >/System/Devices/null 2>&1 \
+	  || ln $(srcdir)/$(CONFIG).texi ./asconfig.texi >/System/Devices/null 2>&1 \
 	  || cp $(srcdir)/$(CONFIG).texi ./asconfig.texi
 
 gasver.texi: $(srcdir)/../../bfd/configure
diff -urN binutils-2.16.1/gas/doc/as.info binutils-2.16.1-STEP/gas/doc/as.info
--- binutils-2.16.1/gas/doc/as.info	2005-06-13 07:02:26.000000000 +1200
+++ binutils-2.16.1-STEP/gas/doc/as.info	2005-09-02 11:16:20.011276400 +1200
@@ -1,5 +1,5 @@
-This is ../.././gas/doc/as.info, produced by makeinfo version 4.7 from
-../.././gas/doc/as.texinfo.
+This is ../../../binutils-2.16.1/gas/doc/as.info, produced by makeinfo
+version 4.8 from ../../../binutils-2.16.1/gas/doc/as.texinfo.
 
 START-INFO-DIR-ENTRY
 * As: (as).                     The GNU assembler.
@@ -19,472 +19,17953 @@
 Free Documentation License".
 
 
-Indirect:
-as.info-1: 778
-as.info-2: 299493
-as.info-3: 569897
+File: as.info,  Node: Top,  Next: Overview,  Up: (dir)
+
+Using as
+********
+
+This file is a user guide to the GNU assembler `as' version 2.16.1.
+
+   This document is distributed under the terms of the GNU Free
+Documentation License.  A copy of the license is included in the
+section entitled "GNU Free Documentation License".
+
+* Menu:
+
+* Overview::                    Overview
+* Invoking::                    Command-Line Options
+* Syntax::                      Syntax
+* Sections::                    Sections and Relocation
+* Symbols::                     Symbols
+* Expressions::                 Expressions
+* Pseudo Ops::                  Assembler Directives
+* Machine Dependencies::        Machine Dependent Features
+* Reporting Bugs::              Reporting Bugs
+* Acknowledgements::            Who Did What
+* GNU Free Documentation License::  GNU Free Documentation License
+* Index::                       Index
+
+
+File: as.info,  Node: Overview,  Next: Invoking,  Prev: Top,  Up: Top
+
+1 Overview
+**********
+
+Here is a brief summary of how to invoke `as'.  For details, *note
+Command-Line Options: Invoking.
+
+     as [-a[cdhlns][=FILE]] [-alternate] [-D]
+      [-defsym SYM=VAL] [-f] [-g] [-gstabs] [-gstabs+]
+      [-gdwarf-2] [-help] [-I DIR] [-J] [-K] [-L]
+      [-listing-lhs-width=NUM] [-listing-lhs-width2=NUM]
+      [-listing-rhs-width=NUM] [-listing-cont-lines=NUM]
+      [-keep-locals] [-o OBJFILE] [-R] [-statistics] [-v]
+      [-version] [-version] [-W] [-warn] [-fatal-warnings]
+      [-w] [-x] [-Z] [-target-help] [TARGET-OPTIONS]
+      [-|FILES ...]
+
+     _Target Alpha options:_
+        [-mCPU]
+        [-mdebug | -no-mdebug]
+        [-relax] [-g] [-GSIZE]
+        [-F] [-32addr]
+
+     _Target ARC options:_
+        [-marc[5|6|7|8]]
+        [-EB|-EL]
+
+     _Target ARM options:_
+        [-mcpu=PROCESSOR[+EXTENSION...]]
+        [-march=ARCHITECTURE[+EXTENSION...]]
+        [-mfpu=FLOATING-POINT-FORMAT]
+        [-mfloat-abi=ABI]
+        [-meabi=VER]
+        [-mthumb]
+        [-EB|-EL]
+        [-mapcs-32|-mapcs-26|-mapcs-float|
+         -mapcs-reentrant]
+        [-mthumb-interwork] [-k]
+
+     _Target CRIS options:_
+        [-underscore | -no-underscore]
+        [-pic] [-N]
+        [-emulation=criself | -emulation=crisaout]
+        [-march=v0_v10 | -march=v10 | -march=v32 | -march=common_v10_v32]
+
+     _Target D10V options:_
+        [-O]
+
+     _Target D30V options:_
+        [-O|-n|-N]
+
+     _Target i386 options:_
+        [-32|-64] [-n]
+
+     _Target i960 options:_
+        [-ACA|-ACA_A|-ACB|-ACC|-AKA|-AKB|
+         -AKC|-AMC]
+        [-b] [-no-relax]
+
+     _Target IA-64 options:_
+        [-mconstant-gp|-mauto-pic]
+        [-milp32|-milp64|-mlp64|-mp64]
+        [-mle|mbe]
+        [-munwind-check=warning|-munwind-check=error]
+        [-mhint.b=ok|-mhint.b=warning|-mhint.b=error]
+        [-x|-xexplicit] [-xauto] [-xdebug]
+
+     _Target IP2K options:_
+        [-mip2022|-mip2022ext]
+
+     _Target M32R options:_
+        [-m32rx|-[no-]warn-explicit-parallel-conflicts|
+        -W[n]p]
+
+     _Target M680X0 options:_
+        [-l] [-m68000|-m68010|-m68020|...]
+
+     _Target M68HC11 options:_
+        [-m68hc11|-m68hc12|-m68hcs12]
+        [-mshort|-mlong]
+        [-mshort-double|-mlong-double]
+        [-force-long-branchs] [-short-branchs]
+        [-strict-direct-mode] [-print-insn-syntax]
+        [-print-opcodes] [-generate-example]
+
+     _Target MCORE options:_
+        [-jsri2bsr] [-sifilter] [-relax]
+        [-mcpu=[210|340]]
+
+     _Target MIPS options:_
+        [-nocpp] [-EL] [-EB] [-O[OPTIMIZATION LEVEL]]
+        [-g[DEBUG LEVEL]] [-G NUM] [-KPIC] [-call_shared]
+        [-non_shared] [-xgot]
+        [-mabi=ABI] [-32] [-n32] [-64] [-mfp32] [-mgp32]
+        [-march=CPU] [-mtune=CPU] [-mips1] [-mips2]
+        [-mips3] [-mips4] [-mips5] [-mips32] [-mips32r2]
+        [-mips64] [-mips64r2]
+        [-construct-floats] [-no-construct-floats]
+        [-trap] [-no-break] [-break] [-no-trap]
+        [-mfix7000] [-mno-fix7000]
+        [-mips16] [-no-mips16]
+        [-mips3d] [-no-mips3d]
+        [-mdmx] [-no-mdmx]
+        [-mdebug] [-no-mdebug]
+        [-mpdr] [-mno-pdr]
+
+     _Target MMIX options:_
+        [-fixed-special-register-names] [-globalize-symbols]
+        [-gnu-syntax] [-relax] [-no-predefined-symbols]
+        [-no-expand] [-no-merge-gregs] [-x]
+        [-linker-allocated-gregs]
+
+     _Target PDP11 options:_
+        [-mpic|-mno-pic] [-mall] [-mno-extensions]
+        [-mEXTENSION|-mno-EXTENSION]
+        [-mCPU] [-mMACHINE]
+
+     _Target picoJava options:_
+        [-mb|-me]
+
+     _Target PowerPC options:_
+        [-mpwrx|-mpwr2|-mpwr|-m601|-mppc|-mppc32|-m603|-m604|
+         -m403|-m405|-mppc64|-m620|-mppc64bridge|-mbooke|
+         -mbooke32|-mbooke64]
+        [-mcom|-many|-maltivec] [-memb]
+        [-mregnames|-mno-regnames]
+        [-mrelocatable|-mrelocatable-lib]
+        [-mlittle|-mlittle-endian|-mbig|-mbig-endian]
+        [-msolaris|-mno-solaris]
+
+     _Target SPARC options:_
+        [-Av6|-Av7|-Av8|-Asparclet|-Asparclite
+         -Av8plus|-Av8plusa|-Av9|-Av9a]
+        [-xarch=v8plus|-xarch=v8plusa] [-bump]
+        [-32|-64]
+
+     _Target TIC54X options:_
+      [-mcpu=54[123589]|-mcpu=54[56]lp] [-mfar-mode|-mf]
+      [-merrors-to-file <FILENAME>|-me <FILENAME>]
+
+     _Target Xtensa options:_
+      [-[no-]text-section-literals] [-[no-]absolute-literals]
+      [-[no-]target-align] [-[no-]longcalls]
+      [-[no-]transform]
+      [-rename-section OLDNAME=NEWNAME]
+
+`-a[cdhlmns]'
+     Turn on listings, in any of a variety of ways:
+
+    `-ac'
+          omit false conditionals
+
+    `-ad'
+          omit debugging directives
+
+    `-ah'
+          include high-level source
+
+    `-al'
+          include assembly
+
+    `-am'
+          include macro expansions
+
+    `-an'
+          omit forms processing
+
+    `-as'
+          include symbols
+
+    `=file'
+          set the name of the listing file
+
+     You may combine these options; for example, use `-aln' for assembly
+     listing without forms processing.  The `=file' option, if used,
+     must be the last one.  By itself, `-a' defaults to `-ahls'.
+
+`--alternate'
+     Begin in alternate macro mode, see *Note `.altmacro': Altmacro.
+
+`-D'
+     Ignored.  This option is accepted for script compatibility with
+     calls to other assemblers.
+
+`--defsym SYM=VALUE'
+     Define the symbol SYM to be VALUE before assembling the input file.
+     VALUE must be an integer constant.  As in C, a leading `0x'
+     indicates a hexadecimal value, and a leading `0' indicates an
+     octal value.
+
+`-f'
+     "fast"--skip whitespace and comment preprocessing (assume source is
+     compiler output).
+
+`-g'
+`--gen-debug'
+     Generate debugging information for each assembler source line
+     using whichever debug format is preferred by the target.  This
+     currently means either STABS, ECOFF or DWARF2.
+
+`--gstabs'
+     Generate stabs debugging information for each assembler line.  This
+     may help debugging assembler code, if the debugger can handle it.
+
+`--gstabs+'
+     Generate stabs debugging information for each assembler line, with
+     GNU extensions that probably only gdb can handle, and that could
+     make other debuggers crash or refuse to read your program.  This
+     may help debugging assembler code.  Currently the only GNU
+     extension is the location of the current working directory at
+     assembling time.
+
+`--gdwarf-2'
+     Generate DWARF2 debugging information for each assembler line.
+     This may help debugging assembler code, if the debugger can handle
+     it.  Note--this option is only supported by some targets, not all
+     of them.
+
+`--help'
+     Print a summary of the command line options and exit.
+
+`--target-help'
+     Print a summary of all target specific options and exit.
+
+`-I DIR'
+     Add directory DIR to the search list for `.include' directives.
+
+`-J'
+     Don't warn about signed overflow.
+
+`-K'
+     Issue warnings when difference tables altered for long
+     displacements.
+
+`-L'
+`--keep-locals'
+     Keep (in the symbol table) local symbols.  On traditional a.out
+     systems these start with `L', but different systems have different
+     local label prefixes.
+
+`--listing-lhs-width=NUMBER'
+     Set the maximum width, in words, of the output data column for an
+     assembler listing to NUMBER.
+
+`--listing-lhs-width2=NUMBER'
+     Set the maximum width, in words, of the output data column for
+     continuation lines in an assembler listing to NUMBER.
+
+`--listing-rhs-width=NUMBER'
+     Set the maximum width of an input source line, as displayed in a
+     listing, to NUMBER bytes.
+
+`--listing-cont-lines=NUMBER'
+     Set the maximum number of lines printed in a listing for a single
+     line of input to NUMBER + 1.
+
+`-o OBJFILE'
+     Name the object-file output from `as' OBJFILE.
+
+`-R'
+     Fold the data section into the text section.
+
+`--statistics'
+     Print the maximum space (in bytes) and total time (in seconds)
+     used by assembly.
+
+`--strip-local-absolute'
+     Remove local absolute symbols from the outgoing symbol table.
+
+`-v'
+`-version'
+     Print the `as' version.
+
+`--version'
+     Print the `as' version and exit.
+
+`-W'
+`--no-warn'
+     Suppress warning messages.
+
+`--fatal-warnings'
+     Treat warnings as errors.
+
+`--warn'
+     Don't suppress warning messages or treat them as errors.
+
+`-w'
+     Ignored.
+
+`-x'
+     Ignored.
+
+`-Z'
+     Generate an object file even after errors.
+
+`-- | FILES ...'
+     Standard input, or source files to assemble.
+
+
+   The following options are available when as is configured for an ARC
+processor.
+
+`-marc[5|6|7|8]'
+     This option selects the core processor variant.
+
+`-EB | -EL'
+     Select either big-endian (-EB) or little-endian (-EL) output.
+
+   The following options are available when as is configured for the ARM
+processor family.
+
+`-mcpu=PROCESSOR[+EXTENSION...]'
+     Specify which ARM processor variant is the target.
+
+`-march=ARCHITECTURE[+EXTENSION...]'
+     Specify which ARM architecture variant is used by the target.
+
+`-mfpu=FLOATING-POINT-FORMAT'
+     Select which Floating Point architecture is the target.
+
+`-mfloat-abi=ABI'
+     Select which floating point ABI is in use.
+
+`-mthumb'
+     Enable Thumb only instruction decoding.
+
+`-mapcs-32 | -mapcs-26 | -mapcs-float | -mapcs-reentrant'
+     Select which procedure calling convention is in use.
+
+`-EB | -EL'
+     Select either big-endian (-EB) or little-endian (-EL) output.
+
+`-mthumb-interwork'
+     Specify that the code has been generated with interworking between
+     Thumb and ARM code in mind.
+
+`-k'
+     Specify that PIC code has been generated.
+
+   See the info pages for documentation of the CRIS-specific options.
+
+   The following options are available when as is configured for a D10V
+processor.
+`-O'
+     Optimize output by parallelizing instructions.
+
+   The following options are available when as is configured for a D30V
+processor.
+`-O'
+     Optimize output by parallelizing instructions.
+
+`-n'
+     Warn when nops are generated.
+
+`-N'
+     Warn when a nop after a 32-bit multiply instruction is generated.
+
+   The following options are available when as is configured for the
+Intel 80960 processor.
+
+`-ACA | -ACA_A | -ACB | -ACC | -AKA | -AKB | -AKC | -AMC'
+     Specify which variant of the 960 architecture is the target.
+
+`-b'
+     Add code to collect statistics about branches taken.
+
+`-no-relax'
+     Do not alter compare-and-branch instructions for long
+     displacements; error if necessary.
+
+
+   The following options are available when as is configured for the
+Ubicom IP2K series.
+
+`-mip2022ext'
+     Specifies that the extended IP2022 instructions are allowed.
+
+`-mip2022'
+     Restores the default behaviour, which restricts the permitted
+     instructions to just the basic IP2022 ones.
+
+
+   The following options are available when as is configured for the
+Renesas M32R (formerly Mitsubishi M32R) series.
+
+`--m32rx'
+     Specify which processor in the M32R family is the target.  The
+     default is normally the M32R, but this option changes it to the
+     M32RX.
+
+`--warn-explicit-parallel-conflicts or --Wp'
+     Produce warning messages when questionable parallel constructs are
+     encountered.
+
+`--no-warn-explicit-parallel-conflicts or --Wnp'
+     Do not produce warning messages when questionable parallel
+     constructs are encountered.
+
+
+   The following options are available when as is configured for the
+Motorola 68000 series.
+
+`-l'
+     Shorten references to undefined symbols, to one word instead of
+     two.
+
+`-m68000 | -m68008 | -m68010 | -m68020 | -m68030'
+`| -m68040 | -m68060 | -m68302 | -m68331 | -m68332'
+`| -m68333 | -m68340 | -mcpu32 | -m5200'
+     Specify what processor in the 68000 family is the target.  The
+     default is normally the 68020, but this can be changed at
+     configuration time.
+
+`-m68881 | -m68882 | -mno-68881 | -mno-68882'
+     The target machine does (or does not) have a floating-point
+     coprocessor.  The default is to assume a coprocessor for 68020,
+     68030, and cpu32.  Although the basic 68000 is not compatible with
+     the 68881, a combination of the two can be specified, since it's
+     possible to do emulation of the coprocessor instructions with the
+     main processor.
+
+`-m68851 | -mno-68851'
+     The target machine does (or does not) have a memory-management
+     unit coprocessor.  The default is to assume an MMU for 68020 and
+     up.
+
+
+   For details about the PDP-11 machine dependent features options, see
+*Note PDP-11-Options::.
+
+`-mpic | -mno-pic'
+     Generate position-independent (or position-dependent) code.  The
+     default is `-mpic'.
+
+`-mall'
+`-mall-extensions'
+     Enable all instruction set extensions.  This is the default.
+
+`-mno-extensions'
+     Disable all instruction set extensions.
+
+`-mEXTENSION | -mno-EXTENSION'
+     Enable (or disable) a particular instruction set extension.
+
+`-mCPU'
+     Enable the instruction set extensions supported by a particular
+     CPU, and disable all other extensions.
+
+`-mMACHINE'
+     Enable the instruction set extensions supported by a particular
+     machine model, and disable all other extensions.
+
+   The following options are available when as is configured for a
+picoJava processor.
+
+`-mb'
+     Generate "big endian" format output.
+
+`-ml'
+     Generate "little endian" format output.
+
+
+   The following options are available when as is configured for the
+Motorola 68HC11 or 68HC12 series.
+
+`-m68hc11 | -m68hc12 | -m68hcs12'
+     Specify what processor is the target.  The default is defined by
+     the configuration option when building the assembler.
+
+`-mshort'
+     Specify to use the 16-bit integer ABI.
+
+`-mlong'
+     Specify to use the 32-bit integer ABI.
+
+`-mshort-double'
+     Specify to use the 32-bit double ABI.
+
+`-mlong-double'
+     Specify to use the 64-bit double ABI.
+
+`--force-long-branchs'
+     Relative branches are turned into absolute ones. This concerns
+     conditional branches, unconditional branches and branches to a sub
+     routine.
+
+`-S | --short-branchs'
+     Do not turn relative branchs into absolute ones when the offset is
+     out of range.
+
+`--strict-direct-mode'
+     Do not turn the direct addressing mode into extended addressing
+     mode when the instruction does not support direct addressing mode.
+
+`--print-insn-syntax'
+     Print the syntax of instruction in case of error.
+
+`--print-opcodes'
+     print the list of instructions with syntax and then exit.
+
+`--generate-example'
+     print an example of instruction for each possible instruction and
+     then exit.  This option is only useful for testing `as'.
+
+
+   The following options are available when `as' is configured for the
+SPARC architecture:
+
+`-Av6 | -Av7 | -Av8 | -Asparclet | -Asparclite'
+`-Av8plus | -Av8plusa | -Av9 | -Av9a'
+     Explicitly select a variant of the SPARC architecture.
+
+     `-Av8plus' and `-Av8plusa' select a 32 bit environment.  `-Av9'
+     and `-Av9a' select a 64 bit environment.
+
+     `-Av8plusa' and `-Av9a' enable the SPARC V9 instruction set with
+     UltraSPARC extensions.
+
+`-xarch=v8plus | -xarch=v8plusa'
+     For compatibility with the Solaris v9 assembler.  These options are
+     equivalent to -Av8plus and -Av8plusa, respectively.
+
+`-bump'
+     Warn when the assembler switches to another architecture.
+
+   The following options are available when as is configured for the
+'c54x architecture.
+
+`-mfar-mode'
+     Enable extended addressing mode.  All addresses and relocations
+     will assume extended addressing (usually 23 bits).
+
+`-mcpu=CPU_VERSION'
+     Sets the CPU version being compiled for.
+
+`-merrors-to-file FILENAME'
+     Redirect error output to a file, for broken systems which don't
+     support such behaviour in the shell.
+
+   The following options are available when as is configured for a MIPS
+processor.
+
+`-G NUM'
+     This option sets the largest size of an object that can be
+     referenced implicitly with the `gp' register.  It is only accepted
+     for targets that use ECOFF format, such as a DECstation running
+     Ultrix.  The default value is 8.
+
+`-EB'
+     Generate "big endian" format output.
+
+`-EL'
+     Generate "little endian" format output.
+
+`-mips1'
+`-mips2'
+`-mips3'
+`-mips4'
+`-mips5'
+`-mips32'
+`-mips32r2'
+`-mips64'
+`-mips64r2'
+     Generate code for a particular MIPS Instruction Set Architecture
+     level.  `-mips1' is an alias for `-march=r3000', `-mips2' is an
+     alias for `-march=r6000', `-mips3' is an alias for `-march=r4000'
+     and `-mips4' is an alias for `-march=r8000'.  `-mips5', `-mips32',
+     `-mips32r2', `-mips64', and `-mips64r2' correspond to generic
+     `MIPS V', `MIPS32', `MIPS32 Release 2', `MIPS64', and `MIPS64
+     Release 2' ISA processors, respectively.
+
+`-march=CPU'
+     Generate code for a particular MIPS cpu.
+
+`-mtune=CPU'
+     Schedule and tune for a particular MIPS cpu.
+
+`-mfix7000'
+`-mno-fix7000'
+     Cause nops to be inserted if the read of the destination register
+     of an mfhi or mflo instruction occurs in the following two
+     instructions.
+
+`-mdebug'
+`-no-mdebug'
+     Cause stabs-style debugging output to go into an ECOFF-style
+     .mdebug section instead of the standard ELF .stabs sections.
+
+`-mpdr'
+`-mno-pdr'
+     Control generation of `.pdr' sections.
+
+`-mgp32'
+`-mfp32'
+     The register sizes are normally inferred from the ISA and ABI, but
+     these flags force a certain group of registers to be treated as 32
+     bits wide at all times.  `-mgp32' controls the size of
+     general-purpose registers and `-mfp32' controls the size of
+     floating-point registers.
+
+`-mips16'
+`-no-mips16'
+     Generate code for the MIPS 16 processor.  This is equivalent to
+     putting `.set mips16' at the start of the assembly file.
+     `-no-mips16' turns off this option.
+
+`-mips3d'
+`-no-mips3d'
+     Generate code for the MIPS-3D Application Specific Extension.
+     This tells the assembler to accept MIPS-3D instructions.
+     `-no-mips3d' turns off this option.
+
+`-mdmx'
+`-no-mdmx'
+     Generate code for the MDMX Application Specific Extension.  This
+     tells the assembler to accept MDMX instructions.  `-no-mdmx' turns
+     off this option.
+
+`--construct-floats'
+`--no-construct-floats'
+     The `--no-construct-floats' option disables the construction of
+     double width floating point constants by loading the two halves of
+     the value into the two single width floating point registers that
+     make up the double width register.  By default
+     `--construct-floats' is selected, allowing construction of these
+     floating point constants.
+
+`--emulation=NAME'
+     This option causes `as' to emulate `as' configured for some other
+     target, in all respects, including output format (choosing between
+     ELF and ECOFF only), handling of pseudo-opcodes which may generate
+     debugging information or store symbol table information, and
+     default endianness.  The available configuration names are:
+     `mipsecoff', `mipself', `mipslecoff', `mipsbecoff', `mipslelf',
+     `mipsbelf'.  The first two do not alter the default endianness
+     from that of the primary target for which the assembler was
+     configured; the others change the default to little- or big-endian
+     as indicated by the `b' or `l' in the name.  Using `-EB' or `-EL'
+     will override the endianness selection in any case.
+
+     This option is currently supported only when the primary target
+     `as' is configured for is a MIPS ELF or ECOFF target.
+     Furthermore, the primary target or others specified with
+     `--enable-targets=...' at configuration time must include support
+     for the other format, if both are to be available.  For example,
+     the Irix 5 configuration includes support for both.
+
+     Eventually, this option will support more configurations, with more
+     fine-grained control over the assembler's behavior, and will be
+     supported for more processors.
+
+`-nocpp'
+     `as' ignores this option.  It is accepted for compatibility with
+     the native tools.
+
+`--trap'
+`--no-trap'
+`--break'
+`--no-break'
+     Control how to deal with multiplication overflow and division by
+     zero.  `--trap' or `--no-break' (which are synonyms) take a trap
+     exception (and only work for Instruction Set Architecture level 2
+     and higher); `--break' or `--no-trap' (also synonyms, and the
+     default) take a break exception.
+
+`-n'
+     When this option is used, `as' will issue a warning every time it
+     generates a nop instruction from a macro.
+
+   The following options are available when as is configured for an
+MCore processor.
+
+`-jsri2bsr'
+`-nojsri2bsr'
+     Enable or disable the JSRI to BSR transformation.  By default this
+     is enabled.  The command line option `-nojsri2bsr' can be used to
+     disable it.
+
+`-sifilter'
+`-nosifilter'
+     Enable or disable the silicon filter behaviour.  By default this
+     is disabled.  The default can be overridden by the `-sifilter'
+     command line option.
+
+`-relax'
+     Alter jump instructions for long displacements.
+
+`-mcpu=[210|340]'
+     Select the cpu type on the target hardware.  This controls which
+     instructions can be assembled.
+
+`-EB'
+     Assemble for a big endian target.
+
+`-EL'
+     Assemble for a little endian target.
+
+
+   See the info pages for documentation of the MMIX-specific options.
+
+   The following options are available when as is configured for an
+Xtensa processor.
+
+`--text-section-literals | --no-text-section-literals'
+     With `--text-section-literals', literal pools are interspersed in
+     the text section.  The default is `--no-text-section-literals',
+     which places literals in a separate section in the output file.
+     These options only affect literals referenced via PC-relative
+     `L32R' instructions; literals for absolute mode `L32R'
+     instructions are handled separately.
+
+`--absolute-literals | --no-absolute-literals'
+     Indicate to the assembler whether `L32R' instructions use absolute
+     or PC-relative addressing.  The default is to assume absolute
+     addressing if the Xtensa processor includes the absolute `L32R'
+     addressing option.  Otherwise, only the PC-relative `L32R' mode
+     can be used.
+
+`--target-align | --no-target-align'
+     Enable or disable automatic alignment to reduce branch penalties
+     at the expense of some code density.  The default is
+     `--target-align'.
+
+`--longcalls | --no-longcalls'
+     Enable or disable transformation of call instructions to allow
+     calls across a greater range of addresses.  The default is
+     `--no-longcalls'.
+
+`--transform | --no-transform'
+     Enable or disable all assembler transformations of Xtensa
+     instructions.  The default is `--transform'; `--no-transform'
+     should be used only in the rare cases when the instructions must
+     be exactly as specified in the assembly source.
+
+* Menu:
+
+* Manual::                      Structure of this Manual
+* GNU Assembler::               The GNU Assembler
+* Object Formats::              Object File Formats
+* Command Line::                Command Line
+* Input Files::                 Input Files
+* Object::                      Output (Object) File
+* Errors::                      Error and Warning Messages
+
+
+File: as.info,  Node: Manual,  Next: GNU Assembler,  Up: Overview
+
+1.1 Structure of this Manual
+============================
+
+This manual is intended to describe what you need to know to use GNU
+`as'.  We cover the syntax expected in source files, including notation
+for symbols, constants, and expressions; the directives that `as'
+understands; and of course how to invoke `as'.
+
+   This manual also describes some of the machine-dependent features of
+various flavors of the assembler.
+
+   On the other hand, this manual is _not_ intended as an introduction
+to programming in assembly language--let alone programming in general!
+In a similar vein, we make no attempt to introduce the machine
+architecture; we do _not_ describe the instruction set, standard
+mnemonics, registers or addressing modes that are standard to a
+particular architecture.  You may want to consult the manufacturer's
+machine architecture manual for this information.
+
+
+File: as.info,  Node: GNU Assembler,  Next: Object Formats,  Prev: Manual,  Up: Overview
+
+1.2 The GNU Assembler
+=====================
+
+GNU `as' is really a family of assemblers.  If you use (or have used)
+the GNU assembler on one architecture, you should find a fairly similar
+environment when you use it on another architecture.  Each version has
+much in common with the others, including object file formats, most
+assembler directives (often called "pseudo-ops") and assembler syntax.
+
+   `as' is primarily intended to assemble the output of the GNU C
+compiler `gcc' for use by the linker `ld'.  Nevertheless, we've tried
+to make `as' assemble correctly everything that other assemblers for
+the same machine would assemble.  Any exceptions are documented
+explicitly (*note Machine Dependencies::).  This doesn't mean `as'
+always uses the same syntax as another assembler for the same
+architecture; for example, we know of several incompatible versions of
+680x0 assembly language syntax.
+
+   Unlike older assemblers, `as' is designed to assemble a source
+program in one pass of the source file.  This has a subtle impact on the
+`.org' directive (*note `.org': Org.).
+
+
+File: as.info,  Node: Object Formats,  Next: Command Line,  Prev: GNU Assembler,  Up: Overview
+
+1.3 Object File Formats
+=======================
+
+The GNU assembler can be configured to produce several alternative
+object file formats.  For the most part, this does not affect how you
+write assembly language programs; but directives for debugging symbols
+are typically different in different file formats.  *Note Symbol
+Attributes: Symbol Attributes.
+
+
+File: as.info,  Node: Command Line,  Next: Input Files,  Prev: Object Formats,  Up: Overview
+
+1.4 Command Line
+================
+
+After the program name `as', the command line may contain options and
+file names.  Options may appear in any order, and may be before, after,
+or between file names.  The order of file names is significant.
+
+   `--' (two hyphens) by itself names the standard input file
+explicitly, as one of the files for `as' to assemble.
+
+   Except for `--' any command line argument that begins with a hyphen
+(`-') is an option.  Each option changes the behavior of `as'.  No
+option changes the way another option works.  An option is a `-'
+followed by one or more letters; the case of the letter is important.
+All options are optional.
+
+   Some options expect exactly one file name to follow them.  The file
+name may either immediately follow the option's letter (compatible with
+older assemblers) or it may be the next command argument (GNU
+standard).  These two command lines are equivalent:
+
+     as -o my-object-file.o mumble.s
+     as -omy-object-file.o mumble.s
+
+
+File: as.info,  Node: Input Files,  Next: Object,  Prev: Command Line,  Up: Overview
+
+1.5 Input Files
+===============
+
+We use the phrase "source program", abbreviated "source", to describe
+the program input to one run of `as'.  The program may be in one or
+more files; how the source is partitioned into files doesn't change the
+meaning of the source.
+
+   The source program is a concatenation of the text in all the files,
+in the order specified.
+
+   Each time you run `as' it assembles exactly one source program.  The
+source program is made up of one or more files.  (The standard input is
+also a file.)
+
+   You give `as' a command line that has zero or more input file names.
+The input files are read (from left file name to right).  A command
+line argument (in any position) that has no special meaning is taken to
+be an input file name.
+
+   If you give `as' no file names it attempts to read one input file
+from the `as' standard input, which is normally your terminal.  You may
+have to type <ctl-D> to tell `as' there is no more program to assemble.
+
+   Use `--' if you need to explicitly name the standard input file in
+your command line.
+
+   If the source is empty, `as' produces a small, empty object file.
+
+Filenames and Line-numbers
+--------------------------
+
+There are two ways of locating a line in the input file (or files) and
+either may be used in reporting error messages.  One way refers to a
+line number in a physical file; the other refers to a line number in a
+"logical" file.  *Note Error and Warning Messages: Errors.
+
+   "Physical files" are those files named in the command line given to
+`as'.
+
+   "Logical files" are simply names declared explicitly by assembler
+directives; they bear no relation to physical files.  Logical file
+names help error messages reflect the original source file, when `as'
+source is itself synthesized from other files.  `as' understands the
+`#' directives emitted by the `gcc' preprocessor.  See also *Note
+`.file': File.
+
+
+File: as.info,  Node: Object,  Next: Errors,  Prev: Input Files,  Up: Overview
+
+1.6 Output (Object) File
+========================
+
+Every time you run `as' it produces an output file, which is your
+assembly language program translated into numbers.  This file is the
+object file.  Its default name is `a.out', or `b.out' when `as' is
+configured for the Intel 80960.  You can give it another name by using
+the `-o' option.  Conventionally, object file names end with `.o'.  The
+default name is used for historical reasons: older assemblers were
+capable of assembling self-contained programs directly into a runnable
+program.  (For some formats, this isn't currently possible, but it can
+be done for the `a.out' format.)
+
+   The object file is meant for input to the linker `ld'.  It contains
+assembled program code, information to help `ld' integrate the
+assembled program into a runnable file, and (optionally) symbolic
+information for the debugger.
+
+
+File: as.info,  Node: Errors,  Prev: Object,  Up: Overview
+
+1.7 Error and Warning Messages
+==============================
+
+`as' may write warnings and error messages to the standard error file
+(usually your terminal).  This should not happen when  a compiler runs
+`as' automatically.  Warnings report an assumption made so that `as'
+could keep assembling a flawed program; errors report a grave problem
+that stops the assembly.
+
+   Warning messages have the format
+
+     file_name:NNN:Warning Message Text
+
+(where NNN is a line number).  If a logical file name has been given
+(*note `.file': File.) it is used for the filename, otherwise the name
+of the current input file is used.  If a logical line number was given
+(*note `.line': Line.)  then it is used to calculate the number printed,
+otherwise the actual line in the current source file is printed.  The
+message text is intended to be self explanatory (in the grand Unix
+tradition).
+
+   Error messages have the format
+     file_name:NNN:FATAL:Error Message Text
+   The file name and line number are derived as for warning messages.
+The actual message text may be rather less explanatory because many of
+them aren't supposed to happen.
+
+
+File: as.info,  Node: Invoking,  Next: Syntax,  Prev: Overview,  Up: Top
+
+2 Command-Line Options
+**********************
+
+This chapter describes command-line options available in _all_ versions
+of the GNU assembler; *note Machine Dependencies::, for options specific
+to particular machine architectures.
+
+   If you are invoking `as' via the GNU C compiler, you can use the
+`-Wa' option to pass arguments through to the assembler.  The assembler
+arguments must be separated from each other (and the `-Wa') by commas.
+For example:
+
+     gcc -c -g -O -Wa,-alh,-L file.c
+
+This passes two options to the assembler: `-alh' (emit a listing to
+standard output with high-level and assembly source) and `-L' (retain
+local symbols in the symbol table).
+
+   Usually you do not need to use this `-Wa' mechanism, since many
+compiler command-line options are automatically passed to the assembler
+by the compiler.  (You can call the GNU compiler driver with the `-v'
+option to see precisely what options it passes to each compilation
+pass, including the assembler.)
+
+* Menu:
+
+* a::             -a[cdhlns] enable listings
+* alternate::     --alternate enable alternate macro syntax
+* D::             -D for compatibility
+* f::             -f to work faster
+* I::             -I for .include search path
+
+* K::             -K for difference tables
+
+* L::             -L to retain local labels
+* listing::       --listing-XXX to configure listing output
+* M::		  -M or --mri to assemble in MRI compatibility mode
+* MD::            --MD for dependency tracking
+* o::             -o to name the object file
+* R::             -R to join data and text sections
+* statistics::    --statistics to see statistics about assembly
+* traditional-format:: --traditional-format for compatible output
+* v::             -v to announce version
+* W::             -W, --no-warn, --warn, --fatal-warnings to control warnings
+* Z::             -Z to make object file even after errors
+
+
+File: as.info,  Node: a,  Next: alternate,  Up: Invoking
+
+2.1 Enable Listings: `-a[cdhlns]'
+=================================
+
+These options enable listing output from the assembler.  By itself,
+`-a' requests high-level, assembly, and symbols listing.  You can use
+other letters to select specific options for the list: `-ah' requests a
+high-level language listing, `-al' requests an output-program assembly
+listing, and `-as' requests a symbol table listing.  High-level
+listings require that a compiler debugging option like `-g' be used,
+and that assembly listings (`-al') be requested also.
+
+   Use the `-ac' option to omit false conditionals from a listing.  Any
+lines which are not assembled because of a false `.if' (or `.ifdef', or
+any other conditional), or a true `.if' followed by an `.else', will be
+omitted from the listing.
+
+   Use the `-ad' option to omit debugging directives from the listing.
+
+   Once you have specified one of these options, you can further control
+listing output and its appearance using the directives `.list',
+`.nolist', `.psize', `.eject', `.title', and `.sbttl'.  The `-an'
+option turns off all forms processing.  If you do not request listing
+output with one of the `-a' options, the listing-control directives
+have no effect.
+
+   The letters after `-a' may be combined into one option, _e.g._,
+`-aln'.
+
+   Note if the assembler source is coming from the standard input (eg
+because it is being created by `gcc' and the `-pipe' command line switch
+is being used) then the listing will not contain any comments or
+preprocessor directives.  This is because the listing code buffers
+input source lines from stdin only after they have been preprocessed by
+the assembler.  This reduces memory usage and makes the code more
+efficient.
+
+
+File: as.info,  Node: alternate,  Next: D,  Prev: a,  Up: Invoking
+
+2.2 `--alternate'
+=================
+
+Begin in alternate macro mode, see *Note `.altmacro': Altmacro.
+
+
+File: as.info,  Node: D,  Next: f,  Prev: alternate,  Up: Invoking
+
+2.3 `-D'
+========
+
+This option has no effect whatsoever, but it is accepted to make it more
+likely that scripts written for other assemblers also work with `as'.
+
+
+File: as.info,  Node: f,  Next: I,  Prev: D,  Up: Invoking
+
+2.4 Work Faster: `-f'
+=====================
+
+`-f' should only be used when assembling programs written by a
+(trusted) compiler.  `-f' stops the assembler from doing whitespace and
+comment preprocessing on the input file(s) before assembling them.
+*Note Preprocessing: Preprocessing.
+
+     _Warning:_ if you use `-f' when the files actually need to be
+     preprocessed (if they contain comments, for example), `as' does
+     not work correctly.
+
+
+File: as.info,  Node: I,  Next: K,  Prev: f,  Up: Invoking
+
+2.5 `.include' Search Path: `-I' PATH
+=====================================
+
+Use this option to add a PATH to the list of directories `as' searches
+for files specified in `.include' directives (*note `.include':
+Include.).  You may use `-I' as many times as necessary to include a
+variety of paths.  The current working directory is always searched
+first; after that, `as' searches any `-I' directories in the same order
+as they were specified (left to right) on the command line.
+
+
+File: as.info,  Node: K,  Next: L,  Prev: I,  Up: Invoking
+
+2.6 Difference Tables: `-K'
+===========================
+
+`as' sometimes alters the code emitted for directives of the form
+`.word SYM1-SYM2'; *note `.word': Word.  You can use the `-K' option if
+you want a warning issued when this is done.
+
+
+File: as.info,  Node: L,  Next: listing,  Prev: K,  Up: Invoking
+
+2.7 Include Local Labels: `-L'
+==============================
+
+Labels beginning with `L' (upper case only) are called "local labels".
+*Note Symbol Names::.  Normally you do not see such labels when
+debugging, because they are intended for the use of programs (like
+compilers) that compose assembler programs, not for your notice.
+Normally both `as' and `ld' discard such labels, so you do not normally
+debug with them.
+
+   This option tells `as' to retain those `L...' symbols in the object
+file.  Usually if you do this you also tell the linker `ld' to preserve
+symbols whose names begin with `L'.
+
+   By default, a local label is any label beginning with `L', but each
+target is allowed to redefine the local label prefix.  On the HPPA
+local labels begin with `L$'.
+
+
+File: as.info,  Node: listing,  Next: M,  Prev: L,  Up: Invoking
+
+2.8 Configuring listing output: `--listing'
+===========================================
+
+The listing feature of the assembler can be enabled via the command
+line switch `-a' (*note a::).  This feature combines the input source
+file(s) with a hex dump of the corresponding locations in the output
+object file, and displays them as a listing file.  The format of this
+listing can be controlled by pseudo ops inside the assembler source
+(*note List:: *note Title:: *note Sbttl:: *note Psize:: *note Eject::)
+and also by the following switches:
+
+`--listing-lhs-width=`number''
+     Sets the maximum width, in words, of the first line of the hex
+     byte dump.  This dump appears on the left hand side of the listing
+     output.
+
+`--listing-lhs-width2=`number''
+     Sets the maximum width, in words, of any further lines of the hex
+     byte dump for a given input source line.  If this value is not
+     specified, it defaults to being the same as the value specified
+     for `--listing-lhs-width'.  If neither switch is used the default
+     is to one.
+
+`--listing-rhs-width=`number''
+     Sets the maximum width, in characters, of the source line that is
+     displayed alongside the hex dump.  The default value for this
+     parameter is 100.  The source line is displayed on the right hand
+     side of the listing output.
+
+`--listing-cont-lines=`number''
+     Sets the maximum number of continuation lines of hex dump that
+     will be displayed for a given single line of source input.  The
+     default value is 4.
+
+
+File: as.info,  Node: M,  Next: MD,  Prev: listing,  Up: Invoking
+
+2.9 Assemble in MRI Compatibility Mode: `-M'
+============================================
+
+The `-M' or `--mri' option selects MRI compatibility mode.  This
+changes the syntax and pseudo-op handling of `as' to make it compatible
+with the `ASM68K' or the `ASM960' (depending upon the configured
+target) assembler from Microtec Research.  The exact nature of the MRI
+syntax will not be documented here; see the MRI manuals for more
+information.  Note in particular that the handling of macros and macro
+arguments is somewhat different.  The purpose of this option is to
+permit assembling existing MRI assembler code using `as'.
+
+   The MRI compatibility is not complete.  Certain operations of the
+MRI assembler depend upon its object file format, and can not be
+supported using other object file formats.  Supporting these would
+require enhancing each object file format individually.  These are:
+
+   * global symbols in common section
+
+     The m68k MRI assembler supports common sections which are merged
+     by the linker.  Other object file formats do not support this.
+     `as' handles common sections by treating them as a single common
+     symbol.  It permits local symbols to be defined within a common
+     section, but it can not support global symbols, since it has no
+     way to describe them.
+
+   * complex relocations
+
+     The MRI assemblers support relocations against a negated section
+     address, and relocations which combine the start addresses of two
+     or more sections.  These are not support by other object file
+     formats.
+
+   * `END' pseudo-op specifying start address
+
+     The MRI `END' pseudo-op permits the specification of a start
+     address.  This is not supported by other object file formats.  The
+     start address may instead be specified using the `-e' option to
+     the linker, or in a linker script.
+
+   * `IDNT', `.ident' and `NAME' pseudo-ops
+
+     The MRI `IDNT', `.ident' and `NAME' pseudo-ops assign a module
+     name to the output file.  This is not supported by other object
+     file formats.
+
+   * `ORG' pseudo-op
+
+     The m68k MRI `ORG' pseudo-op begins an absolute section at a given
+     address.  This differs from the usual `as' `.org' pseudo-op, which
+     changes the location within the current section.  Absolute
+     sections are not supported by other object file formats.  The
+     address of a section may be assigned within a linker script.
+
+   There are some other features of the MRI assembler which are not
+supported by `as', typically either because they are difficult or
+because they seem of little consequence.  Some of these may be
+supported in future releases.
+
+   * EBCDIC strings
+
+     EBCDIC strings are not supported.
+
+   * packed binary coded decimal
+
+     Packed binary coded decimal is not supported.  This means that the
+     `DC.P' and `DCB.P' pseudo-ops are not supported.
+
+   * `FEQU' pseudo-op
+
+     The m68k `FEQU' pseudo-op is not supported.
+
+   * `NOOBJ' pseudo-op
+
+     The m68k `NOOBJ' pseudo-op is not supported.
+
+   * `OPT' branch control options
+
+     The m68k `OPT' branch control options--`B', `BRS', `BRB', `BRL',
+     and `BRW'--are ignored.  `as' automatically relaxes all branches,
+     whether forward or backward, to an appropriate size, so these
+     options serve no purpose.
+
+   * `OPT' list control options
+
+     The following m68k `OPT' list control options are ignored: `C',
+     `CEX', `CL', `CRE', `E', `G', `I', `M', `MEX', `MC', `MD', `X'.
+
+   * other `OPT' options
+
+     The following m68k `OPT' options are ignored: `NEST', `O', `OLD',
+     `OP', `P', `PCO', `PCR', `PCS', `R'.
+
+   * `OPT' `D' option is default
+
+     The m68k `OPT' `D' option is the default, unlike the MRI assembler.
+     `OPT NOD' may be used to turn it off.
+
+   * `XREF' pseudo-op.
+
+     The m68k `XREF' pseudo-op is ignored.
+
+   * `.debug' pseudo-op
+
+     The i960 `.debug' pseudo-op is not supported.
+
+   * `.extended' pseudo-op
+
+     The i960 `.extended' pseudo-op is not supported.
+
+   * `.list' pseudo-op.
+
+     The various options of the i960 `.list' pseudo-op are not
+     supported.
+
+   * `.optimize' pseudo-op
+
+     The i960 `.optimize' pseudo-op is not supported.
+
+   * `.output' pseudo-op
+
+     The i960 `.output' pseudo-op is not supported.
+
+   * `.setreal' pseudo-op
+
+     The i960 `.setreal' pseudo-op is not supported.
+
+
+
+File: as.info,  Node: MD,  Next: o,  Prev: M,  Up: Invoking
+
+2.10 Dependency Tracking: `--MD'
+================================
+
+`as' can generate a dependency file for the file it creates.  This file
+consists of a single rule suitable for `make' describing the
+dependencies of the main source file.
+
+   The rule is written to the file named in its argument.
+
+   This feature is used in the automatic updating of makefiles.
+
+
+File: as.info,  Node: o,  Next: R,  Prev: MD,  Up: Invoking
+
+2.11 Name the Object File: `-o'
+===============================
+
+There is always one object file output when you run `as'.  By default
+it has the name `a.out' (or `b.out', for Intel 960 targets only).  You
+use this option (which takes exactly one filename) to give the object
+file a different name.
+
+   Whatever the object file is called, `as' overwrites any existing
+file of the same name.
+
+
+File: as.info,  Node: R,  Next: statistics,  Prev: o,  Up: Invoking
+
+2.12 Join Data and Text Sections: `-R'
+======================================
+
+`-R' tells `as' to write the object file as if all data-section data
+lives in the text section.  This is only done at the very last moment:
+your binary data are the same, but data section parts are relocated
+differently.  The data section part of your object file is zero bytes
+long because all its bytes are appended to the text section.  (*Note
+Sections and Relocation: Sections.)
+
+   When you specify `-R' it would be possible to generate shorter
+address displacements (because we do not have to cross between text and
+data section).  We refrain from doing this simply for compatibility with
+older versions of `as'.  In future, `-R' may work this way.
+
+   When `as' is configured for COFF or ELF output, this option is only
+useful if you use sections named `.text' and `.data'.
+
+   `-R' is not supported for any of the HPPA targets.  Using `-R'
+generates a warning from `as'.
+
+
+File: as.info,  Node: statistics,  Next: traditional-format,  Prev: R,  Up: Invoking
+
+2.13 Display Assembly Statistics: `--statistics'
+================================================
+
+Use `--statistics' to display two statistics about the resources used by
+`as': the maximum amount of space allocated during the assembly (in
+bytes), and the total execution time taken for the assembly (in CPU
+seconds).
+
+
+File: as.info,  Node: traditional-format,  Next: v,  Prev: statistics,  Up: Invoking
+
+2.14 Compatible Output: `--traditional-format'
+==============================================
+
+For some targets, the output of `as' is different in some ways from the
+output of some existing assembler.  This switch requests `as' to use
+the traditional format instead.
+
+   For example, it disables the exception frame optimizations which
+`as' normally does by default on `gcc' output.
+
+
+File: as.info,  Node: v,  Next: W,  Prev: traditional-format,  Up: Invoking
+
+2.15 Announce Version: `-v'
+===========================
+
+You can find out what version of as is running by including the option
+`-v' (which you can also spell as `-version') on the command line.
+
+
+File: as.info,  Node: W,  Next: Z,  Prev: v,  Up: Invoking
+
+2.16 Control Warnings: `-W', `--warn', `--no-warn', `--fatal-warnings'
+======================================================================
+
+`as' should never give a warning or error message when assembling
+compiler output.  But programs written by people often cause `as' to
+give a warning that a particular assumption was made.  All such
+warnings are directed to the standard error file.
+
+   If you use the `-W' and `--no-warn' options, no warnings are issued.
+This only affects the warning messages: it does not change any
+particular of how `as' assembles your file.  Errors, which stop the
+assembly, are still reported.
+
+   If you use the `--fatal-warnings' option, `as' considers files that
+generate warnings to be in error.
+
+   You can switch these options off again by specifying `--warn', which
+causes warnings to be output as usual.
+
+
+File: as.info,  Node: Z,  Prev: W,  Up: Invoking
+
+2.17 Generate Object File in Spite of Errors: `-Z'
+==================================================
+
+After an error message, `as' normally produces no output.  If for some
+reason you are interested in object file output even after `as' gives
+an error message on your program, use the `-Z' option.  If there are
+any errors, `as' continues anyways, and writes an object file after a
+final warning message of the form `N errors, M warnings, generating bad
+object file.'
+
+
+File: as.info,  Node: Syntax,  Next: Sections,  Prev: Invoking,  Up: Top
+
+3 Syntax
+********
+
+This chapter describes the machine-independent syntax allowed in a
+source file.  `as' syntax is similar to what many other assemblers use;
+it is inspired by the BSD 4.2 assembler, except that `as' does not
+assemble Vax bit-fields.
+
+* Menu:
+
+* Preprocessing::              Preprocessing
+* Whitespace::                  Whitespace
+* Comments::                    Comments
+* Symbol Intro::                Symbols
+* Statements::                  Statements
+* Constants::                   Constants
+
+
+File: as.info,  Node: Preprocessing,  Next: Whitespace,  Up: Syntax
+
+3.1 Preprocessing
+=================
+
+The `as' internal preprocessor:
+   * adjusts and removes extra whitespace.  It leaves one space or tab
+     before the keywords on a line, and turns any other whitespace on
+     the line into a single space.
+
+   * removes all comments, replacing them with a single space, or an
+     appropriate number of newlines.
+
+   * converts character constants into the appropriate numeric values.
+
+   It does not do macro processing, include file handling, or anything
+else you may get from your C compiler's preprocessor.  You can do
+include file processing with the `.include' directive (*note
+`.include': Include.).  You can use the GNU C compiler driver to get
+other "CPP" style preprocessing by giving the input file a `.S' suffix.
+*Note Options Controlling the Kind of Output: (gcc.info)Overall
+Options.
+
+   Excess whitespace, comments, and character constants cannot be used
+in the portions of the input text that are not preprocessed.
+
+   If the first line of an input file is `#NO_APP' or if you use the
+`-f' option, whitespace and comments are not removed from the input
+file.  Within an input file, you can ask for whitespace and comment
+removal in specific portions of the by putting a line that says `#APP'
+before the text that may contain whitespace or comments, and putting a
+line that says `#NO_APP' after this text.  This feature is mainly
+intend to support `asm' statements in compilers whose output is
+otherwise free of comments and whitespace.
+
+
+File: as.info,  Node: Whitespace,  Next: Comments,  Prev: Preprocessing,  Up: Syntax
+
+3.2 Whitespace
+==============
+
+"Whitespace" is one or more blanks or tabs, in any order.  Whitespace
+is used to separate symbols, and to make programs neater for people to
+read.  Unless within character constants (*note Character Constants:
+Characters.), any whitespace means the same as exactly one space.
+
+
+File: as.info,  Node: Comments,  Next: Symbol Intro,  Prev: Whitespace,  Up: Syntax
+
+3.3 Comments
+============
+
+There are two ways of rendering comments to `as'.  In both cases the
+comment is equivalent to one space.
+
+   Anything from `/*' through the next `*/' is a comment.  This means
+you may not nest these comments.
+
+     /*
+       The only way to include a newline ('\n') in a comment
+       is to use this sort of comment.
+     */
+
+     /* This sort of comment does not nest. */
+
+   Anything from the "line comment" character to the next newline is
+considered a comment and is ignored.  The line comment character is `;'
+for the AMD 29K family; `;' on the ARC; `@' on the ARM; `;' for the
+H8/300 family; `!' for the H8/500 family; `;' for the HPPA; `#' on the
+i386 and x86-64; `#' on the i960; `;' for the PDP-11; `;' for picoJava;
+`#' for Motorola PowerPC; `!' for the Renesas / SuperH SH; `!' on the
+SPARC; `#' on the ip2k; `#' on the m32r; `|' on the 680x0; `#' on the
+68HC11 and 68HC12; `;' on the M880x0; `#' on the Vax; `!' for the Z8000;
+`#' on the V850; `#' for Xtensa systems; see *Note Machine
+Dependencies::.
+
+   On some machines there are two different line comment characters.
+One character only begins a comment if it is the first non-whitespace
+character on a line, while the other always begins a comment.
+
+   The V850 assembler also supports a double dash as starting a comment
+that extends to the end of the line.
+
+   `--';
+
+   To be compatible with past assemblers, lines that begin with `#'
+have a special interpretation.  Following the `#' should be an absolute
+expression (*note Expressions::): the logical line number of the _next_
+line.  Then a string (*note Strings: Strings.) is allowed: if present
+it is a new logical file name.  The rest of the line, if any, should be
+whitespace.
+
+   If the first non-whitespace characters on the line are not numeric,
+the line is ignored.  (Just like a comment.)
+
+                               # This is an ordinary comment.
+     # 42-6 "new_file_name"    # New logical file name
+                               # This is logical line # 36.
+   This feature is deprecated, and may disappear from future versions
+of `as'.
+
+
+File: as.info,  Node: Symbol Intro,  Next: Statements,  Prev: Comments,  Up: Syntax
+
+3.4 Symbols
+===========
+
+A "symbol" is one or more characters chosen from the set of all letters
+(both upper and lower case), digits and the three characters `_.$'.  On
+most machines, you can also use `$' in symbol names; exceptions are
+noted in *Note Machine Dependencies::.  No symbol may begin with a
+digit.  Case is significant.  There is no length limit: all characters
+are significant.  Symbols are delimited by characters not in that set,
+or by the beginning of a file (since the source program must end with a
+newline, the end of a file is not a possible symbol delimiter).  *Note
+Symbols::.  
+
+
+File: as.info,  Node: Statements,  Next: Constants,  Prev: Symbol Intro,  Up: Syntax
+
+3.5 Statements
+==============
+
+A "statement" ends at a newline character (`\n') or line separator
+character.  (The line separator is usually `;', unless this conflicts
+with the comment character; *note Machine Dependencies::.)  The newline
+or separator character is considered part of the preceding statement.
+Newlines and separators within character constants are an exception:
+they do not end statements.
+
+It is an error to end any statement with end-of-file:  the last
+character of any input file should be a newline.
+
+   An empty statement is allowed, and may include whitespace.  It is
+ignored.
+
+   A statement begins with zero or more labels, optionally followed by a
+key symbol which determines what kind of statement it is.  The key
+symbol determines the syntax of the rest of the statement.  If the
+symbol begins with a dot `.' then the statement is an assembler
+directive: typically valid for any computer.  If the symbol begins with
+a letter the statement is an assembly language "instruction": it
+assembles into a machine language instruction.  Different versions of
+`as' for different computers recognize different instructions.  In
+fact, the same symbol may represent a different instruction in a
+different computer's assembly language.
+
+   A label is a symbol immediately followed by a colon (`:').
+Whitespace before a label or after a colon is permitted, but you may not
+have whitespace between a label's symbol and its colon. *Note Labels::.
+
+   For HPPA targets, labels need not be immediately followed by a
+colon, but the definition of a label must begin in column zero.  This
+also implies that only one label may be defined on each line.
+
+     label:     .directive    followed by something
+     another_label:           # This is an empty statement.
+                instruction   operand_1, operand_2, ...
+
+
+File: as.info,  Node: Constants,  Prev: Statements,  Up: Syntax
+
+3.6 Constants
+=============
+
+A constant is a number, written so that its value is known by
+inspection, without knowing any context.  Like this:
+     .byte  74, 0112, 092, 0x4A, 0X4a, 'J, '\J # All the same value.
+     .ascii "Ring the bell\7"                  # A string constant.
+     .octa  0x123456789abcdef0123456789ABCDEF0 # A bignum.
+     .float 0f-314159265358979323846264338327\
+     95028841971.693993751E-40                 # - pi, a flonum.
+
+* Menu:
+
+* Characters::                  Character Constants
+* Numbers::                     Number Constants
+
+
+File: as.info,  Node: Characters,  Next: Numbers,  Up: Constants
+
+3.6.1 Character Constants
+-------------------------
+
+There are two kinds of character constants.  A "character" stands for
+one character in one byte and its value may be used in numeric
+expressions.  String constants (properly called string _literals_) are
+potentially many bytes and their values may not be used in arithmetic
+expressions.
+
+* Menu:
+
+* Strings::                     Strings
+* Chars::                       Characters
+
+
+File: as.info,  Node: Strings,  Next: Chars,  Up: Characters
+
+3.6.1.1 Strings
+...............
+
+A "string" is written between double-quotes.  It may contain
+double-quotes or null characters.  The way to get special characters
+into a string is to "escape" these characters: precede them with a
+backslash `\' character.  For example `\\' represents one backslash:
+the first `\' is an escape which tells `as' to interpret the second
+character literally as a backslash (which prevents `as' from
+recognizing the second `\' as an escape character).  The complete list
+of escapes follows.
+
+`\b'
+     Mnemonic for backspace; for ASCII this is octal code 010.
+
+`\f'
+     Mnemonic for FormFeed; for ASCII this is octal code 014.
+
+`\n'
+     Mnemonic for newline; for ASCII this is octal code 012.
+
+`\r'
+     Mnemonic for carriage-Return; for ASCII this is octal code 015.
+
+`\t'
+     Mnemonic for horizontal Tab; for ASCII this is octal code 011.
+
+`\ DIGIT DIGIT DIGIT'
+     An octal character code.  The numeric code is 3 octal digits.  For
+     compatibility with other Unix systems, 8 and 9 are accepted as
+     digits: for example, `\008' has the value 010, and `\009' the
+     value 011.
+
+`\`x' HEX-DIGITS...'
+     A hex character code.  All trailing hex digits are combined.
+     Either upper or lower case `x' works.
+
+`\\'
+     Represents one `\' character.
+
+`\"'
+     Represents one `"' character.  Needed in strings to represent this
+     character, because an unescaped `"' would end the string.
+
+`\ ANYTHING-ELSE'
+     Any other character when escaped by `\' gives a warning, but
+     assembles as if the `\' was not present.  The idea is that if you
+     used an escape sequence you clearly didn't want the literal
+     interpretation of the following character.  However `as' has no
+     other interpretation, so `as' knows it is giving you the wrong
+     code and warns you of the fact.
+
+   Which characters are escapable, and what those escapes represent,
+varies widely among assemblers.  The current set is what we think the
+BSD 4.2 assembler recognizes, and is a subset of what most C compilers
+recognize.  If you are in doubt, do not use an escape sequence.
+
+
+File: as.info,  Node: Chars,  Prev: Strings,  Up: Characters
+
+3.6.1.2 Characters
+..................
+
+A single character may be written as a single quote immediately
+followed by that character.  The same escapes apply to characters as to
+strings.  So if you want to write the character backslash, you must
+write `'\\' where the first `\' escapes the second `\'.  As you can
+see, the quote is an acute accent, not a grave accent.  A newline
+immediately following an acute accent is taken as a literal character
+and does not count as the end of a statement.  The value of a character
+constant in a numeric expression is the machine's byte-wide code for
+that character.  `as' assumes your character code is ASCII: `'A' means
+65, `'B' means 66, and so on.
+
+
+File: as.info,  Node: Numbers,  Prev: Characters,  Up: Constants
+
+3.6.2 Number Constants
+----------------------
+
+`as' distinguishes three kinds of numbers according to how they are
+stored in the target machine.  _Integers_ are numbers that would fit
+into an `int' in the C language.  _Bignums_ are integers, but they are
+stored in more than 32 bits.  _Flonums_ are floating point numbers,
+described below.
+
+* Menu:
+
+* Integers::                    Integers
+* Bignums::                     Bignums
+* Flonums::                     Flonums
+
+
+File: as.info,  Node: Integers,  Next: Bignums,  Up: Numbers
+
+3.6.2.1 Integers
+................
+
+A binary integer is `0b' or `0B' followed by zero or more of the binary
+digits `01'.
+
+   An octal integer is `0' followed by zero or more of the octal digits
+(`01234567').
+
+   A decimal integer starts with a non-zero digit followed by zero or
+more digits (`0123456789').
+
+   A hexadecimal integer is `0x' or `0X' followed by one or more
+hexadecimal digits chosen from `0123456789abcdefABCDEF'.
+
+   Integers have the usual values.  To denote a negative integer, use
+the prefix operator `-' discussed under expressions (*note Prefix
+Operators: Prefix Ops.).
+
+
+File: as.info,  Node: Bignums,  Next: Flonums,  Prev: Integers,  Up: Numbers
+
+3.6.2.2 Bignums
+...............
+
+A "bignum" has the same syntax and semantics as an integer except that
+the number (or its negative) takes more than 32 bits to represent in
+binary.  The distinction is made because in some places integers are
+permitted while bignums are not.
+
+
+File: as.info,  Node: Flonums,  Prev: Bignums,  Up: Numbers
+
+3.6.2.3 Flonums
+...............
+
+A "flonum" represents a floating point number.  The translation is
+indirect: a decimal floating point number from the text is converted by
+`as' to a generic binary floating point number of more than sufficient
+precision.  This generic floating point number is converted to a
+particular computer's floating point format (or formats) by a portion
+of `as' specialized to that computer.
+
+   A flonum is written by writing (in order)
+   * The digit `0'.  (`0' is optional on the HPPA.)
+
+   * A letter, to tell `as' the rest of the number is a flonum.  `e' is
+     recommended.  Case is not important.
+
+     On the H8/300, H8/500, Renesas / SuperH SH, and AMD 29K
+     architectures, the letter must be one of the letters `DFPRSX' (in
+     upper or lower case).
+
+     On the ARC, the letter must be one of the letters `DFRS' (in upper
+     or lower case).
+
+     On the Intel 960 architecture, the letter must be one of the
+     letters `DFT' (in upper or lower case).
+
+     On the HPPA architecture, the letter must be `E' (upper case only).
+
+   * An optional sign: either `+' or `-'.
+
+   * An optional "integer part": zero or more decimal digits.
+
+   * An optional "fractional part": `.' followed by zero or more
+     decimal digits.
+
+   * An optional exponent, consisting of:
+
+        * An `E' or `e'.
+
+        * Optional sign: either `+' or `-'.
+
+        * One or more decimal digits.
+
+
+   At least one of the integer part or the fractional part must be
+present.  The floating point number has the usual base-10 value.
+
+   `as' does all processing using integers.  Flonums are computed
+independently of any floating point hardware in the computer running
+`as'.
+
+
+File: as.info,  Node: Sections,  Next: Symbols,  Prev: Syntax,  Up: Top
+
+4 Sections and Relocation
+*************************
+
+* Menu:
+
+* Secs Background::             Background
+* Ld Sections::                 Linker Sections
+* As Sections::                 Assembler Internal Sections
+* Sub-Sections::                Sub-Sections
+* bss::                         bss Section
+
+
+File: as.info,  Node: Secs Background,  Next: Ld Sections,  Up: Sections
+
+4.1 Background
+==============
+
+Roughly, a section is a range of addresses, with no gaps; all data "in"
+those addresses is treated the same for some particular purpose.  For
+example there may be a "read only" section.
+
+   The linker `ld' reads many object files (partial programs) and
+combines their contents to form a runnable program.  When `as' emits an
+object file, the partial program is assumed to start at address 0.
+`ld' assigns the final addresses for the partial program, so that
+different partial programs do not overlap.  This is actually an
+oversimplification, but it suffices to explain how `as' uses sections.
+
+   `ld' moves blocks of bytes of your program to their run-time
+addresses.  These blocks slide to their run-time addresses as rigid
+units; their length does not change and neither does the order of bytes
+within them.  Such a rigid unit is called a _section_.  Assigning
+run-time addresses to sections is called "relocation".  It includes the
+task of adjusting mentions of object-file addresses so they refer to
+the proper run-time addresses.  For the H8/300 and H8/500, and for the
+Renesas / SuperH SH, `as' pads sections if needed to ensure they end on
+a word (sixteen bit) boundary.
+
+   An object file written by `as' has at least three sections, any of
+which may be empty.  These are named "text", "data" and "bss" sections.
+
+   When it generates COFF or ELF output, `as' can also generate
+whatever other named sections you specify using the `.section'
+directive (*note `.section': Section.).  If you do not use any
+directives that place output in the `.text' or `.data' sections, these
+sections still exist, but are empty.
+
+   When `as' generates SOM or ELF output for the HPPA, `as' can also
+generate whatever other named sections you specify using the `.space'
+and `.subspace' directives.  See `HP9000 Series 800 Assembly Language
+Reference Manual' (HP 92432-90001) for details on the `.space' and
+`.subspace' assembler directives.
+
+   Additionally, `as' uses different names for the standard text, data,
+and bss sections when generating SOM output.  Program text is placed
+into the `$CODE$' section, data into `$DATA$', and BSS into `$BSS$'.
+
+   Within the object file, the text section starts at address `0', the
+data section follows, and the bss section follows the data section.
+
+   When generating either SOM or ELF output files on the HPPA, the text
+section starts at address `0', the data section at address `0x4000000',
+and the bss section follows the data section.
+
+   To let `ld' know which data changes when the sections are relocated,
+and how to change that data, `as' also writes to the object file
+details of the relocation needed.  To perform relocation `ld' must
+know, each time an address in the object file is mentioned:
+   * Where in the object file is the beginning of this reference to an
+     address?
+
+   * How long (in bytes) is this reference?
+
+   * Which section does the address refer to?  What is the numeric
+     value of
+          (ADDRESS) - (START-ADDRESS OF SECTION)?
+
+   * Is the reference to an address "Program-Counter relative"?
+
+   In fact, every address `as' ever uses is expressed as
+     (SECTION) + (OFFSET INTO SECTION)
+   Further, most expressions `as' computes have this section-relative
+nature.  (For some object formats, such as SOM for the HPPA, some
+expressions are symbol-relative instead.)
+
+   In this manual we use the notation {SECNAME N} to mean "offset N
+into section SECNAME."
+
+   Apart from text, data and bss sections you need to know about the
+"absolute" section.  When `ld' mixes partial programs, addresses in the
+absolute section remain unchanged.  For example, address `{absolute 0}'
+is "relocated" to run-time address 0 by `ld'.  Although the linker
+never arranges two partial programs' data sections with overlapping
+addresses after linking, _by definition_ their absolute sections must
+overlap.  Address `{absolute 239}' in one part of a program is always
+the same address when the program is running as address `{absolute
+239}' in any other part of the program.
+
+   The idea of sections is extended to the "undefined" section.  Any
+address whose section is unknown at assembly time is by definition
+rendered {undefined U}--where U is filled in later.  Since numbers are
+always defined, the only way to generate an undefined address is to
+mention an undefined symbol.  A reference to a named common block would
+be such a symbol: its value is unknown at assembly time so it has
+section _undefined_.
+
+   By analogy the word _section_ is used to describe groups of sections
+in the linked program.  `ld' puts all partial programs' text sections
+in contiguous addresses in the linked program.  It is customary to
+refer to the _text section_ of a program, meaning all the addresses of
+all partial programs' text sections.  Likewise for data and bss
+sections.
+
+   Some sections are manipulated by `ld'; others are invented for use
+of `as' and have no meaning except during assembly.
+
+
+File: as.info,  Node: Ld Sections,  Next: As Sections,  Prev: Secs Background,  Up: Sections
+
+4.2 Linker Sections
+===================
+
+`ld' deals with just four kinds of sections, summarized below.
+
+*named sections*
+*text section*
+*data section*
+     These sections hold your program.  `as' and `ld' treat them as
+     separate but equal sections.  Anything you can say of one section
+     is true of another.  When the program is running, however, it is
+     customary for the text section to be unalterable.  The text
+     section is often shared among processes: it contains instructions,
+     constants and the like.  The data section of a running program is
+     usually alterable: for example, C variables would be stored in the
+     data section.
+
+*bss section*
+     This section contains zeroed bytes when your program begins
+     running.  It is used to hold uninitialized variables or common
+     storage.  The length of each partial program's bss section is
+     important, but because it starts out containing zeroed bytes there
+     is no need to store explicit zero bytes in the object file.  The
+     bss section was invented to eliminate those explicit zeros from
+     object files.
+
+*absolute section*
+     Address 0 of this section is always "relocated" to runtime address
+     0.  This is useful if you want to refer to an address that `ld'
+     must not change when relocating.  In this sense we speak of
+     absolute addresses being "unrelocatable": they do not change
+     during relocation.
+
+*undefined section*
+     This "section" is a catch-all for address references to objects
+     not in the preceding sections.
+
+   An idealized example of three relocatable sections follows.  The
+example uses the traditional section names `.text' and `.data'.  Memory
+addresses are on the horizontal axis.
+
+                           +-----+----+--+
+     partial program # 1:  |ttttt|dddd|00|
+                           +-----+----+--+
+
+                           text   data bss
+                           seg.   seg. seg.
+
+                           +---+---+---+
+     partial program # 2:  |TTT|DDD|000|
+                           +---+---+---+
+
+                           +--+---+-----+--+----+---+-----+~~
+     linked program:       |  |TTT|ttttt|  |dddd|DDD|00000|
+                           +--+---+-----+--+----+---+-----+~~
+
+         addresses:        0 ...
+
+
+File: as.info,  Node: As Sections,  Next: Sub-Sections,  Prev: Ld Sections,  Up: Sections
+
+4.3 Assembler Internal Sections
+===============================
+
+These sections are meant only for the internal use of `as'.  They have
+no meaning at run-time.  You do not really need to know about these
+sections for most purposes; but they can be mentioned in `as' warning
+messages, so it might be helpful to have an idea of their meanings to
+`as'.  These sections are used to permit the value of every expression
+in your assembly language program to be a section-relative address.
+
+ASSEMBLER-INTERNAL-LOGIC-ERROR!
+     An internal assembler logic error has been found.  This means
+     there is a bug in the assembler.
+
+expr section
+     The assembler stores complex expression internally as combinations
+     of symbols.  When it needs to represent an expression as a symbol,
+     it puts it in the expr section.
+
+
+File: as.info,  Node: Sub-Sections,  Next: bss,  Prev: As Sections,  Up: Sections
+
+4.4 Sub-Sections
+================
+
+Assembled bytes conventionally fall into two sections: text and data.
+You may have separate groups of data in named sections that you want to
+end up near to each other in the object file, even though they are not
+contiguous in the assembler source.  `as' allows you to use
+"subsections" for this purpose.  Within each section, there can be
+numbered subsections with values from 0 to 8192.  Objects assembled
+into the same subsection go into the object file together with other
+objects in the same subsection.  For example, a compiler might want to
+store constants in the text section, but might not want to have them
+interspersed with the program being assembled.  In this case, the
+compiler could issue a `.text 0' before each section of code being
+output, and a `.text 1' before each group of constants being output.
+
+Subsections are optional.  If you do not use subsections, everything
+goes in subsection number zero.
+
+   Each subsection is zero-padded up to a multiple of four bytes.
+(Subsections may be padded a different amount on different flavors of
+`as'.)
+
+   Subsections appear in your object file in numeric order, lowest
+numbered to highest.  (All this to be compatible with other people's
+assemblers.)  The object file contains no representation of
+subsections; `ld' and other programs that manipulate object files see
+no trace of them.  They just see all your text subsections as a text
+section, and all your data subsections as a data section.
+
+   To specify which subsection you want subsequent statements assembled
+into, use a numeric argument to specify it, in a `.text EXPRESSION' or
+a `.data EXPRESSION' statement.  When generating COFF output, you can
+also use an extra subsection argument with arbitrary named sections:
+`.section NAME, EXPRESSION'.  When generating ELF output, you can also
+use the `.subsection' directive (*note SubSection::) to specify a
+subsection: `.subsection EXPRESSION'.  EXPRESSION should be an absolute
+expression.  (*Note Expressions::.)  If you just say `.text' then
+`.text 0' is assumed.  Likewise `.data' means `.data 0'.  Assembly
+begins in `text 0'.  For instance:
+     .text 0     # The default subsection is text 0 anyway.
+     .ascii "This lives in the first text subsection. *"
+     .text 1
+     .ascii "But this lives in the second text subsection."
+     .data 0
+     .ascii "This lives in the data section,"
+     .ascii "in the first data subsection."
+     .text 0
+     .ascii "This lives in the first text section,"
+     .ascii "immediately following the asterisk (*)."
+
+   Each section has a "location counter" incremented by one for every
+byte assembled into that section.  Because subsections are merely a
+convenience restricted to `as' there is no concept of a subsection
+location counter.  There is no way to directly manipulate a location
+counter--but the `.align' directive changes it, and any label
+definition captures its current value.  The location counter of the
+section where statements are being assembled is said to be the "active"
+location counter.
+
+
+File: as.info,  Node: bss,  Prev: Sub-Sections,  Up: Sections
+
+4.5 bss Section
+===============
+
+The bss section is used for local common variable storage.  You may
+allocate address space in the bss section, but you may not dictate data
+to load into it before your program executes.  When your program starts
+running, all the contents of the bss section are zeroed bytes.
+
+   The `.lcomm' pseudo-op defines a symbol in the bss section; see
+*Note `.lcomm': Lcomm.
+
+   The `.comm' pseudo-op may be used to declare a common symbol, which
+is another form of uninitialized symbol; see *Note `.comm': Comm.
+
+   When assembling for a target which supports multiple sections, such
+as ELF or COFF, you may switch into the `.bss' section and define
+symbols as usual; see *Note `.section': Section.  You may only assemble
+zero values into the section.  Typically the section will only contain
+symbol definitions and `.skip' directives (*note `.skip': Skip.).
+
+
+File: as.info,  Node: Symbols,  Next: Expressions,  Prev: Sections,  Up: Top
+
+5 Symbols
+*********
+
+Symbols are a central concept: the programmer uses symbols to name
+things, the linker uses symbols to link, and the debugger uses symbols
+to debug.
+
+     _Warning:_ `as' does not place symbols in the object file in the
+     same order they were declared.  This may break some debuggers.
+
+* Menu:
+
+* Labels::                      Labels
+* Setting Symbols::             Giving Symbols Other Values
+* Symbol Names::                Symbol Names
+* Dot::                         The Special Dot Symbol
+* Symbol Attributes::           Symbol Attributes
+
+
+File: as.info,  Node: Labels,  Next: Setting Symbols,  Up: Symbols
+
+5.1 Labels
+==========
+
+A "label" is written as a symbol immediately followed by a colon `:'.
+The symbol then represents the current value of the active location
+counter, and is, for example, a suitable instruction operand.  You are
+warned if you use the same symbol to represent two different locations:
+the first definition overrides any other definitions.
+
+   On the HPPA, the usual form for a label need not be immediately
+followed by a colon, but instead must start in column zero.  Only one
+label may be defined on a single line.  To work around this, the HPPA
+version of `as' also provides a special directive `.label' for defining
+labels more flexibly.
+
+
+File: as.info,  Node: Setting Symbols,  Next: Symbol Names,  Prev: Labels,  Up: Symbols
+
+5.2 Giving Symbols Other Values
+===============================
+
+A symbol can be given an arbitrary value by writing a symbol, followed
+by an equals sign `=', followed by an expression (*note Expressions::).
+This is equivalent to using the `.set' directive.  *Note `.set': Set.
+
+
+File: as.info,  Node: Symbol Names,  Next: Dot,  Prev: Setting Symbols,  Up: Symbols
+
+5.3 Symbol Names
+================
+
+Symbol names begin with a letter or with one of `._'.  On most
+machines, you can also use `$' in symbol names; exceptions are noted in
+*Note Machine Dependencies::.  That character may be followed by any
+string of digits, letters, dollar signs (unless otherwise noted in
+*Note Machine Dependencies::), and underscores.  For the AMD 29K
+family, `?' is also allowed in the body of a symbol name, though not at
+its beginning.
+
+Case of letters is significant: `foo' is a different symbol name than
+`Foo'.
+
+   Each symbol has exactly one name.  Each name in an assembly language
+program refers to exactly one symbol.  You may use that symbol name any
+number of times in a program.
+
+Local Symbol Names
+------------------
+
+Local symbols help compilers and programmers use names temporarily.
+They create symbols which are guaranteed to be unique over the entire
+scope of the input source code and which can be referred to by a simple
+notation.  To define a local symbol, write a label of the form `N:'
+(where N represents any positive integer).  To refer to the most recent
+previous definition of that symbol write `Nb', using the same number as
+when you defined the label.  To refer to the next definition of a local
+label, write `Nf'-- The `b' stands for"backwards" and the `f' stands
+for "forwards".
+
+   There is no restriction on how you can use these labels, and you can
+reuse them too.  So that it is possible to repeatedly define the same
+local label (using the same number `N'), although you can only refer to
+the most recently defined local label of that number (for a backwards
+reference) or the next definition of a specific local label for a
+forward reference.  It is also worth noting that the first 10 local
+labels (`0:'...`9:') are implemented in a slightly more efficient
+manner than the others.
+
+   Here is an example:
+
+     1:        branch 1f
+     2:        branch 1b
+     1:        branch 2f
+     2:        branch 1b
+
+   Which is the equivalent of:
+
+     label_1:  branch label_3
+     label_2:  branch label_1
+     label_3:  branch label_4
+     label_4:  branch label_3
+
+   Local symbol names are only a notational device.  They are
+immediately transformed into more conventional symbol names before the
+assembler uses them.  The symbol names stored in the symbol table,
+appearing in error messages and optionally emitted to the object file.
+The names are constructed using these parts:
+
+`L'
+     All local labels begin with `L'. Normally both `as' and `ld'
+     forget symbols that start with `L'. These labels are used for
+     symbols you are never intended to see.  If you use the `-L' option
+     then `as' retains these symbols in the object file. If you also
+     instruct `ld' to retain these symbols, you may use them in
+     debugging.
+
+`NUMBER'
+     This is the number that was used in the local label definition.
+     So if the label is written `55:' then the number is `55'.
+
+`C-B'
+     This unusual character is included so you do not accidentally
+     invent a symbol of the same name.  The character has ASCII value
+     of `\002' (control-B).
+
+`_ordinal number_'
+     This is a serial number to keep the labels distinct.  The first
+     definition of `0:' gets the number `1'.  The 15th definition of
+     `0:' gets the number `15', and so on.  Likewise the first
+     definition of `1:' gets the number `1' and its 15th defintion gets
+     `15' as well.
+
+   So for example, the first `1:' is named `L1C-B1', the 44th `3:' is
+named `L3C-B44'.
+
+Dollar Local Labels
+-------------------
+
+`as' also supports an even more local form of local labels called
+dollar labels.  These labels go out of scope (ie they become undefined)
+as soon as a non-local label is defined.  Thus they remain valid for
+only a small region of the input source code.  Normal local labels, by
+contrast, remain in scope for the entire file, or until they are
+redefined by another occurrence of the same local label.
+
+   Dollar labels are defined in exactly the same way as ordinary local
+labels, except that instead of being terminated by a colon, they are
+terminated by a dollar sign.  eg `55$'.
+
+   They can also be distinguished from ordinary local labels by their
+transformed name which uses ASCII character `\001' (control-A) as the
+magic character to distinguish them from ordinary labels.  Thus the 5th
+defintion of `6$' is named `L6C-A5'.
+
+
+File: as.info,  Node: Dot,  Next: Symbol Attributes,  Prev: Symbol Names,  Up: Symbols
+
+5.4 The Special Dot Symbol
+==========================
+
+The special symbol `.' refers to the current address that `as' is
+assembling into.  Thus, the expression `melvin: .long .' defines
+`melvin' to contain its own address.  Assigning a value to `.' is
+treated the same as a `.org' directive.  Thus, the expression `.=.+4'
+is the same as saying `.space 4'.
+
+
+File: as.info,  Node: Symbol Attributes,  Prev: Dot,  Up: Symbols
+
+5.5 Symbol Attributes
+=====================
+
+Every symbol has, as well as its name, the attributes "Value" and
+"Type".  Depending on output format, symbols can also have auxiliary
+attributes.
+
+   If you use a symbol without defining it, `as' assumes zero for all
+these attributes, and probably won't warn you.  This makes the symbol
+an externally defined symbol, which is generally what you would want.
+
+* Menu:
+
+* Symbol Value::                Value
+* Symbol Type::                 Type
+
+
+* a.out Symbols::               Symbol Attributes: `a.out'
+
+* COFF Symbols::                Symbol Attributes for COFF
+
+* SOM Symbols::                Symbol Attributes for SOM
+
+
+File: as.info,  Node: Symbol Value,  Next: Symbol Type,  Up: Symbol Attributes
+
+5.5.1 Value
+-----------
+
+The value of a symbol is (usually) 32 bits.  For a symbol which labels a
+location in the text, data, bss or absolute sections the value is the
+number of addresses from the start of that section to the label.
+Naturally for text, data and bss sections the value of a symbol changes
+as `ld' changes section base addresses during linking.  Absolute
+symbols' values do not change during linking: that is why they are
+called absolute.
+
+   The value of an undefined symbol is treated in a special way.  If it
+is 0 then the symbol is not defined in this assembler source file, and
+`ld' tries to determine its value from other files linked into the same
+program.  You make this kind of symbol simply by mentioning a symbol
+name without defining it.  A non-zero value represents a `.comm' common
+declaration.  The value is how much common storage to reserve, in bytes
+(addresses).  The symbol refers to the first address of the allocated
+storage.
+
+
+File: as.info,  Node: Symbol Type,  Next: a.out Symbols,  Prev: Symbol Value,  Up: Symbol Attributes
+
+5.5.2 Type
+----------
+
+The type attribute of a symbol contains relocation (section)
+information, any flag settings indicating that a symbol is external, and
+(optionally), other information for linkers and debuggers.  The exact
+format depends on the object-code output format in use.
+
+
+File: as.info,  Node: a.out Symbols,  Next: COFF Symbols,  Prev: Symbol Type,  Up: Symbol Attributes
+
+5.5.3 Symbol Attributes: `a.out'
+--------------------------------
+
+* Menu:
+
+* Symbol Desc::                 Descriptor
+* Symbol Other::                Other
+
+
+File: as.info,  Node: Symbol Desc,  Next: Symbol Other,  Up: a.out Symbols
+
+5.5.3.1 Descriptor
+..................
+
+This is an arbitrary 16-bit value.  You may establish a symbol's
+descriptor value by using a `.desc' statement (*note `.desc': Desc.).
+A descriptor value means nothing to `as'.
+
+
+File: as.info,  Node: Symbol Other,  Prev: Symbol Desc,  Up: a.out Symbols
+
+5.5.3.2 Other
+.............
+
+This is an arbitrary 8-bit value.  It means nothing to `as'.
+
+
+File: as.info,  Node: COFF Symbols,  Next: SOM Symbols,  Prev: a.out Symbols,  Up: Symbol Attributes
+
+5.5.4 Symbol Attributes for COFF
+--------------------------------
+
+The COFF format supports a multitude of auxiliary symbol attributes;
+like the primary symbol attributes, they are set between `.def' and
+`.endef' directives.
+
+5.5.4.1 Primary Attributes
+..........................
+
+The symbol name is set with `.def'; the value and type, respectively,
+with `.val' and `.type'.
+
+5.5.4.2 Auxiliary Attributes
+............................
+
+The `as' directives `.dim', `.line', `.scl', `.size', `.tag', and
+`.weak' can generate auxiliary symbol table information for COFF.
+
+
+File: as.info,  Node: SOM Symbols,  Prev: COFF Symbols,  Up: Symbol Attributes
+
+5.5.5 Symbol Attributes for SOM
+-------------------------------
+
+The SOM format for the HPPA supports a multitude of symbol attributes
+set with the `.EXPORT' and `.IMPORT' directives.
+
+   The attributes are described in `HP9000 Series 800 Assembly Language
+Reference Manual' (HP 92432-90001) under the `IMPORT' and `EXPORT'
+assembler directive documentation.
+
+
+File: as.info,  Node: Expressions,  Next: Pseudo Ops,  Prev: Symbols,  Up: Top
+
+6 Expressions
+*************
+
+An "expression" specifies an address or numeric value.  Whitespace may
+precede and/or follow an expression.
+
+   The result of an expression must be an absolute number, or else an
+offset into a particular section.  If an expression is not absolute,
+and there is not enough information when `as' sees the expression to
+know its section, a second pass over the source program might be
+necessary to interpret the expression--but the second pass is currently
+not implemented.  `as' aborts with an error message in this situation.
+
+* Menu:
+
+* Empty Exprs::                 Empty Expressions
+* Integer Exprs::               Integer Expressions
+
+
+File: as.info,  Node: Empty Exprs,  Next: Integer Exprs,  Up: Expressions
+
+6.1 Empty Expressions
+=====================
+
+An empty expression has no value: it is just whitespace or null.
+Wherever an absolute expression is required, you may omit the
+expression, and `as' assumes a value of (absolute) 0.  This is
+compatible with other assemblers.
+
+
+File: as.info,  Node: Integer Exprs,  Prev: Empty Exprs,  Up: Expressions
+
+6.2 Integer Expressions
+=======================
+
+An "integer expression" is one or more _arguments_ delimited by
+_operators_.
+
+* Menu:
+
+* Arguments::                   Arguments
+* Operators::                   Operators
+* Prefix Ops::                  Prefix Operators
+* Infix Ops::                   Infix Operators
+
+
+File: as.info,  Node: Arguments,  Next: Operators,  Up: Integer Exprs
+
+6.2.1 Arguments
+---------------
+
+"Arguments" are symbols, numbers or subexpressions.  In other contexts
+arguments are sometimes called "arithmetic operands".  In this manual,
+to avoid confusing them with the "instruction operands" of the machine
+language, we use the term "argument" to refer to parts of expressions
+only, reserving the word "operand" to refer only to machine instruction
+operands.
+
+   Symbols are evaluated to yield {SECTION NNN} where SECTION is one of
+text, data, bss, absolute, or undefined.  NNN is a signed, 2's
+complement 32 bit integer.
+
+   Numbers are usually integers.
+
+   A number can be a flonum or bignum.  In this case, you are warned
+that only the low order 32 bits are used, and `as' pretends these 32
+bits are an integer.  You may write integer-manipulating instructions
+that act on exotic constants, compatible with other assemblers.
+
+   Subexpressions are a left parenthesis `(' followed by an integer
+expression, followed by a right parenthesis `)'; or a prefix operator
+followed by an argument.
+
+
+File: as.info,  Node: Operators,  Next: Prefix Ops,  Prev: Arguments,  Up: Integer Exprs
+
+6.2.2 Operators
+---------------
+
+"Operators" are arithmetic functions, like `+' or `%'.  Prefix
+operators are followed by an argument.  Infix operators appear between
+their arguments.  Operators may be preceded and/or followed by
+whitespace.
+
+
+File: as.info,  Node: Prefix Ops,  Next: Infix Ops,  Prev: Operators,  Up: Integer Exprs
+
+6.2.3 Prefix Operator
+---------------------
+
+`as' has the following "prefix operators".  They each take one
+argument, which must be absolute.
+
+`-'
+     "Negation".  Two's complement negation.
+
+`~'
+     "Complementation".  Bitwise not.
+
+
+File: as.info,  Node: Infix Ops,  Prev: Prefix Ops,  Up: Integer Exprs
+
+6.2.4 Infix Operators
+---------------------
+
+"Infix operators" take two arguments, one on either side.  Operators
+have precedence, but operations with equal precedence are performed left
+to right.  Apart from `+' or `-', both arguments must be absolute, and
+the result is absolute.
+
+  1. Highest Precedence
+
+    `*'
+          "Multiplication".
+
+    `/'
+          "Division".  Truncation is the same as the C operator `/'
+
+    `%'
+          "Remainder".
+
+    `<'
+    `<<'
+          "Shift Left".  Same as the C operator `<<'.
+
+    `>'
+    `>>'
+          "Shift Right".  Same as the C operator `>>'.
+
+  2. Intermediate precedence
+
+    `|'
+          "Bitwise Inclusive Or".
+
+    `&'
+          "Bitwise And".
+
+    `^'
+          "Bitwise Exclusive Or".
+
+    `!'
+          "Bitwise Or Not".
+
+  3. Low Precedence
+
+    `+'
+          "Addition".  If either argument is absolute, the result has
+          the section of the other argument.  You may not add together
+          arguments from different sections.
+
+    `-'
+          "Subtraction".  If the right argument is absolute, the result
+          has the section of the left argument.  If both arguments are
+          in the same section, the result is absolute.  You may not
+          subtract arguments from different sections.
+
+    `=='
+          "Is Equal To"
+
+    `<>'
+          "Is Not Equal To"
+
+    `<'
+          "Is Less Than"
+
+    `>'
+          "Is Greater Than"
+
+    `>='
+          "Is Greater Than Or Equal To"
+
+    `<='
+          "Is Less Than Or Equal To"
+
+          The comparison operators can be used as infix operators.  A
+          true results has a value of -1 whereas a false result has a
+          value of 0.   Note, these operators perform signed
+          comparisons.
+
+  4. Lowest Precedence
+
+    `&&'
+          "Logical And".
+
+    `||'
+          "Logical Or".
+
+          These two logical operations can be used to combine the
+          results of sub expressions.  Note, unlike the comparison
+          operators a true result returns a value of 1 but a false
+          results does still return 0.  Also note that the logical or
+          operator has a slightly lower precedence than logical and.
+
+
+   In short, it's only meaningful to add or subtract the _offsets_ in an
+address; you can only have a defined section in one of the two
+arguments.
+
+
+File: as.info,  Node: Pseudo Ops,  Next: Machine Dependencies,  Prev: Expressions,  Up: Top
+
+7 Assembler Directives
+**********************
+
+All assembler directives have names that begin with a period (`.').
+The rest of the name is letters, usually in lower case.
+
+   This chapter discusses directives that are available regardless of
+the target machine configuration for the GNU assembler.  Some machine
+configurations provide additional directives.  *Note Machine
+Dependencies::.
+
+* Menu:
+
+* Abort::                       `.abort'
+
+* ABORT::                       `.ABORT'
+
+* Align::                       `.align ABS-EXPR , ABS-EXPR'
+* Altmacro::                    `.altmacro'
+* Ascii::                       `.ascii "STRING"'...
+* Asciz::                       `.asciz "STRING"'...
+* Balign::                      `.balign ABS-EXPR , ABS-EXPR'
+* Byte::                        `.byte EXPRESSIONS'
+* Comm::                        `.comm SYMBOL , LENGTH '
+
+* CFI directives::		`.cfi_startproc', `.cfi_endproc', etc.
+
+* Data::                        `.data SUBSECTION'
+
+* Def::                         `.def NAME'
+
+* Desc::                        `.desc SYMBOL, ABS-EXPRESSION'
+
+* Dim::                         `.dim'
+
+* Double::                      `.double FLONUMS'
+* Eject::                       `.eject'
+* Else::                        `.else'
+* Elseif::                      `.elseif'
+* End::				`.end'
+
+* Endef::                       `.endef'
+
+* Endfunc::                     `.endfunc'
+* Endif::                       `.endif'
+* Equ::                         `.equ SYMBOL, EXPRESSION'
+* Equiv::                       `.equiv SYMBOL, EXPRESSION'
+* Err::				`.err'
+* Error::			`.error STRING'
+* Exitm::			`.exitm'
+* Extern::                      `.extern'
+* Fail::			`.fail'
+
+* File::                        `.file STRING'
+
+* Fill::                        `.fill REPEAT , SIZE , VALUE'
+* Float::                       `.float FLONUMS'
+* Func::                        `.func'
+* Global::                      `.global SYMBOL', `.globl SYMBOL'
+
+* Hidden::                      `.hidden NAMES'
+
+* hword::                       `.hword EXPRESSIONS'
+* Ident::                       `.ident'
+* If::                          `.if ABSOLUTE EXPRESSION'
+* Incbin::                      `.incbin "FILE"[,SKIP[,COUNT]]'
+* Include::                     `.include "FILE"'
+* Int::                         `.int EXPRESSIONS'
+
+* Internal::                    `.internal NAMES'
+
+* Irp::				`.irp SYMBOL,VALUES'...
+* Irpc::			`.irpc SYMBOL,VALUES'...
+* Lcomm::                       `.lcomm SYMBOL , LENGTH'
+* Lflags::                      `.lflags'
+
+* Line::                        `.line LINE-NUMBER'
+
+* Ln::                          `.ln LINE-NUMBER'
+* Linkonce::			`.linkonce [TYPE]'
+* List::                        `.list'
+* Long::                        `.long EXPRESSIONS'
+
+* Macro::			`.macro NAME ARGS'...
+* MRI::				`.mri VAL'
+* Noaltmacro::                  `.noaltmacro'
+* Nolist::                      `.nolist'
+* Octa::                        `.octa BIGNUMS'
+* Org::                         `.org NEW-LC , FILL'
+* P2align::                     `.p2align ABS-EXPR , ABS-EXPR'
+
+* PopSection::                  `.popsection'
+* Previous::                    `.previous'
+
+* Print::			`.print STRING'
+
+* Protected::                   `.protected NAMES'
+
+* Psize::                       `.psize LINES, COLUMNS'
+* Purgem::			`.purgem NAME'
+
+* PushSection::                 `.pushsection NAME'
+
+* Quad::                        `.quad BIGNUMS'
+* Rept::			`.rept COUNT'
+* Sbttl::                       `.sbttl "SUBHEADING"'
+
+* Scl::                         `.scl CLASS'
+
+* Section::                     `.section NAME'
+
+* Set::                         `.set SYMBOL, EXPRESSION'
+* Short::                       `.short EXPRESSIONS'
+* Single::                      `.single FLONUMS'
+
+* Size::                        `.size [NAME , EXPRESSION]'
+
+* Skip::                        `.skip SIZE , FILL'
+* Sleb128::			`.sleb128 EXPRESSIONS'
+* Space::                       `.space SIZE , FILL'
+
+* Stab::                        `.stabd, .stabn, .stabs'
+
+* String::                      `.string "STR"'
+* Struct::			`.struct EXPRESSION'
+
+* SubSection::                  `.subsection'
+* Symver::                      `.symver NAME,NAME2@NODENAME'
+
+
+* Tag::                         `.tag STRUCTNAME'
+
+* Text::                        `.text SUBSECTION'
+* Title::                       `.title "HEADING"'
+
+* Type::                        `.type <INT | NAME , TYPE DESCRIPTION>'
+
+* Uleb128::                     `.uleb128 EXPRESSIONS'
+
+* Val::                         `.val ADDR'
+
+
+* Version::                     `.version "STRING"'
+* VTableEntry::                 `.vtable_entry TABLE, OFFSET'
+* VTableInherit::               `.vtable_inherit CHILD, PARENT'
+
+* Warning::			`.warning STRING'
+* Weak::                        `.weak NAMES'
+* Word::                        `.word EXPRESSIONS'
+* Deprecated::                  Deprecated Directives
+
+
+File: as.info,  Node: Abort,  Next: ABORT,  Up: Pseudo Ops
+
+7.1 `.abort'
+============
+
+This directive stops the assembly immediately.  It is for compatibility
+with other assemblers.  The original idea was that the assembly
+language source would be piped into the assembler.  If the sender of
+the source quit, it could use this directive tells `as' to quit also.
+One day `.abort' will not be supported.
+
+
+File: as.info,  Node: ABORT,  Next: Align,  Prev: Abort,  Up: Pseudo Ops
+
+7.2 `.ABORT'
+============
+
+When producing COFF output, `as' accepts this directive as a synonym
+for `.abort'.
+
+   When producing `b.out' output, `as' accepts this directive, but
+ignores it.
+
+
+File: as.info,  Node: Align,  Next: Altmacro,  Prev: ABORT,  Up: Pseudo Ops
+
+7.3 `.align ABS-EXPR, ABS-EXPR, ABS-EXPR'
+=========================================
+
+Pad the location counter (in the current subsection) to a particular
+storage boundary.  The first expression (which must be absolute) is the
+alignment required, as described below.
+
+   The second expression (also absolute) gives the fill value to be
+stored in the padding bytes.  It (and the comma) may be omitted.  If it
+is omitted, the padding bytes are normally zero.  However, on some
+systems, if the section is marked as containing code and the fill value
+is omitted, the space is filled with no-op instructions.
+
+   The third expression is also absolute, and is also optional.  If it
+is present, it is the maximum number of bytes that should be skipped by
+this alignment directive.  If doing the alignment would require
+skipping more bytes than the specified maximum, then the alignment is
+not done at all.  You can omit the fill value (the second argument)
+entirely by simply using two commas after the required alignment; this
+can be useful if you want the alignment to be filled with no-op
+instructions when appropriate.
+
+   The way the required alignment is specified varies from system to
+system.  For the a29k, arc, hppa, i386 using ELF, i860, iq2000, m68k,
+m88k, or32, s390, sparc, tic4x, tic80 and xtensa, the first expression
+is the alignment request in bytes.  For example `.align 8' advances the
+location counter until it is a multiple of 8.  If the location counter
+is already a multiple of 8, no change is needed.  For the tic54x, the
+first expression is the alignment request in words.
+
+   For other systems, including the i386 using a.out format, and the
+arm and strongarm, it is the number of low-order zero bits the location
+counter must have after advancement.  For example `.align 3' advances
+the location counter until it a multiple of 8.  If the location counter
+is already a multiple of 8, no change is needed.
+
+   This inconsistency is due to the different behaviors of the various
+native assemblers for these systems which GAS must emulate.  GAS also
+provides `.balign' and `.p2align' directives, described later, which
+have a consistent behavior across all architectures (but are specific
+to GAS).
+
+
+File: as.info,  Node: Ascii,  Next: Asciz,  Prev: Altmacro,  Up: Pseudo Ops
+
+7.4 `.ascii "STRING"'...
+========================
+
+`.ascii' expects zero or more string literals (*note Strings::)
+separated by commas.  It assembles each string (with no automatic
+trailing zero byte) into consecutive addresses.
+
+
+File: as.info,  Node: Asciz,  Next: Balign,  Prev: Ascii,  Up: Pseudo Ops
+
+7.5 `.asciz "STRING"'...
+========================
+
+`.asciz' is just like `.ascii', but each string is followed by a zero
+byte.  The "z" in `.asciz' stands for "zero".
+
+
+File: as.info,  Node: Balign,  Next: Byte,  Prev: Asciz,  Up: Pseudo Ops
+
+7.6 `.balign[wl] ABS-EXPR, ABS-EXPR, ABS-EXPR'
+==============================================
+
+Pad the location counter (in the current subsection) to a particular
+storage boundary.  The first expression (which must be absolute) is the
+alignment request in bytes.  For example `.balign 8' advances the
+location counter until it is a multiple of 8.  If the location counter
+is already a multiple of 8, no change is needed.
+
+   The second expression (also absolute) gives the fill value to be
+stored in the padding bytes.  It (and the comma) may be omitted.  If it
+is omitted, the padding bytes are normally zero.  However, on some
+systems, if the section is marked as containing code and the fill value
+is omitted, the space is filled with no-op instructions.
+
+   The third expression is also absolute, and is also optional.  If it
+is present, it is the maximum number of bytes that should be skipped by
+this alignment directive.  If doing the alignment would require
+skipping more bytes than the specified maximum, then the alignment is
+not done at all.  You can omit the fill value (the second argument)
+entirely by simply using two commas after the required alignment; this
+can be useful if you want the alignment to be filled with no-op
+instructions when appropriate.
+
+   The `.balignw' and `.balignl' directives are variants of the
+`.balign' directive.  The `.balignw' directive treats the fill pattern
+as a two byte word value.  The `.balignl' directives treats the fill
+pattern as a four byte longword value.  For example, `.balignw
+4,0x368d' will align to a multiple of 4.  If it skips two bytes, they
+will be filled in with the value 0x368d (the exact placement of the
+bytes depends upon the endianness of the processor).  If it skips 1 or
+3 bytes, the fill value is undefined.
+
+
+File: as.info,  Node: Byte,  Next: Comm,  Prev: Balign,  Up: Pseudo Ops
+
+7.7 `.byte EXPRESSIONS'
+=======================
+
+`.byte' expects zero or more expressions, separated by commas.  Each
+expression is assembled into the next byte.
+
+
+File: as.info,  Node: Comm,  Next: CFI directives,  Prev: Byte,  Up: Pseudo Ops
+
+7.8 `.comm SYMBOL , LENGTH '
+============================
+
+`.comm' declares a common symbol named SYMBOL.  When linking, a common
+symbol in one object file may be merged with a defined or common symbol
+of the same name in another object file.  If `ld' does not see a
+definition for the symbol-just one or more common symbols-then it will
+allocate LENGTH bytes of uninitialized memory.  LENGTH must be an
+absolute expression.  If `ld' sees multiple common symbols with the
+same name, and they do not all have the same size, it will allocate
+space using the largest size.
+
+   When using ELF, the `.comm' directive takes an optional third
+argument.  This is the desired alignment of the symbol, specified as a
+byte boundary (for example, an alignment of 16 means that the least
+significant 4 bits of the address should be zero).  The alignment must
+be an absolute expression, and it must be a power of two.  If `ld'
+allocates uninitialized memory for the common symbol, it will use the
+alignment when placing the symbol.  If no alignment is specified, `as'
+will set the alignment to the largest power of two less than or equal
+to the size of the symbol, up to a maximum of 16.
+
+   The syntax for `.comm' differs slightly on the HPPA.  The syntax is
+`SYMBOL .comm, LENGTH'; SYMBOL is optional.
+
+
+File: as.info,  Node: CFI directives,  Next: Data,  Prev: Comm,  Up: Pseudo Ops
+
+7.9 `.cfi_startproc'
+====================
+
+`.cfi_startproc' is used at the beginning of each function that should
+have an entry in `.eh_frame'. It initializes some internal data
+structures and emits architecture dependent initial CFI instructions.
+Don't forget to close the function by `.cfi_endproc'.
+
+7.10 `.cfi_endproc'
+===================
+
+`.cfi_endproc' is used at the end of a function where it closes its
+unwind entry previously opened by `.cfi_startproc'. and emits it to
+`.eh_frame'.
+
+7.11 `.cfi_def_cfa REGISTER, OFFSET'
+====================================
+
+`.cfi_def_cfa' defines a rule for computing CFA as: take address from
+REGISTER and add OFFSET to it.
+
+7.12 `.cfi_def_cfa_register REGISTER'
+=====================================
+
+`.cfi_def_cfa_register' modifies a rule for computing CFA. From now on
+REGISTER will be used instead of the old one. Offset remains the same.
+
+7.13 `.cfi_def_cfa_offset OFFSET'
+=================================
+
+`.cfi_def_cfa_offset' modifies a rule for computing CFA. Register
+remains the same, but OFFSET is new. Note that it is the absolute
+offset that will be added to a defined register to compute CFA address.
+
+7.14 `.cfi_adjust_cfa_offset OFFSET'
+====================================
+
+Same as `.cfi_def_cfa_offset' but OFFSET is a relative value that is
+added/substracted from the previous offset.
+
+7.15 `.cfi_offset REGISTER, OFFSET'
+===================================
+
+Previous value of REGISTER is saved at offset OFFSET from CFA.
+
+7.16 `.cfi_rel_offset REGISTER, OFFSET'
+=======================================
+
+Previous value of REGISTER is saved at offset OFFSET from the current
+CFA register.  This is transformed to `.cfi_offset' using the known
+displacement of the CFA register from the CFA.  This is often easier to
+use, because the number will match the code it's annotating.
+
+7.17 `.cfi_window_save'
+=======================
+
+SPARC register window has been saved.
+
+7.18 `.cfi_escape' EXPRESSION[, ...]
+====================================
+
+Allows the user to add arbitrary bytes to the unwind info.  One might
+use this to add OS-specific CFI opcodes, or generic CFI opcodes that
+GAS does not yet support.
+
+
+File: as.info,  Node: Data,  Next: Def,  Prev: CFI directives,  Up: Pseudo Ops
+
+7.19 `.data SUBSECTION'
+=======================
+
+`.data' tells `as' to assemble the following statements onto the end of
+the data subsection numbered SUBSECTION (which is an absolute
+expression).  If SUBSECTION is omitted, it defaults to zero.
+
+
+File: as.info,  Node: Def,  Next: Desc,  Prev: Data,  Up: Pseudo Ops
+
+7.20 `.def NAME'
+================
+
+Begin defining debugging information for a symbol NAME; the definition
+extends until the `.endef' directive is encountered.
+
+   This directive is only observed when `as' is configured for COFF
+format output; when producing `b.out', `.def' is recognized, but
+ignored.
+
+
+File: as.info,  Node: Desc,  Next: Dim,  Prev: Def,  Up: Pseudo Ops
+
+7.21 `.desc SYMBOL, ABS-EXPRESSION'
+===================================
+
+This directive sets the descriptor of the symbol (*note Symbol
+Attributes::) to the low 16 bits of an absolute expression.
+
+   The `.desc' directive is not available when `as' is configured for
+COFF output; it is only for `a.out' or `b.out' object format.  For the
+sake of compatibility, `as' accepts it, but produces no output, when
+configured for COFF.
+
+
+File: as.info,  Node: Dim,  Next: Double,  Prev: Desc,  Up: Pseudo Ops
+
+7.22 `.dim'
+===========
+
+This directive is generated by compilers to include auxiliary debugging
+information in the symbol table.  It is only permitted inside
+`.def'/`.endef' pairs.
+
+   `.dim' is only meaningful when generating COFF format output; when
+`as' is generating `b.out', it accepts this directive but ignores it.
+
+
+File: as.info,  Node: Double,  Next: Eject,  Prev: Dim,  Up: Pseudo Ops
+
+7.23 `.double FLONUMS'
+======================
+
+`.double' expects zero or more flonums, separated by commas.  It
+assembles floating point numbers.  The exact kind of floating point
+numbers emitted depends on how `as' is configured.  *Note Machine
+Dependencies::.
+
+
+File: as.info,  Node: Eject,  Next: Else,  Prev: Double,  Up: Pseudo Ops
+
+7.24 `.eject'
+=============
+
+Force a page break at this point, when generating assembly listings.
+
+
+File: as.info,  Node: Else,  Next: Elseif,  Prev: Eject,  Up: Pseudo Ops
+
+7.25 `.else'
+============
+
+`.else' is part of the `as' support for conditional assembly; *note
+`.if': If.  It marks the beginning of a section of code to be assembled
+if the condition for the preceding `.if' was false.
+
+
+File: as.info,  Node: Elseif,  Next: End,  Prev: Else,  Up: Pseudo Ops
+
+7.26 `.elseif'
+==============
+
+`.elseif' is part of the `as' support for conditional assembly; *note
+`.if': If.  It is shorthand for beginning a new `.if' block that would
+otherwise fill the entire `.else' section.
+
+
+File: as.info,  Node: End,  Next: Endef,  Prev: Elseif,  Up: Pseudo Ops
+
+7.27 `.end'
+===========
+
+`.end' marks the end of the assembly file.  `as' does not process
+anything in the file past the `.end' directive.
+
+
+File: as.info,  Node: Endef,  Next: Endfunc,  Prev: End,  Up: Pseudo Ops
+
+7.28 `.endef'
+=============
+
+This directive flags the end of a symbol definition begun with `.def'.
+
+   `.endef' is only meaningful when generating COFF format output; if
+`as' is configured to generate `b.out', it accepts this directive but
+ignores it.
+
+
+File: as.info,  Node: Endfunc,  Next: Endif,  Prev: Endef,  Up: Pseudo Ops
+
+7.29 `.endfunc'
+===============
+
+`.endfunc' marks the end of a function specified with `.func'.
+
+
+File: as.info,  Node: Endif,  Next: Equ,  Prev: Endfunc,  Up: Pseudo Ops
+
+7.30 `.endif'
+=============
+
+`.endif' is part of the `as' support for conditional assembly; it marks
+the end of a block of code that is only assembled conditionally.  *Note
+`.if': If.
+
+
+File: as.info,  Node: Equ,  Next: Equiv,  Prev: Endif,  Up: Pseudo Ops
+
+7.31 `.equ SYMBOL, EXPRESSION'
+==============================
+
+This directive sets the value of SYMBOL to EXPRESSION.  It is
+synonymous with `.set'; *note `.set': Set.
+
+   The syntax for `equ' on the HPPA is `SYMBOL .equ EXPRESSION'.
+
+
+File: as.info,  Node: Equiv,  Next: Err,  Prev: Equ,  Up: Pseudo Ops
+
+7.32 `.equiv SYMBOL, EXPRESSION'
+================================
+
+The `.equiv' directive is like `.equ' and `.set', except that the
+assembler will signal an error if SYMBOL is already defined.  Note a
+symbol which has been referenced but not actually defined is considered
+to be undefined.
+
+   Except for the contents of the error message, this is roughly
+equivalent to
+     .ifdef SYM
+     .err
+     .endif
+     .equ SYM,VAL
+
+
+File: as.info,  Node: Err,  Next: Error,  Prev: Equiv,  Up: Pseudo Ops
+
+7.33 `.err'
+===========
+
+If `as' assembles a `.err' directive, it will print an error message
+and, unless the `-Z' option was used, it will not generate an object
+file.  This can be used to signal error an conditionally compiled code.
+
+
+File: as.info,  Node: Error,  Next: Exitm,  Prev: Err,  Up: Pseudo Ops
+
+7.34 `.error "STRING"'
+======================
+
+Similarly to `.err', this directive emits an error, but you can specify
+a string that will be emitted as the error message.  If you don't
+specify the message, it defaults to `".error directive invoked in
+source file"'.  *Note Error and Warning Messages: Errors.
+
+      .error "This code has not been assembled and tested."
+
+
+File: as.info,  Node: Exitm,  Next: Extern,  Prev: Error,  Up: Pseudo Ops
+
+7.35 `.exitm'
+=============
+
+Exit early from the current macro definition.  *Note Macro::.
+
+
+File: as.info,  Node: Extern,  Next: Fail,  Prev: Exitm,  Up: Pseudo Ops
+
+7.36 `.extern'
+==============
+
+`.extern' is accepted in the source program--for compatibility with
+other assemblers--but it is ignored.  `as' treats all undefined symbols
+as external.
+
+
+File: as.info,  Node: Fail,  Next: File,  Prev: Extern,  Up: Pseudo Ops
+
+7.37 `.fail EXPRESSION'
+=======================
+
+Generates an error or a warning.  If the value of the EXPRESSION is 500
+or more, `as' will print a warning message.  If the value is less than
+500, `as' will print an error message.  The message will include the
+value of EXPRESSION.  This can occasionally be useful inside complex
+nested macros or conditional assembly.
+
+
+File: as.info,  Node: File,  Next: Fill,  Prev: Fail,  Up: Pseudo Ops
+
+7.38 `.file STRING'
+===================
+
+`.file' tells `as' that we are about to start a new logical file.
+STRING is the new file name.  In general, the filename is recognized
+whether or not it is surrounded by quotes `"'; but if you wish to
+specify an empty file name, you must give the quotes-`""'.  This
+statement may go away in future: it is only recognized to be compatible
+with old `as' programs.  In some configurations of `as', `.file' has
+already been removed to avoid conflicts with other assemblers.  *Note
+Machine Dependencies::.
+
+
+File: as.info,  Node: Fill,  Next: Float,  Prev: File,  Up: Pseudo Ops
+
+7.39 `.fill REPEAT , SIZE , VALUE'
+==================================
+
+REPEAT, SIZE and VALUE are absolute expressions.  This emits REPEAT
+copies of SIZE bytes.  REPEAT may be zero or more.  SIZE may be zero or
+more, but if it is more than 8, then it is deemed to have the value 8,
+compatible with other people's assemblers.  The contents of each REPEAT
+bytes is taken from an 8-byte number.  The highest order 4 bytes are
+zero.  The lowest order 4 bytes are VALUE rendered in the byte-order of
+an integer on the computer `as' is assembling for.  Each SIZE bytes in
+a repetition is taken from the lowest order SIZE bytes of this number.
+Again, this bizarre behavior is compatible with other people's
+assemblers.
+
+   SIZE and VALUE are optional.  If the second comma and VALUE are
+absent, VALUE is assumed zero.  If the first comma and following tokens
+are absent, SIZE is assumed to be 1.
+
+
+File: as.info,  Node: Float,  Next: Func,  Prev: Fill,  Up: Pseudo Ops
+
+7.40 `.float FLONUMS'
+=====================
+
+This directive assembles zero or more flonums, separated by commas.  It
+has the same effect as `.single'.  The exact kind of floating point
+numbers emitted depends on how `as' is configured.  *Note Machine
+Dependencies::.
+
+
+File: as.info,  Node: Func,  Next: Global,  Prev: Float,  Up: Pseudo Ops
+
+7.41 `.func NAME[,LABEL]'
+=========================
+
+`.func' emits debugging information to denote function NAME, and is
+ignored unless the file is assembled with debugging enabled.  Only
+`--gstabs[+]' is currently supported.  LABEL is the entry point of the
+function and if omitted NAME prepended with the `leading char' is used.
+`leading char' is usually `_' or nothing, depending on the target.  All
+functions are currently defined to have `void' return type.  The
+function must be terminated with `.endfunc'.
+
+
+File: as.info,  Node: Global,  Next: Hidden,  Prev: Func,  Up: Pseudo Ops
+
+7.42 `.global SYMBOL', `.globl SYMBOL'
+======================================
+
+`.global' makes the symbol visible to `ld'.  If you define SYMBOL in
+your partial program, its value is made available to other partial
+programs that are linked with it.  Otherwise, SYMBOL takes its
+attributes from a symbol of the same name from another file linked into
+the same program.
+
+   Both spellings (`.globl' and `.global') are accepted, for
+compatibility with other assemblers.
+
+   On the HPPA, `.global' is not always enough to make it accessible to
+other partial programs.  You may need the HPPA-only `.EXPORT' directive
+as well.  *Note HPPA Assembler Directives: HPPA Directives.
+
+
+File: as.info,  Node: Hidden,  Next: hword,  Prev: Global,  Up: Pseudo Ops
+
+7.43 `.hidden NAMES'
+====================
+
+This is one of the ELF visibility directives.  The other two are
+`.internal' (*note `.internal': Internal.) and `.protected' (*note
+`.protected': Protected.).
+
+   This directive overrides the named symbols default visibility (which
+is set by their binding: local, global or weak).  The directive sets
+the visibility to `hidden' which means that the symbols are not visible
+to other components.  Such symbols are always considered to be
+`protected' as well.
+
+
+File: as.info,  Node: hword,  Next: Ident,  Prev: Hidden,  Up: Pseudo Ops
+
+7.44 `.hword EXPRESSIONS'
+=========================
+
+This expects zero or more EXPRESSIONS, and emits a 16 bit number for
+each.
+
+   This directive is a synonym for `.short'; depending on the target
+architecture, it may also be a synonym for `.word'.
+
+
+File: as.info,  Node: Ident,  Next: If,  Prev: hword,  Up: Pseudo Ops
+
+7.45 `.ident'
+=============
+
+This directive is used by some assemblers to place tags in object files.
+`as' simply accepts the directive for source-file compatibility with
+such assemblers, but does not actually emit anything for it.
+
+
+File: as.info,  Node: If,  Next: Incbin,  Prev: Ident,  Up: Pseudo Ops
+
+7.46 `.if ABSOLUTE EXPRESSION'
+==============================
+
+`.if' marks the beginning of a section of code which is only considered
+part of the source program being assembled if the argument (which must
+be an ABSOLUTE EXPRESSION) is non-zero.  The end of the conditional
+section of code must be marked by `.endif' (*note `.endif': Endif.);
+optionally, you may include code for the alternative condition, flagged
+by `.else' (*note `.else': Else.).  If you have several conditions to
+check, `.elseif' may be used to avoid nesting blocks if/else within
+each subsequent `.else' block.
+
+   The following variants of `.if' are also supported:
+`.ifdef SYMBOL'
+     Assembles the following section of code if the specified SYMBOL
+     has been defined.  Note a symbol which has been referenced but not
+     yet defined is considered to be undefined.
+
+`.ifc STRING1,STRING2'
+     Assembles the following section of code if the two strings are the
+     same.  The strings may be optionally quoted with single quotes.
+     If they are not quoted, the first string stops at the first comma,
+     and the second string stops at the end of the line.  Strings which
+     contain whitespace should be quoted.  The string comparison is
+     case sensitive.
+
+`.ifeq ABSOLUTE EXPRESSION'
+     Assembles the following section of code if the argument is zero.
+
+`.ifeqs STRING1,STRING2'
+     Another form of `.ifc'.  The strings must be quoted using double
+     quotes.
+
+`.ifge ABSOLUTE EXPRESSION'
+     Assembles the following section of code if the argument is greater
+     than or equal to zero.
+
+`.ifgt ABSOLUTE EXPRESSION'
+     Assembles the following section of code if the argument is greater
+     than zero.
+
+`.ifle ABSOLUTE EXPRESSION'
+     Assembles the following section of code if the argument is less
+     than or equal to zero.
+
+`.iflt ABSOLUTE EXPRESSION'
+     Assembles the following section of code if the argument is less
+     than zero.
+
+`.ifnc STRING1,STRING2.'
+     Like `.ifc', but the sense of the test is reversed: this assembles
+     the following section of code if the two strings are not the same.
+
+`.ifndef SYMBOL'
+`.ifnotdef SYMBOL'
+     Assembles the following section of code if the specified SYMBOL
+     has not been defined.  Both spelling variants are equivalent.
+     Note a symbol which has been referenced but not yet defined is
+     considered to be undefined.
+
+`.ifne ABSOLUTE EXPRESSION'
+     Assembles the following section of code if the argument is not
+     equal to zero (in other words, this is equivalent to `.if').
+
+`.ifnes STRING1,STRING2'
+     Like `.ifeqs', but the sense of the test is reversed: this
+     assembles the following section of code if the two strings are not
+     the same.
+
+
+File: as.info,  Node: Incbin,  Next: Include,  Prev: If,  Up: Pseudo Ops
+
+7.47 `.incbin "FILE"[,SKIP[,COUNT]]'
+====================================
+
+The `incbin' directive includes FILE verbatim at the current location.
+You can control the search paths used with the `-I' command-line option
+(*note Command-Line Options: Invoking.).  Quotation marks are required
+around FILE.
+
+   The SKIP argument skips a number of bytes from the start of the
+FILE.  The COUNT argument indicates the maximum number of bytes to
+read.  Note that the data is not aligned in any way, so it is the user's
+responsibility to make sure that proper alignment is provided both
+before and after the `incbin' directive.
+
+
+File: as.info,  Node: Include,  Next: Int,  Prev: Incbin,  Up: Pseudo Ops
+
+7.48 `.include "FILE"'
+======================
+
+This directive provides a way to include supporting files at specified
+points in your source program.  The code from FILE is assembled as if
+it followed the point of the `.include'; when the end of the included
+file is reached, assembly of the original file continues.  You can
+control the search paths used with the `-I' command-line option (*note
+Command-Line Options: Invoking.).  Quotation marks are required around
+FILE.
+
+
+File: as.info,  Node: Int,  Next: Internal,  Prev: Include,  Up: Pseudo Ops
+
+7.49 `.int EXPRESSIONS'
+=======================
+
+Expect zero or more EXPRESSIONS, of any section, separated by commas.
+For each expression, emit a number that, at run time, is the value of
+that expression.  The byte order and bit size of the number depends on
+what kind of target the assembly is for.
+
+
+File: as.info,  Node: Internal,  Next: Irp,  Prev: Int,  Up: Pseudo Ops
+
+7.50 `.internal NAMES'
+======================
+
+This is one of the ELF visibility directives.  The other two are
+`.hidden' (*note `.hidden': Hidden.) and `.protected' (*note
+`.protected': Protected.).
+
+   This directive overrides the named symbols default visibility (which
+is set by their binding: local, global or weak).  The directive sets
+the visibility to `internal' which means that the symbols are
+considered to be `hidden' (i.e., not visible to other components), and
+that some extra, processor specific processing must also be performed
+upon the  symbols as well.
+
+
+File: as.info,  Node: Irp,  Next: Irpc,  Prev: Internal,  Up: Pseudo Ops
+
+7.51 `.irp SYMBOL,VALUES'...
+============================
+
+Evaluate a sequence of statements assigning different values to SYMBOL.
+The sequence of statements starts at the `.irp' directive, and is
+terminated by an `.endr' directive.  For each VALUE, SYMBOL is set to
+VALUE, and the sequence of statements is assembled.  If no VALUE is
+listed, the sequence of statements is assembled once, with SYMBOL set
+to the null string.  To refer to SYMBOL within the sequence of
+statements, use \SYMBOL.
+
+   For example, assembling
+
+             .irp    param,1,2,3
+             move    d\param,sp@-
+             .endr
+
+   is equivalent to assembling
+
+             move    d1,sp@-
+             move    d2,sp@-
+             move    d3,sp@-
+
+
+File: as.info,  Node: Irpc,  Next: Lcomm,  Prev: Irp,  Up: Pseudo Ops
+
+7.52 `.irpc SYMBOL,VALUES'...
+=============================
+
+Evaluate a sequence of statements assigning different values to SYMBOL.
+The sequence of statements starts at the `.irpc' directive, and is
+terminated by an `.endr' directive.  For each character in VALUE,
+SYMBOL is set to the character, and the sequence of statements is
+assembled.  If no VALUE is listed, the sequence of statements is
+assembled once, with SYMBOL set to the null string.  To refer to SYMBOL
+within the sequence of statements, use \SYMBOL.
+
+   For example, assembling
+
+             .irpc    param,123
+             move    d\param,sp@-
+             .endr
+
+   is equivalent to assembling
+
+             move    d1,sp@-
+             move    d2,sp@-
+             move    d3,sp@-
+
+
+File: as.info,  Node: Lcomm,  Next: Lflags,  Prev: Irpc,  Up: Pseudo Ops
+
+7.53 `.lcomm SYMBOL , LENGTH'
+=============================
+
+Reserve LENGTH (an absolute expression) bytes for a local common
+denoted by SYMBOL.  The section and value of SYMBOL are those of the
+new local common.  The addresses are allocated in the bss section, so
+that at run-time the bytes start off zeroed.  SYMBOL is not declared
+global (*note `.global': Global.), so is normally not visible to `ld'.
+
+   Some targets permit a third argument to be used with `.lcomm'.  This
+argument specifies the desired alignment of the symbol in the bss
+section.
+
+   The syntax for `.lcomm' differs slightly on the HPPA.  The syntax is
+`SYMBOL .lcomm, LENGTH'; SYMBOL is optional.
+
+
+File: as.info,  Node: Lflags,  Next: Line,  Prev: Lcomm,  Up: Pseudo Ops
+
+7.54 `.lflags'
+==============
+
+`as' accepts this directive, for compatibility with other assemblers,
+but ignores it.
+
+
+File: as.info,  Node: Line,  Next: Ln,  Prev: Lflags,  Up: Pseudo Ops
+
+7.55 `.line LINE-NUMBER'
+========================
+
+   Change the logical line number.  LINE-NUMBER must be an absolute
+expression.  The next line has that logical line number.  Therefore any
+other statements on the current line (after a statement separator
+character) are reported as on logical line number LINE-NUMBER - 1.  One
+day `as' will no longer support this directive: it is recognized only
+for compatibility with existing assembler programs.
+
+   _Warning:_ In the AMD29K configuration of as, this command is not
+available; use the synonym `.ln' in that context.
+
+   Even though this is a directive associated with the `a.out' or
+`b.out' object-code formats, `as' still recognizes it when producing
+COFF output, and treats `.line' as though it were the COFF `.ln' _if_
+it is found outside a `.def'/`.endef' pair.
+
+   Inside a `.def', `.line' is, instead, one of the directives used by
+compilers to generate auxiliary symbol information for debugging.
+
+
+File: as.info,  Node: Linkonce,  Next: List,  Prev: Ln,  Up: Pseudo Ops
+
+7.56 `.linkonce [TYPE]'
+=======================
+
+Mark the current section so that the linker only includes a single copy
+of it.  This may be used to include the same section in several
+different object files, but ensure that the linker will only include it
+once in the final output file.  The `.linkonce' pseudo-op must be used
+for each instance of the section.  Duplicate sections are detected
+based on the section name, so it should be unique.
+
+   This directive is only supported by a few object file formats; as of
+this writing, the only object file format which supports it is the
+Portable Executable format used on Windows NT.
+
+   The TYPE argument is optional.  If specified, it must be one of the
+following strings.  For example:
+     .linkonce same_size
+   Not all types may be supported on all object file formats.
+
+`discard'
+     Silently discard duplicate sections.  This is the default.
+
+`one_only'
+     Warn if there are duplicate sections, but still keep only one copy.
+
+`same_size'
+     Warn if any of the duplicates have different sizes.
+
+`same_contents'
+     Warn if any of the duplicates do not have exactly the same
+     contents.
+
+
+File: as.info,  Node: Ln,  Next: Linkonce,  Prev: Line,  Up: Pseudo Ops
+
+7.57 `.ln LINE-NUMBER'
+======================
+
+`.ln' is a synonym for `.line'.
+
+
+File: as.info,  Node: MRI,  Next: Noaltmacro,  Prev: Macro,  Up: Pseudo Ops
+
+7.58 `.mri VAL'
+===============
+
+If VAL is non-zero, this tells `as' to enter MRI mode.  If VAL is zero,
+this tells `as' to exit MRI mode.  This change affects code assembled
+until the next `.mri' directive, or until the end of the file.  *Note
+MRI mode: M.
+
+
+File: as.info,  Node: List,  Next: Long,  Prev: Linkonce,  Up: Pseudo Ops
+
+7.59 `.list'
+============
+
+Control (in conjunction with the `.nolist' directive) whether or not
+assembly listings are generated.  These two directives maintain an
+internal counter (which is zero initially).   `.list' increments the
+counter, and `.nolist' decrements it.  Assembly listings are generated
+whenever the counter is greater than zero.
+
+   By default, listings are disabled.  When you enable them (with the
+`-a' command line option; *note Command-Line Options: Invoking.), the
+initial value of the listing counter is one.
+
+
+File: as.info,  Node: Long,  Next: Macro,  Prev: List,  Up: Pseudo Ops
+
+7.60 `.long EXPRESSIONS'
+========================
+
+`.long' is the same as `.int', *note `.int': Int.
+
+
+File: as.info,  Node: Macro,  Next: MRI,  Prev: Long,  Up: Pseudo Ops
+
+7.61 `.macro'
+=============
+
+The commands `.macro' and `.endm' allow you to define macros that
+generate assembly output.  For example, this definition specifies a
+macro `sum' that puts a sequence of numbers into memory:
+
+             .macro  sum from=0, to=5
+             .long   \from
+             .if     \to-\from
+             sum     "(\from+1)",\to
+             .endif
+             .endm
+
+With that definition, `SUM 0,5' is equivalent to this assembly input:
+
+             .long   0
+             .long   1
+             .long   2
+             .long   3
+             .long   4
+             .long   5
+
+`.macro MACNAME'
+`.macro MACNAME MACARGS ...'
+     Begin the definition of a macro called MACNAME.  If your macro
+     definition requires arguments, specify their names after the macro
+     name, separated by commas or spaces.  You can supply a default
+     value for any macro argument by following the name with `=DEFLT'.
+     You cannot define two macros with the same MACNAME unless it has
+     been subject to the `.purgem' directive (*Note Purgem::.) between
+     the two definitions.  For example, these are all valid `.macro'
+     statements:
+
+    `.macro comm'
+          Begin the definition of a macro called `comm', which takes no
+          arguments.
+
+    `.macro plus1 p, p1'
+    `.macro plus1 p p1'
+          Either statement begins the definition of a macro called
+          `plus1', which takes two arguments; within the macro
+          definition, write `\p' or `\p1' to evaluate the arguments.
+
+    `.macro reserve_str p1=0 p2'
+          Begin the definition of a macro called `reserve_str', with two
+          arguments.  The first argument has a default value, but not
+          the second.  After the definition is complete, you can call
+          the macro either as `reserve_str A,B' (with `\p1' evaluating
+          to A and `\p2' evaluating to B), or as `reserve_str ,B' (with
+          `\p1' evaluating as the default, in this case `0', and `\p2'
+          evaluating to B).
+
+     When you call a macro, you can specify the argument values either
+     by position, or by keyword.  For example, `sum 9,17' is equivalent
+     to `sum to=17, from=9'.
+
+`.endm'
+     Mark the end of a macro definition.
+
+`.exitm'
+     Exit early from the current macro definition.
+
+`\@'
+     `as' maintains a counter of how many macros it has executed in
+     this pseudo-variable; you can copy that number to your output with
+     `\@', but _only within a macro definition_.
+
+`LOCAL NAME [ , ... ]'
+     _Warning: `LOCAL' is only available if you select "alternate macro
+     syntax" with `--alternate' or `.altmacro'._ *Note `.altmacro':
+     Altmacro.
+
+
+File: as.info,  Node: Altmacro,  Next: Ascii,  Prev: Align,  Up: Pseudo Ops
+
+7.62 `.altmacro'
+================
+
+Enable alternate macro mode, enabling:
+
+`LOCAL NAME [ , ... ]'
+     One additional directive, `LOCAL', is available.  It is used to
+     generate a string replacement for each of the NAME arguments, and
+     replace any instances of NAME in each macro expansion.  The
+     replacement string is unique in the assembly, and different for
+     each separate macro expansion.  `LOCAL' allows you to write macros
+     that define symbols, without fear of conflict between separate
+     macro expansions.
+
+`String delimiters'
+     You can write strings delimited in these other ways besides
+     `"STRING"':
+
+    `'STRING''
+          You can delimit strings with single-quote charaters.
+
+    `<STRING>'
+          You can delimit strings with matching angle brackets.
+
+`single-character string escape'
+     To include any single character literally in a string (even if the
+     character would otherwise have some special meaning), you can
+     prefix the character with `!' (an exclamation mark).  For example,
+     you can write `<4.3 !> 5.4!!>' to get the literal text `4.3 >
+     5.4!'.
+
+`Expression results as strings'
+     You can write `%EXPR' to evaluate the expression EXPR and use the
+     result as a string.
+
+
+File: as.info,  Node: Noaltmacro,  Next: Nolist,  Prev: MRI,  Up: Pseudo Ops
+
+7.63 `.noaltmacro'
+==================
+
+Disable alternate macro mode.  *Note Altmacro::
+
+
+File: as.info,  Node: Nolist,  Next: Octa,  Prev: Noaltmacro,  Up: Pseudo Ops
+
+7.64 `.nolist'
+==============
+
+Control (in conjunction with the `.list' directive) whether or not
+assembly listings are generated.  These two directives maintain an
+internal counter (which is zero initially).   `.list' increments the
+counter, and `.nolist' decrements it.  Assembly listings are generated
+whenever the counter is greater than zero.
+
+
+File: as.info,  Node: Octa,  Next: Org,  Prev: Nolist,  Up: Pseudo Ops
+
+7.65 `.octa BIGNUMS'
+====================
+
+This directive expects zero or more bignums, separated by commas.  For
+each bignum, it emits a 16-byte integer.
+
+   The term "octa" comes from contexts in which a "word" is two bytes;
+hence _octa_-word for 16 bytes.
+
+
+File: as.info,  Node: Org,  Next: P2align,  Prev: Octa,  Up: Pseudo Ops
+
+7.66 `.org NEW-LC , FILL'
+=========================
+
+Advance the location counter of the current section to NEW-LC.  NEW-LC
+is either an absolute expression or an expression with the same section
+as the current subsection.  That is, you can't use `.org' to cross
+sections: if NEW-LC has the wrong section, the `.org' directive is
+ignored.  To be compatible with former assemblers, if the section of
+NEW-LC is absolute, `as' issues a warning, then pretends the section of
+NEW-LC is the same as the current subsection.
+
+   `.org' may only increase the location counter, or leave it
+unchanged; you cannot use `.org' to move the location counter backwards.
+
+   Because `as' tries to assemble programs in one pass, NEW-LC may not
+be undefined.  If you really detest this restriction we eagerly await a
+chance to share your improved assembler.
+
+   Beware that the origin is relative to the start of the section, not
+to the start of the subsection.  This is compatible with other people's
+assemblers.
+
+   When the location counter (of the current subsection) is advanced,
+the intervening bytes are filled with FILL which should be an absolute
+expression.  If the comma and FILL are omitted, FILL defaults to zero.
+
+
+File: as.info,  Node: P2align,  Next: PopSection,  Prev: Org,  Up: Pseudo Ops
+
+7.67 `.p2align[wl] ABS-EXPR, ABS-EXPR, ABS-EXPR'
+================================================
+
+Pad the location counter (in the current subsection) to a particular
+storage boundary.  The first expression (which must be absolute) is the
+number of low-order zero bits the location counter must have after
+advancement.  For example `.p2align 3' advances the location counter
+until it a multiple of 8.  If the location counter is already a
+multiple of 8, no change is needed.
+
+   The second expression (also absolute) gives the fill value to be
+stored in the padding bytes.  It (and the comma) may be omitted.  If it
+is omitted, the padding bytes are normally zero.  However, on some
+systems, if the section is marked as containing code and the fill value
+is omitted, the space is filled with no-op instructions.
+
+   The third expression is also absolute, and is also optional.  If it
+is present, it is the maximum number of bytes that should be skipped by
+this alignment directive.  If doing the alignment would require
+skipping more bytes than the specified maximum, then the alignment is
+not done at all.  You can omit the fill value (the second argument)
+entirely by simply using two commas after the required alignment; this
+can be useful if you want the alignment to be filled with no-op
+instructions when appropriate.
+
+   The `.p2alignw' and `.p2alignl' directives are variants of the
+`.p2align' directive.  The `.p2alignw' directive treats the fill
+pattern as a two byte word value.  The `.p2alignl' directives treats the
+fill pattern as a four byte longword value.  For example, `.p2alignw
+2,0x368d' will align to a multiple of 4.  If it skips two bytes, they
+will be filled in with the value 0x368d (the exact placement of the
+bytes depends upon the endianness of the processor).  If it skips 1 or
+3 bytes, the fill value is undefined.
+
+
+File: as.info,  Node: Previous,  Next: Print,  Prev: PopSection,  Up: Pseudo Ops
+
+7.68 `.previous'
+================
+
+This is one of the ELF section stack manipulation directives.  The
+others are `.section' (*note Section::), `.subsection' (*note
+SubSection::), `.pushsection' (*note PushSection::), and `.popsection'
+(*note PopSection::).
+
+   This directive swaps the current section (and subsection) with most
+recently referenced section (and subsection) prior to this one.
+Multiple `.previous' directives in a row will flip between two sections
+(and their subsections).
+
+   In terms of the section stack, this directive swaps the current
+section with the top section on the section stack.
+
+
+File: as.info,  Node: PopSection,  Next: Previous,  Prev: P2align,  Up: Pseudo Ops
+
+7.69 `.popsection'
+==================
+
+This is one of the ELF section stack manipulation directives.  The
+others are `.section' (*note Section::), `.subsection' (*note
+SubSection::), `.pushsection' (*note PushSection::), and `.previous'
+(*note Previous::).
+
+   This directive replaces the current section (and subsection) with
+the top section (and subsection) on the section stack.  This section is
+popped off the stack.
+
+
+File: as.info,  Node: Print,  Next: Protected,  Prev: Previous,  Up: Pseudo Ops
+
+7.70 `.print STRING'
+====================
+
+`as' will print STRING on the standard output during assembly.  You
+must put STRING in double quotes.
+
+
+File: as.info,  Node: Protected,  Next: Psize,  Prev: Print,  Up: Pseudo Ops
+
+7.71 `.protected NAMES'
+=======================
+
+This is one of the ELF visibility directives.  The other two are
+`.hidden' (*note Hidden::) and `.internal' (*note Internal::).
+
+   This directive overrides the named symbols default visibility (which
+is set by their binding: local, global or weak).  The directive sets
+the visibility to `protected' which means that any references to the
+symbols from within the components that defines them must be resolved
+to the definition in that component, even if a definition in another
+component would normally preempt this.
+
+
+File: as.info,  Node: Psize,  Next: Purgem,  Prev: Protected,  Up: Pseudo Ops
+
+7.72 `.psize LINES , COLUMNS'
+=============================
+
+Use this directive to declare the number of lines--and, optionally, the
+number of columns--to use for each page, when generating listings.
+
+   If you do not use `.psize', listings use a default line-count of 60.
+You may omit the comma and COLUMNS specification; the default width is
+200 columns.
+
+   `as' generates formfeeds whenever the specified number of lines is
+exceeded (or whenever you explicitly request one, using `.eject').
+
+   If you specify LINES as `0', no formfeeds are generated save those
+explicitly specified with `.eject'.
+
+
+File: as.info,  Node: Purgem,  Next: PushSection,  Prev: Psize,  Up: Pseudo Ops
+
+7.73 `.purgem NAME'
+===================
+
+Undefine the macro NAME, so that later uses of the string will not be
+expanded.  *Note Macro::.
+
+
+File: as.info,  Node: PushSection,  Next: Quad,  Prev: Purgem,  Up: Pseudo Ops
+
+7.74 `.pushsection NAME , SUBSECTION'
+=====================================
+
+This is one of the ELF section stack manipulation directives.  The
+others are `.section' (*note Section::), `.subsection' (*note
+SubSection::), `.popsection' (*note PopSection::), and `.previous'
+(*note Previous::).
+
+   This directive pushes the current section (and subsection) onto the
+top of the section stack, and then replaces the current section and
+subsection with `name' and `subsection'.
+
+
+File: as.info,  Node: Quad,  Next: Rept,  Prev: PushSection,  Up: Pseudo Ops
+
+7.75 `.quad BIGNUMS'
+====================
+
+`.quad' expects zero or more bignums, separated by commas.  For each
+bignum, it emits an 8-byte integer.  If the bignum won't fit in 8
+bytes, it prints a warning message; and just takes the lowest order 8
+bytes of the bignum.  
+
+   The term "quad" comes from contexts in which a "word" is two bytes;
+hence _quad_-word for 8 bytes.
+
+
+File: as.info,  Node: Rept,  Next: Sbttl,  Prev: Quad,  Up: Pseudo Ops
+
+7.76 `.rept COUNT'
+==================
+
+Repeat the sequence of lines between the `.rept' directive and the next
+`.endr' directive COUNT times.
+
+   For example, assembling
+
+             .rept   3
+             .long   0
+             .endr
+
+   is equivalent to assembling
+
+             .long   0
+             .long   0
+             .long   0
+
+
+File: as.info,  Node: Sbttl,  Next: Scl,  Prev: Rept,  Up: Pseudo Ops
+
+7.77 `.sbttl "SUBHEADING"'
+==========================
+
+Use SUBHEADING as the title (third line, immediately after the title
+line) when generating assembly listings.
+
+   This directive affects subsequent pages, as well as the current page
+if it appears within ten lines of the top of a page.
+
+
+File: as.info,  Node: Scl,  Next: Section,  Prev: Sbttl,  Up: Pseudo Ops
+
+7.78 `.scl CLASS'
+=================
+
+Set the storage-class value for a symbol.  This directive may only be
+used inside a `.def'/`.endef' pair.  Storage class may flag whether a
+symbol is static or external, or it may record further symbolic
+debugging information.
+
+   The `.scl' directive is primarily associated with COFF output; when
+configured to generate `b.out' output format, `as' accepts this
+directive but ignores it.
+
+
+File: as.info,  Node: Section,  Next: Set,  Prev: Scl,  Up: Pseudo Ops
+
+7.79 `.section NAME'
+====================
+
+Use the `.section' directive to assemble the following code into a
+section named NAME.
+
+   This directive is only supported for targets that actually support
+arbitrarily named sections; on `a.out' targets, for example, it is not
+accepted, even with a standard `a.out' section name.
+
+COFF Version
+------------
+
+   For COFF targets, the `.section' directive is used in one of the
+following ways:
+
+     .section NAME[, "FLAGS"]
+     .section NAME[, SUBSEGMENT]
+
+   If the optional argument is quoted, it is taken as flags to use for
+the section.  Each flag is a single character.  The following flags are
+recognized:
+`b'
+     bss section (uninitialized data)
+
+`n'
+     section is not loaded
+
+`w'
+     writable section
+
+`d'
+     data section
+
+`r'
+     read-only section
+
+`x'
+     executable section
+
+`s'
+     shared section (meaningful for PE targets)
+
+`a'
+     ignored.  (For compatibility with the ELF version)
+
+   If no flags are specified, the default flags depend upon the section
+name.  If the section name is not recognized, the default will be for
+the section to be loaded and writable.  Note the `n' and `w' flags
+remove attributes from the section, rather than adding them, so if they
+are used on their own it will be as if no flags had been specified at
+all.
+
+   If the optional argument to the `.section' directive is not quoted,
+it is taken as a subsegment number (*note Sub-Sections::).
+
+ELF Version
+-----------
+
+   This is one of the ELF section stack manipulation directives.  The
+others are `.subsection' (*note SubSection::), `.pushsection' (*note
+PushSection::), `.popsection' (*note PopSection::), and `.previous'
+(*note Previous::).
+
+   For ELF targets, the `.section' directive is used like this:
+
+     .section NAME [, "FLAGS"[, @TYPE[,FLAG_SPECIFIC_ARGUMENTS]]
+
+   The optional FLAGS argument is a quoted string which may contain any
+combination of the following characters:
+`a'
+     section is allocatable
+
+`w'
+     section is writable
+
+`x'
+     section is executable
+
+`M'
+     section is mergeable
+
+`S'
+     section contains zero terminated strings
+
+`G'
+     section is a member of a section group
+
+`T'
+     section is used for thread-local-storage
+
+   The optional TYPE argument may contain one of the following
+constants:
+`@progbits'
+     section contains data
+
+`@nobits'
+     section does not contain data (i.e., section only occupies space)
+
+`@note'
+     section contains data which is used by things other than the
+     program
+
+`@init_array'
+     section contains an array of pointers to init functions
+
+`@fini_array'
+     section contains an array of pointers to finish functions
+
+`@preinit_array'
+     section contains an array of pointers to pre-init functions
+
+   Many targets only support the first three section types.
+
+   Note on targets where the `@' character is the start of a comment (eg
+ARM) then another character is used instead.  For example the ARM port
+uses the `%' character.
+
+   If FLAGS contains the `M' symbol then the TYPE argument must be
+specified as well as an extra argument - ENTSIZE - like this:
+
+     .section NAME , "FLAGS"M, @TYPE, ENTSIZE
+
+   Sections with the `M' flag but not `S' flag must contain fixed size
+constants, each ENTSIZE octets long. Sections with both `M' and `S'
+must contain zero terminated strings where each character is ENTSIZE
+bytes long. The linker may remove duplicates within sections with the
+same name, same entity size and same flags.  ENTSIZE must be an
+absolute expression.
+
+   If FLAGS contains the `G' symbol then the TYPE argument must be
+present along with an additional field like this:
+
+     .section NAME , "FLAGS"G, @TYPE, GROUPNAME[, LINKAGE]
+
+   The GROUPNAME field specifies the name of the section group to which
+this particular section belongs.  The optional linkage field can
+contain:
+`comdat'
+     indicates that only one copy of this section should be retained
+
+`.gnu.linkonce'
+     an alias for comdat
+
+   Note - if both the M and G flags are present then the fields for the
+Merge flag should come first, like this:
+
+     .section NAME , "FLAGS"MG, @TYPE, ENTSIZE, GROUPNAME[, LINKAGE]
+
+   If no flags are specified, the default flags depend upon the section
+name.  If the section name is not recognized, the default will be for
+the section to have none of the above flags: it will not be allocated
+in memory, nor writable, nor executable.  The section will contain data.
+
+   For ELF targets, the assembler supports another type of `.section'
+directive for compatibility with the Solaris assembler:
+
+     .section "NAME"[, FLAGS...]
+
+   Note that the section name is quoted.  There may be a sequence of
+comma separated flags:
+`#alloc'
+     section is allocatable
+
+`#write'
+     section is writable
+
+`#execinstr'
+     section is executable
+
+`#tls'
+     section is used for thread local storage
+
+   This directive replaces the current section and subsection.  See the
+contents of the gas testsuite directory `gas/testsuite/gas/elf' for
+some examples of how this directive and the other section stack
+directives work.
+
+
+File: as.info,  Node: Set,  Next: Short,  Prev: Section,  Up: Pseudo Ops
+
+7.80 `.set SYMBOL, EXPRESSION'
+==============================
+
+Set the value of SYMBOL to EXPRESSION.  This changes SYMBOL's value and
+type to conform to EXPRESSION.  If SYMBOL was flagged as external, it
+remains flagged (*note Symbol Attributes::).
+
+   You may `.set' a symbol many times in the same assembly.
+
+   If you `.set' a global symbol, the value stored in the object file
+is the last value stored into it.
+
+   The syntax for `set' on the HPPA is `SYMBOL .set EXPRESSION'.
+
+
+File: as.info,  Node: Short,  Next: Single,  Prev: Set,  Up: Pseudo Ops
+
+7.81 `.short EXPRESSIONS'
+=========================
+
+`.short' is normally the same as `.word'.  *Note `.word': Word.
+
+   In some configurations, however, `.short' and `.word' generate
+numbers of different lengths; *note Machine Dependencies::.
+
+
+File: as.info,  Node: Single,  Next: Size,  Prev: Short,  Up: Pseudo Ops
+
+7.82 `.single FLONUMS'
+======================
+
+This directive assembles zero or more flonums, separated by commas.  It
+has the same effect as `.float'.  The exact kind of floating point
+numbers emitted depends on how `as' is configured.  *Note Machine
+Dependencies::.
+
+
+File: as.info,  Node: Size,  Next: Skip,  Prev: Single,  Up: Pseudo Ops
+
+7.83 `.size'
+============
+
+This directive is used to set the size associated with a symbol.
+
+COFF Version
+------------
+
+   For COFF targets, the `.size' directive is only permitted inside
+`.def'/`.endef' pairs.  It is used like this:
+
+     .size EXPRESSION
+
+   `.size' is only meaningful when generating COFF format output; when
+`as' is generating `b.out', it accepts this directive but ignores it.
+
+ELF Version
+-----------
+
+   For ELF targets, the `.size' directive is used like this:
+
+     .size NAME , EXPRESSION
+
+   This directive sets the size associated with a symbol NAME.  The
+size in bytes is computed from EXPRESSION which can make use of label
+arithmetic.  This directive is typically used to set the size of
+function symbols.
+
+
+File: as.info,  Node: Sleb128,  Next: Space,  Prev: Skip,  Up: Pseudo Ops
+
+7.84 `.sleb128 EXPRESSIONS'
+===========================
+
+SLEB128 stands for "signed little endian base 128."  This is a compact,
+variable length representation of numbers used by the DWARF symbolic
+debugging format.  *Note `.uleb128': Uleb128.
+
+
+File: as.info,  Node: Skip,  Next: Sleb128,  Prev: Size,  Up: Pseudo Ops
+
+7.85 `.skip SIZE , FILL'
+========================
+
+This directive emits SIZE bytes, each of value FILL.  Both SIZE and
+FILL are absolute expressions.  If the comma and FILL are omitted, FILL
+is assumed to be zero.  This is the same as `.space'.
+
+
+File: as.info,  Node: Space,  Next: Stab,  Prev: Sleb128,  Up: Pseudo Ops
+
+7.86 `.space SIZE , FILL'
+=========================
+
+This directive emits SIZE bytes, each of value FILL.  Both SIZE and
+FILL are absolute expressions.  If the comma and FILL are omitted, FILL
+is assumed to be zero.  This is the same as `.skip'.
+
+     _Warning:_ `.space' has a completely different meaning for HPPA
+     targets; use `.block' as a substitute.  See `HP9000 Series 800
+     Assembly Language Reference Manual' (HP 92432-90001) for the
+     meaning of the `.space' directive.  *Note HPPA Assembler
+     Directives: HPPA Directives, for a summary.
+
+   On the AMD 29K, this directive is ignored; it is accepted for
+compatibility with other AMD 29K assemblers.
+
+     _Warning:_ In most versions of the GNU assembler, the directive
+     `.space' has the effect of `.block'  *Note Machine Dependencies::.
+
+
+File: as.info,  Node: Stab,  Next: String,  Prev: Space,  Up: Pseudo Ops
+
+7.87 `.stabd, .stabn, .stabs'
+=============================
+
+There are three directives that begin `.stab'.  All emit symbols (*note
+Symbols::), for use by symbolic debuggers.  The symbols are not entered
+in the `as' hash table: they cannot be referenced elsewhere in the
+source file.  Up to five fields are required:
+
+STRING
+     This is the symbol's name.  It may contain any character except
+     `\000', so is more general than ordinary symbol names.  Some
+     debuggers used to code arbitrarily complex structures into symbol
+     names using this field.
+
+TYPE
+     An absolute expression.  The symbol's type is set to the low 8
+     bits of this expression.  Any bit pattern is permitted, but `ld'
+     and debuggers choke on silly bit patterns.
+
+OTHER
+     An absolute expression.  The symbol's "other" attribute is set to
+     the low 8 bits of this expression.
+
+DESC
+     An absolute expression.  The symbol's descriptor is set to the low
+     16 bits of this expression.
+
+VALUE
+     An absolute expression which becomes the symbol's value.
+
+   If a warning is detected while reading a `.stabd', `.stabn', or
+`.stabs' statement, the symbol has probably already been created; you
+get a half-formed symbol in your object file.  This is compatible with
+earlier assemblers!
+
+`.stabd TYPE , OTHER , DESC'
+     The "name" of the symbol generated is not even an empty string.
+     It is a null pointer, for compatibility.  Older assemblers used a
+     null pointer so they didn't waste space in object files with empty
+     strings.
+
+     The symbol's value is set to the location counter, relocatably.
+     When your program is linked, the value of this symbol is the
+     address of the location counter when the `.stabd' was assembled.
+
+`.stabn TYPE , OTHER , DESC , VALUE'
+     The name of the symbol is set to the empty string `""'.
+
+`.stabs STRING ,  TYPE , OTHER , DESC , VALUE'
+     All five fields are specified.
+
+
+File: as.info,  Node: String,  Next: Struct,  Prev: Stab,  Up: Pseudo Ops
+
+7.88 `.string' "STR"
+====================
+
+Copy the characters in STR to the object file.  You may specify more
+than one string to copy, separated by commas.  Unless otherwise
+specified for a particular machine, the assembler marks the end of each
+string with a 0 byte.  You can use any of the escape sequences
+described in *Note Strings: Strings.
+
+
+File: as.info,  Node: Struct,  Next: SubSection,  Prev: String,  Up: Pseudo Ops
+
+7.89 `.struct EXPRESSION'
+=========================
+
+Switch to the absolute section, and set the section offset to
+EXPRESSION, which must be an absolute expression.  You might use this
+as follows:
+             .struct 0
+     field1:
+             .struct field1 + 4
+     field2:
+             .struct field2 + 4
+     field3:
+   This would define the symbol `field1' to have the value 0, the symbol
+`field2' to have the value 4, and the symbol `field3' to have the value
+8.  Assembly would be left in the absolute section, and you would need
+to use a `.section' directive of some sort to change to some other
+section before further assembly.
+
+
+File: as.info,  Node: SubSection,  Next: Symver,  Prev: Struct,  Up: Pseudo Ops
+
+7.90 `.subsection NAME'
+=======================
+
+This is one of the ELF section stack manipulation directives.  The
+others are `.section' (*note Section::), `.pushsection' (*note
+PushSection::), `.popsection' (*note PopSection::), and `.previous'
+(*note Previous::).
+
+   This directive replaces the current subsection with `name'.  The
+current section is not changed.  The replaced subsection is put onto
+the section stack in place of the then current top of stack subsection.
+
+
+File: as.info,  Node: Symver,  Next: Tag,  Prev: SubSection,  Up: Pseudo Ops
+
+7.91 `.symver'
+==============
+
+Use the `.symver' directive to bind symbols to specific version nodes
+within a source file.  This is only supported on ELF platforms, and is
+typically used when assembling files to be linked into a shared library.
+There are cases where it may make sense to use this in objects to be
+bound into an application itself so as to override a versioned symbol
+from a shared library.
+
+   For ELF targets, the `.symver' directive can be used like this:
+     .symver NAME, NAME2@NODENAME
+   If the symbol NAME is defined within the file being assembled, the
+`.symver' directive effectively creates a symbol alias with the name
+NAME2@NODENAME, and in fact the main reason that we just don't try and
+create a regular alias is that the @ character isn't permitted in
+symbol names.  The NAME2 part of the name is the actual name of the
+symbol by which it will be externally referenced.  The name NAME itself
+is merely a name of convenience that is used so that it is possible to
+have definitions for multiple versions of a function within a single
+source file, and so that the compiler can unambiguously know which
+version of a function is being mentioned.  The NODENAME portion of the
+alias should be the name of a node specified in the version script
+supplied to the linker when building a shared library.  If you are
+attempting to override a versioned symbol from a shared library, then
+NODENAME should correspond to the nodename of the symbol you are trying
+to override.
+
+   If the symbol NAME is not defined within the file being assembled,
+all references to NAME will be changed to NAME2@NODENAME.  If no
+reference to NAME is made, NAME2@NODENAME will be removed from the
+symbol table.
+
+   Another usage of the `.symver' directive is:
+     .symver NAME, NAME2@@NODENAME
+   In this case, the symbol NAME must exist and be defined within the
+file being assembled. It is similar to NAME2@NODENAME. The difference
+is NAME2@@NODENAME will also be used to resolve references to NAME2 by
+the linker.
+
+   The third usage of the `.symver' directive is:
+     .symver NAME, NAME2@@@NODENAME
+   When NAME is not defined within the file being assembled, it is
+treated as NAME2@NODENAME. When NAME is defined within the file being
+assembled, the symbol name, NAME, will be changed to NAME2@@NODENAME.
+
+
+File: as.info,  Node: Tag,  Next: Text,  Prev: Symver,  Up: Pseudo Ops
+
+7.92 `.tag STRUCTNAME'
+======================
+
+This directive is generated by compilers to include auxiliary debugging
+information in the symbol table.  It is only permitted inside
+`.def'/`.endef' pairs.  Tags are used to link structure definitions in
+the symbol table with instances of those structures.
+
+   `.tag' is only used when generating COFF format output; when `as' is
+generating `b.out', it accepts this directive but ignores it.
+
+
+File: as.info,  Node: Text,  Next: Title,  Prev: Tag,  Up: Pseudo Ops
+
+7.93 `.text SUBSECTION'
+=======================
+
+Tells `as' to assemble the following statements onto the end of the
+text subsection numbered SUBSECTION, which is an absolute expression.
+If SUBSECTION is omitted, subsection number zero is used.
+
+
+File: as.info,  Node: Title,  Next: Type,  Prev: Text,  Up: Pseudo Ops
+
+7.94 `.title "HEADING"'
+=======================
+
+Use HEADING as the title (second line, immediately after the source
+file name and pagenumber) when generating assembly listings.
+
+   This directive affects subsequent pages, as well as the current page
+if it appears within ten lines of the top of a page.
+
+
+File: as.info,  Node: Type,  Next: Uleb128,  Prev: Title,  Up: Pseudo Ops
+
+7.95 `.type'
+============
+
+This directive is used to set the type of a symbol.
+
+COFF Version
+------------
+
+   For COFF targets, this directive is permitted only within
+`.def'/`.endef' pairs.  It is used like this:
+
+     .type INT
+
+   This records the integer INT as the type attribute of a symbol table
+entry.
+
+   `.type' is associated only with COFF format output; when `as' is
+configured for `b.out' output, it accepts this directive but ignores it.
+
+ELF Version
+-----------
+
+   For ELF targets, the `.type' directive is used like this:
+
+     .type NAME , TYPE DESCRIPTION
+
+   This sets the type of symbol NAME to be either a function symbol or
+an object symbol.  There are five different syntaxes supported for the
+TYPE DESCRIPTION field, in order to provide compatibility with various
+other assemblers.  The syntaxes supported are:
+
+       .type <name>,#function
+       .type <name>,#object
+
+       .type <name>,@function
+       .type <name>,@object
+
+       .type <name>,%function
+       .type <name>,%object
+
+       .type <name>,"function"
+       .type <name>,"object"
+
+       .type <name> STT_FUNCTION
+       .type <name> STT_OBJECT
+
+
+File: as.info,  Node: Uleb128,  Next: Val,  Prev: Type,  Up: Pseudo Ops
+
+7.96 `.uleb128 EXPRESSIONS'
+===========================
+
+ULEB128 stands for "unsigned little endian base 128."  This is a
+compact, variable length representation of numbers used by the DWARF
+symbolic debugging format.  *Note `.sleb128': Sleb128.
+
+
+File: as.info,  Node: Val,  Next: Version,  Prev: Uleb128,  Up: Pseudo Ops
+
+7.97 `.val ADDR'
+================
+
+This directive, permitted only within `.def'/`.endef' pairs, records
+the address ADDR as the value attribute of a symbol table entry.
+
+   `.val' is used only for COFF output; when `as' is configured for
+`b.out', it accepts this directive but ignores it.
+
+
+File: as.info,  Node: Version,  Next: VTableEntry,  Prev: Val,  Up: Pseudo Ops
+
+7.98 `.version "STRING"'
+========================
+
+This directive creates a `.note' section and places into it an ELF
+formatted note of type NT_VERSION.  The note's name is set to `string'.
+
+
+File: as.info,  Node: VTableEntry,  Next: VTableInherit,  Prev: Version,  Up: Pseudo Ops
+
+7.99 `.vtable_entry TABLE, OFFSET'
+==================================
+
+This directive finds or creates a symbol `table' and creates a
+`VTABLE_ENTRY' relocation for it with an addend of `offset'.
+
+
+File: as.info,  Node: VTableInherit,  Next: Warning,  Prev: VTableEntry,  Up: Pseudo Ops
+
+7.100 `.vtable_inherit CHILD, PARENT'
+=====================================
+
+This directive finds the symbol `child' and finds or creates the symbol
+`parent' and then creates a `VTABLE_INHERIT' relocation for the parent
+whose addend is the value of the child symbol.  As a special case the
+parent name of `0' is treated as refering the `*ABS*' section.
+
+
+File: as.info,  Node: Warning,  Next: Weak,  Prev: VTableInherit,  Up: Pseudo Ops
+
+7.101 `.warning "STRING"'
+=========================
+
+Similar to the directive `.error' (*note `.error "STRING"': Error.),
+but just emits a warning.
+
+
+File: as.info,  Node: Weak,  Next: Word,  Prev: Warning,  Up: Pseudo Ops
+
+7.102 `.weak NAMES'
+===================
+
+This directive sets the weak attribute on the comma separated list of
+symbol `names'.  If the symbols do not already exist, they will be
+created.
+
+   On COFF targets other than PE, weak symbols are a GNU extension.
+This directive sets the weak attribute on the comma separated list of
+symbol `names'.  If the symbols do not already exist, they will be
+created.
+
+   On the PE target, weak symbols are supported natively as weak
+aliases.  When a weak symbol is created that is not an alias, GAS
+creates an alternate symbol to hold the default value.
+
+
+File: as.info,  Node: Word,  Next: Deprecated,  Prev: Weak,  Up: Pseudo Ops
+
+7.103 `.word EXPRESSIONS'
+=========================
+
+This directive expects zero or more EXPRESSIONS, of any section,
+separated by commas.
+
+   The size of the number emitted, and its byte order, depend on what
+target computer the assembly is for.
+
+     _Warning: Special Treatment to support Compilers_
+
+   Machines with a 32-bit address space, but that do less than 32-bit
+addressing, require the following special treatment.  If the machine of
+interest to you does 32-bit addressing (or doesn't require it; *note
+Machine Dependencies::), you can ignore this issue.
+
+   In order to assemble compiler output into something that works, `as'
+occasionally does strange things to `.word' directives.  Directives of
+the form `.word sym1-sym2' are often emitted by compilers as part of
+jump tables.  Therefore, when `as' assembles a directive of the form
+`.word sym1-sym2', and the difference between `sym1' and `sym2' does
+not fit in 16 bits, `as' creates a "secondary jump table", immediately
+before the next label.  This secondary jump table is preceded by a
+short-jump to the first byte after the secondary table.  This
+short-jump prevents the flow of control from accidentally falling into
+the new table.  Inside the table is a long-jump to `sym2'.  The
+original `.word' contains `sym1' minus the address of the long-jump to
+`sym2'.
+
+   If there were several occurrences of `.word sym1-sym2' before the
+secondary jump table, all of them are adjusted.  If there was a `.word
+sym3-sym4', that also did not fit in sixteen bits, a long-jump to
+`sym4' is included in the secondary jump table, and the `.word'
+directives are adjusted to contain `sym3' minus the address of the
+long-jump to `sym4'; and so on, for as many entries in the original
+jump table as necessary.
+
+
+File: as.info,  Node: Deprecated,  Prev: Word,  Up: Pseudo Ops
+
+7.104 Deprecated Directives
+===========================
+
+One day these directives won't work.  They are included for
+compatibility with older assemblers.
+.abort
+
+.line
+
+
+File: as.info,  Node: Machine Dependencies,  Next: Reporting Bugs,  Prev: Pseudo Ops,  Up: Top
+
+8 Machine Dependent Features
+****************************
+
+The machine instruction sets are (almost by definition) different on
+each machine where `as' runs.  Floating point representations vary as
+well, and `as' often supports a few additional directives or
+command-line options for compatibility with other assemblers on a
+particular platform.  Finally, some versions of `as' support special
+pseudo-instructions for branch optimization.
+
+   This chapter discusses most of these differences, though it does not
+include details on any machine's instruction set.  For details on that
+subject, see the hardware manufacturer's manual.
+
+* Menu:
+
+
+* AMD29K-Dependent::            AMD 29K Dependent Features
+
+* Alpha-Dependent::		Alpha Dependent Features
+
+* ARC-Dependent::               ARC Dependent Features
+
+* ARM-Dependent::               ARM Dependent Features
+
+* CRIS-Dependent::              CRIS Dependent Features
+
+* D10V-Dependent::              D10V Dependent Features
+
+* D30V-Dependent::              D30V Dependent Features
+
+* H8/300-Dependent::            Renesas H8/300 Dependent Features
+
+* H8/500-Dependent::            Renesas H8/500 Dependent Features
+
+* HPPA-Dependent::              HPPA Dependent Features
+
+* ESA/390-Dependent::           IBM ESA/390 Dependent Features
+
+* i386-Dependent::              Intel 80386 and AMD x86-64 Dependent Features
+
+* i860-Dependent::              Intel 80860 Dependent Features
+
+* i960-Dependent::              Intel 80960 Dependent Features
+
+* IA-64-Dependent::             Intel IA-64 Dependent Features
+
+* IP2K-Dependent::              IP2K Dependent Features
+
+* M32R-Dependent::              M32R Dependent Features
+
+* M68K-Dependent::              M680x0 Dependent Features
+
+* M68HC11-Dependent::           M68HC11 and 68HC12 Dependent Features
+
+* M88K-Dependent::		M880x0 Dependent Features
+
+* MIPS-Dependent::              MIPS Dependent Features
+
+* MMIX-Dependent::              MMIX Dependent Features
+
+* MSP430-Dependent::		MSP430 Dependent Features
+
+* SH-Dependent::                Renesas / SuperH SH Dependent Features
+* SH64-Dependent::              SuperH SH64 Dependent Features
+
+* PDP-11-Dependent::            PDP-11 Dependent Features
+
+* PJ-Dependent::                picoJava Dependent Features
+
+* PPC-Dependent::               PowerPC Dependent Features
+
+* Sparc-Dependent::             SPARC Dependent Features
+
+* TIC54X-Dependent::            TI TMS320C54x Dependent Features
+
+* V850-Dependent::              V850 Dependent Features
+
+* Xtensa-Dependent::            Xtensa Dependent Features
+
+* Z8000-Dependent::             Z8000 Dependent Features
+
+* Vax-Dependent::               VAX Dependent Features
+
+
+File: as.info,  Node: AMD29K-Dependent,  Next: Alpha-Dependent,  Up: Machine Dependencies
+
+8.1 AMD 29K Dependent Features
+==============================
+
+* Menu:
+
+* AMD29K Options::              Options
+* AMD29K Syntax::               Syntax
+* AMD29K Floating Point::       Floating Point
+* AMD29K Directives::           AMD 29K Machine Directives
+* AMD29K Opcodes::              Opcodes
+
+
+File: as.info,  Node: AMD29K Options,  Next: AMD29K Syntax,  Up: AMD29K-Dependent
+
+8.1.1 Options
+-------------
+
+`as' has no additional command-line options for the AMD 29K family.
+
+
+File: as.info,  Node: AMD29K Syntax,  Next: AMD29K Floating Point,  Prev: AMD29K Options,  Up: AMD29K-Dependent
+
+8.1.2 Syntax
+------------
+
+* Menu:
+
+* AMD29K-Macros::		Macros
+* AMD29K-Chars::                Special Characters
+* AMD29K-Regs::                 Register Names
+
+
+File: as.info,  Node: AMD29K-Macros,  Next: AMD29K-Chars,  Up: AMD29K Syntax
+
+8.1.2.1 Macros
+..............
+
+The macro syntax used on the AMD 29K is like that described in the AMD
+29K Family Macro Assembler Specification.  Normal `as' macros should
+still work.
+
+
+File: as.info,  Node: AMD29K-Chars,  Next: AMD29K-Regs,  Prev: AMD29K-Macros,  Up: AMD29K Syntax
+
+8.1.2.2 Special Characters
+..........................
+
+`;' is the line comment character.
+
+   The character `?' is permitted in identifiers (but may not begin an
+identifier).
+
+
+File: as.info,  Node: AMD29K-Regs,  Prev: AMD29K-Chars,  Up: AMD29K Syntax
+
+8.1.2.3 Register Names
+......................
+
+General-purpose registers are represented by predefined symbols of the
+form `GRNNN' (for global registers) or `LRNNN' (for local registers),
+where NNN represents a number between `0' and `127', written with no
+leading zeros.  The leading letters may be in either upper or lower
+case; for example, `gr13' and `LR7' are both valid register names.
+
+   You may also refer to general-purpose registers by specifying the
+register number as the result of an expression (prefixed with `%%' to
+flag the expression as a register number):
+     %%EXPRESSION
+   --where EXPRESSION must be an absolute expression evaluating to a
+number between `0' and `255'.  The range [0, 127] refers to global
+registers, and the range [128, 255] to local registers.
+
+   In addition, `as' understands the following protected
+special-purpose register names for the AMD 29K family:
+
+       vab    chd    pc0
+       ops    chc    pc1
+       cps    rbp    pc2
+       cfg    tmc    mmu
+       cha    tmr    lru
+
+   These unprotected special-purpose register names are also recognized:
+       ipc    alu    fpe
+       ipa    bp     inte
+       ipb    fc     fps
+       q      cr     exop
+
+
+File: as.info,  Node: AMD29K Floating Point,  Next: AMD29K Directives,  Prev: AMD29K Syntax,  Up: AMD29K-Dependent
+
+8.1.3 Floating Point
+--------------------
+
+The AMD 29K family uses IEEE floating-point numbers.
+
+
+File: as.info,  Node: AMD29K Directives,  Next: AMD29K Opcodes,  Prev: AMD29K Floating Point,  Up: AMD29K-Dependent
+
+8.1.4 AMD 29K Machine Directives
+--------------------------------
+
+`.block SIZE , FILL'
+     This directive emits SIZE bytes, each of value FILL.  Both SIZE
+     and FILL are absolute expressions.  If the comma and FILL are
+     omitted, FILL is assumed to be zero.
+
+     In other versions of the GNU assembler, this directive is called
+     `.space'.
+
+`.cputype'
+     This directive is ignored; it is accepted for compatibility with
+     other AMD 29K assemblers.
+
+`.file'
+     This directive is ignored; it is accepted for compatibility with
+     other AMD 29K assemblers.
+
+          _Warning:_ in other versions of the GNU assembler, `.file' is
+          used for the directive called `.app-file' in the AMD 29K
+          support.
+
+`.line'
+     This directive is ignored; it is accepted for compatibility with
+     other AMD 29K assemblers.
+
+`.sect'
+     This directive is ignored; it is accepted for compatibility with
+     other AMD 29K assemblers.
+
+`.use SECTION NAME'
+     Establishes the section and subsection for the following code;
+     SECTION NAME may be one of `.text', `.data', `.data1', or `.lit'.
+     With one of the first three SECTION NAME options, `.use' is
+     equivalent to the machine directive SECTION NAME; the remaining
+     case, `.use .lit', is the same as `.data 200'.
+
+
+File: as.info,  Node: AMD29K Opcodes,  Prev: AMD29K Directives,  Up: AMD29K-Dependent
+
+8.1.5 Opcodes
+-------------
+
+`as' implements all the standard AMD 29K opcodes.  No additional
+pseudo-instructions are needed on this family.
+
+   For information on the 29K machine instruction set, see `Am29000
+User's Manual', Advanced Micro Devices, Inc.
+
+
+File: as.info,  Node: Alpha-Dependent,  Next: ARC-Dependent,  Prev: AMD29K-Dependent,  Up: Machine Dependencies
+
+8.2 Alpha Dependent Features
+============================
+
+* Menu:
+
+* Alpha Notes::                Notes
+* Alpha Options::              Options
+* Alpha Syntax::               Syntax
+* Alpha Floating Point::       Floating Point
+* Alpha Directives::           Alpha Machine Directives
+* Alpha Opcodes::              Opcodes
+
+
+File: as.info,  Node: Alpha Notes,  Next: Alpha Options,  Up: Alpha-Dependent
+
+8.2.1 Notes
+-----------
+
+The documentation here is primarily for the ELF object format.  `as'
+also supports the ECOFF and EVAX formats, but features specific to
+these formats are not yet documented.
+
+
+File: as.info,  Node: Alpha Options,  Next: Alpha Syntax,  Prev: Alpha Notes,  Up: Alpha-Dependent
+
+8.2.2 Options
+-------------
+
+`-mCPU'
+     This option specifies the target processor.  If an attempt is made
+     to assemble an instruction which will not execute on the target
+     processor, the assembler may either expand the instruction as a
+     macro or issue an error message.  This option is equivalent to the
+     `.arch' directive.
+
+     The following processor names are recognized: `21064', `21064a',
+     `21066', `21068', `21164', `21164a', `21164pc', `21264', `21264a',
+     `21264b', `ev4', `ev5', `lca45', `ev5', `ev56', `pca56', `ev6',
+     `ev67', `ev68'.  The special name `all' may be used to allow the
+     assembler to accept instructions valid for any Alpha processor.
+
+     In order to support existing practice in OSF/1 with respect to
+     `.arch', and existing practice within `MILO' (the Linux ARC
+     bootloader), the numbered processor names (e.g. 21064) enable the
+     processor-specific PALcode instructions, while the
+     "electro-vlasic" names (e.g. `ev4') do not.
+
+`-mdebug'
+`-no-mdebug'
+     Enables or disables the generation of `.mdebug' encapsulation for
+     stabs directives and procedure descriptors.  The default is to
+     automatically enable `.mdebug' when the first stabs directive is
+     seen.
+
+`-relax'
+     This option forces all relocations to be put into the object file,
+     instead of saving space and resolving some relocations at assembly
+     time.  Note that this option does not propagate all symbol
+     arithmetic into the object file, because not all symbol arithmetic
+     can be represented.  However, the option can still be useful in
+     specific applications.
+
+`-g'
+     This option is used when the compiler generates debug information.
+     When `gcc' is using `mips-tfile' to generate debug information
+     for ECOFF, local labels must be passed through to the object file.
+     Otherwise this option has no effect.
+
+`-GSIZE'
+     A local common symbol larger than SIZE is placed in `.bss', while
+     smaller symbols are placed in `.sbss'.
+
+`-F'
+`-32addr'
+     These options are ignored for backward compatibility.
+
+
+File: as.info,  Node: Alpha Syntax,  Next: Alpha Floating Point,  Prev: Alpha Options,  Up: Alpha-Dependent
+
+8.2.3 Syntax
+------------
+
+The assembler syntax closely follow the Alpha Reference Manual;
+assembler directives and general syntax closely follow the OSF/1 and
+OpenVMS syntax, with a few differences for ELF.
+
+* Menu:
+
+* Alpha-Chars::                Special Characters
+* Alpha-Regs::                 Register Names
+* Alpha-Relocs::               Relocations
+
+
+File: as.info,  Node: Alpha-Chars,  Next: Alpha-Regs,  Up: Alpha Syntax
+
+8.2.3.1 Special Characters
+..........................
+
+`#' is the line comment character.
+
+   `;' can be used instead of a newline to separate statements.
+
+
+File: as.info,  Node: Alpha-Regs,  Next: Alpha-Relocs,  Prev: Alpha-Chars,  Up: Alpha Syntax
+
+8.2.3.2 Register Names
+......................
+
+The 32 integer registers are referred to as `$N' or `$rN'.  In
+addition, registers 15, 28, 29, and 30 may be referred to by the
+symbols `$fp', `$at', `$gp', and `$sp' respectively.
+
+   The 32 floating-point registers are referred to as `$fN'.
+
+
+File: as.info,  Node: Alpha-Relocs,  Prev: Alpha-Regs,  Up: Alpha Syntax
+
+8.2.3.3 Relocations
+...................
+
+Some of these relocations are available for ECOFF, but mostly only for
+ELF.  They are modeled after the relocation format introduced in
+Digital Unix 4.0, but there are additions.
+
+   The format is `!TAG' or `!TAG!NUMBER' where TAG is the name of the
+relocation.  In some cases NUMBER is used to relate specific
+instructions.
+
+   The relocation is placed at the end of the instruction like so:
+
+     ldah  $0,a($29)    !gprelhigh
+     lda   $0,a($0)     !gprellow
+     ldq   $1,b($29)    !literal!100
+     ldl   $2,0($1)     !lituse_base!100
+
+`!literal'
+`!literal!N'
+     Used with an `ldq' instruction to load the address of a symbol
+     from the GOT.
+
+     A sequence number N is optional, and if present is used to pair
+     `lituse' relocations with this `literal' relocation.  The `lituse'
+     relocations are used by the linker to optimize the code based on
+     the final location of the symbol.
+
+     Note that these optimizations are dependent on the data flow of the
+     program.  Therefore, if _any_ `lituse' is paired with a `literal'
+     relocation, then _all_ uses of the register set by the `literal'
+     instruction must also be marked with `lituse' relocations.  This
+     is because the original `literal' instruction may be deleted or
+     transformed into another instruction.
+
+     Also note that there may be a one-to-many relationship between
+     `literal' and `lituse', but not a many-to-one.  That is, if there
+     are two code paths that load up the same address and feed the
+     value to a single use, then the use may not use a `lituse'
+     relocation.
+
+`!lituse_base!N'
+     Used with any memory format instruction (e.g. `ldl') to indicate
+     that the literal is used for an address load.  The offset field of
+     the instruction must be zero.  During relaxation, the code may be
+     altered to use a gp-relative load.
+
+`!lituse_jsr!N'
+     Used with a register branch format instruction (e.g. `jsr') to
+     indicate that the literal is used for a call.  During relaxation,
+     the code may be altered to use a direct branch (e.g. `bsr').
+
+`!lituse_bytoff!N'
+     Used with a byte mask instruction (e.g. `extbl') to indicate that
+     only the low 3 bits of the address are relevant.  During
+     relaxation, the code may be altered to use an immediate instead of
+     a register shift.
+
+`!lituse_addr!N'
+     Used with any other instruction to indicate that the original
+     address is in fact used, and the original `ldq' instruction may
+     not be altered or deleted.  This is useful in conjunction with
+     `lituse_jsr' to test whether a weak symbol is defined.
+
+          ldq  $27,foo($29)   !literal!1
+          beq  $27,is_undef   !lituse_addr!1
+          jsr  $26,($27),foo  !lituse_jsr!1
+
+`!lituse_tlsgd!N'
+     Used with a register branch format instruction to indicate that the
+     literal is the call to `__tls_get_addr' used to compute the
+     address of the thread-local storage variable whose descriptor was
+     loaded with `!tlsgd!N'.
+
+`!lituse_tlsldm!N'
+     Used with a register branch format instruction to indicate that the
+     literal is the call to `__tls_get_addr' used to compute the
+     address of the base of the thread-local storage block for the
+     current module.  The descriptor for the module must have been
+     loaded with `!tlsldm!N'.
+
+`!gpdisp!N'
+     Used with `ldah' and `lda' to load the GP from the current
+     address, a-la the `ldgp' macro.  The source register for the
+     `ldah' instruction must contain the address of the `ldah'
+     instruction.  There must be exactly one `lda' instruction paired
+     with the `ldah' instruction, though it may appear anywhere in the
+     instruction stream.  The immediate operands must be zero.
+
+          bsr  $26,foo
+          ldah $29,0($26)     !gpdisp!1
+          lda  $29,0($29)     !gpdisp!1
+
+`!gprelhigh'
+     Used with an `ldah' instruction to add the high 16 bits of a
+     32-bit displacement from the GP.
+
+`!gprellow'
+     Used with any memory format instruction to add the low 16 bits of a
+     32-bit displacement from the GP.
+
+`!gprel'
+     Used with any memory format instruction to add a 16-bit
+     displacement from the GP.
+
+`!samegp'
+     Used with any branch format instruction to skip the GP load at the
+     target address.  The referenced symbol must have the same GP as the
+     source object file, and it must be declared to either not use `$27'
+     or perform a standard GP load in the first two instructions via the
+     `.prologue' directive.
+
+`!tlsgd'
+`!tlsgd!N'
+     Used with an `lda' instruction to load the address of a TLS
+     descriptor for a symbol in the GOT.
+
+     The sequence number N is optional, and if present it used to pair
+     the descriptor load with both the `literal' loading the address of
+     the `__tls_get_addr' function and the `lituse_tlsgd' marking the
+     call to that function.
+
+     For proper relaxation, both the `tlsgd', `literal' and `lituse'
+     relocations must be in the same extended basic block.  That is,
+     the relocation with the lowest address must be executed first at
+     runtime.
+
+`!tlsldm'
+`!tlsldm!N'
+     Used with an `lda' instruction to load the address of a TLS
+     descriptor for the current module in the GOT.
+
+     Similar in other respects to `tlsgd'.
+
+`!gotdtprel'
+     Used with an `ldq' instruction to load the offset of the TLS
+     symbol within its module's thread-local storage block.  Also known
+     as the dynamic thread pointer offset or dtp-relative offset.
+
+`!dtprelhi'
+`!dtprello'
+`!dtprel'
+     Like `gprel' relocations except they compute dtp-relative offsets.
+
+`!gottprel'
+     Used with an `ldq' instruction to load the offset of the TLS
+     symbol from the thread pointer.  Also known as the tp-relative
+     offset.
+
+`!tprelhi'
+`!tprello'
+`!tprel'
+     Like `gprel' relocations except they compute tp-relative offsets.
+
+
+File: as.info,  Node: Alpha Floating Point,  Next: Alpha Directives,  Prev: Alpha Syntax,  Up: Alpha-Dependent
+
+8.2.4 Floating Point
+--------------------
+
+The Alpha family uses both IEEE and VAX floating-point numbers.
+
+
+File: as.info,  Node: Alpha Directives,  Next: Alpha Opcodes,  Prev: Alpha Floating Point,  Up: Alpha-Dependent
+
+8.2.5 Alpha Assembler Directives
+--------------------------------
+
+`as' for the Alpha supports many additional directives for
+compatibility with the native assembler.  This section describes them
+only briefly.
+
+   These are the additional directives in `as' for the Alpha:
+
+`.arch CPU'
+     Specifies the target processor.  This is equivalent to the `-mCPU'
+     command-line option.  *Note Options: Alpha Options, for a list of
+     values for CPU.
+
+`.ent FUNCTION[, N]'
+     Mark the beginning of FUNCTION.  An optional number may follow for
+     compatibility with the OSF/1 assembler, but is ignored.  When
+     generating `.mdebug' information, this will create a procedure
+     descriptor for the function.  In ELF, it will mark the symbol as a
+     function a-la the generic `.type' directive.
+
+`.end FUNCTION'
+     Mark the end of FUNCTION.  In ELF, it will set the size of the
+     symbol a-la the generic `.size' directive.
+
+`.mask MASK, OFFSET'
+     Indicate which of the integer registers are saved in the current
+     function's stack frame.  MASK is interpreted a bit mask in which
+     bit N set indicates that register N is saved.  The registers are
+     saved in a block located OFFSET bytes from the "canonical frame
+     address" (CFA) which is the value of the stack pointer on entry to
+     the function.  The registers are saved sequentially, except that
+     the return address register (normally `$26') is saved first.
+
+     This and the other directives that describe the stack frame are
+     currently only used when generating `.mdebug' information.  They
+     may in the future be used to generate DWARF2 `.debug_frame' unwind
+     information for hand written assembly.
+
+`.fmask MASK, OFFSET'
+     Indicate which of the floating-point registers are saved in the
+     current stack frame.  The MASK and OFFSET parameters are
+     interpreted as with `.mask'.
+
+`.frame FRAMEREG, FRAMEOFFSET, RETREG[, ARGOFFSET]'
+     Describes the shape of the stack frame.  The frame pointer in use
+     is FRAMEREG; normally this is either `$fp' or `$sp'.  The frame
+     pointer is FRAMEOFFSET bytes below the CFA.  The return address is
+     initially located in RETREG until it is saved as indicated in
+     `.mask'.  For compatibility with OSF/1 an optional ARGOFFSET
+     parameter is accepted and ignored.  It is believed to indicate the
+     offset from the CFA to the saved argument registers.
+
+`.prologue N'
+     Indicate that the stack frame is set up and all registers have been
+     spilled.  The argument N indicates whether and how the function
+     uses the incoming "procedure vector" (the address of the called
+     function) in `$27'.  0 indicates that `$27' is not used; 1
+     indicates that the first two instructions of the function use `$27'
+     to perform a load of the GP register; 2 indicates that `$27' is
+     used in some non-standard way and so the linker cannot elide the
+     load of the procedure vector during relaxation.
+
+`.usepv FUNCTION, WHICH'
+     Used to indicate the use of the `$27' register, similar to
+     `.prologue', but without the other semantics of needing to be
+     inside an open `.ent'/`.end' block.
+
+     The WHICH argument should be either `no', indicating that `$27' is
+     not used, or `std', indicating that the first two instructions of
+     the function perform a GP load.
+
+     One might use this directive instead of `.prologue' if you are
+     also using dwarf2 CFI directives.
+
+`.gprel32 EXPRESSION'
+     Computes the difference between the address in EXPRESSION and the
+     GP for the current object file, and stores it in 4 bytes.  In
+     addition to being smaller than a full 8 byte address, this also
+     does not require a dynamic relocation when used in a shared
+     library.
+
+`.t_floating EXPRESSION'
+     Stores EXPRESSION as an IEEE double precision value.
+
+`.s_floating EXPRESSION'
+     Stores EXPRESSION as an IEEE single precision value.
+
+`.f_floating EXPRESSION'
+     Stores EXPRESSION as a VAX F format value.
+
+`.g_floating EXPRESSION'
+     Stores EXPRESSION as a VAX G format value.
+
+`.d_floating EXPRESSION'
+     Stores EXPRESSION as a VAX D format value.
+
+`.set FEATURE'
+     Enables or disables various assembler features.  Using the positive
+     name of the feature enables while using `noFEATURE' disables.
+
+    `at'
+          Indicates that macro expansions may clobber the "assembler
+          temporary" (`$at' or `$28') register.  Some macros may not be
+          expanded without this and will generate an error message if
+          `noat' is in effect.  When `at' is in effect, a warning will
+          be generated if `$at' is used by the programmer.
+
+    `macro'
+          Enables the expansion of macro instructions.  Note that
+          variants of real instructions, such as `br label' vs `br
+          $31,label' are considered alternate forms and not macros.
+
+    `move'
+    `reorder'
+    `volatile'
+          These control whether and how the assembler may re-order
+          instructions.  Accepted for compatibility with the OSF/1
+          assembler, but `as' does not do instruction scheduling, so
+          these features are ignored.
+
+   The following directives are recognized for compatibility with the
+OSF/1 assembler but are ignored.
+
+     .proc           .aproc
+     .reguse         .livereg
+     .option         .aent
+     .ugen           .eflag
+     .alias          .noalias
+
+
+File: as.info,  Node: Alpha Opcodes,  Prev: Alpha Directives,  Up: Alpha-Dependent
+
+8.2.6 Opcodes
+-------------
+
+For detailed information on the Alpha machine instruction set, see the
+Alpha Architecture Handbook
+(ftp://ftp.digital.com/pub/Digital/info/semiconductor/literature/alphaahb.pdf).
+
+
+File: as.info,  Node: ARC-Dependent,  Next: ARM-Dependent,  Prev: Alpha-Dependent,  Up: Machine Dependencies
+
+8.3 ARC Dependent Features
+==========================
+
+* Menu:
+
+* ARC Options::              Options
+* ARC Syntax::               Syntax
+* ARC Floating Point::       Floating Point
+* ARC Directives::           ARC Machine Directives
+* ARC Opcodes::              Opcodes
+
+
+File: as.info,  Node: ARC Options,  Next: ARC Syntax,  Up: ARC-Dependent
+
+8.3.1 Options
+-------------
+
+`-marc[5|6|7|8]'
+     This option selects the core processor variant.  Using `-marc' is
+     the same as `-marc6', which is also the default.
+
+    `arc5'
+          Base instruction set.
+
+    `arc6'
+          Jump-and-link (jl) instruction.  No requirement of an
+          instruction between setting flags and conditional jump.  For
+          example:
+
+                 mov.f r0,r1
+                 beq   foo
+
+    `arc7'
+          Break (brk) and sleep (sleep) instructions.
+
+    `arc8'
+          Software interrupt (swi) instruction.
+
+
+     Note: the `.option' directive can to be used to select a core
+     variant from within assembly code.
+
+`-EB'
+     This option specifies that the output generated by the assembler
+     should be marked as being encoded for a big-endian processor.
+
+`-EL'
+     This option specifies that the output generated by the assembler
+     should be marked as being encoded for a little-endian processor -
+     this is the default.
+
+
+
+File: as.info,  Node: ARC Syntax,  Next: ARC Floating Point,  Prev: ARC Options,  Up: ARC-Dependent
+
+8.3.2 Syntax
+------------
+
+* Menu:
+
+* ARC-Chars::                Special Characters
+* ARC-Regs::                 Register Names
+
+
+File: as.info,  Node: ARC-Chars,  Next: ARC-Regs,  Up: ARC Syntax
+
+8.3.2.1 Special Characters
+..........................
+
+*TODO*
+
+
+File: as.info,  Node: ARC-Regs,  Prev: ARC-Chars,  Up: ARC Syntax
+
+8.3.2.2 Register Names
+......................
+
+*TODO*
+
+
+File: as.info,  Node: ARC Floating Point,  Next: ARC Directives,  Prev: ARC Syntax,  Up: ARC-Dependent
+
+8.3.3 Floating Point
+--------------------
+
+The ARC core does not currently have hardware floating point support.
+Software floating point support is provided by `GCC' and uses IEEE
+floating-point numbers.
+
+
+File: as.info,  Node: ARC Directives,  Next: ARC Opcodes,  Prev: ARC Floating Point,  Up: ARC-Dependent
+
+8.3.4 ARC Machine Directives
+----------------------------
+
+The ARC version of `as' supports the following additional machine
+directives:
+
+`.2byte EXPRESSIONS'
+     *TODO*
+
+`.3byte EXPRESSIONS'
+     *TODO*
+
+`.4byte EXPRESSIONS'
+     *TODO*
+
+`.extAuxRegister NAME,ADDRESS,MODE'
+     The ARCtangent A4 has extensible auxiliary register space.  The
+     auxiliary registers can be defined in the assembler source code by
+     using this directive.  The first parameter is the NAME of the new
+     auxiallry register.  The second parameter is the ADDRESS of the
+     register in the auxiliary register memory map for the variant of
+     the ARC.  The third parameter specifies the MODE in which the
+     register can be operated is and it can be one of:
+
+    `r          (readonly)'
+
+    `w          (write only)'
+
+    `r|w        (read or write)'
+
+     For example:
+
+            .extAuxRegister mulhi,0x12,w
+
+     This specifies an extension auxiliary register called _mulhi_
+     which is at address 0x12 in the memory space and which is only
+     writable.
+
+`.extCondCode SUFFIX,VALUE'
+     The condition codes on the ARCtangent A4 are extensible and can be
+     specified by means of this assembler directive.  They are specified
+     by the suffix and the value for the condition code.  They can be
+     used to specify extra condition codes with any values.  For
+     example:
+
+            .extCondCode is_busy,0x14
+
+             add.is_busy  r1,r2,r3
+             bis_busy     _main
+
+`.extCoreRegister NAME,REGNUM,MODE,SHORTCUT'
+     Specifies an extension core register NAME for the application.
+     This allows a register NAME with a valid REGNUM between 0 and 60,
+     with the following as valid values for MODE
+
+    `_r_   (readonly)'
+
+    `_w_   (write only)'
+
+    `_r|w_ (read or write)'
+
+     The other parameter gives a description of the register having a
+     SHORTCUT in the pipeline.  The valid values are:
+
+    `can_shortcut'
+
+    `cannot_shortcut'
+
+     For example:
+
+            .extCoreRegister mlo,57,r,can_shortcut
+
+     This defines an extension core register mlo with the value 57 which
+     can shortcut the pipeline.
+
+`.extInstruction NAME,OPCODE,SUBOPCODE,SUFFIXCLASS,SYNTAXCLASS'
+     The ARCtangent A4 allows the user to specify extension
+     instructions.  The extension instructions are not macros.  The
+     assembler creates encodings for use of these instructions
+     according to the specification by the user.  The parameters are:
+
+    *NAME
+          Name of the extension instruction
+
+    *OPCODE
+          Opcode to be used. (Bits 27:31 in the encoding).  Valid values
+          0x10-0x1f or 0x03
+
+    *SUBOPCODE
+          Subopcode to be used.  Valid values are from 0x09-0x3f.
+          However the correct value also depends on SYNTAXCLASS
+
+    *SUFFIXCLASS
+          Determines the kinds of suffixes to be allowed.  Valid values
+          are `SUFFIX_NONE', `SUFFIX_COND', `SUFFIX_FLAG' which
+          indicates the absence or presence of conditional suffixes and
+          flag setting by the extension instruction.  It is also
+          possible to specify that an instruction sets the flags and is
+          conditional by using `SUFFIX_CODE' | `SUFFIX_FLAG'.
+
+    *SYNTAXCLASS
+          Determines the syntax class for the instruction.  It can have
+          the following values:
+
+         ``SYNTAX_2OP':'
+               2 Operand Instruction
+
+         ``SYNTAX_3OP':'
+               3 Operand Instruction
+
+          In addition there could be modifiers for the syntax class as
+          described below:
+
+               Syntax Class Modifiers are:
+
+             - `OP1_MUST_BE_IMM': Modifies syntax class SYNTAX_3OP,
+               specifying that the first operand of a three-operand
+               instruction must be an immediate (i.e. the result is
+               discarded).  OP1_MUST_BE_IMM is used by bitwise ORing it
+               with SYNTAX_3OP as given in the example below.  This
+               could usually be used to set the flags using specific
+               instructions and not retain results.
+
+             - `OP1_IMM_IMPLIED': Modifies syntax class SYNTAX_20P, it
+               specifies that there is an implied immediate destination
+               operand which does not appear in the syntax.  For
+               example, if the source code contains an instruction like:
+
+                    inst r1,r2
+
+               it really means that the first argument is an implied
+               immediate (that is, the result is discarded).  This is
+               the same as though the source code were: inst 0,r1,r2.
+               You use OP1_IMM_IMPLIED by bitwise ORing it with
+               SYNTAX_20P.
+
+
+     For example, defining 64-bit multiplier with immediate operands:
+
+          .extInstruction mp64,0x14,0x0,SUFFIX_COND | SUFFIX_FLAG ,
+                          SYNTAX_3OP|OP1_MUST_BE_IMM
+
+     The above specifies an extension instruction called mp64 which has
+     3 operands, sets the flags, can be used with a condition code, for
+     which the first operand is an immediate.  (Equivalent to
+     discarding the result of the operation).
+
+           .extInstruction mul64,0x14,0x00,SUFFIX_COND, SYNTAX_2OP|OP1_IMM_IMPLIED
+
+     This describes a 2 operand instruction with an implicit first
+     immediate operand.  The result of this operation would be
+     discarded.
+
+`.half EXPRESSIONS'
+     *TODO*
+
+`.long EXPRESSIONS'
+     *TODO*
+
+`.option ARC|ARC5|ARC6|ARC7|ARC8'
+     The `.option' directive must be followed by the desired core
+     version. Again `arc' is an alias for `arc6'.
+
+     Note: the `.option' directive overrides the command line option
+     `-marc'; a warning is emitted when the version is not consistent
+     between the two - even for the implicit default core version
+     (arc6).
+
+`.short EXPRESSIONS'
+     *TODO*
+
+`.word EXPRESSIONS'
+     *TODO*
+
+
+
+File: as.info,  Node: ARC Opcodes,  Prev: ARC Directives,  Up: ARC-Dependent
+
+8.3.5 Opcodes
+-------------
+
+For information on the ARC instruction set, see `ARC Programmers
+Reference Manual', ARC International (www.arc.com)
+
+
+File: as.info,  Node: ARM-Dependent,  Next: CRIS-Dependent,  Prev: ARC-Dependent,  Up: Machine Dependencies
+
+8.4 ARM Dependent Features
+==========================
+
+* Menu:
+
+* ARM Options::              Options
+* ARM Syntax::               Syntax
+* ARM Floating Point::       Floating Point
+* ARM Directives::           ARM Machine Directives
+* ARM Opcodes::              Opcodes
+* ARM Mapping Symbols::      Mapping Symbols
+
+
+File: as.info,  Node: ARM Options,  Next: ARM Syntax,  Up: ARM-Dependent
+
+8.4.1 Options
+-------------
+
+`-mcpu=PROCESSOR[+EXTENSION...]'
+     This option specifies the target processor.  The assembler will
+     issue an error message if an attempt is made to assemble an
+     instruction which will not execute on the target processor.  The
+     following processor names are recognized: `arm1', `arm2', `arm250',
+     `arm3', `arm6', `arm60', `arm600', `arm610', `arm620', `arm7',
+     `arm7m', `arm7d', `arm7dm', `arm7di', `arm7dmi', `arm70', `arm700',
+     `arm700i', `arm710', `arm710t', `arm720', `arm720t', `arm740t',
+     `arm710c', `arm7100', `arm7500', `arm7500fe', `arm7t', `arm7tdmi',
+     `arm7tdmi-s', `arm8', `arm810', `strongarm', `strongarm1',
+     `strongarm110', `strongarm1100', `strongarm1110', `arm9', `arm920',
+     `arm920t', `arm922t', `arm940t', `arm9tdmi', `arm9e', `arm926e',
+     `arm926ej-s', `arm946e-r0', `arm946e', `arm966e-r0', `arm966e',
+     `arm10t', `arm10e', `arm1020', `arm1020t', `arm1020e',
+     `arm1026ej-s', `arm1136j-s', `arm1136jf-s', `arm1176jz-s',
+     `arm1176jzf-s', `mpcore', `mpcorenovfp', `ep9312' (ARM920 with
+     Cirrus Maverick coprocessor), `i80200' (Intel XScale processor)
+     `iwmmxt' (Intel(r) XScale processor with Wireless MMX(tm)
+     technology coprocessor) and `xscale'.  The special name `all' may
+     be used to allow the assembler to accept instructions valid for
+     any ARM processor.
+
+     In addition to the basic instruction set, the assembler can be
+     told to accept various extension mnemonics that extend the
+     processor using the co-processor instruction space.  For example,
+     `-mcpu=arm920+maverick' is equivalent to specifying
+     `-mcpu=ep9312'.  The following extensions are currently supported:
+     `+maverick' `+iwmmxt' and `+xscale'.
+
+`-march=ARCHITECTURE[+EXTENSION...]'
+     This option specifies the target architecture.  The assembler will
+     issue an error message if an attempt is made to assemble an
+     instruction which will not execute on the target architecture.
+     The following architecture names are recognized: `armv1', `armv2',
+     `armv2a', `armv2s', `armv3', `armv3m', `armv4', `armv4xm',
+     `armv4t', `armv4txm', `armv5', `armv5t', `armv5txm', `armv5te',
+     `armv5texp', `armv6', `armv6j', `armv6k', `armv6z', `armv6zk',
+     `iwmmxt' and `xscale'.  If both `-mcpu' and `-march' are
+     specified, the assembler will use the setting for `-mcpu'.
+
+     The architecture option can be extended with the same instruction
+     set extension options as the `-mcpu' option.
+
+`-mfpu=FLOATING-POINT-FORMAT'
+     This option specifies the floating point format to assemble for.
+     The assembler will issue an error message if an attempt is made to
+     assemble an instruction which will not execute on the target
+     floating point unit.  The following format options are recognized:
+     `softfpa', `fpe', `fpe2', `fpe3', `fpa', `fpa10', `fpa11',
+     `arm7500fe', `softvfp', `softvfp+vfp', `vfp', `vfp10', `vfp10-r0',
+     `vfp9', `vfpxd', `arm1020t', `arm1020e', `arm1136jf-s' and
+     `maverick'.
+
+     In addition to determining which instructions are assembled, this
+     option also affects the way in which the `.double' assembler
+     directive behaves when assembling little-endian code.
+
+     The default is dependent on the processor selected.  For
+     Architecture 5 or later, the default is to assembler for VFP
+     instructions; for earlier architectures the default is to assemble
+     for FPA instructions.
+
+`-mthumb'
+     This option specifies that the assembler should start assembling
+     Thumb instructions; that is, it should behave as though the file
+     starts with a `.code 16' directive.
+
+`-mthumb-interwork'
+     This option specifies that the output generated by the assembler
+     should be marked as supporting interworking.
+
+`-mapcs `[26|32]''
+     This option specifies that the output generated by the assembler
+     should be marked as supporting the indicated version of the Arm
+     Procedure.  Calling Standard.
+
+`-matpcs'
+     This option specifies that the output generated by the assembler
+     should be marked as supporting the Arm/Thumb Procedure Calling
+     Standard.  If enabled this option will cause the assembler to
+     create an empty debugging section in the object file called
+     .arm.atpcs.  Debuggers can use this to determine the ABI being
+     used by.
+
+`-mapcs-float'
+     This indicates the floating point variant of the APCS should be
+     used.  In this variant floating point arguments are passed in FP
+     registers rather than integer registers.
+
+`-mapcs-reentrant'
+     This indicates that the reentrant variant of the APCS should be
+     used.  This variant supports position independent code.
+
+`-mfloat-abi=ABI'
+     This option specifies that the output generated by the assembler
+     should be marked as using specified floating point ABI.  The
+     following values are recognized: `soft', `softfp' and `hard'.
+
+`-meabi=VER'
+     This option specifies which EABI version the produced object files
+     should conform to.  The following values are recognised: `gnu' and
+     `4'.
+
+`-EB'
+     This option specifies that the output generated by the assembler
+     should be marked as being encoded for a big-endian processor.
+
+`-EL'
+     This option specifies that the output generated by the assembler
+     should be marked as being encoded for a little-endian processor.
+
+`-k'
+     This option specifies that the output of the assembler should be
+     marked as position-independent code (PIC).
+
+
+
+File: as.info,  Node: ARM Syntax,  Next: ARM Floating Point,  Prev: ARM Options,  Up: ARM-Dependent
+
+8.4.2 Syntax
+------------
+
+* Menu:
+
+* ARM-Chars::                Special Characters
+* ARM-Regs::                 Register Names
+
+
+File: as.info,  Node: ARM-Chars,  Next: ARM-Regs,  Up: ARM Syntax
+
+8.4.2.1 Special Characters
+..........................
+
+The presence of a `@' on a line indicates the start of a comment that
+extends to the end of the current line.  If a `#' appears as the first
+character of a line, the whole line is treated as a comment.
+
+   The `;' character can be used instead of a newline to separate
+statements.
+
+   Either `#' or `$' can be used to indicate immediate operands.
+
+   *TODO* Explain about /data modifier on symbols.
+
+
+File: as.info,  Node: ARM-Regs,  Prev: ARM-Chars,  Up: ARM Syntax
+
+8.4.2.2 Register Names
+......................
+
+*TODO* Explain about ARM register naming, and the predefined names.
+
+
+File: as.info,  Node: ARM Floating Point,  Next: ARM Directives,  Prev: ARM Syntax,  Up: ARM-Dependent
+
+8.4.3 Floating Point
+--------------------
+
+The ARM family uses IEEE floating-point numbers.
+
+
+File: as.info,  Node: ARM Directives,  Next: ARM Opcodes,  Prev: ARM Floating Point,  Up: ARM-Dependent
+
+8.4.4 ARM Machine Directives
+----------------------------
+
+`.align EXPRESSION [, EXPRESSION]'
+     This is the generic .ALIGN directive.  For the ARM however if the
+     first argument is zero (ie no alignment is needed) the assembler
+     will behave as if the argument had been 2 (ie pad to the next four
+     byte boundary).  This is for compatibility with ARM's own
+     assembler.
+
+`NAME .req REGISTER NAME'
+     This creates an alias for REGISTER NAME called NAME.  For example:
+
+                  foo .req r0
+
+`.unreq ALIAS-NAME'
+     This undefines a register alias which was previously defined using
+     the `req' directive.  For example:
+
+                  foo .req r0
+                  .unreq foo
+
+     An error occurs if the name is undefined.  Note - this pseudo op
+     can be used to delete builtin in register name aliases (eg 'r0').
+     This should only be done if it is really necessary.
+
+`.code `[16|32]''
+     This directive selects the instruction set being generated. The
+     value 16 selects Thumb, with the value 32 selecting ARM.
+
+`.thumb'
+     This performs the same action as .CODE 16.
+
+`.arm'
+     This performs the same action as .CODE 32.
+
+`.force_thumb'
+     This directive forces the selection of Thumb instructions, even if
+     the target processor does not support those instructions
+
+`.thumb_func'
+     This directive specifies that the following symbol is the name of a
+     Thumb encoded function.  This information is necessary in order to
+     allow the assembler and linker to generate correct code for
+     interworking between Arm and Thumb instructions and should be used
+     even if interworking is not going to be performed.  The presence
+     of this directive also implies `.thumb'
+
+`.thumb_set'
+     This performs the equivalent of a `.set' directive in that it
+     creates a symbol which is an alias for another symbol (possibly
+     not yet defined).  This directive also has the added property in
+     that it marks the aliased symbol as being a thumb function entry
+     point, in the same way that the `.thumb_func' directive does.
+
+`.ltorg'
+     This directive causes the current contents of the literal pool to
+     be dumped into the current section (which is assumed to be the
+     .text section) at the current location (aligned to a word
+     boundary).  `GAS' maintains a separate literal pool for each
+     section and each sub-section.  The `.ltorg' directive will only
+     affect the literal pool of the current section and sub-section.
+     At the end of assembly all remaining, un-empty literal pools will
+     automatically be dumped.
+
+     Note - older versions of `GAS' would dump the current literal pool
+     any time a section change occurred.  This is no longer done, since
+     it prevents accurate control of the placement of literal pools.
+
+`.pool'
+     This is a synonym for .ltorg.
+
+`.unwind_fnstart'
+     Marks the start of a function with an unwind table entry.
+
+`.unwind_fnend'
+     Marks the end of a function with an unwind table entry.  The
+     unwind index table entry is created when this directive is
+     processed.
+
+     If no personality routine has been specified then standard
+     personality routine 0 or 1 will be used, depending on the number
+     of unwind opcodes required.
+
+`.cantunwind'
+     Prevents unwinding through the current function.  No personality
+     routine or exception table data is required or permitted.
+
+`.personality NAME'
+     Sets the personality routine for the current function to NAME.
+
+`.personalityindex INDEX'
+     Sets the personality routine for the current function to the EABI
+     standard routine number INDEX
+
+`.handlerdata'
+     Marks the end of the current function, and the start of the
+     exception table entry for that function.  Anything between this
+     directive and the `.fnend' directive will be added to the
+     exception table entry.
+
+     Must be preceded by a `.personality' or `.personalityindex'
+     directive.
+
+`.save REGLIST'
+     Generate unwinder annotations to restore the registers in REGLIST.
+     The format of REGLIST is the same as the corresponding
+     store-multiple instruction.
+
+     _core registers_
+            .save {r4, r5, r6, lr}
+            stmfd sp!, {r4, r5, r6, lr}
+     _FPA registers_
+            .save f4, 2
+            sfmfd f4, 2, [sp]!
+     _VFP registers_
+            .save {d8, d9, d10}
+            fstmdf sp!, {d8, d9, d10}
+     _iWMMXt registers_
+            .save {wr10, wr11}
+            wstrd wr11, [sp, #-8]!
+            wstrd wr10, [sp, #-8]!
+          or
+            .save wr11
+            wstrd wr11, [sp, #-8]!
+            .save wr10
+            wstrd wr10, [sp, #-8]!
+
+`.pad #COUNT'
+     Generate unwinder annotations for a stack adjustment of COUNT
+     bytes.  A positive value indicates the function prologue allocated
+     stack space by decrementing the stack pointer.
+
+`.movsp REG'
+     Tell the unwinder that REG contains the current stack pointer.
+
+`.setfp FPREG, SPREG [, #OFFSET]'
+     Make all unwinder annotations relaive to a frame pointer.  Without
+     this the unwinder will use offsets from the stack pointer.
+
+     The syntax of this directive is the same as the `sub' or `mov'
+     instruction used to set the frame pointer.  SPREG must be either
+     `sp' or mentioned in a previous `.movsp' directive.
+
+          .movsp ip
+          mov ip, sp
+          ...
+          .setfp fp, ip, #4
+          sub fp, ip, #4
+
+`.raw OFFSET, BYTE1, ...'
+     Insert one of more arbitary unwind opcode bytes, which are known
+     to adjust the stack pointer by OFFSET bytes.
+
+     For example `.unwind_raw 4, 0xb1, 0x01' is equivalent to `.save
+     {r0}'
+
+
+
+File: as.info,  Node: ARM Opcodes,  Next: ARM Mapping Symbols,  Prev: ARM Directives,  Up: ARM-Dependent
+
+8.4.5 Opcodes
+-------------
+
+`as' implements all the standard ARM opcodes.  It also implements
+several pseudo opcodes, including several synthetic load instructions.
+
+`NOP'
+            nop
+
+     This pseudo op will always evaluate to a legal ARM instruction
+     that does nothing.  Currently it will evaluate to MOV r0, r0.
+
+`LDR'
+            ldr <register> , = <expression>
+
+     If expression evaluates to a numeric constant then a MOV or MVN
+     instruction will be used in place of the LDR instruction, if the
+     constant can be generated by either of these instructions.
+     Otherwise the constant will be placed into the nearest literal
+     pool (if it not already there) and a PC relative LDR instruction
+     will be generated.
+
+`ADR'
+            adr <register> <label>
+
+     This instruction will load the address of LABEL into the indicated
+     register.  The instruction will evaluate to a PC relative ADD or
+     SUB instruction depending upon where the label is located.  If the
+     label is out of range, or if it is not defined in the same file
+     (and section) as the ADR instruction, then an error will be
+     generated.  This instruction will not make use of the literal pool.
+
+`ADRL'
+            adrl <register> <label>
+
+     This instruction will load the address of LABEL into the indicated
+     register.  The instruction will evaluate to one or two PC relative
+     ADD or SUB instructions depending upon where the label is located.
+     If a second instruction is not needed a NOP instruction will be
+     generated in its place, so that this instruction is always 8 bytes
+     long.
+
+     If the label is out of range, or if it is not defined in the same
+     file (and section) as the ADRL instruction, then an error will be
+     generated.  This instruction will not make use of the literal pool.
+
+
+   For information on the ARM or Thumb instruction sets, see `ARM
+Software Development Toolkit Reference Manual', Advanced RISC Machines
+Ltd.
+
+
+File: as.info,  Node: ARM Mapping Symbols,  Prev: ARM Opcodes,  Up: ARM-Dependent
+
+8.4.6 Mapping Symbols
+---------------------
+
+The ARM ELF specification requires that special symbols be inserted
+into object files to mark certain features:
+
+`$a'
+     At the start of a region of code containing ARM instructions.
+
+`$t'
+     At the start of a region of code containing THUMB instructions.
+
+`$d'
+     At the start of a region of data.
+
+
+   The assembler will automatically insert these symbols for you - there
+is no need to code them yourself.  Support for tagging symbols ($b, $f,
+$p and $m) which is also mentioned in the current ARM ELF specification
+is not implemented.  This is because they have been dropped from the
+new EABI and so tools cannot rely upon their presence.
+
+
+File: as.info,  Node: CRIS-Dependent,  Next: D10V-Dependent,  Prev: ARM-Dependent,  Up: Machine Dependencies
+
+8.5 CRIS Dependent Features
+===========================
+
+* Menu:
+
+* CRIS-Opts::              Command-line Options
+* CRIS-Expand::            Instruction expansion
+* CRIS-Symbols::           Symbols
+* CRIS-Syntax::            Syntax
+
+
+File: as.info,  Node: CRIS-Opts,  Next: CRIS-Expand,  Up: CRIS-Dependent
+
+8.5.1 Command-line Options
+--------------------------
+
+The CRIS version of `as' has these machine-dependent command-line
+options.
+
+   The format of the generated object files can be either ELF or a.out,
+specified by the command-line options `--emulation=crisaout' and
+`--emulation=criself'.  The default is ELF (criself), unless `as' has
+been configured specifically for a.out by using the configuration name
+`cris-axis-aout'.
+
+   There are two different link-incompatible ELF object file variants
+for CRIS, for use in environments where symbols are expected to be
+prefixed by a leading `_' character and for environments without such a
+symbol prefix.  The variant used for GNU/Linux port has no symbol
+prefix.  Which variant to produce is specified by either of the options
+`--underscore' and `--no-underscore'.  The default is `--underscore'.
+Since symbols in CRIS a.out objects are expected to have a `_' prefix,
+specifying `--no-underscore' when generating a.out objects is an error.
+Besides the object format difference, the effect of this option is to
+parse register names differently (*note crisnous::).  The
+`--no-underscore' option makes a `$' register prefix mandatory.
+
+   The option `--pic' must be passed to `as' in order to recognize the
+symbol syntax used for ELF (SVR4 PIC) position-independent-code (*note
+crispic::).  This will also affect expansion of instructions.  The
+expansion with `--pic' will use PC-relative rather than (slightly
+faster) absolute addresses in those expansions.
+
+   The option `--march=ARCHITECTURE' specifies the recognized
+instruction set and recognized register names.  It also controls the
+architecture type of the object file.  Valid values for ARCHITECTURE
+are:
+`v0_v10'
+     All instructions and register names for any architecture variant
+     in the set v0...v10 are recognized.  This is the default if the
+     target is configured as cris-*.
+
+`v10'
+     Only instructions and register names for CRIS v10 (as found in
+     ETRAX 100 LX) are recognized.  This is the default if the target
+     is configured as crisv10-*.
+
+`v32'
+     Only instructions and register names for CRIS v32 (code name
+     Guinness) are recognized.  This is the default if the target is
+     configured as crisv32-*.  This value implies `--no-mul-bug-abort'.
+     (A subsequent `--mul-bug-abort' will turn it back on.)
+
+`common_v10_v32'
+     Only instructions with register names and addressing modes with
+     opcodes common to the v10 and v32 are recognized.
+
+   When `-N' is specified, `as' will emit a warning when a 16-bit
+branch instruction is expanded into a 32-bit multiple-instruction
+construct (*note CRIS-Expand::).
+
+   Some versions of the CRIS v10, for example in the Etrax 100 LX,
+contain a bug that causes destabilizing memory accesses when a multiply
+instruction is executed with certain values in the first operand just
+before a cache-miss.  When the `--mul-bug-abort' command line option is
+active (the default value), `as' will refuse to assemble a file
+containing a multiply instruction at a dangerous offset, one that could
+be the last on a cache-line, or is in a section with insufficient
+alignment.  This placement checking does not catch any case where the
+multiply instruction is dangerously placed because it is located in a
+delay-slot.  The `--mul-bug-abort' command line option turns off the
+checking.
+
+
+File: as.info,  Node: CRIS-Expand,  Next: CRIS-Symbols,  Prev: CRIS-Opts,  Up: CRIS-Dependent
+
+8.5.2 Instruction expansion
+---------------------------
+
+`as' will silently choose an instruction that fits the operand size for
+`[register+constant]' operands.  For example, the offset `127' in
+`move.d [r3+127],r4' fits in an instruction using a signed-byte offset.
+Similarly, `move.d [r2+32767],r1' will generate an instruction using a
+16-bit offset.  For symbolic expressions and constants that do not fit
+in 16 bits including the sign bit, a 32-bit offset is generated.
+
+   For branches, `as' will expand from a 16-bit branch instruction into
+a sequence of instructions that can reach a full 32-bit address.  Since
+this does not correspond to a single instruction, such expansions can
+optionally be warned about.  *Note CRIS-Opts::.
+
+   If the operand is found to fit the range, a `lapc' mnemonic will
+translate to a `lapcq' instruction.  Use `lapc.d' to force the 32-bit
+`lapc' instruction.
+
+   Similarly, the `addo' mnemonic will translate to the shortest
+fitting instruction of `addoq', `addo.w' and `addo.d', when used with a
+operand that is a constant known at assembly time.
+
+
+File: as.info,  Node: CRIS-Symbols,  Next: CRIS-Syntax,  Prev: CRIS-Expand,  Up: CRIS-Dependent
+
+8.5.3 Symbols
+-------------
+
+Some symbols are defined by the assembler.  They're intended to be used
+in conditional assembly, for example:
+      .if ..asm.arch.cris.v32
+      CODE FOR CRIS V32
+      .elseif ..asm.arch.cris.common_v10_v32
+      CODE COMMON TO CRIS V32 AND CRIS V10
+      .elseif ..asm.arch.cris.v10 | ..asm.arch.cris.any_v0_v10
+      CODE FOR V10
+      .else
+      .error "Code needs to be added here."
+      .endif
+
+   These symbols are defined in the assembler, reflecting command-line
+options, either when specified or the default.  They are always
+defined, to 0 or 1.
+`..asm.arch.cris.any_v0_v10'
+     This symbol is non-zero when `--march=v0_v10' is specified or the
+     default.
+
+`..asm.arch.cris.common_v10_v32'
+     Set according to the option `--march=common_v10_v32'.
+
+`..asm.arch.cris.v10'
+     Reflects the option `--march=v10'.
+
+`..asm.arch.cris.v32'
+     Corresponds to `--march=v10'.
+
+   Speaking of symbols, when a symbol is used in code, it can have a
+suffix modifying its value for use in position-independent code. *Note
+CRIS-Pic::.
+
+
+File: as.info,  Node: CRIS-Syntax,  Prev: CRIS-Symbols,  Up: CRIS-Dependent
+
+8.5.4 Syntax
+------------
+
+There are different aspects of the CRIS assembly syntax.
+
+* Menu:
+
+* CRIS-Chars::		        Special Characters
+* CRIS-Pic::			Position-Independent Code Symbols
+* CRIS-Regs::			Register Names
+* CRIS-Pseudos::		Assembler Directives
+
+
+File: as.info,  Node: CRIS-Chars,  Next: CRIS-Pic,  Up: CRIS-Syntax
+
+8.5.4.1 Special Characters
+..........................
+
+The character `#' is a line comment character.  It starts a comment if
+and only if it is placed at the beginning of a line.
+
+   A `;' character starts a comment anywhere on the line, causing all
+characters up to the end of the line to be ignored.
+
+   A `@' character is handled as a line separator equivalent to a
+logical new-line character (except in a comment), so separate
+instructions can be specified on a single line.
+
+
+File: as.info,  Node: CRIS-Pic,  Next: CRIS-Regs,  Prev: CRIS-Chars,  Up: CRIS-Syntax
+
+8.5.4.2 Symbols in position-independent code
+............................................
+
+When generating position-independent code (SVR4 PIC) for use in
+cris-axis-linux-gnu or crisv32-axis-linux-gnu shared libraries, symbol
+suffixes are used to specify what kind of run-time symbol lookup will
+be used, expressed in the object as different _relocation types_.
+Usually, all absolute symbol values must be located in a table, the
+_global offset table_, leaving the code position-independent;
+independent of values of global symbols and independent of the address
+of the code.  The suffix modifies the value of the symbol, into for
+example an index into the global offset table where the real symbol
+value is entered, or a PC-relative value, or a value relative to the
+start of the global offset table.  All symbol suffixes start with the
+character `:' (omitted in the list below).  Every symbol use in code or
+a read-only section must therefore have a PIC suffix to enable a useful
+shared library to be created.  Usually, these constructs must not be
+used with an additive constant offset as is usually allowed, i.e. no 4
+as in `symbol + 4' is allowed.  This restriction is checked at
+link-time, not at assembly-time.
+
+`GOT'
+     Attaching this suffix to a symbol in an instruction causes the
+     symbol to be entered into the global offset table.  The value is a
+     32-bit index for that symbol into the global offset table.  The
+     name of the corresponding relocation is `R_CRIS_32_GOT'.  Example:
+     `move.d [$r0+extsym:GOT],$r9'
+
+`GOT16'
+     Same as for `GOT', but the value is a 16-bit index into the global
+     offset table.  The corresponding relocation is `R_CRIS_16_GOT'.
+     Example: `move.d [$r0+asymbol:GOT16],$r10'
+
+`PLT'
+     This suffix is used for function symbols.  It causes a _procedure
+     linkage table_, an array of code stubs, to be created at the time
+     the shared object is created or linked against, together with a
+     global offset table entry.  The value is a pc-relative offset to
+     the corresponding stub code in the procedure linkage table.  This
+     arrangement causes the run-time symbol resolver to be called to
+     look up and set the value of the symbol the first time the
+     function is called (at latest; depending environment variables).
+     It is only safe to leave the symbol unresolved this way if all
+     references are function calls.  The name of the relocation is
+     `R_CRIS_32_PLT_PCREL'.  Example: `add.d fnname:PLT,$pc'
+
+`PLTG'
+     Like PLT, but the value is relative to the beginning of the global
+     offset table.  The relocation is `R_CRIS_32_PLT_GOTREL'.  Example:
+     `move.d fnname:PLTG,$r3'
+
+`GOTPLT'
+     Similar to `PLT', but the value of the symbol is a 32-bit index
+     into the global offset table.  This is somewhat of a mix between
+     the effect of the `GOT' and the `PLT' suffix; the difference to
+     `GOT' is that there will be a procedure linkage table entry
+     created, and that the symbol is assumed to be a function entry and
+     will be resolved by the run-time resolver as with `PLT'.  The
+     relocation is `R_CRIS_32_GOTPLT'.  Example: `jsr
+     [$r0+fnname:GOTPLT]'
+
+`GOTPLT16'
+     A variant of `GOTPLT' giving a 16-bit value.  Its relocation name
+     is `R_CRIS_16_GOTPLT'.  Example: `jsr [$r0+fnname:GOTPLT16]'
+
+`GOTOFF'
+     This suffix must only be attached to a local symbol, but may be
+     used in an expression adding an offset.  The value is the address
+     of the symbol relative to the start of the global offset table.
+     The relocation name is `R_CRIS_32_GOTREL'.  Example: `move.d
+     [$r0+localsym:GOTOFF],r3'
+
+
+File: as.info,  Node: CRIS-Regs,  Next: CRIS-Pseudos,  Prev: CRIS-Pic,  Up: CRIS-Syntax
+
+8.5.4.3 Register names
+......................
+
+A `$' character may always prefix a general or special register name in
+an instruction operand but is mandatory when the option
+`--no-underscore' is specified or when the `.syntax register_prefix'
+directive is in effect (*note crisnous::).  Register names are
+case-insensitive.
+
+
+File: as.info,  Node: CRIS-Pseudos,  Prev: CRIS-Regs,  Up: CRIS-Syntax
+
+8.5.4.4 Assembler Directives
+............................
+
+There are a few CRIS-specific pseudo-directives in addition to the
+generic ones.  *Note Pseudo Ops::.  Constants emitted by
+pseudo-directives are in little-endian order for CRIS.  There is no
+support for floating-point-specific directives for CRIS.
+
+`.dword EXPRESSIONS'
+     The `.dword' directive is a synonym for `.int', expecting zero or
+     more EXPRESSIONS, separated by commas.  For each expression, a
+     32-bit little-endian constant is emitted.
+
+`.syntax ARGUMENT'
+     The `.syntax' directive takes as ARGUMENT one of the following
+     case-sensitive choices.
+
+    `no_register_prefix'
+          The `.syntax no_register_prefix' directive makes a `$'
+          character prefix on all registers optional.  It overrides a
+          previous setting, including the corresponding effect of the
+          option `--no-underscore'.  If this directive is used when
+          ordinary symbols do not have a `_' character prefix, care
+          must be taken to avoid ambiguities whether an operand is a
+          register or a symbol; using symbols with names the same as
+          general or special registers then invoke undefined behavior.
+
+    `register_prefix'
+          This directive makes a `$' character prefix on all registers
+          mandatory.  It overrides a previous setting, including the
+          corresponding effect of the option `--underscore'.
+
+    `leading_underscore'
+          This is an assertion directive, emitting an error if the
+          `--no-underscore' option is in effect.
+
+    `no_leading_underscore'
+          This is the opposite of the `.syntax leading_underscore'
+          directive and emits an error if the option `--underscore' is
+          in effect.
+
+`.arch ARGUMENT'
+     This is an assertion directive, giving an error if the specified
+     ARGUMENT is not the same as the specified or default value for the
+     `--march=ARCHITECTURE' option (*note march-option::).
+
+
+
+File: as.info,  Node: D10V-Dependent,  Next: D30V-Dependent,  Prev: CRIS-Dependent,  Up: Machine Dependencies
+
+8.6 D10V Dependent Features
+===========================
+
+* Menu:
+
+* D10V-Opts::                   D10V Options
+* D10V-Syntax::                 Syntax
+* D10V-Float::                  Floating Point
+* D10V-Opcodes::                Opcodes
+
+
+File: as.info,  Node: D10V-Opts,  Next: D10V-Syntax,  Up: D10V-Dependent
+
+8.6.1 D10V Options
+------------------
+
+The Mitsubishi D10V version of `as' has a few machine dependent options.
+
+`-O'
+     The D10V can often execute two sub-instructions in parallel. When
+     this option is used, `as' will attempt to optimize its output by
+     detecting when instructions can be executed in parallel.
+
+`--nowarnswap'
+     To optimize execution performance, `as' will sometimes swap the
+     order of instructions. Normally this generates a warning. When
+     this option is used, no warning will be generated when
+     instructions are swapped.
+
+`--gstabs-packing'
+
+`--no-gstabs-packing'
+     `as' packs adjacent short instructions into a single packed
+     instruction. `--no-gstabs-packing' turns instruction packing off if
+     `--gstabs' is specified as well; `--gstabs-packing' (the default)
+     turns instruction packing on even when `--gstabs' is specified.
+
+
+File: as.info,  Node: D10V-Syntax,  Next: D10V-Float,  Prev: D10V-Opts,  Up: D10V-Dependent
+
+8.6.2 Syntax
+------------
+
+The D10V syntax is based on the syntax in Mitsubishi's D10V
+architecture manual.  The differences are detailed below.
+
+* Menu:
+
+* D10V-Size::                 Size Modifiers
+* D10V-Subs::                 Sub-Instructions
+* D10V-Chars::                Special Characters
+* D10V-Regs::                 Register Names
+* D10V-Addressing::           Addressing Modes
+* D10V-Word::                 @WORD Modifier
+
+
+File: as.info,  Node: D10V-Size,  Next: D10V-Subs,  Up: D10V-Syntax
+
+8.6.2.1 Size Modifiers
+......................
+
+The D10V version of `as' uses the instruction names in the D10V
+Architecture Manual.  However, the names in the manual are sometimes
+ambiguous.  There are instruction names that can assemble to a short or
+long form opcode.  How does the assembler pick the correct form?  `as'
+will always pick the smallest form if it can.  When dealing with a
+symbol that is not defined yet when a line is being assembled, it will
+always use the long form.  If you need to force the assembler to use
+either the short or long form of the instruction, you can append either
+`.s' (short) or `.l' (long) to it.  For example, if you are writing an
+assembly program and you want to do a branch to a symbol that is
+defined later in your program, you can write `bra.s   foo'.  Objdump
+and GDB will always append `.s' or `.l' to instructions which have both
+short and long forms.
+
+
+File: as.info,  Node: D10V-Subs,  Next: D10V-Chars,  Prev: D10V-Size,  Up: D10V-Syntax
+
+8.6.2.2 Sub-Instructions
+........................
+
+The D10V assembler takes as input a series of instructions, either
+one-per-line, or in the special two-per-line format described in the
+next section.  Some of these instructions will be short-form or
+sub-instructions.  These sub-instructions can be packed into a single
+instruction.  The assembler will do this automatically.  It will also
+detect when it should not pack instructions.  For example, when a label
+is defined, the next instruction will never be packaged with the
+previous one.  Whenever a branch and link instruction is called, it
+will not be packaged with the next instruction so the return address
+will be valid.  Nops are automatically inserted when necessary.
+
+   If you do not want the assembler automatically making these
+decisions, you can control the packaging and execution type (parallel
+or sequential) with the special execution symbols described in the next
+section.
+
+
+File: as.info,  Node: D10V-Chars,  Next: D10V-Regs,  Prev: D10V-Subs,  Up: D10V-Syntax
+
+8.6.2.3 Special Characters
+..........................
+
+`;' and `#' are the line comment characters.  Sub-instructions may be
+executed in order, in reverse-order, or in parallel.  Instructions
+listed in the standard one-per-line format will be executed
+sequentially.  To specify the executing order, use the following
+symbols:
+`->'
+     Sequential with instruction on the left first.
+
+`<-'
+     Sequential with instruction on the right first.
+
+`||'
+     Parallel
+   The D10V syntax allows either one instruction per line, one
+instruction per line with the execution symbol, or two instructions per
+line.  For example
+`abs       a1      ->      abs     r0'
+     Execute these sequentially.  The instruction on the right is in
+     the right container and is executed second.
+
+`abs       r0      <-      abs     a1'
+     Execute these reverse-sequentially.  The instruction on the right
+     is in the right container, and is executed first.
+
+`ld2w    r2,@r8+         ||      mac     a0,r0,r7'
+     Execute these in parallel.
+
+`ld2w    r2,@r8+         ||'
+`mac     a0,r0,r7'
+     Two-line format. Execute these in parallel.
+
+`ld2w    r2,@r8+'
+`mac     a0,r0,r7'
+     Two-line format. Execute these sequentially.  Assembler will put
+     them in the proper containers.
+
+`ld2w    r2,@r8+         ->'
+`mac     a0,r0,r7'
+     Two-line format. Execute these sequentially.  Same as above but
+     second instruction will always go into right container.
+   Since `$' has no special meaning, you may use it in symbol names.
+
+
+File: as.info,  Node: D10V-Regs,  Next: D10V-Addressing,  Prev: D10V-Chars,  Up: D10V-Syntax
+
+8.6.2.4 Register Names
+......................
+
+You can use the predefined symbols `r0' through `r15' to refer to the
+D10V registers.  You can also use `sp' as an alias for `r15'.  The
+accumulators are `a0' and `a1'.  There are special register-pair names
+that may optionally be used in opcodes that require even-numbered
+registers. Register names are not case sensitive.
+
+   Register Pairs
+`r0-r1'
+
+`r2-r3'
+
+`r4-r5'
+
+`r6-r7'
+
+`r8-r9'
+
+`r10-r11'
+
+`r12-r13'
+
+`r14-r15'
+
+   The D10V also has predefined symbols for these control registers and
+status bits:
+`psw'
+     Processor Status Word
+
+`bpsw'
+     Backup Processor Status Word
+
+`pc'
+     Program Counter
+
+`bpc'
+     Backup Program Counter
+
+`rpt_c'
+     Repeat Count
+
+`rpt_s'
+     Repeat Start address
+
+`rpt_e'
+     Repeat End address
+
+`mod_s'
+     Modulo Start address
+
+`mod_e'
+     Modulo End address
+
+`iba'
+     Instruction Break Address
+
+`f0'
+     Flag 0
+
+`f1'
+     Flag 1
+
+`c'
+     Carry flag
+
+
+File: as.info,  Node: D10V-Addressing,  Next: D10V-Word,  Prev: D10V-Regs,  Up: D10V-Syntax
+
+8.6.2.5 Addressing Modes
+........................
+
+`as' understands the following addressing modes for the D10V.  `RN' in
+the following refers to any of the numbered registers, but _not_ the
+control registers.
+`RN'
+     Register direct
+
+`@RN'
+     Register indirect
+
+`@RN+'
+     Register indirect with post-increment
+
+`@RN-'
+     Register indirect with post-decrement
+
+`@-SP'
+     Register indirect with pre-decrement
+
+`@(DISP, RN)'
+     Register indirect with displacement
+
+`ADDR'
+     PC relative address (for branch or rep).
+
+`#IMM'
+     Immediate data (the `#' is optional and ignored)
+
+
+File: as.info,  Node: D10V-Word,  Prev: D10V-Addressing,  Up: D10V-Syntax
+
+8.6.2.6 @WORD Modifier
+......................
+
+Any symbol followed by `@word' will be replaced by the symbol's value
+shifted right by 2.  This is used in situations such as loading a
+register with the address of a function (or any other code fragment).
+For example, if you want to load a register with the location of the
+function `main' then jump to that function, you could do it as follows:
+     ldi     r2, main@word
+     jmp     r2
+
+
+File: as.info,  Node: D10V-Float,  Next: D10V-Opcodes,  Prev: D10V-Syntax,  Up: D10V-Dependent
+
+8.6.3 Floating Point
+--------------------
+
+The D10V has no hardware floating point, but the `.float' and `.double'
+directives generates IEEE floating-point numbers for compatibility with
+other development tools.
+
+
+File: as.info,  Node: D10V-Opcodes,  Prev: D10V-Float,  Up: D10V-Dependent
+
+8.6.4 Opcodes
+-------------
+
+For detailed information on the D10V machine instruction set, see `D10V
+Architecture: A VLIW Microprocessor for Multimedia Applications'
+(Mitsubishi Electric Corp.).  `as' implements all the standard D10V
+opcodes.  The only changes are those described in the section on size
+modifiers
+
+
+File: as.info,  Node: D30V-Dependent,  Next: H8/300-Dependent,  Prev: D10V-Dependent,  Up: Machine Dependencies
+
+8.7 D30V Dependent Features
+===========================
+
+* Menu:
+
+* D30V-Opts::                   D30V Options
+* D30V-Syntax::                 Syntax
+* D30V-Float::                  Floating Point
+* D30V-Opcodes::                Opcodes
+
+
+File: as.info,  Node: D30V-Opts,  Next: D30V-Syntax,  Up: D30V-Dependent
+
+8.7.1 D30V Options
+------------------
+
+The Mitsubishi D30V version of `as' has a few machine dependent options.
+
+`-O'
+     The D30V can often execute two sub-instructions in parallel. When
+     this option is used, `as' will attempt to optimize its output by
+     detecting when instructions can be executed in parallel.
+
+`-n'
+     When this option is used, `as' will issue a warning every time it
+     adds a nop instruction.
+
+`-N'
+     When this option is used, `as' will issue a warning if it needs to
+     insert a nop after a 32-bit multiply before a load or 16-bit
+     multiply instruction.
+
+
+File: as.info,  Node: D30V-Syntax,  Next: D30V-Float,  Prev: D30V-Opts,  Up: D30V-Dependent
+
+8.7.2 Syntax
+------------
+
+The D30V syntax is based on the syntax in Mitsubishi's D30V
+architecture manual.  The differences are detailed below.
+
+* Menu:
+
+* D30V-Size::                 Size Modifiers
+* D30V-Subs::                 Sub-Instructions
+* D30V-Chars::                Special Characters
+* D30V-Guarded::              Guarded Execution
+* D30V-Regs::                 Register Names
+* D30V-Addressing::           Addressing Modes
+
+
+File: as.info,  Node: D30V-Size,  Next: D30V-Subs,  Up: D30V-Syntax
+
+8.7.2.1 Size Modifiers
+......................
+
+The D30V version of `as' uses the instruction names in the D30V
+Architecture Manual.  However, the names in the manual are sometimes
+ambiguous.  There are instruction names that can assemble to a short or
+long form opcode.  How does the assembler pick the correct form?  `as'
+will always pick the smallest form if it can.  When dealing with a
+symbol that is not defined yet when a line is being assembled, it will
+always use the long form.  If you need to force the assembler to use
+either the short or long form of the instruction, you can append either
+`.s' (short) or `.l' (long) to it.  For example, if you are writing an
+assembly program and you want to do a branch to a symbol that is
+defined later in your program, you can write `bra.s foo'.  Objdump and
+GDB will always append `.s' or `.l' to instructions which have both
+short and long forms.
+
+
+File: as.info,  Node: D30V-Subs,  Next: D30V-Chars,  Prev: D30V-Size,  Up: D30V-Syntax
+
+8.7.2.2 Sub-Instructions
+........................
+
+The D30V assembler takes as input a series of instructions, either
+one-per-line, or in the special two-per-line format described in the
+next section.  Some of these instructions will be short-form or
+sub-instructions.  These sub-instructions can be packed into a single
+instruction.  The assembler will do this automatically.  It will also
+detect when it should not pack instructions.  For example, when a label
+is defined, the next instruction will never be packaged with the
+previous one.  Whenever a branch and link instruction is called, it
+will not be packaged with the next instruction so the return address
+will be valid.  Nops are automatically inserted when necessary.
+
+   If you do not want the assembler automatically making these
+decisions, you can control the packaging and execution type (parallel
+or sequential) with the special execution symbols described in the next
+section.
+
+
+File: as.info,  Node: D30V-Chars,  Next: D30V-Guarded,  Prev: D30V-Subs,  Up: D30V-Syntax
+
+8.7.2.3 Special Characters
+..........................
+
+`;' and `#' are the line comment characters.  Sub-instructions may be
+executed in order, in reverse-order, or in parallel.  Instructions
+listed in the standard one-per-line format will be executed
+sequentially unless you use the `-O' option.
+
+   To specify the executing order, use the following symbols:
+`->'
+     Sequential with instruction on the left first.
+
+`<-'
+     Sequential with instruction on the right first.
+
+`||'
+     Parallel
+
+   The D30V syntax allows either one instruction per line, one
+instruction per line with the execution symbol, or two instructions per
+line.  For example
+`abs r2,r3 -> abs r4,r5'
+     Execute these sequentially.  The instruction on the right is in
+     the right container and is executed second.
+
+`abs r2,r3 <- abs r4,r5'
+     Execute these reverse-sequentially.  The instruction on the right
+     is in the right container, and is executed first.
+
+`abs r2,r3 || abs r4,r5'
+     Execute these in parallel.
+
+`ldw r2,@(r3,r4) ||'
+`mulx r6,r8,r9'
+     Two-line format. Execute these in parallel.
+
+`mulx a0,r8,r9'
+`stw r2,@(r3,r4)'
+     Two-line format. Execute these sequentially unless `-O' option is
+     used.  If the `-O' option is used, the assembler will determine if
+     the instructions could be done in parallel (the above two
+     instructions can be done in parallel), and if so, emit them as
+     parallel instructions.  The assembler will put them in the proper
+     containers.  In the above example, the assembler will put the
+     `stw' instruction in left container and the `mulx' instruction in
+     the right container.
+
+`stw r2,@(r3,r4) ->'
+`mulx a0,r8,r9'
+     Two-line format.  Execute the `stw' instruction followed by the
+     `mulx' instruction sequentially.  The first instruction goes in the
+     left container and the second instruction goes into right
+     container.  The assembler will give an error if the machine
+     ordering constraints are violated.
+
+`stw r2,@(r3,r4) <-'
+`mulx a0,r8,r9'
+     Same as previous example, except that the `mulx' instruction is
+     executed before the `stw' instruction.
+
+   Since `$' has no special meaning, you may use it in symbol names.
+
+
+File: as.info,  Node: D30V-Guarded,  Next: D30V-Regs,  Prev: D30V-Chars,  Up: D30V-Syntax
+
+8.7.2.4 Guarded Execution
+.........................
+
+`as' supports the full range of guarded execution directives for each
+instruction.  Just append the directive after the instruction proper.
+The directives are:
+
+`/tx'
+     Execute the instruction if flag f0 is true.
+
+`/fx'
+     Execute the instruction if flag f0 is false.
+
+`/xt'
+     Execute the instruction if flag f1 is true.
+
+`/xf'
+     Execute the instruction if flag f1 is false.
+
+`/tt'
+     Execute the instruction if both flags f0 and f1 are true.
+
+`/tf'
+     Execute the instruction if flag f0 is true and flag f1 is false.
+
+
+File: as.info,  Node: D30V-Regs,  Next: D30V-Addressing,  Prev: D30V-Guarded,  Up: D30V-Syntax
+
+8.7.2.5 Register Names
+......................
+
+You can use the predefined symbols `r0' through `r63' to refer to the
+D30V registers.  You can also use `sp' as an alias for `r63' and `link'
+as an alias for `r62'.  The accumulators are `a0' and `a1'.
+
+   The D30V also has predefined symbols for these control registers and
+status bits:
+`psw'
+     Processor Status Word
+
+`bpsw'
+     Backup Processor Status Word
+
+`pc'
+     Program Counter
+
+`bpc'
+     Backup Program Counter
+
+`rpt_c'
+     Repeat Count
+
+`rpt_s'
+     Repeat Start address
+
+`rpt_e'
+     Repeat End address
+
+`mod_s'
+     Modulo Start address
+
+`mod_e'
+     Modulo End address
+
+`iba'
+     Instruction Break Address
+
+`f0'
+     Flag 0
+
+`f1'
+     Flag 1
+
+`f2'
+     Flag 2
+
+`f3'
+     Flag 3
+
+`f4'
+     Flag 4
+
+`f5'
+     Flag 5
+
+`f6'
+     Flag 6
+
+`f7'
+     Flag 7
+
+`s'
+     Same as flag 4 (saturation flag)
+
+`v'
+     Same as flag 5 (overflow flag)
+
+`va'
+     Same as flag 6 (sticky overflow flag)
+
+`c'
+     Same as flag 7 (carry/borrow flag)
+
+`b'
+     Same as flag 7 (carry/borrow flag)
+
+
+File: as.info,  Node: D30V-Addressing,  Prev: D30V-Regs,  Up: D30V-Syntax
+
+8.7.2.6 Addressing Modes
+........................
+
+`as' understands the following addressing modes for the D30V.  `RN' in
+the following refers to any of the numbered registers, but _not_ the
+control registers.
+`RN'
+     Register direct
+
+`@RN'
+     Register indirect
+
+`@RN+'
+     Register indirect with post-increment
+
+`@RN-'
+     Register indirect with post-decrement
+
+`@-SP'
+     Register indirect with pre-decrement
+
+`@(DISP, RN)'
+     Register indirect with displacement
+
+`ADDR'
+     PC relative address (for branch or rep).
+
+`#IMM'
+     Immediate data (the `#' is optional and ignored)
+
+
+File: as.info,  Node: D30V-Float,  Next: D30V-Opcodes,  Prev: D30V-Syntax,  Up: D30V-Dependent
+
+8.7.3 Floating Point
+--------------------
+
+The D30V has no hardware floating point, but the `.float' and `.double'
+directives generates IEEE floating-point numbers for compatibility with
+other development tools.
+
+
+File: as.info,  Node: D30V-Opcodes,  Prev: D30V-Float,  Up: D30V-Dependent
+
+8.7.4 Opcodes
+-------------
+
+For detailed information on the D30V machine instruction set, see `D30V
+Architecture: A VLIW Microprocessor for Multimedia Applications'
+(Mitsubishi Electric Corp.).  `as' implements all the standard D30V
+opcodes.  The only changes are those described in the section on size
+modifiers
+
+
+File: as.info,  Node: H8/300-Dependent,  Next: H8/500-Dependent,  Prev: D30V-Dependent,  Up: Machine Dependencies
+
+8.8 H8/300 Dependent Features
+=============================
+
+* Menu:
+
+* H8/300 Options::              Options
+* H8/300 Syntax::               Syntax
+* H8/300 Floating Point::       Floating Point
+* H8/300 Directives::           H8/300 Machine Directives
+* H8/300 Opcodes::              Opcodes
+
+
+File: as.info,  Node: H8/300 Options,  Next: H8/300 Syntax,  Up: H8/300-Dependent
+
+8.8.1 Options
+-------------
+
+`as' has no additional command-line options for the Renesas (formerly
+Hitachi) H8/300 family.
+
+
+File: as.info,  Node: H8/300 Syntax,  Next: H8/300 Floating Point,  Prev: H8/300 Options,  Up: H8/300-Dependent
+
+8.8.2 Syntax
+------------
+
+* Menu:
+
+* H8/300-Chars::                Special Characters
+* H8/300-Regs::                 Register Names
+* H8/300-Addressing::           Addressing Modes
+
+
+File: as.info,  Node: H8/300-Chars,  Next: H8/300-Regs,  Up: H8/300 Syntax
+
+8.8.2.1 Special Characters
+..........................
+
+`;' is the line comment character.
+
+   `$' can be used instead of a newline to separate statements.
+Therefore _you may not use `$' in symbol names_ on the H8/300.
+
+
+File: as.info,  Node: H8/300-Regs,  Next: H8/300-Addressing,  Prev: H8/300-Chars,  Up: H8/300 Syntax
+
+8.8.2.2 Register Names
+......................
+
+You can use predefined symbols of the form `rNh' and `rNl' to refer to
+the H8/300 registers as sixteen 8-bit general-purpose registers.  N is
+a digit from `0' to `7'); for instance, both `r0h' and `r7l' are valid
+register names.
+
+   You can also use the eight predefined symbols `rN' to refer to the
+H8/300 registers as 16-bit registers (you must use this form for
+addressing).
+
+   On the H8/300H, you can also use the eight predefined symbols `erN'
+(`er0' ... `er7') to refer to the 32-bit general purpose registers.
+
+   The two control registers are called `pc' (program counter; a 16-bit
+register, except on the H8/300H where it is 24 bits) and `ccr'
+(condition code register; an 8-bit register).  `r7' is used as the
+stack pointer, and can also be called `sp'.
+
+
+File: as.info,  Node: H8/300-Addressing,  Prev: H8/300-Regs,  Up: H8/300 Syntax
+
+8.8.2.3 Addressing Modes
+........................
+
+as understands the following addressing modes for the H8/300:
+`rN'
+     Register direct
+
+`@rN'
+     Register indirect
+
+`@(D, rN)'
+`@(D:16, rN)'
+`@(D:24, rN)'
+     Register indirect: 16-bit or 24-bit displacement D from register
+     N.  (24-bit displacements are only meaningful on the H8/300H.)
+
+`@rN+'
+     Register indirect with post-increment
+
+`@-rN'
+     Register indirect with pre-decrement
+
+``@'AA'
+``@'AA:8'
+``@'AA:16'
+``@'AA:24'
+     Absolute address `aa'.  (The address size `:24' only makes sense
+     on the H8/300H.)
+
+`#XX'
+`#XX:8'
+`#XX:16'
+`#XX:32'
+     Immediate data XX.  You may specify the `:8', `:16', or `:32' for
+     clarity, if you wish; but `as' neither requires this nor uses
+     it--the data size required is taken from context.
+
+``@'`@'AA'
+``@'`@'AA:8'
+     Memory indirect.  You may specify the `:8' for clarity, if you
+     wish; but `as' neither requires this nor uses it.
+
+
+File: as.info,  Node: H8/300 Floating Point,  Next: H8/300 Directives,  Prev: H8/300 Syntax,  Up: H8/300-Dependent
+
+8.8.3 Floating Point
+--------------------
+
+The H8/300 family has no hardware floating point, but the `.float'
+directive generates IEEE floating-point numbers for compatibility with
+other development tools.
+
+
+File: as.info,  Node: H8/300 Directives,  Next: H8/300 Opcodes,  Prev: H8/300 Floating Point,  Up: H8/300-Dependent
+
+8.8.4 H8/300 Machine Directives
+-------------------------------
+
+`as' has the following machine-dependent directives for the H8/300:
+
+`.h8300h'
+     Recognize and emit additional instructions for the H8/300H
+     variant, and also make `.int' emit 32-bit numbers rather than the
+     usual (16-bit) for the H8/300 family.
+
+`.h8300s'
+     Recognize and emit additional instructions for the H8S variant, and
+     also make `.int' emit 32-bit numbers rather than the usual (16-bit)
+     for the H8/300 family.
+
+`.h8300hn'
+     Recognize and emit additional instructions for the H8/300H variant
+     in normal mode, and also make `.int' emit 32-bit numbers rather
+     than the usual (16-bit) for the H8/300 family.
+
+`.h8300sn'
+     Recognize and emit additional instructions for the H8S variant in
+     normal mode, and also make `.int' emit 32-bit numbers rather than
+     the usual (16-bit) for the H8/300 family.
+
+   On the H8/300 family (including the H8/300H) `.word' directives
+generate 16-bit numbers.
+
+
+File: as.info,  Node: H8/300 Opcodes,  Prev: H8/300 Directives,  Up: H8/300-Dependent
+
+8.8.5 Opcodes
+-------------
+
+For detailed information on the H8/300 machine instruction set, see
+`H8/300 Series Programming Manual'.  For information specific to the
+H8/300H, see `H8/300H Series Programming Manual' (Renesas).
+
+   `as' implements all the standard H8/300 opcodes.  No additional
+pseudo-instructions are needed on this family.
+
+   The following table summarizes the H8/300 opcodes, and their
+arguments.  Entries marked `*' are opcodes used only on the H8/300H.
+
+              Legend:
+                 Rs   source register
+                 Rd   destination register
+                 abs  absolute address
+                 imm  immediate data
+              disp:N  N-bit displacement from a register
+             pcrel:N  N-bit displacement relative to program counter
+
+        add.b #imm,rd              *  andc #imm,ccr
+        add.b rs,rd                   band #imm,rd
+        add.w rs,rd                   band #imm,@rd
+     *  add.w #imm,rd                 band #imm,@abs:8
+     *  add.l rs,rd                   bra  pcrel:8
+     *  add.l #imm,rd              *  bra  pcrel:16
+        adds #imm,rd                  bt   pcrel:8
+        addx #imm,rd               *  bt   pcrel:16
+        addx rs,rd                    brn  pcrel:8
+        and.b #imm,rd              *  brn  pcrel:16
+        and.b rs,rd                   bf   pcrel:8
+     *  and.w rs,rd                *  bf   pcrel:16
+     *  and.w #imm,rd                 bhi  pcrel:8
+     *  and.l #imm,rd              *  bhi  pcrel:16
+     *  and.l rs,rd                   bls  pcrel:8
+
+     *  bls  pcrel:16                 bld  #imm,rd
+        bcc  pcrel:8                  bld  #imm,@rd
+     *  bcc  pcrel:16                 bld  #imm,@abs:8
+        bhs  pcrel:8                  bnot #imm,rd
+     *  bhs  pcrel:16                 bnot #imm,@rd
+        bcs  pcrel:8                  bnot #imm,@abs:8
+     *  bcs  pcrel:16                 bnot rs,rd
+        blo  pcrel:8                  bnot rs,@rd
+     *  blo  pcrel:16                 bnot rs,@abs:8
+        bne  pcrel:8                  bor  #imm,rd
+     *  bne  pcrel:16                 bor  #imm,@rd
+        beq  pcrel:8                  bor  #imm,@abs:8
+     *  beq  pcrel:16                 bset #imm,rd
+        bvc  pcrel:8                  bset #imm,@rd
+     *  bvc  pcrel:16                 bset #imm,@abs:8
+        bvs  pcrel:8                  bset rs,rd
+     *  bvs  pcrel:16                 bset rs,@rd
+        bpl  pcrel:8                  bset rs,@abs:8
+     *  bpl  pcrel:16                 bsr  pcrel:8
+        bmi  pcrel:8                  bsr  pcrel:16
+     *  bmi  pcrel:16                 bst  #imm,rd
+        bge  pcrel:8                  bst  #imm,@rd
+     *  bge  pcrel:16                 bst  #imm,@abs:8
+        blt  pcrel:8                  btst #imm,rd
+     *  blt  pcrel:16                 btst #imm,@rd
+        bgt  pcrel:8                  btst #imm,@abs:8
+     *  bgt  pcrel:16                 btst rs,rd
+        ble  pcrel:8                  btst rs,@rd
+     *  ble  pcrel:16                 btst rs,@abs:8
+        bclr #imm,rd                  bxor #imm,rd
+        bclr #imm,@rd                 bxor #imm,@rd
+        bclr #imm,@abs:8              bxor #imm,@abs:8
+        bclr rs,rd                    cmp.b #imm,rd
+        bclr rs,@rd                   cmp.b rs,rd
+        bclr rs,@abs:8                cmp.w rs,rd
+        biand #imm,rd                 cmp.w rs,rd
+        biand #imm,@rd             *  cmp.w #imm,rd
+        biand #imm,@abs:8          *  cmp.l #imm,rd
+        bild #imm,rd               *  cmp.l rs,rd
+        bild #imm,@rd                 daa  rs
+        bild #imm,@abs:8              das  rs
+        bior #imm,rd                  dec.b rs
+        bior #imm,@rd              *  dec.w #imm,rd
+        bior #imm,@abs:8           *  dec.l #imm,rd
+        bist #imm,rd                  divxu.b rs,rd
+        bist #imm,@rd              *  divxu.w rs,rd
+        bist #imm,@abs:8           *  divxs.b rs,rd
+        bixor #imm,rd              *  divxs.w rs,rd
+        bixor #imm,@rd                eepmov
+        bixor #imm,@abs:8          *  eepmovw
+
+     *  exts.w rd                     mov.w rs,@abs:16
+     *  exts.l rd                  *  mov.l #imm,rd
+     *  extu.w rd                  *  mov.l rs,rd
+     *  extu.l rd                  *  mov.l @rs,rd
+        inc  rs                    *  mov.l @(disp:16,rs),rd
+     *  inc.w #imm,rd              *  mov.l @(disp:24,rs),rd
+     *  inc.l #imm,rd              *  mov.l @rs+,rd
+        jmp  @rs                   *  mov.l @abs:16,rd
+        jmp  abs                   *  mov.l @abs:24,rd
+        jmp  @@abs:8               *  mov.l rs,@rd
+        jsr  @rs                   *  mov.l rs,@(disp:16,rd)
+        jsr  abs                   *  mov.l rs,@(disp:24,rd)
+        jsr  @@abs:8               *  mov.l rs,@-rd
+        ldc  #imm,ccr              *  mov.l rs,@abs:16
+        ldc  rs,ccr                *  mov.l rs,@abs:24
+     *  ldc  @abs:16,ccr              movfpe @abs:16,rd
+     *  ldc  @abs:24,ccr              movtpe rs,@abs:16
+     *  ldc  @(disp:16,rs),ccr        mulxu.b rs,rd
+     *  ldc  @(disp:24,rs),ccr     *  mulxu.w rs,rd
+     *  ldc  @rs+,ccr              *  mulxs.b rs,rd
+     *  ldc  @rs,ccr               *  mulxs.w rs,rd
+     *  mov.b @(disp:24,rs),rd        neg.b rs
+     *  mov.b rs,@(disp:24,rd)     *  neg.w rs
+        mov.b @abs:16,rd           *  neg.l rs
+        mov.b rs,rd                   nop
+        mov.b @abs:8,rd               not.b rs
+        mov.b rs,@abs:8            *  not.w rs
+        mov.b rs,rd                *  not.l rs
+        mov.b #imm,rd                 or.b #imm,rd
+        mov.b @rs,rd                  or.b rs,rd
+        mov.b @(disp:16,rs),rd     *  or.w #imm,rd
+        mov.b @rs+,rd              *  or.w rs,rd
+        mov.b @abs:8,rd            *  or.l #imm,rd
+        mov.b rs,@rd               *  or.l rs,rd
+        mov.b rs,@(disp:16,rd)        orc  #imm,ccr
+        mov.b rs,@-rd                 pop.w rs
+        mov.b rs,@abs:8            *  pop.l rs
+        mov.w rs,@rd                  push.w rs
+     *  mov.w @(disp:24,rs),rd     *  push.l rs
+     *  mov.w rs,@(disp:24,rd)        rotl.b rs
+     *  mov.w @abs:24,rd           *  rotl.w rs
+     *  mov.w rs,@abs:24           *  rotl.l rs
+        mov.w rs,rd                   rotr.b rs
+        mov.w #imm,rd              *  rotr.w rs
+        mov.w @rs,rd               *  rotr.l rs
+        mov.w @(disp:16,rs),rd        rotxl.b rs
+        mov.w @rs+,rd              *  rotxl.w rs
+        mov.w @abs:16,rd           *  rotxl.l rs
+        mov.w rs,@(disp:16,rd)        rotxr.b rs
+        mov.w rs,@-rd              *  rotxr.w rs
+
+     *  rotxr.l rs                 *  stc  ccr,@(disp:24,rd)
+        bpt                        *  stc  ccr,@-rd
+        rte                        *  stc  ccr,@abs:16
+        rts                        *  stc  ccr,@abs:24
+        shal.b rs                     sub.b rs,rd
+     *  shal.w rs                     sub.w rs,rd
+     *  shal.l rs                  *  sub.w #imm,rd
+        shar.b rs                  *  sub.l rs,rd
+     *  shar.w rs                  *  sub.l #imm,rd
+     *  shar.l rs                     subs #imm,rd
+        shll.b rs                     subx #imm,rd
+     *  shll.w rs                     subx rs,rd
+     *  shll.l rs                  *  trapa #imm
+        shlr.b rs                     xor  #imm,rd
+     *  shlr.w rs                     xor  rs,rd
+     *  shlr.l rs                  *  xor.w #imm,rd
+        sleep                      *  xor.w rs,rd
+        stc  ccr,rd                *  xor.l #imm,rd
+     *  stc  ccr,@rs               *  xor.l rs,rd
+     *  stc  ccr,@(disp:16,rd)        xorc #imm,ccr
+
+   Four H8/300 instructions (`add', `cmp', `mov', `sub') are defined
+with variants using the suffixes `.b', `.w', and `.l' to specify the
+size of a memory operand.  `as' supports these suffixes, but does not
+require them; since one of the operands is always a register, `as' can
+deduce the correct size.
+
+   For example, since `r0' refers to a 16-bit register,
+     mov    r0,@foo
+is equivalent to
+     mov.w  r0,@foo
+
+   If you use the size suffixes, `as' issues a warning when the suffix
+and the register size do not match.
+
+
+File: as.info,  Node: H8/500-Dependent,  Next: HPPA-Dependent,  Prev: H8/300-Dependent,  Up: Machine Dependencies
+
+8.9 H8/500 Dependent Features
+=============================
+
+* Menu:
+
+* H8/500 Options::              Options
+* H8/500 Syntax::               Syntax
+* H8/500 Floating Point::       Floating Point
+* H8/500 Directives::           H8/500 Machine Directives
+* H8/500 Opcodes::              Opcodes
+
+
+File: as.info,  Node: H8/500 Options,  Next: H8/500 Syntax,  Up: H8/500-Dependent
+
+8.9.1 Options
+-------------
+
+`as' has no additional command-line options for the Renesas (formerly
+Hitachi) H8/500 family.
+
+
+File: as.info,  Node: H8/500 Syntax,  Next: H8/500 Floating Point,  Prev: H8/500 Options,  Up: H8/500-Dependent
+
+8.9.2 Syntax
+------------
+
+* Menu:
+
+* H8/500-Chars::                Special Characters
+* H8/500-Regs::                 Register Names
+* H8/500-Addressing::           Addressing Modes
+
+
+File: as.info,  Node: H8/500-Chars,  Next: H8/500-Regs,  Up: H8/500 Syntax
+
+8.9.2.1 Special Characters
+..........................
+
+`!' is the line comment character.
+
+   `;' can be used instead of a newline to separate statements.
+
+   Since `$' has no special meaning, you may use it in symbol names.
+
+
+File: as.info,  Node: H8/500-Regs,  Next: H8/500-Addressing,  Prev: H8/500-Chars,  Up: H8/500 Syntax
+
+8.9.2.2 Register Names
+......................
+
+You can use the predefined symbols `r0', `r1', `r2', `r3', `r4', `r5',
+`r6', and `r7' to refer to the H8/500 registers.
+
+   The H8/500 also has these control registers:
+
+`cp'
+     code pointer
+
+`dp'
+     data pointer
+
+`bp'
+     base pointer
+
+`tp'
+     stack top pointer
+
+`ep'
+     extra pointer
+
+`sr'
+     status register
+
+`ccr'
+     condition code register
+
+   All registers are 16 bits long.  To represent 32 bit numbers, use two
+adjacent registers; for distant memory addresses, use one of the segment
+pointers (`cp' for the program counter; `dp' for `r0'-`r3'; `ep' for
+`r4' and `r5'; and `tp' for `r6' and `r7'.
+
+
+File: as.info,  Node: H8/500-Addressing,  Prev: H8/500-Regs,  Up: H8/500 Syntax
+
+8.9.2.3 Addressing Modes
+........................
+
+as understands the following addressing modes for the H8/500:
+`RN'
+     Register direct
+
+`@RN'
+     Register indirect
+
+`@(d:8, RN)'
+     Register indirect with 8 bit signed displacement
+
+`@(d:16, RN)'
+     Register indirect with 16 bit signed displacement
+
+`@-RN'
+     Register indirect with pre-decrement
+
+`@RN+'
+     Register indirect with post-increment
+
+`@AA:8'
+     8 bit absolute address
+
+`@AA:16'
+     16 bit absolute address
+
+`#XX:8'
+     8 bit immediate
+
+`#XX:16'
+     16 bit immediate
+
+
+File: as.info,  Node: H8/500 Floating Point,  Next: H8/500 Directives,  Prev: H8/500 Syntax,  Up: H8/500-Dependent
+
+8.9.3 Floating Point
+--------------------
+
+The H8/500 family has no hardware floating point, but the `.float'
+directive generates IEEE floating-point numbers for compatibility with
+other development tools.
+
+
+File: as.info,  Node: H8/500 Directives,  Next: H8/500 Opcodes,  Prev: H8/500 Floating Point,  Up: H8/500-Dependent
+
+8.9.4 H8/500 Machine Directives
+-------------------------------
+
+`as' has no machine-dependent directives for the H8/500.  However, on
+this platform the `.int' and `.word' directives generate 16-bit numbers.
+
+
+File: as.info,  Node: H8/500 Opcodes,  Prev: H8/500 Directives,  Up: H8/500-Dependent
+
+8.9.5 Opcodes
+-------------
+
+For detailed information on the H8/500 machine instruction set, see
+`H8/500 Series Programming Manual' (Renesas M21T001).
+
+   `as' implements all the standard H8/500 opcodes.  No additional
+pseudo-instructions are needed on this family.
+
+   The following table summarizes H8/500 opcodes and their operands:
+
+     Legend:
+     abs8      8-bit absolute address
+     abs16     16-bit absolute address
+     abs24     24-bit absolute address
+     crb       `ccr', `br', `ep', `dp', `tp', `dp'
+     disp8     8-bit displacement
+     ea        `rn', `@rn', `@(d:8, rn)', `@(d:16, rn)',
+               `@-rn', `@rn+', `@aa:8', `@aa:16',
+               `#xx:8', `#xx:16'
+     ea_mem    `@rn', `@(d:8, rn)', `@(d:16, rn)',
+               `@-rn', `@rn+', `@aa:8', `@aa:16'
+     ea_noimm  `rn', `@rn', `@(d:8, rn)', `@(d:16, rn)',
+               `@-rn', `@rn+', `@aa:8', `@aa:16'
+     fp        r6
+     imm4      4-bit immediate data
+     imm8      8-bit immediate data
+     imm16     16-bit immediate data
+     pcrel8    8-bit offset from program counter
+     pcrel16   16-bit offset from program counter
+     qim       `-2', `-1', `1', `2'
+     rd        any register
+     rs        a register distinct from rd
+     rlist     comma-separated list of registers in parentheses;
+               register ranges `rd-rs' are allowed
+     sp        stack pointer (`r7')
+     sr        status register
+     sz        size; `.b' or `.w'.  If omitted, default `.w'
+
+     ldc[.b] ea,crb                 bcc[.w] pcrel16
+     ldc[.w] ea,sr                  bcc[.b] pcrel8
+     add[:q] sz qim,ea_noimm        bhs[.w] pcrel16
+     add[:g] sz ea,rd               bhs[.b] pcrel8
+     adds sz ea,rd                  bcs[.w] pcrel16
+     addx sz ea,rd                  bcs[.b] pcrel8
+     and sz ea,rd                   blo[.w] pcrel16
+     andc[.b] imm8,crb              blo[.b] pcrel8
+     andc[.w] imm16,sr              bne[.w] pcrel16
+     bpt                            bne[.b] pcrel8
+     bra[.w] pcrel16                beq[.w] pcrel16
+     bra[.b] pcrel8                 beq[.b] pcrel8
+     bt[.w] pcrel16                 bvc[.w] pcrel16
+     bt[.b] pcrel8                  bvc[.b] pcrel8
+     brn[.w] pcrel16                bvs[.w] pcrel16
+     brn[.b] pcrel8                 bvs[.b] pcrel8
+     bf[.w] pcrel16                 bpl[.w] pcrel16
+     bf[.b] pcrel8                  bpl[.b] pcrel8
+     bhi[.w] pcrel16                bmi[.w] pcrel16
+     bhi[.b] pcrel8                 bmi[.b] pcrel8
+     bls[.w] pcrel16                bge[.w] pcrel16
+     bls[.b] pcrel8                 bge[.b] pcrel8
+
+     blt[.w] pcrel16                mov[:g][.b] imm8,ea_mem
+     blt[.b] pcrel8                 mov[:g][.w] imm16,ea_mem
+     bgt[.w] pcrel16                movfpe[.b] ea,rd
+     bgt[.b] pcrel8                 movtpe[.b] rs,ea_noimm
+     ble[.w] pcrel16                mulxu sz ea,rd
+     ble[.b] pcrel8                 neg sz ea
+     bclr sz imm4,ea_noimm          nop
+     bclr sz rs,ea_noimm            not sz ea
+     bnot sz imm4,ea_noimm          or sz ea,rd
+     bnot sz rs,ea_noimm            orc[.b] imm8,crb
+     bset sz imm4,ea_noimm          orc[.w] imm16,sr
+     bset sz rs,ea_noimm            pjmp abs24
+     bsr[.b] pcrel8                 pjmp @rd
+     bsr[.w] pcrel16                pjsr abs24
+     btst sz imm4,ea_noimm          pjsr @rd
+     btst sz rs,ea_noimm            prtd imm8
+     clr sz ea                      prtd imm16
+     cmp[:e][.b] imm8,rd            prts
+     cmp[:i][.w] imm16,rd           rotl sz ea
+     cmp[:g].b imm8,ea_noimm        rotr sz ea
+     cmp[:g][.w] imm16,ea_noimm     rotxl sz ea
+     Cmp[:g] sz ea,rd               rotxr sz ea
+     dadd rs,rd                     rtd imm8
+     divxu sz ea,rd                 rtd imm16
+     dsub rs,rd                     rts
+     exts[.b] rd                    scb/f rs,pcrel8
+     extu[.b] rd                    scb/ne rs,pcrel8
+     jmp @rd                        scb/eq rs,pcrel8
+     jmp @(imm8,rd)                 shal sz ea
+     jmp @(imm16,rd)                shar sz ea
+     jmp abs16                      shll sz ea
+     jsr @rd                        shlr sz ea
+     jsr @(imm8,rd)                 sleep
+     jsr @(imm16,rd)                stc[.b] crb,ea_noimm
+     jsr abs16                      stc[.w] sr,ea_noimm
+     ldm @sp+,(rlist)               stm (rlist),@-sp
+     link fp,imm8                   sub sz ea,rd
+     link fp,imm16                  subs sz ea,rd
+     mov[:e][.b] imm8,rd            subx sz ea,rd
+     mov[:i][.w] imm16,rd           swap[.b] rd
+     mov[:l][.w] abs8,rd            tas[.b] ea
+     mov[:l].b abs8,rd              trapa imm4
+     mov[:s][.w] rs,abs8            trap/vs
+     mov[:s].b rs,abs8              tst sz ea
+     mov[:f][.w] @(disp8,fp),rd     unlk fp
+     mov[:f][.w] rs,@(disp8,fp)     xch[.w] rs,rd
+     mov[:f].b @(disp8,fp),rd       xor sz ea,rd
+     mov[:f].b rs,@(disp8,fp)       xorc.b imm8,crb
+     mov[:g] sz rs,ea_mem           xorc.w imm16,sr
+     mov[:g] sz ea,rd
+
+
+File: as.info,  Node: HPPA-Dependent,  Next: ESA/390-Dependent,  Prev: H8/500-Dependent,  Up: Machine Dependencies
+
+8.10 HPPA Dependent Features
+============================
+
+* Menu:
+
+* HPPA Notes::                Notes
+* HPPA Options::              Options
+* HPPA Syntax::               Syntax
+* HPPA Floating Point::       Floating Point
+* HPPA Directives::           HPPA Machine Directives
+* HPPA Opcodes::              Opcodes
+
+
+File: as.info,  Node: HPPA Notes,  Next: HPPA Options,  Up: HPPA-Dependent
+
+8.10.1 Notes
+------------
+
+As a back end for GNU CC `as' has been throughly tested and should work
+extremely well.  We have tested it only minimally on hand written
+assembly code and no one has tested it much on the assembly output from
+the HP compilers.
+
+   The format of the debugging sections has changed since the original
+`as' port (version 1.3X) was released; therefore, you must rebuild all
+HPPA objects and libraries with the new assembler so that you can debug
+the final executable.
+
+   The HPPA `as' port generates a small subset of the relocations
+available in the SOM and ELF object file formats.  Additional relocation
+support will be added as it becomes necessary.
+
+
+File: as.info,  Node: HPPA Options,  Next: HPPA Syntax,  Prev: HPPA Notes,  Up: HPPA-Dependent
+
+8.10.2 Options
+--------------
+
+`as' has no machine-dependent command-line options for the HPPA.
+
+
+File: as.info,  Node: HPPA Syntax,  Next: HPPA Floating Point,  Prev: HPPA Options,  Up: HPPA-Dependent
+
+8.10.3 Syntax
+-------------
+
+The assembler syntax closely follows the HPPA instruction set reference
+manual; assembler directives and general syntax closely follow the HPPA
+assembly language reference manual, with a few noteworthy differences.
+
+   First, a colon may immediately follow a label definition.  This is
+simply for compatibility with how most assembly language programmers
+write code.
+
+   Some obscure expression parsing problems may affect hand written
+code which uses the `spop' instructions, or code which makes significant
+use of the `!' line separator.
+
+   `as' is much less forgiving about missing arguments and other
+similar oversights than the HP assembler.  `as' notifies you of missing
+arguments as syntax errors; this is regarded as a feature, not a bug.
+
+   Finally, `as' allows you to use an external symbol without
+explicitly importing the symbol.  _Warning:_ in the future this will be
+an error for HPPA targets.
+
+   Special characters for HPPA targets include:
+
+   `;' is the line comment character.
+
+   `!' can be used instead of a newline to separate statements.
+
+   Since `$' has no special meaning, you may use it in symbol names.
+
+
+File: as.info,  Node: HPPA Floating Point,  Next: HPPA Directives,  Prev: HPPA Syntax,  Up: HPPA-Dependent
+
+8.10.4 Floating Point
+---------------------
+
+The HPPA family uses IEEE floating-point numbers.
+
+
+File: as.info,  Node: HPPA Directives,  Next: HPPA Opcodes,  Prev: HPPA Floating Point,  Up: HPPA-Dependent
+
+8.10.5 HPPA Assembler Directives
+--------------------------------
+
+`as' for the HPPA supports many additional directives for compatibility
+with the native assembler.  This section describes them only briefly.
+For detailed information on HPPA-specific assembler directives, see
+`HP9000 Series 800 Assembly Language Reference Manual' (HP 92432-90001).
+
+   `as' does _not_ support the following assembler directives described
+in the HP manual:
+
+     .endm           .liston
+     .enter          .locct
+     .leave          .macro
+     .listoff
+
+   Beyond those implemented for compatibility, `as' supports one
+additional assembler directive for the HPPA: `.param'.  It conveys
+register argument locations for static functions.  Its syntax closely
+follows the `.export' directive.
+
+   These are the additional directives in `as' for the HPPA:
+
+`.block N'
+`.blockz N'
+     Reserve N bytes of storage, and initialize them to zero.
+
+`.call'
+     Mark the beginning of a procedure call.  Only the special case
+     with _no arguments_ is allowed.
+
+`.callinfo [ PARAM=VALUE, ... ]  [ FLAG, ... ]'
+     Specify a number of parameters and flags that define the
+     environment for a procedure.
+
+     PARAM may be any of `frame' (frame size), `entry_gr' (end of
+     general register range), `entry_fr' (end of float register range),
+     `entry_sr' (end of space register range).
+
+     The values for FLAG are `calls' or `caller' (proc has
+     subroutines), `no_calls' (proc does not call subroutines),
+     `save_rp' (preserve return pointer), `save_sp' (proc preserves
+     stack pointer), `no_unwind' (do not unwind this proc), `hpux_int'
+     (proc is interrupt routine).
+
+`.code'
+     Assemble into the standard section called `$TEXT$', subsection
+     `$CODE$'.
+
+`.copyright "STRING"'
+     In the SOM object format, insert STRING into the object code,
+     marked as a copyright string.
+
+`.copyright "STRING"'
+     In the ELF object format, insert STRING into the object code,
+     marked as a version string.
+
+`.enter'
+     Not yet supported; the assembler rejects programs containing this
+     directive.
+
+`.entry'
+     Mark the beginning of a procedure.
+
+`.exit'
+     Mark the end of a procedure.
+
+`.export NAME [ ,TYP ]  [ ,PARAM=R ]'
+     Make a procedure NAME available to callers.  TYP, if present, must
+     be one of `absolute', `code' (ELF only, not SOM), `data', `entry',
+     `data', `entry', `millicode', `plabel', `pri_prog', or `sec_prog'.
+
+     PARAM, if present, provides either relocation information for the
+     procedure arguments and result, or a privilege level.  PARAM may be
+     `argwN' (where N ranges from `0' to `3', and indicates one of four
+     one-word arguments); `rtnval' (the procedure's result); or
+     `priv_lev' (privilege level).  For arguments or the result, R
+     specifies how to relocate, and must be one of `no' (not
+     relocatable), `gr' (argument is in general register), `fr' (in
+     floating point register), or `fu' (upper half of float register).
+     For `priv_lev', R is an integer.
+
+`.half N'
+     Define a two-byte integer constant N; synonym for the portable
+     `as' directive `.short'.
+
+`.import NAME [ ,TYP ]'
+     Converse of `.export'; make a procedure available to call.  The
+     arguments use the same conventions as the first two arguments for
+     `.export'.
+
+`.label NAME'
+     Define NAME as a label for the current assembly location.
+
+`.leave'
+     Not yet supported; the assembler rejects programs containing this
+     directive.
+
+`.origin LC'
+     Advance location counter to LC. Synonym for the `as' portable
+     directive `.org'.
+
+`.param NAME [ ,TYP ]  [ ,PARAM=R ]'
+     Similar to `.export', but used for static procedures.
+
+`.proc'
+     Use preceding the first statement of a procedure.
+
+`.procend'
+     Use following the last statement of a procedure.
+
+`LABEL .reg EXPR'
+     Synonym for `.equ'; define LABEL with the absolute expression EXPR
+     as its value.
+
+`.space SECNAME [ ,PARAMS ]'
+     Switch to section SECNAME, creating a new section by that name if
+     necessary.  You may only use PARAMS when creating a new section,
+     not when switching to an existing one.  SECNAME may identify a
+     section by number rather than by name.
+
+     If specified, the list PARAMS declares attributes of the section,
+     identified by keywords.  The keywords recognized are `spnum=EXP'
+     (identify this section by the number EXP, an absolute expression),
+     `sort=EXP' (order sections according to this sort key when linking;
+     EXP is an absolute expression), `unloadable' (section contains no
+     loadable data), `notdefined' (this section defined elsewhere), and
+     `private' (data in this section not available to other programs).
+
+`.spnum SECNAM'
+     Allocate four bytes of storage, and initialize them with the
+     section number of the section named SECNAM.  (You can define the
+     section number with the HPPA `.space' directive.)
+
+`.string "STR"'
+     Copy the characters in the string STR to the object file.  *Note
+     Strings: Strings, for information on escape sequences you can use
+     in `as' strings.
+
+     _Warning!_ The HPPA version of `.string' differs from the usual
+     `as' definition: it does _not_ write a zero byte after copying STR.
+
+`.stringz "STR"'
+     Like `.string', but appends a zero byte after copying STR to object
+     file.
+
+`.subspa NAME [ ,PARAMS ]'
+`.nsubspa NAME [ ,PARAMS ]'
+     Similar to `.space', but selects a subsection NAME within the
+     current section.  You may only specify PARAMS when you create a
+     subsection (in the first instance of `.subspa' for this NAME).
+
+     If specified, the list PARAMS declares attributes of the
+     subsection, identified by keywords.  The keywords recognized are
+     `quad=EXPR' ("quadrant" for this subsection), `align=EXPR'
+     (alignment for beginning of this subsection; a power of two),
+     `access=EXPR' (value for "access rights" field), `sort=EXPR'
+     (sorting order for this subspace in link), `code_only' (subsection
+     contains only code), `unloadable' (subsection cannot be loaded
+     into memory), `comdat' (subsection is comdat), `common'
+     (subsection is common block), `dup_comm' (subsection may have
+     duplicate names), or `zero' (subsection is all zeros, do not write
+     in object file).
+
+     `.nsubspa' always creates a new subspace with the given name, even
+     if one with the same name already exists.
+
+     `comdat', `common' and `dup_comm' can be used to implement various
+     flavors of one-only support when using the SOM linker.  The SOM
+     linker only supports specific combinations of these flags.  The
+     details are not documented.  A brief description is provided here.
+
+     `comdat' provides a form of linkonce support.  It is useful for
+     both code and data subspaces.  A `comdat' subspace has a key symbol
+     marked by the `is_comdat' flag or `ST_COMDAT'.  Only the first
+     subspace for any given key is selected.  The key symbol becomes
+     universal in shared links.  This is similar to the behavior of
+     `secondary_def' symbols.
+
+     `common' provides Fortran named common support.  It is only useful
+     for data subspaces.  Symbols with the flag `is_common' retain this
+     flag in shared links.  Referencing a `is_common' symbol in a shared
+     library from outside the library doesn't work.  Thus, `is_common'
+     symbols must be output whenever they are needed.
+
+     `common' and `dup_comm' together provide Cobol common support.
+     The subspaces in this case must all be the same length.
+     Otherwise, this support is similar to the Fortran common support.
+
+     `dup_comm' by itself provides a type of one-only support for code.
+     Only the first `dup_comm' subspace is selected.  There is a rather
+     complex algorithm to compare subspaces.  Code symbols marked with
+     the `dup_common' flag are hidden.  This support was intended for
+     "C++ duplicate inlines".
+
+     A simplified technique is used to mark the flags of symbols based
+     on the flags of their subspace.  A symbol with the scope
+     SS_UNIVERSAL and type ST_ENTRY, ST_CODE or ST_DATA is marked with
+     the corresponding settings of `comdat', `common' and `dup_comm'
+     from the subspace, respectively.  This avoids having to introduce
+     additional directives to mark these symbols.  The HP assembler
+     sets `is_common' from `common'.  However, it doesn't set the
+     `dup_common' from `dup_comm'.  It doesn't have `comdat' support.
+
+`.version "STR"'
+     Write STR as version identifier in object code.
+
+
+File: as.info,  Node: HPPA Opcodes,  Prev: HPPA Directives,  Up: HPPA-Dependent
+
+8.10.6 Opcodes
+--------------
+
+For detailed information on the HPPA machine instruction set, see
+`PA-RISC Architecture and Instruction Set Reference Manual' (HP
+09740-90039).
+
+
+File: as.info,  Node: ESA/390-Dependent,  Next: i386-Dependent,  Prev: HPPA-Dependent,  Up: Machine Dependencies
+
+8.11 ESA/390 Dependent Features
+===============================
+
+* Menu:
+
+* ESA/390 Notes::                Notes
+* ESA/390 Options::              Options
+* ESA/390 Syntax::               Syntax
+* ESA/390 Floating Point::       Floating Point
+* ESA/390 Directives::           ESA/390 Machine Directives
+* ESA/390 Opcodes::              Opcodes
+
+
+File: as.info,  Node: ESA/390 Notes,  Next: ESA/390 Options,  Up: ESA/390-Dependent
+
+8.11.1 Notes
+------------
+
+The ESA/390 `as' port is currently intended to be a back-end for the
+GNU CC compiler.  It is not HLASM compatible, although it does support
+a subset of some of the HLASM directives.  The only supported binary
+file format is ELF; none of the usual MVS/VM/OE/USS object file
+formats, such as ESD or XSD, are supported.
+
+   When used with the GNU CC compiler, the ESA/390 `as' will produce
+correct, fully relocated, functional binaries, and has been used to
+compile and execute large projects.  However, many aspects should still
+be considered experimental; these include shared library support,
+dynamically loadable objects, and any relocation other than the 31-bit
+relocation.
+
+
+File: as.info,  Node: ESA/390 Options,  Next: ESA/390 Syntax,  Prev: ESA/390 Notes,  Up: ESA/390-Dependent
+
+8.11.2 Options
+--------------
+
+`as' has no machine-dependent command-line options for the ESA/390.
+
+
+File: as.info,  Node: ESA/390 Syntax,  Next: ESA/390 Floating Point,  Prev: ESA/390 Options,  Up: ESA/390-Dependent
+
+8.11.3 Syntax
+-------------
+
+The opcode/operand syntax follows the ESA/390 Principles of Operation
+manual; assembler directives and general syntax are loosely based on the
+prevailing AT&T/SVR4/ELF/Solaris style notation.  HLASM-style directives
+are _not_ supported for the most part, with the exception of those
+described herein.
+
+   A leading dot in front of directives is optional, and the case of
+directives is ignored; thus for example, .using and USING have the same
+effect.
+
+   A colon may immediately follow a label definition.  This is simply
+for compatibility with how most assembly language programmers write
+code.
+
+   `#' is the line comment character.
+
+   `;' can be used instead of a newline to separate statements.
+
+   Since `$' has no special meaning, you may use it in symbol names.
+
+   Registers can be given the symbolic names r0..r15, fp0, fp2, fp4,
+fp6.  By using thesse symbolic names, `as' can detect simple syntax
+errors. The name rarg or r.arg is a synonym for r11, rtca or r.tca for
+r12, sp, r.sp, dsa r.dsa for r13, lr or r.lr for r14, rbase or r.base
+for r3 and rpgt or r.pgt for r4.
+
+   `*' is the current location counter.  Unlike `.' it is always
+relative to the last USING directive.  Note that this means that
+expressions cannot use multiplication, as any occurrence of `*' will be
+interpreted as a location counter.
+
+   All labels are relative to the last USING.  Thus, branches to a label
+always imply the use of base+displacement.
+
+   Many of the usual forms of address constants / address literals are
+supported.  Thus,
+     	.using	*,r3
+     	L	r15,=A(some_routine)
+     	LM	r6,r7,=V(some_longlong_extern)
+     	A	r1,=F'12'
+     	AH	r0,=H'42'
+     	ME	r6,=E'3.1416'
+     	MD	r6,=D'3.14159265358979'
+     	O	r6,=XL4'cacad0d0'
+     	.ltorg
+   should all behave as expected: that is, an entry in the literal pool
+will be created (or reused if it already exists), and the instruction
+operands will be the displacement into the literal pool using the
+current base register (as last declared with the `.using' directive).
+
+
+File: as.info,  Node: ESA/390 Floating Point,  Next: ESA/390 Directives,  Prev: ESA/390 Syntax,  Up: ESA/390-Dependent
+
+8.11.4 Floating Point
+---------------------
+
+The assembler generates only IEEE floating-point numbers.  The older
+floating point formats are not supported.
+
+
+File: as.info,  Node: ESA/390 Directives,  Next: ESA/390 Opcodes,  Prev: ESA/390 Floating Point,  Up: ESA/390-Dependent
+
+8.11.5 ESA/390 Assembler Directives
+-----------------------------------
+
+`as' for the ESA/390 supports all of the standard ELF/SVR4 assembler
+directives that are documented in the main part of this documentation.
+Several additional directives are supported in order to implement the
+ESA/390 addressing model.  The most important of these are `.using' and
+`.ltorg'
+
+   These are the additional directives in `as' for the ESA/390:
+
+`.dc'
+     A small subset of the usual DC directive is supported.
+
+`.drop REGNO'
+     Stop using REGNO as the base register.  The REGNO must have been
+     previously declared with a `.using' directive in the same section
+     as the current section.
+
+`.ebcdic STRING'
+     Emit the EBCDIC equivalent of the indicated string.  The emitted
+     string will be null terminated.  Note that the directives
+     `.string' etc. emit ascii strings by default.
+
+`EQU'
+     The standard HLASM-style EQU directive is not supported; however,
+     the standard `as' directive .equ can be used to the same effect.
+
+`.ltorg'
+     Dump the literal pool accumulated so far; begin a new literal pool.
+     The literal pool will be written in the current section; in order
+     to generate correct assembly, a `.using' must have been previously
+     specified in the same section.
+
+`.using EXPR,REGNO'
+     Use REGNO as the base register for all subsequent RX, RS, and SS
+     form instructions. The EXPR will be evaluated to obtain the base
+     address; usually, EXPR will merely be `*'.
+
+     This assembler allows two `.using' directives to be simultaneously
+     outstanding, one in the `.text' section, and one in another section
+     (typically, the `.data' section).  This feature allows dynamically
+     loaded objects to be implemented in a relatively straightforward
+     way.  A `.using' directive must always be specified in the `.text'
+     section; this will specify the base register that will be used for
+     branches in the `.text' section.  A second `.using' may be
+     specified in another section; this will specify the base register
+     that is used for non-label address literals.  When a second
+     `.using' is specified, then the subsequent `.ltorg' must be put in
+     the same section; otherwise an error will result.
+
+     Thus, for example, the following code uses `r3' to address branch
+     targets and `r4' to address the literal pool, which has been
+     written to the `.data' section.  The is, the constants
+     `=A(some_routine)', `=H'42'' and `=E'3.1416'' will all appear in
+     the `.data' section.
+
+          .data
+          	.using  LITPOOL,r4
+          .text
+          	BASR	r3,0
+          	.using	*,r3
+                  B       START
+          	.long	LITPOOL
+          START:
+          	L	r4,4(,r3)
+          	L	r15,=A(some_routine)
+          	LTR	r15,r15
+          	BNE	LABEL
+          	AH	r0,=H'42'
+          LABEL:
+          	ME	r6,=E'3.1416'
+          .data
+          LITPOOL:
+          	.ltorg
+
+     Note that this dual-`.using' directive semantics extends and is
+     not compatible with HLASM semantics.  Note that this assembler
+     directive does not support the full range of HLASM semantics.
+
+
+
+File: as.info,  Node: ESA/390 Opcodes,  Prev: ESA/390 Directives,  Up: ESA/390-Dependent
+
+8.11.6 Opcodes
+--------------
+
+For detailed information on the ESA/390 machine instruction set, see
+`ESA/390 Principles of Operation' (IBM Publication Number DZ9AR004).
+
+
+File: as.info,  Node: i386-Dependent,  Next: i860-Dependent,  Prev: ESA/390-Dependent,  Up: Machine Dependencies
+
+8.12 80386 Dependent Features
+=============================
+
+   The i386 version `as' supports both the original Intel 386
+architecture in both 16 and 32-bit mode as well as AMD x86-64
+architecture extending the Intel architecture to 64-bits.
+
+* Menu:
+
+* i386-Options::                Options
+* i386-Syntax::                 AT&T Syntax versus Intel Syntax
+* i386-Mnemonics::              Instruction Naming
+* i386-Regs::                   Register Naming
+* i386-Prefixes::               Instruction Prefixes
+* i386-Memory::                 Memory References
+* i386-Jumps::                  Handling of Jump Instructions
+* i386-Float::                  Floating Point
+* i386-SIMD::                   Intel's MMX and AMD's 3DNow! SIMD Operations
+* i386-16bit::                  Writing 16-bit Code
+* i386-Arch::                   Specifying an x86 CPU architecture
+* i386-Bugs::                   AT&T Syntax bugs
+* i386-Notes::                  Notes
+
+
+File: as.info,  Node: i386-Options,  Next: i386-Syntax,  Up: i386-Dependent
+
+8.12.1 Options
+--------------
+
+The i386 version of `as' has a few machine dependent options:
+
+`--32 | --64'
+     Select the word size, either 32 bits or 64 bits. Selecting 32-bit
+     implies Intel i386 architecture, while 64-bit implies AMD x86-64
+     architecture.
+
+     These options are only available with the ELF object file format,
+     and require that the necessary BFD support has been included (on a
+     32-bit platform you have to add -enable-64-bit-bfd to configure
+     enable 64-bit usage and use x86-64 as target platform).
+
+`-n'
+     By default, x86 GAS replaces multiple nop instructions used for
+     alignment within code sections with multi-byte nop instructions
+     such as leal 0(%esi,1),%esi.  This switch disables the
+     optimization.
+
+
+File: as.info,  Node: i386-Syntax,  Next: i386-Mnemonics,  Prev: i386-Options,  Up: i386-Dependent
+
+8.12.2 AT&T Syntax versus Intel Syntax
+--------------------------------------
+
+`as' now supports assembly using Intel assembler syntax.
+`.intel_syntax' selects Intel mode, and `.att_syntax' switches back to
+the usual AT&T mode for compatibility with the output of `gcc'.  Either
+of these directives may have an optional argument, `prefix', or
+`noprefix' specifying whether registers require a `%' prefix.  AT&T
+System V/386 assembler syntax is quite different from Intel syntax.  We
+mention these differences because almost all 80386 documents use Intel
+syntax.  Notable differences between the two syntaxes are:
+
+   * AT&T immediate operands are preceded by `$'; Intel immediate
+     operands are undelimited (Intel `push 4' is AT&T `pushl $4').
+     AT&T register operands are preceded by `%'; Intel register operands
+     are undelimited.  AT&T absolute (as opposed to PC relative)
+     jump/call operands are prefixed by `*'; they are undelimited in
+     Intel syntax.
+
+   * AT&T and Intel syntax use the opposite order for source and
+     destination operands.  Intel `add eax, 4' is `addl $4, %eax'.  The
+     `source, dest' convention is maintained for compatibility with
+     previous Unix assemblers.  Note that instructions with more than
+     one source operand, such as the `enter' instruction, do _not_ have
+     reversed order.  *Note i386-Bugs::.
+
+   * In AT&T syntax the size of memory operands is determined from the
+     last character of the instruction mnemonic.  Mnemonic suffixes of
+     `b', `w', `l' and `q' specify byte (8-bit), word (16-bit), long
+     (32-bit) and quadruple word (64-bit) memory references.  Intel
+     syntax accomplishes this by prefixing memory operands (_not_ the
+     instruction mnemonics) with `byte ptr', `word ptr', `dword ptr'
+     and `qword ptr'.  Thus, Intel `mov al, byte ptr FOO' is `movb FOO,
+     %al' in AT&T syntax.
+
+   * Immediate form long jumps and calls are `lcall/ljmp $SECTION,
+     $OFFSET' in AT&T syntax; the Intel syntax is `call/jmp far
+     SECTION:OFFSET'.  Also, the far return instruction is `lret
+     $STACK-ADJUST' in AT&T syntax; Intel syntax is `ret far
+     STACK-ADJUST'.
+
+   * The AT&T assembler does not provide support for multiple section
+     programs.  Unix style systems expect all programs to be single
+     sections.
+
+
+File: as.info,  Node: i386-Mnemonics,  Next: i386-Regs,  Prev: i386-Syntax,  Up: i386-Dependent
+
+8.12.3 Instruction Naming
+-------------------------
+
+Instruction mnemonics are suffixed with one character modifiers which
+specify the size of operands.  The letters `b', `w', `l' and `q'
+specify byte, word, long and quadruple word operands.  If no suffix is
+specified by an instruction then `as' tries to fill in the missing
+suffix based on the destination register operand (the last one by
+convention).  Thus, `mov %ax, %bx' is equivalent to `movw %ax, %bx';
+also, `mov $1, %bx' is equivalent to `movw $1, bx'.  Note that this is
+incompatible with the AT&T Unix assembler which assumes that a missing
+mnemonic suffix implies long operand size.  (This incompatibility does
+not affect compiler output since compilers always explicitly specify
+the mnemonic suffix.)
+
+   Almost all instructions have the same names in AT&T and Intel format.
+There are a few exceptions.  The sign extend and zero extend
+instructions need two sizes to specify them.  They need a size to
+sign/zero extend _from_ and a size to zero extend _to_.  This is
+accomplished by using two instruction mnemonic suffixes in AT&T syntax.
+Base names for sign extend and zero extend are `movs...' and `movz...'
+in AT&T syntax (`movsx' and `movzx' in Intel syntax).  The instruction
+mnemonic suffixes are tacked on to this base name, the _from_ suffix
+before the _to_ suffix.  Thus, `movsbl %al, %edx' is AT&T syntax for
+"move sign extend _from_ %al _to_ %edx."  Possible suffixes, thus, are
+`bl' (from byte to long), `bw' (from byte to word), `wl' (from word to
+long), `bq' (from byte to quadruple word), `wq' (from word to quadruple
+word), and `lq' (from long to quadruple word).
+
+   The Intel-syntax conversion instructions
+
+   * `cbw' -- sign-extend byte in `%al' to word in `%ax',
+
+   * `cwde' -- sign-extend word in `%ax' to long in `%eax',
+
+   * `cwd' -- sign-extend word in `%ax' to long in `%dx:%ax',
+
+   * `cdq' -- sign-extend dword in `%eax' to quad in `%edx:%eax',
+
+   * `cdqe' -- sign-extend dword in `%eax' to quad in `%rax' (x86-64
+     only),
+
+   * `cqo' -- sign-extend quad in `%rax' to octuple in `%rdx:%rax'
+     (x86-64 only),
+
+are called `cbtw', `cwtl', `cwtd', `cltd', `cltq', and `cqto' in AT&T
+naming.  `as' accepts either naming for these instructions.
+
+   Far call/jump instructions are `lcall' and `ljmp' in AT&T syntax,
+but are `call far' and `jump far' in Intel convention.
+
+
+File: as.info,  Node: i386-Regs,  Next: i386-Prefixes,  Prev: i386-Mnemonics,  Up: i386-Dependent
+
+8.12.4 Register Naming
+----------------------
+
+Register operands are always prefixed with `%'.  The 80386 registers
+consist of
+
+   * the 8 32-bit registers `%eax' (the accumulator), `%ebx', `%ecx',
+     `%edx', `%edi', `%esi', `%ebp' (the frame pointer), and `%esp'
+     (the stack pointer).
+
+   * the 8 16-bit low-ends of these: `%ax', `%bx', `%cx', `%dx', `%di',
+     `%si', `%bp', and `%sp'.
+
+   * the 8 8-bit registers: `%ah', `%al', `%bh', `%bl', `%ch', `%cl',
+     `%dh', and `%dl' (These are the high-bytes and low-bytes of `%ax',
+     `%bx', `%cx', and `%dx')
+
+   * the 6 section registers `%cs' (code section), `%ds' (data
+     section), `%ss' (stack section), `%es', `%fs', and `%gs'.
+
+   * the 3 processor control registers `%cr0', `%cr2', and `%cr3'.
+
+   * the 6 debug registers `%db0', `%db1', `%db2', `%db3', `%db6', and
+     `%db7'.
+
+   * the 2 test registers `%tr6' and `%tr7'.
+
+   * the 8 floating point register stack `%st' or equivalently
+     `%st(0)', `%st(1)', `%st(2)', `%st(3)', `%st(4)', `%st(5)',
+     `%st(6)', and `%st(7)'.  These registers are overloaded by 8 MMX
+     registers `%mm0', `%mm1', `%mm2', `%mm3', `%mm4', `%mm5', `%mm6'
+     and `%mm7'.
+
+   * the 8 SSE registers registers `%xmm0', `%xmm1', `%xmm2', `%xmm3',
+     `%xmm4', `%xmm5', `%xmm6' and `%xmm7'.
+
+   The AMD x86-64 architecture extends the register set by:
+
+   * enhancing the 8 32-bit registers to 64-bit: `%rax' (the
+     accumulator), `%rbx', `%rcx', `%rdx', `%rdi', `%rsi', `%rbp' (the
+     frame pointer), `%rsp' (the stack pointer)
+
+   * the 8 extended registers `%r8'-`%r15'.
+
+   * the 8 32-bit low ends of the extended registers: `%r8d'-`%r15d'
+
+   * the 8 16-bit low ends of the extended registers: `%r8w'-`%r15w'
+
+   * the 8 8-bit low ends of the extended registers: `%r8b'-`%r15b'
+
+   * the 4 8-bit registers: `%sil', `%dil', `%bpl', `%spl'.
+
+   * the 8 debug registers: `%db8'-`%db15'.
+
+   * the 8 SSE registers: `%xmm8'-`%xmm15'.
+
+
+File: as.info,  Node: i386-Prefixes,  Next: i386-Memory,  Prev: i386-Regs,  Up: i386-Dependent
+
+8.12.5 Instruction Prefixes
+---------------------------
+
+Instruction prefixes are used to modify the following instruction.  They
+are used to repeat string instructions, to provide section overrides, to
+perform bus lock operations, and to change operand and address sizes.
+(Most instructions that normally operate on 32-bit operands will use
+16-bit operands if the instruction has an "operand size" prefix.)
+Instruction prefixes are best written on the same line as the
+instruction they act upon. For example, the `scas' (scan string)
+instruction is repeated with:
+
+             repne scas %es:(%edi),%al
+
+   You may also place prefixes on the lines immediately preceding the
+instruction, but this circumvents checks that `as' does with prefixes,
+and will not work with all prefixes.
+
+   Here is a list of instruction prefixes:
+
+   * Section override prefixes `cs', `ds', `ss', `es', `fs', `gs'.
+     These are automatically added by specifying using the
+     SECTION:MEMORY-OPERAND form for memory references.
+
+   * Operand/Address size prefixes `data16' and `addr16' change 32-bit
+     operands/addresses into 16-bit operands/addresses, while `data32'
+     and `addr32' change 16-bit ones (in a `.code16' section) into
+     32-bit operands/addresses.  These prefixes _must_ appear on the
+     same line of code as the instruction they modify. For example, in
+     a 16-bit `.code16' section, you might write:
+
+                  addr32 jmpl *(%ebx)
+
+   * The bus lock prefix `lock' inhibits interrupts during execution of
+     the instruction it precedes.  (This is only valid with certain
+     instructions; see a 80386 manual for details).
+
+   * The wait for coprocessor prefix `wait' waits for the coprocessor to
+     complete the current instruction.  This should never be needed for
+     the 80386/80387 combination.
+
+   * The `rep', `repe', and `repne' prefixes are added to string
+     instructions to make them repeat `%ecx' times (`%cx' times if the
+     current address size is 16-bits).  
+
+   * The `rex' family of prefixes is used by x86-64 to encode
+     extensions to i386 instruction set.  The `rex' prefix has four
+     bits -- an operand size overwrite (`64') used to change operand
+     size from 32-bit to 64-bit and X, Y and Z extensions bits used to
+     extend the register set.
+
+     You may write the `rex' prefixes directly. The `rex64xyz'
+     instruction emits `rex' prefix with all the bits set.  By omitting
+     the `64', `x', `y' or `z' you may write other prefixes as well.
+     Normally, there is no need to write the prefixes explicitly, since
+     gas will automatically generate them based on the instruction
+     operands.
+
+
+File: as.info,  Node: i386-Memory,  Next: i386-Jumps,  Prev: i386-Prefixes,  Up: i386-Dependent
+
+8.12.6 Memory References
+------------------------
+
+An Intel syntax indirect memory reference of the form
+
+     SECTION:[BASE + INDEX*SCALE + DISP]
+
+is translated into the AT&T syntax
+
+     SECTION:DISP(BASE, INDEX, SCALE)
+
+where BASE and INDEX are the optional 32-bit base and index registers,
+DISP is the optional displacement, and SCALE, taking the values 1, 2,
+4, and 8, multiplies INDEX to calculate the address of the operand.  If
+no SCALE is specified, SCALE is taken to be 1.  SECTION specifies the
+optional section register for the memory operand, and may override the
+default section register (see a 80386 manual for section register
+defaults). Note that section overrides in AT&T syntax _must_ be
+preceded by a `%'.  If you specify a section override which coincides
+with the default section register, `as' does _not_ output any section
+register override prefixes to assemble the given instruction.  Thus,
+section overrides can be specified to emphasize which section register
+is used for a given memory operand.
+
+   Here are some examples of Intel and AT&T style memory references:
+
+AT&T: `-4(%ebp)', Intel:  `[ebp - 4]'
+     BASE is `%ebp'; DISP is `-4'. SECTION is missing, and the default
+     section is used (`%ss' for addressing with `%ebp' as the base
+     register).  INDEX, SCALE are both missing.
+
+AT&T: `foo(,%eax,4)', Intel: `[foo + eax*4]'
+     INDEX is `%eax' (scaled by a SCALE 4); DISP is `foo'.  All other
+     fields are missing.  The section register here defaults to `%ds'.
+
+AT&T: `foo(,1)'; Intel `[foo]'
+     This uses the value pointed to by `foo' as a memory operand.  Note
+     that BASE and INDEX are both missing, but there is only _one_ `,'.
+     This is a syntactic exception.
+
+AT&T: `%gs:foo'; Intel `gs:foo'
+     This selects the contents of the variable `foo' with section
+     register SECTION being `%gs'.
+
+   Absolute (as opposed to PC relative) call and jump operands must be
+prefixed with `*'.  If no `*' is specified, `as' always chooses PC
+relative addressing for jump/call labels.
+
+   Any instruction that has a memory operand, but no register operand,
+_must_ specify its size (byte, word, long, or quadruple) with an
+instruction mnemonic suffix (`b', `w', `l' or `q', respectively).
+
+   The x86-64 architecture adds an RIP (instruction pointer relative)
+addressing.  This addressing mode is specified by using `rip' as a base
+register.  Only constant offsets are valid. For example:
+
+AT&T: `1234(%rip)', Intel: `[rip + 1234]'
+     Points to the address 1234 bytes past the end of the current
+     instruction.
+
+AT&T: `symbol(%rip)', Intel: `[rip + symbol]'
+     Points to the `symbol' in RIP relative way, this is shorter than
+     the default absolute addressing.
+
+   Other addressing modes remain unchanged in x86-64 architecture,
+except registers used are 64-bit instead of 32-bit.
+
+
+File: as.info,  Node: i386-Jumps,  Next: i386-Float,  Prev: i386-Memory,  Up: i386-Dependent
+
+8.12.7 Handling of Jump Instructions
+------------------------------------
+
+Jump instructions are always optimized to use the smallest possible
+displacements.  This is accomplished by using byte (8-bit) displacement
+jumps whenever the target is sufficiently close.  If a byte displacement
+is insufficient a long displacement is used.  We do not support word
+(16-bit) displacement jumps in 32-bit mode (i.e. prefixing the jump
+instruction with the `data16' instruction prefix), since the 80386
+insists upon masking `%eip' to 16 bits after the word displacement is
+added. (See also *note i386-Arch::)
+
+   Note that the `jcxz', `jecxz', `loop', `loopz', `loope', `loopnz'
+and `loopne' instructions only come in byte displacements, so that if
+you use these instructions (`gcc' does not use them) you may get an
+error message (and incorrect code).  The AT&T 80386 assembler tries to
+get around this problem by expanding `jcxz foo' to
+
+              jcxz cx_zero
+              jmp cx_nonzero
+     cx_zero: jmp foo
+     cx_nonzero:
+
+
+File: as.info,  Node: i386-Float,  Next: i386-SIMD,  Prev: i386-Jumps,  Up: i386-Dependent
+
+8.12.8 Floating Point
+---------------------
+
+All 80387 floating point types except packed BCD are supported.  (BCD
+support may be added without much difficulty).  These data types are
+16-, 32-, and 64- bit integers, and single (32-bit), double (64-bit),
+and extended (80-bit) precision floating point.  Each supported type
+has an instruction mnemonic suffix and a constructor associated with
+it.  Instruction mnemonic suffixes specify the operand's data type.
+Constructors build these data types into memory.
+
+   * Floating point constructors are `.float' or `.single', `.double',
+     and `.tfloat' for 32-, 64-, and 80-bit formats.  These correspond
+     to instruction mnemonic suffixes `s', `l', and `t'. `t' stands for
+     80-bit (ten byte) real.  The 80387 only supports this format via
+     the `fldt' (load 80-bit real to stack top) and `fstpt' (store
+     80-bit real and pop stack) instructions.
+
+   * Integer constructors are `.word', `.long' or `.int', and `.quad'
+     for the 16-, 32-, and 64-bit integer formats.  The corresponding
+     instruction mnemonic suffixes are `s' (single), `l' (long), and
+     `q' (quad).  As with the 80-bit real format, the 64-bit `q' format
+     is only present in the `fildq' (load quad integer to stack top)
+     and `fistpq' (store quad integer and pop stack) instructions.
+
+   Register to register operations should not use instruction mnemonic
+suffixes.  `fstl %st, %st(1)' will give a warning, and be assembled as
+if you wrote `fst %st, %st(1)', since all register to register
+operations use 80-bit floating point operands. (Contrast this with
+`fstl %st, mem', which converts `%st' from 80-bit to 64-bit floating
+point format, then stores the result in the 4 byte location `mem')
+
+
+File: as.info,  Node: i386-SIMD,  Next: i386-16bit,  Prev: i386-Float,  Up: i386-Dependent
+
+8.12.9 Intel's MMX and AMD's 3DNow! SIMD Operations
+---------------------------------------------------
+
+`as' supports Intel's MMX instruction set (SIMD instructions for
+integer data), available on Intel's Pentium MMX processors and Pentium
+II processors, AMD's K6 and K6-2 processors, Cyrix' M2 processor, and
+probably others.  It also supports AMD's 3DNow!  instruction set (SIMD
+instructions for 32-bit floating point data) available on AMD's K6-2
+processor and possibly others in the future.
+
+   Currently, `as' does not support Intel's floating point SIMD, Katmai
+(KNI).
+
+   The eight 64-bit MMX operands, also used by 3DNow!, are called
+`%mm0', `%mm1', ... `%mm7'.  They contain eight 8-bit integers, four
+16-bit integers, two 32-bit integers, one 64-bit integer, or two 32-bit
+floating point values.  The MMX registers cannot be used at the same
+time as the floating point stack.
+
+   See Intel and AMD documentation, keeping in mind that the operand
+order in instructions is reversed from the Intel syntax.
+
+
+File: as.info,  Node: i386-16bit,  Next: i386-Arch,  Prev: i386-SIMD,  Up: i386-Dependent
+
+8.12.10 Writing 16-bit Code
+---------------------------
+
+While `as' normally writes only "pure" 32-bit i386 code or 64-bit
+x86-64 code depending on the default configuration, it also supports
+writing code to run in real mode or in 16-bit protected mode code
+segments.  To do this, put a `.code16' or `.code16gcc' directive before
+the assembly language instructions to be run in 16-bit mode.  You can
+switch `as' back to writing normal 32-bit code with the `.code32'
+directive.
+
+   `.code16gcc' provides experimental support for generating 16-bit
+code from gcc, and differs from `.code16' in that `call', `ret',
+`enter', `leave', `push', `pop', `pusha', `popa', `pushf', and `popf'
+instructions default to 32-bit size.  This is so that the stack pointer
+is manipulated in the same way over function calls, allowing access to
+function parameters at the same stack offsets as in 32-bit mode.
+`.code16gcc' also automatically adds address size prefixes where
+necessary to use the 32-bit addressing modes that gcc generates.
+
+   The code which `as' generates in 16-bit mode will not necessarily
+run on a 16-bit pre-80386 processor.  To write code that runs on such a
+processor, you must refrain from using _any_ 32-bit constructs which
+require `as' to output address or operand size prefixes.
+
+   Note that writing 16-bit code instructions by explicitly specifying a
+prefix or an instruction mnemonic suffix within a 32-bit code section
+generates different machine instructions than those generated for a
+16-bit code segment.  In a 32-bit code section, the following code
+generates the machine opcode bytes `66 6a 04', which pushes the value
+`4' onto the stack, decrementing `%esp' by 2.
+
+             pushw $4
+
+   The same code in a 16-bit code section would generate the machine
+opcode bytes `6a 04' (ie. without the operand size prefix), which is
+correct since the processor default operand size is assumed to be 16
+bits in a 16-bit code section.
+
+
+File: as.info,  Node: i386-Bugs,  Next: i386-Notes,  Prev: i386-Arch,  Up: i386-Dependent
+
+8.12.11 AT&T Syntax bugs
+------------------------
+
+The UnixWare assembler, and probably other AT&T derived ix86 Unix
+assemblers, generate floating point instructions with reversed source
+and destination registers in certain cases.  Unfortunately, gcc and
+possibly many other programs use this reversed syntax, so we're stuck
+with it.
+
+   For example
+
+             fsub %st,%st(3)
+   results in `%st(3)' being updated to `%st - %st(3)' rather than the
+expected `%st(3) - %st'.  This happens with all the non-commutative
+arithmetic floating point operations with two register operands where
+the source register is `%st' and the destination register is `%st(i)'.
+
+
+File: as.info,  Node: i386-Arch,  Next: i386-Bugs,  Prev: i386-16bit,  Up: i386-Dependent
+
+8.12.12 Specifying CPU Architecture
+-----------------------------------
+
+`as' may be told to assemble for a particular CPU (sub-)architecture
+with the `.arch CPU_TYPE' directive.  This directive enables a warning
+when gas detects an instruction that is not supported on the CPU
+specified.  The choices for CPU_TYPE are:
+
+`i8086'        `i186'         `i286'         `i386'
+`i486'         `i586'         `i686'         `pentium'
+`pentiumpro'   `pentiumii'    `pentiumiii'   `pentium4'
+`k6'           `athlon'                      
+               `sledgehammer'                
+`.mmx' `.sse'                                
+`.sse2'                                      
+`.3dnow'                                     
+
+   Apart from the warning, there are only two other effects on `as'
+operation;  Firstly, if you specify a CPU other than `i486', then shift
+by one instructions such as `sarl $1, %eax' will automatically use a
+two byte opcode sequence.  The larger three byte opcode sequence is
+used on the 486 (and when no architecture is specified) because it
+executes faster on the 486.  Note that you can explicitly request the
+two byte opcode by writing `sarl %eax'.  Secondly, if you specify
+`i8086', `i186', or `i286', _and_ `.code16' or `.code16gcc' then byte
+offset conditional jumps will be promoted when necessary to a two
+instruction sequence consisting of a conditional jump of the opposite
+sense around an unconditional jump to the target.
+
+   Following the CPU architecture (but not a sub-architecture, which
+are those starting with a dot), you may specify `jumps' or `nojumps' to
+control automatic promotion of conditional jumps. `jumps' is the
+default, and enables jump promotion;  All external jumps will be of the
+long variety, and file-local jumps will be promoted as necessary.
+(*note i386-Jumps::)  `nojumps' leaves external conditional jumps as
+byte offset jumps, and warns about file-local conditional jumps that
+`as' promotes.  Unconditional jumps are treated as for `jumps'.
+
+   For example
+
+      .arch i8086,nojumps
+
+
+File: as.info,  Node: i386-Notes,  Prev: i386-Bugs,  Up: i386-Dependent
+
+8.12.13 Notes
+-------------
+
+There is some trickery concerning the `mul' and `imul' instructions
+that deserves mention.  The 16-, 32-, 64- and 128-bit expanding
+multiplies (base opcode `0xf6'; extension 4 for `mul' and 5 for `imul')
+can be output only in the one operand form.  Thus, `imul %ebx, %eax'
+does _not_ select the expanding multiply; the expanding multiply would
+clobber the `%edx' register, and this would confuse `gcc' output.  Use
+`imul %ebx' to get the 64-bit product in `%edx:%eax'.
+
+   We have added a two operand form of `imul' when the first operand is
+an immediate mode expression and the second operand is a register.
+This is just a shorthand, so that, multiplying `%eax' by 69, for
+example, can be done with `imul $69, %eax' rather than `imul $69, %eax,
+%eax'.
+
+
+File: as.info,  Node: i860-Dependent,  Next: i960-Dependent,  Prev: i386-Dependent,  Up: Machine Dependencies
+
+8.13 Intel i860 Dependent Features
+==================================
+
+* Menu:
+
+* Notes-i860::                  i860 Notes
+* Options-i860::                i860 Command-line Options
+* Directives-i860::             i860 Machine Directives
+* Opcodes for i860::            i860 Opcodes
+
+
+File: as.info,  Node: Notes-i860,  Next: Options-i860,  Up: i860-Dependent
+
+8.13.1 i860 Notes
+-----------------
+
+This is a fairly complete i860 assembler which is compatible with the
+UNIX System V/860 Release 4 assembler. However, it does not currently
+support SVR4 PIC (i.e., `@GOT, @GOTOFF, @PLT').
+
+   Like the SVR4/860 assembler, the output object format is ELF32.
+Currently, this is the only supported object format. If there is
+sufficient interest, other formats such as COFF may be implemented.
+
+   Both the Intel and AT&T/SVR4 syntaxes are supported, with the latter
+being the default.  One difference is that AT&T syntax requires the '%'
+prefix on register names while Intel syntax does not.  Another
+difference is in the specification of relocatable expressions.  The
+Intel syntax is `ha%expression' whereas the SVR4 syntax is
+`[expression]@ha' (and similarly for the "l" and "h" selectors).
+
+
+File: as.info,  Node: Options-i860,  Next: Directives-i860,  Prev: Notes-i860,  Up: i860-Dependent
+
+8.13.2 i860 Command-line Options
+--------------------------------
+
+8.13.2.1 SVR4 compatibility options
+...................................
+
+`-V'
+     Print assembler version.
+
+`-Qy'
+     Ignored.
+
+`-Qn'
+     Ignored.
+
+8.13.2.2 Other options
+......................
+
+`-EL'
+     Select little endian output (this is the default).
+
+`-EB'
+     Select big endian output. Note that the i860 always reads
+     instructions as little endian data, so this option only effects
+     data and not instructions.
+
+`-mwarn-expand'
+     Emit a warning message if any pseudo-instruction expansions
+     occurred.  For example, a `or' instruction with an immediate
+     larger than 16-bits will be expanded into two instructions. This
+     is a very undesirable feature to rely on, so this flag can help
+     detect any code where it happens. One use of it, for instance, has
+     been to find and eliminate any place where `gcc' may emit these
+     pseudo-instructions.
+
+`-mxp'
+     Enable support for the i860XP instructions and control registers.
+     By default, this option is disabled so that only the base
+     instruction set (i.e., i860XR) is supported.
+
+`-mintel-syntax'
+     The i860 assembler defaults to AT&T/SVR4 syntax.  This option
+     enables the Intel syntax.
+
+
+File: as.info,  Node: Directives-i860,  Next: Opcodes for i860,  Prev: Options-i860,  Up: i860-Dependent
+
+8.13.3 i860 Machine Directives
+------------------------------
+
+`.dual'
+     Enter dual instruction mode. While this directive is supported, the
+     preferred way to use dual instruction mode is to explicitly code
+     the dual bit with the `d.' prefix.
+
+`.enddual'
+     Exit dual instruction mode. While this directive is supported, the
+     preferred way to use dual instruction mode is to explicitly code
+     the dual bit with the `d.' prefix.
+
+`.atmp'
+     Change the temporary register used when expanding pseudo
+     operations. The default register is `r31'.
+
+   The `.dual', `.enddual', and `.atmp' directives are available only
+in the Intel syntax mode.
+
+   Both syntaxes allow for the standard `.align' directive.  However,
+the Intel syntax additionally allows keywords for the alignment
+parameter: "`.align type'", where `type' is one of `.short', `.long',
+`.quad', `.single', `.double' representing alignments of 2, 4, 16, 4,
+and 8, respectively.
+
+
+File: as.info,  Node: Opcodes for i860,  Prev: Directives-i860,  Up: i860-Dependent
+
+8.13.4 i860 Opcodes
+-------------------
+
+All of the Intel i860XR and i860XP machine instructions are supported.
+Please see either _i860 Microprocessor Programmer's Reference Manual_
+or _i860 Microprocessor Architecture_ for more information.
+
+8.13.4.1 Other instruction support (pseudo-instructions)
+........................................................
+
+For compatibility with some other i860 assemblers, a number of
+pseudo-instructions are supported. While these are supported, they are
+a very undesirable feature that should be avoided - in particular, when
+they result in an expansion to multiple actual i860 instructions. Below
+are the pseudo-instructions that result in expansions.
+   * Load large immediate into general register:
+
+     The pseudo-instruction `mov imm,%rn' (where the immediate does not
+     fit within a signed 16-bit field) will be expanded into:
+          orh large_imm@h,%r0,%rn
+          or large_imm@l,%rn,%rn
+
+   * Load/store with relocatable address expression:
+
+     For example, the pseudo-instruction `ld.b addr_exp(%rx),%rn' will
+     be expanded into:
+          orh addr_exp@ha,%rx,%r31
+          ld.l addr_exp@l(%r31),%rn
+
+     The analogous expansions apply to `ld.x, st.x, fld.x, pfld.x,
+     fst.x', and `pst.x' as well.
+
+   * Signed large immediate with add/subtract:
+
+     If any of the arithmetic operations `adds, addu, subs, subu' are
+     used with an immediate larger than 16-bits (signed), then they
+     will be expanded.  For instance, the pseudo-instruction `adds
+     large_imm,%rx,%rn' expands to:
+          orh large_imm@h,%r0,%r31
+          or large_imm@l,%r31,%r31
+          adds %r31,%rx,%rn
+
+   * Unsigned large immediate with logical operations:
+
+     Logical operations (`or, andnot, or, xor') also result in
+     expansions.  The pseudo-instruction `or large_imm,%rx,%rn' results
+     in:
+          orh large_imm@h,%rx,%r31
+          or large_imm@l,%r31,%rn
+
+     Similarly for the others, except for `and' which expands to:
+          andnot (-1 - large_imm)@h,%rx,%r31
+          andnot (-1 - large_imm)@l,%r31,%rn
+
+
+File: as.info,  Node: i960-Dependent,  Next: IA-64-Dependent,  Prev: i860-Dependent,  Up: Machine Dependencies
+
+8.14 Intel 80960 Dependent Features
+===================================
+
+* Menu:
+
+* Options-i960::                i960 Command-line Options
+* Floating Point-i960::         Floating Point
+* Directives-i960::             i960 Machine Directives
+* Opcodes for i960::            i960 Opcodes
+
+
+File: as.info,  Node: Options-i960,  Next: Floating Point-i960,  Up: i960-Dependent
+
+8.14.1 i960 Command-line Options
+--------------------------------
+
+`-ACA | -ACA_A | -ACB | -ACC | -AKA | -AKB | -AKC | -AMC'
+     Select the 80960 architecture.  Instructions or features not
+     supported by the selected architecture cause fatal errors.
+
+     `-ACA' is equivalent to `-ACA_A'; `-AKC' is equivalent to `-AMC'.
+     Synonyms are provided for compatibility with other tools.
+
+     If you do not specify any of these options, `as' generates code
+     for any instruction or feature that is supported by _some_ version
+     of the 960 (even if this means mixing architectures!).  In
+     principle, `as' attempts to deduce the minimal sufficient
+     processor type if none is specified; depending on the object code
+     format, the processor type may be recorded in the object file.  If
+     it is critical that the `as' output match a specific architecture,
+     specify that architecture explicitly.
+
+`-b'
+     Add code to collect information about conditional branches taken,
+     for later optimization using branch prediction bits.  (The
+     conditional branch instructions have branch prediction bits in the
+     CA, CB, and CC architectures.)  If BR represents a conditional
+     branch instruction, the following represents the code generated by
+     the assembler when `-b' is specified:
+
+                  call    INCREMENT ROUTINE
+                  .word   0       # pre-counter
+          Label:  BR
+                  call    INCREMENT ROUTINE
+                  .word   0       # post-counter
+
+     The counter following a branch records the number of times that
+     branch was _not_ taken; the differenc between the two counters is
+     the number of times the branch _was_ taken.
+
+     A table of every such `Label' is also generated, so that the
+     external postprocessor `gbr960' (supplied by Intel) can locate all
+     the counters.  This table is always labeled `__BRANCH_TABLE__';
+     this is a local symbol to permit collecting statistics for many
+     separate object files.  The table is word aligned, and begins with
+     a two-word header.  The first word, initialized to 0, is used in
+     maintaining linked lists of branch tables.  The second word is a
+     count of the number of entries in the table, which follow
+     immediately: each is a word, pointing to one of the labels
+     illustrated above.
+
+           +------------+------------+------------+ ... +------------+
+           |            |            |            |     |            |
+           |  *NEXT     |  COUNT: N  | *BRLAB 1   |     | *BRLAB N   |
+           |            |            |            |     |            |
+           +------------+------------+------------+ ... +------------+
+
+                         __BRANCH_TABLE__ layout
+
+     The first word of the header is used to locate multiple branch
+     tables, since each object file may contain one. Normally the links
+     are maintained with a call to an initialization routine, placed at
+     the beginning of each function in the file.  The GNU C compiler
+     generates these calls automatically when you give it a `-b' option.
+     For further details, see the documentation of `gbr960'.
+
+`-no-relax'
+     Normally, Compare-and-Branch instructions with targets that require
+     displacements greater than 13 bits (or that have external targets)
+     are replaced with the corresponding compare (or `chkbit') and
+     branch instructions.  You can use the `-no-relax' option to
+     specify that `as' should generate errors instead, if the target
+     displacement is larger than 13 bits.
+
+     This option does not affect the Compare-and-Jump instructions; the
+     code emitted for them is _always_ adjusted when necessary
+     (depending on displacement size), regardless of whether you use
+     `-no-relax'.
+
+
+File: as.info,  Node: Floating Point-i960,  Next: Directives-i960,  Prev: Options-i960,  Up: i960-Dependent
+
+8.14.2 Floating Point
+---------------------
+
+`as' generates IEEE floating-point numbers for the directives `.float',
+`.double', `.extended', and `.single'.
+
+
+File: as.info,  Node: Directives-i960,  Next: Opcodes for i960,  Prev: Floating Point-i960,  Up: i960-Dependent
+
+8.14.3 i960 Machine Directives
+------------------------------
+
+`.bss SYMBOL, LENGTH, ALIGN'
+     Reserve LENGTH bytes in the bss section for a local SYMBOL,
+     aligned to the power of two specified by ALIGN.  LENGTH and ALIGN
+     must be positive absolute expressions.  This directive differs
+     from `.lcomm' only in that it permits you to specify an alignment.
+     *Note `.lcomm': Lcomm.
+
+`.extended FLONUMS'
+     `.extended' expects zero or more flonums, separated by commas; for
+     each flonum, `.extended' emits an IEEE extended-format (80-bit)
+     floating-point number.
+
+`.leafproc CALL-LAB, BAL-LAB'
+     You can use the `.leafproc' directive in conjunction with the
+     optimized `callj' instruction to enable faster calls of leaf
+     procedures.  If a procedure is known to call no other procedures,
+     you may define an entry point that skips procedure prolog code
+     (and that does not depend on system-supplied saved context), and
+     declare it as the BAL-LAB using `.leafproc'.  If the procedure
+     also has an entry point that goes through the normal prolog, you
+     can specify that entry point as CALL-LAB.
+
+     A `.leafproc' declaration is meant for use in conjunction with the
+     optimized call instruction `callj'; the directive records the data
+     needed later to choose between converting the `callj' into a `bal'
+     or a `call'.
+
+     CALL-LAB is optional; if only one argument is present, or if the
+     two arguments are identical, the single argument is assumed to be
+     the `bal' entry point.
+
+`.sysproc NAME, INDEX'
+     The `.sysproc' directive defines a name for a system procedure.
+     After you define it using `.sysproc', you can use NAME to refer to
+     the system procedure identified by INDEX when calling procedures
+     with the optimized call instruction `callj'.
+
+     Both arguments are required; INDEX must be between 0 and 31
+     (inclusive).
+
+
+File: as.info,  Node: Opcodes for i960,  Prev: Directives-i960,  Up: i960-Dependent
+
+8.14.4 i960 Opcodes
+-------------------
+
+All Intel 960 machine instructions are supported; *note i960
+Command-line Options: Options-i960. for a discussion of selecting the
+instruction subset for a particular 960 architecture.
+
+   Some opcodes are processed beyond simply emitting a single
+corresponding instruction: `callj', and Compare-and-Branch or
+Compare-and-Jump instructions with target displacements larger than 13
+bits.
+
+* Menu:
+
+* callj-i960::                  `callj'
+* Compare-and-branch-i960::     Compare-and-Branch
+
+
+File: as.info,  Node: callj-i960,  Next: Compare-and-branch-i960,  Up: Opcodes for i960
+
+8.14.4.1 `callj'
+................
+
+You can write `callj' to have the assembler or the linker determine the
+most appropriate form of subroutine call: `call', `bal', or `calls'.
+If the assembly source contains enough information--a `.leafproc' or
+`.sysproc' directive defining the operand--then `as' translates the
+`callj'; if not, it simply emits the `callj', leaving it for the linker
+to resolve.
+
+
+File: as.info,  Node: Compare-and-branch-i960,  Prev: callj-i960,  Up: Opcodes for i960
+
+8.14.4.2 Compare-and-Branch
+...........................
+
+The 960 architectures provide combined Compare-and-Branch instructions
+that permit you to store the branch target in the lower 13 bits of the
+instruction word itself.  However, if you specify a branch target far
+enough away that its address won't fit in 13 bits, the assembler can
+either issue an error, or convert your Compare-and-Branch instruction
+into separate instructions to do the compare and the branch.
+
+   Whether `as' gives an error or expands the instruction depends on
+two choices you can make: whether you use the `-no-relax' option, and
+whether you use a "Compare and Branch" instruction or a "Compare and
+Jump" instruction.  The "Jump" instructions are _always_ expanded if
+necessary; the "Branch" instructions are expanded when necessary
+_unless_ you specify `-no-relax'--in which case `as' gives an error
+instead.
+
+   These are the Compare-and-Branch instructions, their "Jump" variants,
+and the instruction pairs they may expand into:
+
+             Compare and
+          Branch      Jump       Expanded to
+          ------    ------       ------------
+             bbc                 chkbit; bno
+             bbs                 chkbit; bo
+          cmpibe    cmpije       cmpi; be
+          cmpibg    cmpijg       cmpi; bg
+         cmpibge   cmpijge       cmpi; bge
+          cmpibl    cmpijl       cmpi; bl
+         cmpible   cmpijle       cmpi; ble
+         cmpibno   cmpijno       cmpi; bno
+         cmpibne   cmpijne       cmpi; bne
+          cmpibo    cmpijo       cmpi; bo
+          cmpobe    cmpoje       cmpo; be
+          cmpobg    cmpojg       cmpo; bg
+         cmpobge   cmpojge       cmpo; bge
+          cmpobl    cmpojl       cmpo; bl
+         cmpoble   cmpojle       cmpo; ble
+         cmpobne   cmpojne       cmpo; bne
+
+
+File: as.info,  Node: IA-64-Dependent,  Next: IP2K-Dependent,  Prev: i960-Dependent,  Up: Machine Dependencies
+
+8.15 IA-64 Dependent Features
+=============================
+
+* Menu:
+
+* IA-64 Options::              Options
+* IA-64 Syntax::               Syntax
+* IA-64 Opcodes::              Opcodes
+
+
+File: as.info,  Node: IA-64 Options,  Next: IA-64 Syntax,  Up: IA-64-Dependent
+
+8.15.1 Options
+--------------
+
+`-mconstant-gp'
+     This option instructs the assembler to mark the resulting object
+     file as using the "constant GP" model.  With this model, it is
+     assumed that the entire program uses a single global pointer (GP)
+     value.  Note that this option does not in any fashion affect the
+     machine code emitted by the assembler.  All it does is turn on the
+     EF_IA_64_CONS_GP flag in the ELF file header.
+
+`-mauto-pic'
+     This option instructs the assembler to mark the resulting object
+     file as using the "constant GP without function descriptor" data
+     model.  This model is like the "constant GP" model, except that it
+     additionally does away with function descriptors.  What this means
+     is that the address of a function refers directly to the
+     function's code entry-point.  Normally, such an address would
+     refer to a function descriptor, which contains both the code
+     entry-point and the GP-value needed by the function.  Note that
+     this option does not in any fashion affect the machine code
+     emitted by the assembler.  All it does is turn on the
+     EF_IA_64_NOFUNCDESC_CONS_GP flag in the ELF file header.
+
+`-milp32'
+
+`-milp64'
+
+`-mlp64'
+
+`-mp64'
+     These options select the data model.  The assembler defaults to
+     `-mlp64' (LP64 data model).
+
+`-mle'
+
+`-mbe'
+     These options select the byte order.  The `-mle' option selects
+     little-endian byte order (default) and `-mbe' selects big-endian
+     byte order.  Note that IA-64 machine code always uses
+     little-endian byte order.
+
+`-munwind-check=warning'
+
+`-munwind-check=error'
+     These options control what the assembler will do when performing
+     consistency checks on unwind directives.  `-munwind-check=warning'
+     will make the assembler issue a warning when an unwind directive
+     check fails.  This is the default.  `-munwind-check=error' will
+     make the assembler issue an error when an unwind directive check
+     fails.
+
+`-mhint.b=ok'
+
+`-mhint.b=warning'
+
+`-mhint.b=error'
+     These options control what the assembler will do when the `hint.b'
+     instruction is used.  `-mhint.b=ok' will make the assembler accept
+     `hint.b'.  `-mint.b=warning' will make the assembler issue a
+     warning when `hint.b' is used.  `-mhint.b=error' will make the
+     assembler treat `hint.b' as an error, which is the default.
+
+`-x'
+
+`-xexplicit'
+     These options turn on dependency violation checking.
+
+`-xauto'
+     This option instructs the assembler to automatically insert stop
+     bits where necessary to remove dependency violations.  This is the
+     default mode.
+
+`-xnone'
+     This option turns off dependency violation checking.
+
+`-xdebug'
+     This turns on debug output intended to help tracking down bugs in
+     the dependency violation checker.
+
+`-xdebugn'
+     This is a shortcut for -xnone -xdebug.
+
+`-xdebugx'
+     This is a shortcut for -xexplicit -xdebug.
+
+
+
+File: as.info,  Node: IA-64 Syntax,  Next: IA-64 Opcodes,  Prev: IA-64 Options,  Up: IA-64-Dependent
+
+8.15.2 Syntax
+-------------
+
+The assembler syntax closely follows the IA-64 Assembly Language
+Reference Guide.
+
+* Menu:
+
+* IA-64-Chars::                Special Characters
+* IA-64-Regs::                 Register Names
+* IA-64-Bits::                 Bit Names
+
+
+File: as.info,  Node: IA-64-Chars,  Next: IA-64-Regs,  Up: IA-64 Syntax
+
+8.15.2.1 Special Characters
+...........................
+
+`//' is the line comment token.
+
+   `;' can be used instead of a newline to separate statements.
+
+
+File: as.info,  Node: IA-64-Regs,  Next: IA-64-Bits,  Prev: IA-64-Chars,  Up: IA-64 Syntax
+
+8.15.2.2 Register Names
+.......................
+
+The 128 integer registers are referred to as `rN'.  The 128
+floating-point registers are referred to as `fN'.  The 128 application
+registers are referred to as `arN'.  The 128 control registers are
+referred to as `crN'.  The 64 one-bit predicate registers are referred
+to as `pN'.  The 8 branch registers are referred to as `bN'.  In
+addition, the assembler defines a number of aliases: `gp' (`r1'), `sp'
+(`r12'), `rp' (`b0'), `ret0' (`r8'), `ret1' (`r9'), `ret2' (`r10'),
+`ret3' (`r9'), `fargN' (`f8+N'), and `fretN' (`f8+N').
+
+   For convenience, the assembler also defines aliases for all named
+application and control registers.  For example, `ar.bsp' refers to the
+register backing store pointer (`ar17').  Similarly, `cr.eoi' refers to
+the end-of-interrupt register (`cr67').
+
+
+File: as.info,  Node: IA-64-Bits,  Prev: IA-64-Regs,  Up: IA-64 Syntax
+
+8.15.2.3 IA-64 Processor-Status-Register (PSR) Bit Names
+........................................................
+
+The assembler defines bit masks for each of the bits in the IA-64
+processor status register.  For example, `psr.ic' corresponds to a
+value of 0x2000.  These masks are primarily intended for use with the
+`ssm'/`sum' and `rsm'/`rum' instructions, but they can be used anywhere
+else where an integer constant is expected.
+
+
+File: as.info,  Node: IA-64 Opcodes,  Prev: IA-64 Syntax,  Up: IA-64-Dependent
+
+8.15.3 Opcodes
+--------------
+
+For detailed information on the IA-64 machine instruction set, see the
+IA-64 Architecture Handbook
+(http://developer.intel.com/design/itanium/arch_spec.htm).
+
+
+File: as.info,  Node: IP2K-Dependent,  Next: M32R-Dependent,  Prev: IA-64-Dependent,  Up: Machine Dependencies
+
+8.16 IP2K Dependent Features
+============================
+
+* Menu:
+
+* IP2K-Opts::                   IP2K Options
+
+
+File: as.info,  Node: IP2K-Opts,  Up: IP2K-Dependent
+
+8.16.1 IP2K Options
+-------------------
+
+The Ubicom IP2K version of `as' has a few machine dependent options:
+
+`-mip2022ext'
+     `as' can assemble the extended IP2022 instructions, but it will
+     only do so if this is specifically allowed via this command line
+     option.
+
+`-mip2022'
+     This option restores the assembler's default behaviour of not
+     permitting the extended IP2022 instructions to be assembled.
+
+
+
+File: as.info,  Node: M32R-Dependent,  Next: M68K-Dependent,  Prev: IP2K-Dependent,  Up: Machine Dependencies
+
+8.17 M32R Dependent Features
+============================
+
+* Menu:
+
+* M32R-Opts::                   M32R Options
+* M32R-Directives::             M32R Directives
+* M32R-Warnings::               M32R Warnings
+
+
+File: as.info,  Node: M32R-Opts,  Next: M32R-Directives,  Up: M32R-Dependent
+
+8.17.1 M32R Options
+-------------------
+
+The Renease M32R version of `as' has a few machine dependent options:
+
+`-m32rx'
+     `as' can assemble code for several different members of the
+     Renesas M32R family.  Normally the default is to assemble code for
+     the M32R microprocessor.  This option may be used to change the
+     default to the M32RX microprocessor, which adds some more
+     instructions to the basic M32R instruction set, and some
+     additional parameters to some of the original instructions.
+
+`-m32r2'
+     This option changes the target processor to the the M32R2
+     microprocessor.
+
+`-m32r'
+     This option can be used to restore the assembler's default
+     behaviour of assembling for the M32R microprocessor.  This can be
+     useful if the default has been changed by a previous command line
+     option.
+
+`-little'
+     This option tells the assembler to produce little-endian code and
+     data.  The default is dependent upon how the toolchain was
+     configured.
+
+`-EL'
+     This is a synonum for _-little_.
+
+`-big'
+     This option tells the assembler to produce big-endian code and
+     data.
+
+`-EB'
+     This is a synonum for _-big_.
+
+`-KPIC'
+     This option specifies that the output of the assembler should be
+     marked as position-independent code (PIC).
+
+`-parallel'
+     This option tells the assembler to attempts to combine two
+     sequential instructions into a single, parallel instruction, where
+     it is legal to do so.
+
+`-no-parallel'
+     This option disables a previously enabled _-parallel_ option.
+
+`-no-bitinst'
+     This option disables the support for the extended bit-field
+     instructions provided by the M32R2.  If this support needs to be
+     re-enabled the _-bitinst_ switch can be used to restore it.
+
+`-O'
+     This option tells the assembler to attempt to optimize the
+     instructions that it produces.  This includes filling delay slots
+     and converting sequential instructions into parallel ones.  This
+     option implies _-parallel_.
+
+`-warn-explicit-parallel-conflicts'
+     Instructs `as' to produce warning messages when questionable
+     parallel instructions are encountered.  This option is enabled by
+     default, but `gcc' disables it when it invokes `as' directly.
+     Questionable instructions are those whoes behaviour would be
+     different if they were executed sequentially.  For example the
+     code fragment `mv r1, r2 || mv r3, r1' produces a different result
+     from `mv r1, r2 \n mv r3, r1' since the former moves r1 into r3
+     and then r2 into r1, whereas the later moves r2 into r1 and r3.
+
+`-Wp'
+     This is a shorter synonym for the
+     _-warn-explicit-parallel-conflicts_ option.
+
+`-no-warn-explicit-parallel-conflicts'
+     Instructs `as' not to produce warning messages when questionable
+     parallel instructions are encountered.
+
+`-Wnp'
+     This is a shorter synonym for the
+     _-no-warn-explicit-parallel-conflicts_ option.
+
+`-ignore-parallel-conflicts'
+     This option tells the assembler's to stop checking parallel
+     instructions for contraint violations.  This ability is provided
+     for hardware vendors testing chip designs and should not be used
+     under normal circumstances.
+
+`-no-ignore-parallel-conflicts'
+     This option restores the assembler's default behaviour of checking
+     parallel instructions to detect constraint violations.
+
+`-Ip'
+     This is a shorter synonym for the _-ignore-parallel-conflicts_
+     option.
+
+`-nIp'
+     This is a shorter synonym for the _-no-ignore-parallel-conflicts_
+     option.
+
+`-warn-unmatched-high'
+     This option tells the assembler to produce a warning message if a
+     `.high' pseudo op is encountered without a mathcing `.low' pseudo
+     op.  The presence of such an unmatches pseudo op usually indicates
+     a programming error.
+
+`-no-warn-unmatched-high'
+     Disables a previously enabled _-warn-unmatched-high_ option.
+
+`-Wuh'
+     This is a shorter synonym for the _-warn-unmatched-high_ option.
+
+`-Wnuh'
+     This is a shorter synonym for the _-no-warn-unmatched-high_ option.
+
+
+
+File: as.info,  Node: M32R-Directives,  Next: M32R-Warnings,  Prev: M32R-Opts,  Up: M32R-Dependent
+
+8.17.2 M32R Directives
+----------------------
+
+The Renease M32R version of `as' has a few architecture specific
+directives:
+
+`low EXPRESSION'
+     The `low' directive computes the value of its expression and
+     places the lower 16-bits of the result into the immediate-field of
+     the instruction.  For example:
+
+             or3   r0, r0, #low(0x12345678) ; compute r0 = r0 | 0x5678
+             add3, r0, r0, #low(fred)   ; compute r0 = r0 + low 16-bits of address of fred
+
+`high EXPRESSION'
+     The `high' directive computes the value of its expression and
+     places the upper 16-bits of the result into the immediate-field of
+     the instruction.  For example:
+
+             seth  r0, #high(0x12345678) ; compute r0 = 0x12340000
+             seth, r0, #high(fred)       ; compute r0 = upper 16-bits of address of fred
+
+`shigh EXPRESSION'
+     The `shigh' directive is very similar to the `high' directive.  It
+     also computes the value of its expression and places the upper
+     16-bits of the result into the immediate-field of the instruction.
+     The difference is that `shigh' also checks to see if the lower
+     16-bits could be interpreted as a signed number, and if so it
+     assumes that a borrow will occur from the upper-16 bits.  To
+     compensate for this the `shigh' directive pre-biases the upper 16
+     bit value by adding one to it.  For example:
+
+     For example:
+
+             seth  r0, #shigh(0x12345678) ; compute r0 = 0x12340000
+             seth  r0, #shigh(0x00008000) ; compute r0 = 0x00010000
+
+     In the second example the lower 16-bits are 0x8000.  If these are
+     treated as a signed value and sign extended to 32-bits then the
+     value becomes 0xffff8000.  If this value is then added to
+     0x00010000 then the result is 0x00008000.
+
+     This behaviour is to allow for the different semantics of the
+     `or3' and `add3' instructions.  The `or3' instruction treats its
+     16-bit immediate argument as unsigned whereas the `add3' treats
+     its 16-bit immediate as a signed value.  So for example:
+
+             seth  r0, #shigh(0x00008000)
+             add3  r0, r0, #low(0x00008000)
+
+     Produces the correct result in r0, whereas:
+
+             seth  r0, #shigh(0x00008000)
+             or3   r0, r0, #low(0x00008000)
+
+     Stores 0xffff8000 into r0.
+
+     Note - the `shigh' directive does not know where in the assembly
+     source code the lower 16-bits of the value are going set, so it
+     cannot check to make sure that an `or3' instruction is being used
+     rather than an `add3' instruction.  It is up to the programmer to
+     make sure that correct directives are used.
+
+`.m32r'
+     The directive performs a similar thing as the _-m32r_ command line
+     option.  It tells the assembler to only accept M32R instructions
+     from now on.  An instructions from later M32R architectures are
+     refused.
+
+`.m32rx'
+     The directive performs a similar thing as the _-m32rx_ command
+     line option.  It tells the assembler to start accepting the extra
+     instructions in the M32RX ISA as well as the ordinary M32R ISA.
+
+`.m32r2'
+     The directive performs a similar thing as the _-m32r2_ command
+     line option.  It tells the assembler to start accepting the extra
+     instructions in the M32R2 ISA as well as the ordinary M32R ISA.
+
+`.little'
+     The directive performs a similar thing as the _-little_ command
+     line option.  It tells the assembler to start producing
+     little-endian code and data.  This option should be used with care
+     as producing mixed-endian binary files is frought with danger.
+
+`.big'
+     The directive performs a similar thing as the _-big_ command line
+     option.  It tells the assembler to start producing big-endian code
+     and data.  This option should be used with care as producing
+     mixed-endian binary files is frought with danger.
+
+
+
+File: as.info,  Node: M32R-Warnings,  Prev: M32R-Directives,  Up: M32R-Dependent
+
+8.17.3 M32R Warnings
+--------------------
+
+There are several warning and error messages that can be produced by
+`as' which are specific to the M32R:
+
+`output of 1st instruction is the same as an input to 2nd instruction - is this intentional ?'
+     This message is only produced if warnings for explicit parallel
+     conflicts have been enabled.  It indicates that the assembler has
+     encountered a parallel instruction in which the destination
+     register of the left hand instruction is used as an input register
+     in the right hand instruction.  For example in this code fragment
+     `mv r1, r2 || neg r3, r1' register r1 is the destination of the
+     move instruction and the input to the neg instruction.
+
+`output of 2nd instruction is the same as an input to 1st instruction - is this intentional ?'
+     This message is only produced if warnings for explicit parallel
+     conflicts have been enabled.  It indicates that the assembler has
+     encountered a parallel instruction in which the destination
+     register of the right hand instruction is used as an input
+     register in the left hand instruction.  For example in this code
+     fragment `mv r1, r2 || neg r2, r3' register r2 is the destination
+     of the neg instruction and the input to the move instruction.
+
+`instruction `...' is for the M32RX only'
+     This message is produced when the assembler encounters an
+     instruction which is only supported by the M32Rx processor, and
+     the `-m32rx' command line flag has not been specified to allow
+     assembly of such instructions.
+
+`unknown instruction `...''
+     This message is produced when the assembler encounters an
+     instruction which it does not recognise.
+
+`only the NOP instruction can be issued in parallel on the m32r'
+     This message is produced when the assembler encounters a parallel
+     instruction which does not involve a NOP instruction and the
+     `-m32rx' command line flag has not been specified.  Only the M32Rx
+     processor is able to execute two instructions in parallel.
+
+`instruction `...' cannot be executed in parallel.'
+     This message is produced when the assembler encounters a parallel
+     instruction which is made up of one or two instructions which
+     cannot be executed in parallel.
+
+`Instructions share the same execution pipeline'
+     This message is produced when the assembler encounters a parallel
+     instruction whoes components both use the same execution pipeline.
+
+`Instructions write to the same destination register.'
+     This message is produced when the assembler encounters a parallel
+     instruction where both components attempt to modify the same
+     register.  For example these code fragments will produce this
+     message: `mv r1, r2 || neg r1, r3' `jl r0 || mv r14, r1' `st r2,
+     @-r1 || mv r1, r3' `mv r1, r2 || ld r0, @r1+' `cmp r1, r2 || addx
+     r3, r4' (Both write to the condition bit)
+
+
+
+File: as.info,  Node: M68K-Dependent,  Next: M68HC11-Dependent,  Prev: M32R-Dependent,  Up: Machine Dependencies
+
+8.18 M680x0 Dependent Features
+==============================
+
+* Menu:
+
+* M68K-Opts::                   M680x0 Options
+* M68K-Syntax::                 Syntax
+* M68K-Moto-Syntax::            Motorola Syntax
+* M68K-Float::                  Floating Point
+* M68K-Directives::             680x0 Machine Directives
+* M68K-opcodes::                Opcodes
+
+
+File: as.info,  Node: M68K-Opts,  Next: M68K-Syntax,  Up: M68K-Dependent
+
+8.18.1 M680x0 Options
+---------------------
+
+The Motorola 680x0 version of `as' has a few machine dependent options:
+
+`-l'
+     You can use the `-l' option to shorten the size of references to
+     undefined symbols.  If you do not use the `-l' option, references
+     to undefined symbols are wide enough for a full `long' (32 bits).
+     (Since `as' cannot know where these symbols end up, `as' can only
+     allocate space for the linker to fill in later.  Since `as' does
+     not know how far away these symbols are, it allocates as much
+     space as it can.)  If you use this option, the references are only
+     one word wide (16 bits).  This may be useful if you want the
+     object file to be as small as possible, and you know that the
+     relevant symbols are always less than 17 bits away.
+
+`--register-prefix-optional'
+     For some configurations, especially those where the compiler
+     normally does not prepend an underscore to the names of user
+     variables, the assembler requires a `%' before any use of a
+     register name.  This is intended to let the assembler distinguish
+     between C variables and functions named `a0' through `a7', and so
+     on.  The `%' is always accepted, but is not required for certain
+     configurations, notably `sun3'.  The `--register-prefix-optional'
+     option may be used to permit omitting the `%' even for
+     configurations for which it is normally required.  If this is
+     done, it will generally be impossible to refer to C variables and
+     functions with the same names as register names.
+
+`--bitwise-or'
+     Normally the character `|' is treated as a comment character, which
+     means that it can not be used in expressions.  The `--bitwise-or'
+     option turns `|' into a normal character.  In this mode, you must
+     either use C style comments, or start comments with a `#' character
+     at the beginning of a line.
+
+`--base-size-default-16  --base-size-default-32'
+     If you use an addressing mode with a base register without
+     specifying the size, `as' will normally use the full 32 bit value.
+     For example, the addressing mode `%a0@(%d0)' is equivalent to
+     `%a0@(%d0:l)'.  You may use the `--base-size-default-16' option to
+     tell `as' to default to using the 16 bit value.  In this case,
+     `%a0@(%d0)' is equivalent to `%a0@(%d0:w)'.  You may use the
+     `--base-size-default-32' option to restore the default behaviour.
+
+`--disp-size-default-16  --disp-size-default-32'
+     If you use an addressing mode with a displacement, and the value
+     of the displacement is not known, `as' will normally assume that
+     the value is 32 bits.  For example, if the symbol `disp' has not
+     been defined, `as' will assemble the addressing mode
+     `%a0@(disp,%d0)' as though `disp' is a 32 bit value.  You may use
+     the `--disp-size-default-16' option to tell `as' to instead assume
+     that the displacement is 16 bits.  In this case, `as' will
+     assemble `%a0@(disp,%d0)' as though `disp' is a 16 bit value.  You
+     may use the `--disp-size-default-32' option to restore the default
+     behaviour.
+
+`--pcrel'
+     Always keep branches PC-relative.  In the M680x0 architecture all
+     branches are defined as PC-relative.  However, on some processors
+     they are limited to word displacements maximum.  When `as' needs a
+     long branch that is not available, it normally emits an absolute
+     jump instead.  This option disables this substitution.  When this
+     option is given and no long branches are available, only word
+     branches will be emitted.  An error message will be generated if a
+     word branch cannot reach its target.  This option has no effect on
+     68020 and other processors that have long branches.  *note Branch
+     Improvement: M68K-Branch.
+
+`-m68000'
+     `as' can assemble code for several different members of the
+     Motorola 680x0 family.  The default depends upon how `as' was
+     configured when it was built; normally, the default is to assemble
+     code for the 68020 microprocessor.  The following options may be
+     used to change the default.  These options control which
+     instructions and addressing modes are permitted.  The members of
+     the 680x0 family are very similar.  For detailed information about
+     the differences, see the Motorola manuals.
+
+    `-m68000'
+    `-m68ec000'
+    `-m68hc000'
+    `-m68hc001'
+    `-m68008'
+    `-m68302'
+    `-m68306'
+    `-m68307'
+    `-m68322'
+    `-m68356'
+          Assemble for the 68000. `-m68008', `-m68302', and so on are
+          synonyms for `-m68000', since the chips are the same from the
+          point of view of the assembler.
+
+    `-m68010'
+          Assemble for the 68010.
+
+    `-m68020'
+    `-m68ec020'
+          Assemble for the 68020.  This is normally the default.
+
+    `-m68030'
+    `-m68ec030'
+          Assemble for the 68030.
+
+    `-m68040'
+    `-m68ec040'
+          Assemble for the 68040.
+
+    `-m68060'
+    `-m68ec060'
+          Assemble for the 68060.
+
+    `-mcpu32'
+    `-m68330'
+    `-m68331'
+    `-m68332'
+    `-m68333'
+    `-m68334'
+    `-m68336'
+    `-m68340'
+    `-m68341'
+    `-m68349'
+    `-m68360'
+          Assemble for the CPU32 family of chips.
+
+    `-m5200'
+
+    `-m5202'
+
+    `-m5204'
+
+    `-m5206'
+
+    `-m5206e'
+
+    `-m521x'
+
+    `-m5249'
+
+    `-m528x'
+
+    `-m5307'
+
+    `-m5407'
+
+    `-m547x'
+
+    `-m548x'
+
+    `-mcfv4'
+
+    `-mcfv4e'
+          Assemble for the ColdFire family of chips.
+
+    `-m68881'
+    `-m68882'
+          Assemble 68881 floating point instructions.  This is the
+          default for the 68020, 68030, and the CPU32.  The 68040 and
+          68060 always support floating point instructions.
+
+    `-mno-68881'
+          Do not assemble 68881 floating point instructions.  This is
+          the default for 68000 and the 68010.  The 68040 and 68060
+          always support floating point instructions, even if this
+          option is used.
+
+    `-m68851'
+          Assemble 68851 MMU instructions.  This is the default for the
+          68020, 68030, and 68060.  The 68040 accepts a somewhat
+          different set of MMU instructions; `-m68851' and `-m68040'
+          should not be used together.
+
+    `-mno-68851'
+          Do not assemble 68851 MMU instructions.  This is the default
+          for the 68000, 68010, and the CPU32.  The 68040 accepts a
+          somewhat different set of MMU instructions.
+
+
+File: as.info,  Node: M68K-Syntax,  Next: M68K-Moto-Syntax,  Prev: M68K-Opts,  Up: M68K-Dependent
+
+8.18.2 Syntax
+-------------
+
+This syntax for the Motorola 680x0 was developed at MIT.
+
+   The 680x0 version of `as' uses instructions names and syntax
+compatible with the Sun assembler.  Intervening periods are ignored;
+for example, `movl' is equivalent to `mov.l'.
+
+   In the following table APC stands for any of the address registers
+(`%a0' through `%a7'), the program counter (`%pc'), the zero-address
+relative to the program counter (`%zpc'), a suppressed address register
+(`%za0' through `%za7'), or it may be omitted entirely.  The use of
+SIZE means one of `w' or `l', and it may be omitted, along with the
+leading colon, unless a scale is also specified.  The use of SCALE
+means one of `1', `2', `4', or `8', and it may always be omitted along
+with the leading colon.
+
+   The following addressing modes are understood:
+"Immediate"
+     `#NUMBER'
+
+"Data Register"
+     `%d0' through `%d7'
+
+"Address Register"
+     `%a0' through `%a7'
+     `%a7' is also known as `%sp', i.e. the Stack Pointer.  `%a6' is
+     also known as `%fp', the Frame Pointer.
+
+"Address Register Indirect"
+     `%a0@' through `%a7@'
+
+"Address Register Postincrement"
+     `%a0@+' through `%a7@+'
+
+"Address Register Predecrement"
+     `%a0@-' through `%a7@-'
+
+"Indirect Plus Offset"
+     `APC@(NUMBER)'
+
+"Index"
+     `APC@(NUMBER,REGISTER:SIZE:SCALE)'
+
+     The NUMBER may be omitted.
+
+"Postindex"
+     `APC@(NUMBER)@(ONUMBER,REGISTER:SIZE:SCALE)'
+
+     The ONUMBER or the REGISTER, but not both, may be omitted.
+
+"Preindex"
+     `APC@(NUMBER,REGISTER:SIZE:SCALE)@(ONUMBER)'
+
+     The NUMBER may be omitted.  Omitting the REGISTER produces the
+     Postindex addressing mode.
+
+"Absolute"
+     `SYMBOL', or `DIGITS', optionally followed by `:b', `:w', or `:l'.
+
+
+File: as.info,  Node: M68K-Moto-Syntax,  Next: M68K-Float,  Prev: M68K-Syntax,  Up: M68K-Dependent
+
+8.18.3 Motorola Syntax
+----------------------
+
+The standard Motorola syntax for this chip differs from the syntax
+already discussed (*note Syntax: M68K-Syntax.).  `as' can accept
+Motorola syntax for operands, even if MIT syntax is used for other
+operands in the same instruction.  The two kinds of syntax are fully
+compatible.
+
+   In the following table APC stands for any of the address registers
+(`%a0' through `%a7'), the program counter (`%pc'), the zero-address
+relative to the program counter (`%zpc'), or a suppressed address
+register (`%za0' through `%za7').  The use of SIZE means one of `w' or
+`l', and it may always be omitted along with the leading dot.  The use
+of SCALE means one of `1', `2', `4', or `8', and it may always be
+omitted along with the leading asterisk.
+
+   The following additional addressing modes are understood:
+
+"Address Register Indirect"
+     `(%a0)' through `(%a7)'
+     `%a7' is also known as `%sp', i.e. the Stack Pointer.  `%a6' is
+     also known as `%fp', the Frame Pointer.
+
+"Address Register Postincrement"
+     `(%a0)+' through `(%a7)+'
+
+"Address Register Predecrement"
+     `-(%a0)' through `-(%a7)'
+
+"Indirect Plus Offset"
+     `NUMBER(%A0)' through `NUMBER(%A7)', or `NUMBER(%PC)'.
+
+     The NUMBER may also appear within the parentheses, as in
+     `(NUMBER,%A0)'.  When used with the PC, the NUMBER may be omitted
+     (with an address register, omitting the NUMBER produces Address
+     Register Indirect mode).
+
+"Index"
+     `NUMBER(APC,REGISTER.SIZE*SCALE)'
+
+     The NUMBER may be omitted, or it may appear within the
+     parentheses.  The APC may be omitted.  The REGISTER and the APC
+     may appear in either order.  If both APC and REGISTER are address
+     registers, and the SIZE and SCALE are omitted, then the first
+     register is taken as the base register, and the second as the
+     index register.
+
+"Postindex"
+     `([NUMBER,APC],REGISTER.SIZE*SCALE,ONUMBER)'
+
+     The ONUMBER, or the REGISTER, or both, may be omitted.  Either the
+     NUMBER or the APC may be omitted, but not both.
+
+"Preindex"
+     `([NUMBER,APC,REGISTER.SIZE*SCALE],ONUMBER)'
+
+     The NUMBER, or the APC, or the REGISTER, or any two of them, may
+     be omitted.  The ONUMBER may be omitted.  The REGISTER and the APC
+     may appear in either order.  If both APC and REGISTER are address
+     registers, and the SIZE and SCALE are omitted, then the first
+     register is taken as the base register, and the second as the
+     index register.
+
+
+File: as.info,  Node: M68K-Float,  Next: M68K-Directives,  Prev: M68K-Moto-Syntax,  Up: M68K-Dependent
+
+8.18.4 Floating Point
+---------------------
+
+Packed decimal (P) format floating literals are not supported.  Feel
+free to add the code!
+
+   The floating point formats generated by directives are these.
+
+`.float'
+     `Single' precision floating point constants.
+
+`.double'
+     `Double' precision floating point constants.
+
+`.extend'
+`.ldouble'
+     `Extended' precision (`long double') floating point constants.
+
+
+File: as.info,  Node: M68K-Directives,  Next: M68K-opcodes,  Prev: M68K-Float,  Up: M68K-Dependent
+
+8.18.5 680x0 Machine Directives
+-------------------------------
+
+In order to be compatible with the Sun assembler the 680x0 assembler
+understands the following directives.
+
+`.data1'
+     This directive is identical to a `.data 1' directive.
+
+`.data2'
+     This directive is identical to a `.data 2' directive.
+
+`.even'
+     This directive is a special case of the `.align' directive; it
+     aligns the output to an even byte boundary.
+
+`.skip'
+     This directive is identical to a `.space' directive.
+
+
+File: as.info,  Node: M68K-opcodes,  Prev: M68K-Directives,  Up: M68K-Dependent
+
+8.18.6 Opcodes
+--------------
+
+* Menu:
+
+* M68K-Branch::                 Branch Improvement
+* M68K-Chars::                  Special Characters
+
+
+File: as.info,  Node: M68K-Branch,  Next: M68K-Chars,  Up: M68K-opcodes
+
+8.18.6.1 Branch Improvement
+...........................
+
+Certain pseudo opcodes are permitted for branch instructions.  They
+expand to the shortest branch instruction that reach the target.
+Generally these mnemonics are made by substituting `j' for `b' at the
+start of a Motorola mnemonic.
+
+   The following table summarizes the pseudo-operations.  A `*' flags
+cases that are more fully described after the table:
+
+               Displacement
+               +------------------------------------------------------------
+               |                68020           68000/10, not PC-relative OK
+     Pseudo-Op |BYTE    WORD    LONG            ABSOLUTE LONG JUMP    **
+               +------------------------------------------------------------
+          jbsr |bsrs    bsrw    bsrl            jsr
+           jra |bras    braw    bral            jmp
+     *     jXX |bXXs    bXXw    bXXl            bNXs;jmp
+     *    dbXX | N/A    dbXXw   dbXX;bras;bral  dbXX;bras;jmp
+          fjXX | N/A    fbXXw   fbXXl            N/A
+
+     XX: condition
+     NX: negative of condition XX
+                       `*'--see full description below
+         `**'--this expansion mode is disallowed by `--pcrel'
+
+`jbsr'
+`jra'
+     These are the simplest jump pseudo-operations; they always map to
+     one particular machine instruction, depending on the displacement
+     to the branch target.  This instruction will be a byte or word
+     branch is that is sufficient.  Otherwise, a long branch will be
+     emitted if available.  If no long branches are available and the
+     `--pcrel' option is not given, an absolute long jump will be
+     emitted instead.  If no long branches are available, the `--pcrel'
+     option is given, and a word branch cannot reach the target, an
+     error message is generated.
+
+     In addition to standard branch operands, `as' allows these
+     pseudo-operations to have all operands that are allowed for jsr
+     and jmp, substituting these instructions if the operand given is
+     not valid for a branch instruction.
+
+`jXX'
+     Here, `jXX' stands for an entire family of pseudo-operations,
+     where XX is a conditional branch or condition-code test.  The full
+     list of pseudo-ops in this family is:
+           jhi   jls   jcc   jcs   jne   jeq   jvc
+           jvs   jpl   jmi   jge   jlt   jgt   jle
+
+     Usually, each of these pseudo-operations expands to a single branch
+     instruction.  However, if a word branch is not sufficient, no long
+     branches are available, and the `--pcrel' option is not given, `as'
+     issues a longer code fragment in terms of NX, the opposite
+     condition to XX.  For example, under these conditions:
+              jXX foo
+     gives
+               bNXs oof
+               jmp foo
+           oof:
+
+`dbXX'
+     The full family of pseudo-operations covered here is
+           dbhi   dbls   dbcc   dbcs   dbne   dbeq   dbvc
+           dbvs   dbpl   dbmi   dbge   dblt   dbgt   dble
+           dbf    dbra   dbt
+
+     Motorola `dbXX' instructions allow word displacements only.  When
+     a word displacement is sufficient, each of these pseudo-operations
+     expands to the corresponding Motorola instruction.  When a word
+     displacement is not sufficient and long branches are available,
+     when the source reads `dbXX foo', `as' emits
+               dbXX oo1
+               bras oo2
+           oo1:bral foo
+           oo2:
+
+     If, however, long branches are not available and the `--pcrel'
+     option is not given, `as' emits
+               dbXX oo1
+               bras oo2
+           oo1:jmp foo
+           oo2:
+
+`fjXX'
+     This family includes
+           fjne   fjeq   fjge   fjlt   fjgt   fjle   fjf
+           fjt    fjgl   fjgle  fjnge  fjngl  fjngle fjngt
+           fjnle  fjnlt  fjoge  fjogl  fjogt  fjole  fjolt
+           fjor   fjseq  fjsf   fjsne  fjst   fjueq  fjuge
+           fjugt  fjule  fjult  fjun
+
+     Each of these pseudo-operations always expands to a single Motorola
+     coprocessor branch instruction, word or long.  All Motorola
+     coprocessor branch instructions allow both word and long
+     displacements.
+
+
+
+File: as.info,  Node: M68K-Chars,  Prev: M68K-Branch,  Up: M68K-opcodes
+
+8.18.6.2 Special Characters
+...........................
+
+The immediate character is `#' for Sun compatibility.  The line-comment
+character is `|' (unless the `--bitwise-or' option is used).  If a `#'
+appears at the beginning of a line, it is treated as a comment unless
+it looks like `# line file', in which case it is treated normally.
+
+
+File: as.info,  Node: M68HC11-Dependent,  Next: M88K-Dependent,  Prev: M68K-Dependent,  Up: Machine Dependencies
+
+8.19 M68HC11 and M68HC12 Dependent Features
+===========================================
+
+* Menu:
+
+* M68HC11-Opts::                   M68HC11 and M68HC12 Options
+* M68HC11-Syntax::                 Syntax
+* M68HC11-Modifiers::              Symbolic Operand Modifiers
+* M68HC11-Directives::             Assembler Directives
+* M68HC11-Float::                  Floating Point
+* M68HC11-opcodes::                Opcodes
+
+
+File: as.info,  Node: M68HC11-Opts,  Next: M68HC11-Syntax,  Up: M68HC11-Dependent
+
+8.19.1 M68HC11 and M68HC12 Options
+----------------------------------
+
+The Motorola 68HC11 and 68HC12 version of `as' have a few machine
+dependent options.
+
+`-m68hc11'
+     This option switches the assembler in the M68HC11 mode. In this
+     mode, the assembler only accepts 68HC11 operands and mnemonics. It
+     produces code for the 68HC11.
+
+`-m68hc12'
+     This option switches the assembler in the M68HC12 mode. In this
+     mode, the assembler also accepts 68HC12 operands and mnemonics. It
+     produces code for the 68HC12. A few 68HC11 instructions are
+     replaced by some 68HC12 instructions as recommended by Motorola
+     specifications.
+
+`-m68hcs12'
+     This option switches the assembler in the M68HCS12 mode.  This
+     mode is similar to `-m68hc12' but specifies to assemble for the
+     68HCS12 series.  The only difference is on the assembling of the
+     `movb' and `movw' instruction when a PC-relative operand is used.
+
+`-mshort'
+     This option controls the ABI and indicates to use a 16-bit integer
+     ABI.  It has no effect on the assembled instructions.  This is the
+     default.
+
+`-mlong'
+     This option controls the ABI and indicates to use a 32-bit integer
+     ABI.
+
+`-mshort-double'
+     This option controls the ABI and indicates to use a 32-bit float
+     ABI.  This is the default.
+
+`-mlong-double'
+     This option controls the ABI and indicates to use a 64-bit float
+     ABI.
+
+`--strict-direct-mode'
+     You can use the `--strict-direct-mode' option to disable the
+     automatic translation of direct page mode addressing into extended
+     mode when the instruction does not support direct mode.  For
+     example, the `clr' instruction does not support direct page mode
+     addressing. When it is used with the direct page mode, `as' will
+     ignore it and generate an absolute addressing.  This option
+     prevents `as' from doing this, and the wrong usage of the direct
+     page mode will raise an error.
+
+`--short-branchs'
+     The `--short-branchs' option turns off the translation of relative
+     branches into absolute branches when the branch offset is out of
+     range. By default `as' transforms the relative branch (`bsr',
+     `bgt', `bge', `beq', `bne', `ble', `blt', `bhi', `bcc', `bls',
+     `bcs', `bmi', `bvs', `bvs', `bra') into an absolute branch when
+     the offset is out of the -128 .. 127 range.  In that case, the
+     `bsr' instruction is translated into a `jsr', the `bra'
+     instruction is translated into a `jmp' and the conditional branchs
+     instructions are inverted and followed by a `jmp'. This option
+     disables these translations and `as' will generate an error if a
+     relative branch is out of range. This option does not affect the
+     optimization associated to the `jbra', `jbsr' and `jbXX' pseudo
+     opcodes.
+
+`--force-long-branchs'
+     The `--force-long-branchs' option forces the translation of
+     relative branches into absolute branches. This option does not
+     affect the optimization associated to the `jbra', `jbsr' and
+     `jbXX' pseudo opcodes.
+
+`--print-insn-syntax'
+     You can use the `--print-insn-syntax' option to obtain the syntax
+     description of the instruction when an error is detected.
+
+`--print-opcodes'
+     The `--print-opcodes' option prints the list of all the
+     instructions with their syntax. The first item of each line
+     represents the instruction name and the rest of the line indicates
+     the possible operands for that instruction. The list is printed in
+     alphabetical order. Once the list is printed `as' exits.
+
+`--generate-example'
+     The `--generate-example' option is similar to `--print-opcodes'
+     but it generates an example for each instruction instead.
+
+
+File: as.info,  Node: M68HC11-Syntax,  Next: M68HC11-Modifiers,  Prev: M68HC11-Opts,  Up: M68HC11-Dependent
+
+8.19.2 Syntax
+-------------
+
+In the M68HC11 syntax, the instruction name comes first and it may be
+followed by one or several operands (up to three). Operands are
+separated by comma (`,'). In the normal mode, `as' will complain if too
+many operands are specified for a given instruction. In the MRI mode
+(turned on with `-M' option), it will treat them as comments. Example:
+
+     inx
+     lda  #23
+     bset 2,x #4
+     brclr *bot #8 foo
+
+   The following addressing modes are understood for 68HC11 and 68HC12:
+"Immediate"
+     `#NUMBER'
+
+"Address Register"
+     `NUMBER,X', `NUMBER,Y'
+
+     The NUMBER may be omitted in which case 0 is assumed.
+
+"Direct Addressing mode"
+     `*SYMBOL', or `*DIGITS'
+
+"Absolute"
+     `SYMBOL', or `DIGITS'
+
+   The M68HC12 has other more complex addressing modes. All of them are
+supported and they are represented below:
+
+"Constant Offset Indexed Addressing Mode"
+     `NUMBER,REG'
+
+     The NUMBER may be omitted in which case 0 is assumed.  The
+     register can be either `X', `Y', `SP' or `PC'.  The assembler will
+     use the smaller post-byte definition according to the constant
+     value (5-bit constant offset, 9-bit constant offset or 16-bit
+     constant offset).  If the constant is not known by the assembler
+     it will use the 16-bit constant offset post-byte and the value
+     will be resolved at link time.
+
+"Offset Indexed Indirect"
+     `[NUMBER,REG]'
+
+     The register can be either `X', `Y', `SP' or `PC'.
+
+"Auto Pre-Increment/Pre-Decrement/Post-Increment/Post-Decrement"
+     `NUMBER,-REG' `NUMBER,+REG' `NUMBER,REG-' `NUMBER,REG+'
+
+     The number must be in the range `-8'..`+8' and must not be 0.  The
+     register can be either `X', `Y', `SP' or `PC'.
+
+"Accumulator Offset"
+     `ACC,REG'
+
+     The accumulator register can be either `A', `B' or `D'.  The
+     register can be either `X', `Y', `SP' or `PC'.
+
+"Accumulator D offset indexed-indirect"
+     `[D,REG]'
+
+     The register can be either `X', `Y', `SP' or `PC'.
+
+
+   For example:
+
+     ldab 1024,sp
+     ldd [10,x]
+     orab 3,+x
+     stab -2,y-
+     ldx a,pc
+     sty [d,sp]
+
+
+File: as.info,  Node: M68HC11-Modifiers,  Next: M68HC11-Directives,  Prev: M68HC11-Syntax,  Up: M68HC11-Dependent
+
+8.19.3 Symbolic Operand Modifiers
+---------------------------------
+
+The assembler supports several modifiers when using symbol addresses in
+68HC11 and 68HC12 instruction operands.  The general syntax is the
+following:
+
+     %modifier(symbol)
+
+`%addr'
+     This modifier indicates to the assembler and linker to use the
+     16-bit physical address corresponding to the symbol.  This is
+     intended to be used on memory window systems to map a symbol in
+     the memory bank window.  If the symbol is in a memory expansion
+     part, the physical address corresponds to the symbol address
+     within the memory bank window.  If the symbol is not in a memory
+     expansion part, this is the symbol address (using or not using the
+     %addr modifier has no effect in that case).
+
+`%page'
+     This modifier indicates to use the memory page number corresponding
+     to the symbol.  If the symbol is in a memory expansion part, its
+     page number is computed by the linker as a number used to map the
+     page containing the symbol in the memory bank window.  If the
+     symbol is not in a memory expansion part, the page number is 0.
+
+`%hi'
+     This modifier indicates to use the 8-bit high part of the physical
+     address of the symbol.
+
+`%lo'
+     This modifier indicates to use the 8-bit low part of the physical
+     address of the symbol.
+
+
+   For example a 68HC12 call to a function `foo_example' stored in
+memory expansion part could be written as follows:
+
+     call %addr(foo_example),%page(foo_example)
+
+   and this is equivalent to
+
+     call foo_example
+
+   And for 68HC11 it could be written as follows:
+
+     ldab #%page(foo_example)
+     stab _page_switch
+     jsr  %addr(foo_example)
+
+
+File: as.info,  Node: M68HC11-Directives,  Next: M68HC11-Float,  Prev: M68HC11-Modifiers,  Up: M68HC11-Dependent
+
+8.19.4 Assembler Directives
+---------------------------
+
+The 68HC11 and 68HC12 version of `as' have the following specific
+assembler directives:
+
+`.relax'
+     The relax directive is used by the `GNU Compiler' to emit a
+     specific relocation to mark a group of instructions for linker
+     relaxation.  The sequence of instructions within the group must be
+     known to the linker so that relaxation can be performed.
+
+`.mode [mshort|mlong|mshort-double|mlong-double]'
+     This directive specifies the ABI.  It overrides the `-mshort',
+     `-mlong', `-mshort-double' and `-mlong-double' options.
+
+`.far SYMBOL'
+     This directive marks the symbol as a `far' symbol meaning that it
+     uses a `call/rtc' calling convention as opposed to `jsr/rts'.
+     During a final link, the linker will identify references to the
+     `far' symbol and will verify the proper calling convention.
+
+`.interrupt SYMBOL'
+     This directive marks the symbol as an interrupt entry point.  This
+     information is then used by the debugger to correctly unwind the
+     frame across interrupts.
+
+`.xrefb SYMBOL'
+     This directive is defined for compatibility with the
+     `Specification for Motorola 8 and 16-Bit Assembly Language Input
+     Standard' and is ignored.
+
+
+
+File: as.info,  Node: M68HC11-Float,  Next: M68HC11-opcodes,  Prev: M68HC11-Directives,  Up: M68HC11-Dependent
+
+8.19.5 Floating Point
+---------------------
+
+Packed decimal (P) format floating literals are not supported.  Feel
+free to add the code!
+
+   The floating point formats generated by directives are these.
+
+`.float'
+     `Single' precision floating point constants.
+
+`.double'
+     `Double' precision floating point constants.
+
+`.extend'
+`.ldouble'
+     `Extended' precision (`long double') floating point constants.
+
+
+File: as.info,  Node: M68HC11-opcodes,  Prev: M68HC11-Float,  Up: M68HC11-Dependent
+
+8.19.6 Opcodes
+--------------
+
+* Menu:
+
+* M68HC11-Branch::                 Branch Improvement
+
+
+File: as.info,  Node: M68HC11-Branch,  Up: M68HC11-opcodes
+
+8.19.6.1 Branch Improvement
+...........................
+
+Certain pseudo opcodes are permitted for branch instructions.  They
+expand to the shortest branch instruction that reach the target.
+Generally these mnemonics are made by prepending `j' to the start of
+Motorola mnemonic. These pseudo opcodes are not affected by the
+`--short-branchs' or `--force-long-branchs' options.
+
+   The following table summarizes the pseudo-operations.
+
+                             Displacement Width
+          +-------------------------------------------------------------+
+          |                     Options                                 |
+          |    --short-branchs            --force-long-branchs          |
+          +--------------------------+----------------------------------+
+       Op |BYTE             WORD     | BYTE          WORD               |
+          +--------------------------+----------------------------------+
+      bsr | bsr <pc-rel>    <error>  |               jsr <abs>          |
+      bra | bra <pc-rel>    <error>  |               jmp <abs>          |
+     jbsr | bsr <pc-rel>   jsr <abs> | bsr <pc-rel>  jsr <abs>          |
+     jbra | bra <pc-rel>   jmp <abs> | bra <pc-rel>  jmp <abs>          |
+      bXX | bXX <pc-rel>    <error>  |               bNX +3; jmp <abs>  |
+     jbXX | bXX <pc-rel>   bNX +3;   | bXX <pc-rel>  bNX +3; jmp <abs>  |
+          |                jmp <abs> |                                  |
+          +--------------------------+----------------------------------+
+     XX: condition
+     NX: negative of condition XX
+
+`jbsr'
+`jbra'
+     These are the simplest jump pseudo-operations; they always map to
+     one particular machine instruction, depending on the displacement
+     to the branch target.
+
+`jbXX'
+     Here, `jbXX' stands for an entire family of pseudo-operations,
+     where XX is a conditional branch or condition-code test.  The full
+     list of pseudo-ops in this family is:
+           jbcc   jbeq   jbge   jbgt   jbhi   jbvs   jbpl  jblo
+           jbcs   jbne   jblt   jble   jbls   jbvc   jbmi
+
+     For the cases of non-PC relative displacements and long
+     displacements, `as' issues a longer code fragment in terms of NX,
+     the opposite condition to XX.  For example, for the non-PC
+     relative case:
+              jbXX foo
+     gives
+               bNXs oof
+               jmp foo
+           oof:
+
+
+
+File: as.info,  Node: M88K-Dependent,  Next: MIPS-Dependent,  Prev: M68HC11-Dependent,  Up: Machine Dependencies
+
+8.20 Motorola M88K Dependent Features
+=====================================
+
+* Menu:
+
+* M88K Directives::     M88K Machine Directives
+
+
+File: as.info,  Node: M88K Directives,  Up: M88K-Dependent
+
+8.20.1 M88K Machine Directives
+------------------------------
+
+The M88K version of the assembler supports the following machine
+directives:
+
+`.align'
+     This directive aligns the section program counter on the next
+     4-byte boundary.
+
+`.dfloat EXPR'
+     This assembles a double precision (64-bit) floating point constant.
+
+`.ffloat EXPR'
+     This assembles a single precision (32-bit) floating point constant.
+
+`.half EXPR'
+     This directive assembles a half-word (16-bit) constant.
+
+`.word EXPR'
+     This assembles a word (32-bit) constant.
+
+`.string "STR"'
+     This directive behaves like the standard `.ascii' directive for
+     copying STR into the object file.  The string is not terminated
+     with a null byte.
+
+`.set SYMBOL, VALUE'
+     This directive creates a symbol named SYMBOL which is an alias for
+     another symbol (possibly not yet defined).  This should not be
+     confused with the mnemonic `set', which is a legitimate M88K
+     instruction.
+
+`.def SYMBOL, VALUE'
+     This directive is synonymous with `.set' and is presumably provided
+     for compatibility with other M88K assemblers.
+
+`.bss SYMBOL, LENGTH, ALIGN'
+     Reserve LENGTH bytes in the bss section for a local SYMBOL,
+     aligned to the power of two specified by ALIGN.  LENGTH and ALIGN
+     must be positive absolute expressions.  This directive differs
+     from `.lcomm' only in that it permits you to specify an alignment.
+     *Note `.lcomm': Lcomm.
+
+
+
+File: as.info,  Node: MIPS-Dependent,  Next: MMIX-Dependent,  Prev: M88K-Dependent,  Up: Machine Dependencies
+
+8.21 MIPS Dependent Features
+============================
+
+   GNU `as' for MIPS architectures supports several different MIPS
+processors, and MIPS ISA levels I through V, MIPS32, and MIPS64.  For
+information about the MIPS instruction set, see `MIPS RISC
+Architecture', by Kane and Heindrich (Prentice-Hall).  For an overview
+of MIPS assembly conventions, see "Appendix D: Assembly Language
+Programming" in the same work.
+
+* Menu:
+
+* MIPS Opts::   	Assembler options
+* MIPS Object:: 	ECOFF object code
+* MIPS Stabs::  	Directives for debugging information
+* MIPS ISA::    	Directives to override the ISA level
+* MIPS symbol sizes::   Directives to override the size of symbols
+* MIPS autoextend::	Directives for extending MIPS 16 bit instructions
+* MIPS insn::		Directive to mark data as an instruction
+* MIPS option stack::	Directives to save and restore options
+* MIPS ASE instruction generation overrides:: Directives to control
+  			generation of MIPS ASE instructions
+
+
+File: as.info,  Node: MIPS Opts,  Next: MIPS Object,  Up: MIPS-Dependent
+
+8.21.1 Assembler options
+------------------------
+
+The MIPS configurations of GNU `as' support these special options:
+
+`-G NUM'
+     This option sets the largest size of an object that can be
+     referenced implicitly with the `gp' register.  It is only accepted
+     for targets that use ECOFF format.  The default value is 8.
+
+`-EB'
+`-EL'
+     Any MIPS configuration of `as' can select big-endian or
+     little-endian output at run time (unlike the other GNU development
+     tools, which must be configured for one or the other).  Use `-EB'
+     to select big-endian output, and `-EL' for little-endian.
+
+`-mips1'
+`-mips2'
+`-mips3'
+`-mips4'
+`-mips5'
+`-mips32'
+`-mips32r2'
+`-mips64'
+`-mips64r2'
+     Generate code for a particular MIPS Instruction Set Architecture
+     level.  `-mips1' corresponds to the R2000 and R3000 processors,
+     `-mips2' to the R6000 processor, `-mips3' to the R4000 processor,
+     and `-mips4' to the R8000 and R10000 processors.  `-mips5',
+     `-mips32', `-mips32r2', `-mips64', and `-mips64r2' correspond to
+     generic MIPS V, MIPS32, MIPS32 RELEASE 2, MIPS64, and MIPS64
+     RELEASE 2 ISA processors, respectively.  You can also switch
+     instruction sets during the assembly; see *Note Directives to
+     override the ISA level: MIPS ISA.
+
+`-mgp32'
+`-mfp32'
+     Some macros have different expansions for 32-bit and 64-bit
+     registers.  The register sizes are normally inferred from the ISA
+     and ABI, but these flags force a certain group of registers to be
+     treated as 32 bits wide at all times.  `-mgp32' controls the size
+     of general-purpose registers and `-mfp32' controls the size of
+     floating-point registers.
+
+     On some MIPS variants there is a 32-bit mode flag; when this flag
+     is set, 64-bit instructions generate a trap.  Also, some 32-bit
+     OSes only save the 32-bit registers on a context switch, so it is
+     essential never to use the 64-bit registers.
+
+`-mgp64'
+     Assume that 64-bit general purpose registers are available.  This
+     is provided in the interests of symmetry with -gp32.
+
+`-mips16'
+`-no-mips16'
+     Generate code for the MIPS 16 processor.  This is equivalent to
+     putting `.set mips16' at the start of the assembly file.
+     `-no-mips16' turns off this option.
+
+`-mips3d'
+`-no-mips3d'
+     Generate code for the MIPS-3D Application Specific Extension.
+     This tells the assembler to accept MIPS-3D instructions.
+     `-no-mips3d' turns off this option.
+
+`-mdmx'
+`-no-mdmx'
+     Generate code for the MDMX Application Specific Extension.  This
+     tells the assembler to accept MDMX instructions.  `-no-mdmx' turns
+     off this option.
+
+`-mfix7000'
+`-mno-fix7000'
+     Cause nops to be inserted if the read of the destination register
+     of an mfhi or mflo instruction occurs in the following two
+     instructions.
+
+`-mfix-vr4120'
+`-no-mfix-vr4120'
+     Insert nops to work around certain VR4120 errata.  This option is
+     intended to be used on GCC-generated code: it is not designed to
+     catch all problems in hand-written assembler code.
+
+`-mfix-vr4130'
+`-no-mfix-vr4130'
+     Insert nops to work around the VR4130 `mflo'/`mfhi' errata.
+
+`-m4010'
+`-no-m4010'
+     Generate code for the LSI R4010 chip.  This tells the assembler to
+     accept the R4010 specific instructions (`addciu', `ffc', etc.),
+     and to not schedule `nop' instructions around accesses to the `HI'
+     and `LO' registers.  `-no-m4010' turns off this option.
+
+`-m4650'
+`-no-m4650'
+     Generate code for the MIPS R4650 chip.  This tells the assembler
+     to accept the `mad' and `madu' instruction, and to not schedule
+     `nop' instructions around accesses to the `HI' and `LO' registers.
+     `-no-m4650' turns off this option.
+
+`-m3900'
+`-no-m3900'
+`-m4100'
+`-no-m4100'
+     For each option `-mNNNN', generate code for the MIPS RNNNN chip.
+     This tells the assembler to accept instructions specific to that
+     chip, and to schedule for that chip's hazards.
+
+`-march=CPU'
+     Generate code for a particular MIPS cpu.  It is exactly equivalent
+     to `-mCPU', except that there are more value of CPU understood.
+     Valid CPU value are:
+
+          2000, 3000, 3900, 4000, 4010, 4100, 4111, vr4120, vr4130,
+          vr4181, 4300, 4400, 4600, 4650, 5000, rm5200, rm5230, rm5231,
+          rm5261, rm5721, vr5400, vr5500, 6000, rm7000, 8000, rm9000,
+          10000, 12000, mips32-4k, sb1
+
+`-mtune=CPU'
+     Schedule and tune for a particular MIPS cpu.  Valid CPU values are
+     identical to `-march=CPU'.
+
+`-mabi=ABI'
+     Record which ABI the source code uses.  The recognized arguments
+     are: `32', `n32', `o64', `64' and `eabi'.
+
+`-msym32'
+`-mno-sym32'
+     Equivalent to adding `.set sym32' or `.set nosym32' to the
+     beginning of the assembler input.  *Note MIPS symbol sizes::.
+
+`-nocpp'
+     This option is ignored.  It is accepted for command-line
+     compatibility with other assemblers, which use it to turn off C
+     style preprocessing.  With GNU `as', there is no need for
+     `-nocpp', because the GNU assembler itself never runs the C
+     preprocessor.
+
+`--construct-floats'
+`--no-construct-floats'
+     The `--no-construct-floats' option disables the construction of
+     double width floating point constants by loading the two halves of
+     the value into the two single width floating point registers that
+     make up the double width register.  This feature is useful if the
+     processor support the FR bit in its status  register, and this bit
+     is known (by the programmer) to be set.  This bit prevents the
+     aliasing of the double width register by the single width
+     registers.
+
+     By default `--construct-floats' is selected, allowing construction
+     of these floating point constants.
+
+`--trap'
+`--no-break'
+     `as' automatically macro expands certain division and
+     multiplication instructions to check for overflow and division by
+     zero.  This option causes `as' to generate code to take a trap
+     exception rather than a break exception when an error is detected.
+     The trap instructions are only supported at Instruction Set
+     Architecture level 2 and higher.
+
+`--break'
+`--no-trap'
+     Generate code to take a break exception rather than a trap
+     exception when an error is detected.  This is the default.
+
+`-mpdr'
+`-mno-pdr'
+     Control generation of `.pdr' sections.  Off by default on IRIX, on
+     elsewhere.
+
+`-mshared'
+`-mno-shared'
+     When generating code using the Unix calling conventions (selected
+     by `-KPIC' or `-mcall_shared'), gas will normally generate code
+     which can go into a shared library.  The `-mno-shared' option
+     tells gas to generate code which uses the calling convention, but
+     can not go into a shared library.  The resulting code is slightly
+     more efficient.  This option only affects the handling of the
+     `.cpload' and `.cpsetup' pseudo-ops.
+
+
+File: as.info,  Node: MIPS Object,  Next: MIPS Stabs,  Prev: MIPS Opts,  Up: MIPS-Dependent
+
+8.21.2 MIPS ECOFF object code
+-----------------------------
+
+Assembling for a MIPS ECOFF target supports some additional sections
+besides the usual `.text', `.data' and `.bss'.  The additional sections
+are `.rdata', used for read-only data, `.sdata', used for small data,
+and `.sbss', used for small common objects.
+
+   When assembling for ECOFF, the assembler uses the `$gp' (`$28')
+register to form the address of a "small object".  Any object in the
+`.sdata' or `.sbss' sections is considered "small" in this sense.  For
+external objects, or for objects in the `.bss' section, you can use the
+`gcc' `-G' option to control the size of objects addressed via `$gp';
+the default value is 8, meaning that a reference to any object eight
+bytes or smaller uses `$gp'.  Passing `-G 0' to `as' prevents it from
+using the `$gp' register on the basis of object size (but the assembler
+uses `$gp' for objects in `.sdata' or `sbss' in any case).  The size of
+an object in the `.bss' section is set by the `.comm' or `.lcomm'
+directive that defines it.  The size of an external object may be set
+with the `.extern' directive.  For example, `.extern sym,4' declares
+that the object at `sym' is 4 bytes in length, whie leaving `sym'
+otherwise undefined.
+
+   Using small ECOFF objects requires linker support, and assumes that
+the `$gp' register is correctly initialized (normally done
+automatically by the startup code).  MIPS ECOFF assembly code must not
+modify the `$gp' register.
+
+
+File: as.info,  Node: MIPS Stabs,  Next: MIPS ISA,  Prev: MIPS Object,  Up: MIPS-Dependent
+
+8.21.3 Directives for debugging information
+-------------------------------------------
+
+MIPS ECOFF `as' supports several directives used for generating
+debugging information which are not support by traditional MIPS
+assemblers.  These are `.def', `.endef', `.dim', `.file', `.scl',
+`.size', `.tag', `.type', `.val', `.stabd', `.stabn', and `.stabs'.
+The debugging information generated by the three `.stab' directives can
+only be read by GDB, not by traditional MIPS debuggers (this
+enhancement is required to fully support C++ debugging).  These
+directives are primarily used by compilers, not assembly language
+programmers!
+
+
+File: as.info,  Node: MIPS symbol sizes,  Next: MIPS autoextend,  Prev: MIPS ISA,  Up: MIPS-Dependent
+
+8.21.4 Directives to override the size of symbols
+-------------------------------------------------
+
+The n64 ABI allows symbols to have any 64-bit value.  Although this
+provides a great deal of flexibility, it means that some macros have
+much longer expansions than their 32-bit counterparts.  For example,
+the non-PIC expansion of `dla $4,sym' is usually:
+
+     lui     $4,%highest(sym)
+     lui     $1,%hi(sym)
+     daddiu  $4,$4,%higher(sym)
+     daddiu  $1,$1,%lo(sym)
+     dsll32  $4,$4,0
+     daddu   $4,$4,$1
+
+   whereas the 32-bit expansion is simply:
+
+     lui     $4,%hi(sym)
+     daddiu  $4,$4,%lo(sym)
+
+   n64 code is sometimes constructed in such a way that all symbolic
+constants are known to have 32-bit values, and in such cases, it's
+preferable to use the 32-bit expansion instead of the 64-bit expansion.
+
+   You can use the `.set sym32' directive to tell the assembler that,
+from this point on, all expressions of the form `SYMBOL' or `SYMBOL +
+OFFSET' have 32-bit values.  For example:
+
+     .set sym32
+     dla     $4,sym
+     lw      $4,sym+16
+     sw      $4,sym+0x8000($4)
+
+   will cause the assembler to treat `sym', `sym+16' and `sym+0x8000'
+as 32-bit values.  The handling of non-symbolic addresses is not
+affected.
+
+   The directive `.set nosym32' ends a `.set sym32' block and reverts
+to the normal behavior.  It is also possible to change the symbol size
+using the command-line options `-msym32' and `-mno-sym32'.
+
+   These options and directives are always accepted, but at present,
+they have no effect for anything other than n64.
+
+
+File: as.info,  Node: MIPS ISA,  Next: MIPS symbol sizes,  Prev: MIPS Stabs,  Up: MIPS-Dependent
+
+8.21.5 Directives to override the ISA level
+-------------------------------------------
+
+GNU `as' supports an additional directive to change the MIPS
+Instruction Set Architecture level on the fly: `.set mipsN'.  N should
+be a number from 0 to 5, or 32, 32r2, 64 or 64r2.  The values other
+than 0 make the assembler accept instructions for the corresponding ISA
+level, from that point on in the assembly.  `.set mipsN' affects not
+only which instructions are permitted, but also how certain macros are
+expanded.  `.set mips0' restores the ISA level to its original level:
+either the level you selected with command line options, or the default
+for your configuration.  You can use this feature to permit specific
+R4000 instructions while assembling in 32 bit mode.  Use this directive
+with care!
+
+   The directive `.set mips16' puts the assembler into MIPS 16 mode, in
+which it will assemble instructions for the MIPS 16 processor.  Use
+`.set nomips16' to return to normal 32 bit mode.
+
+   Traditional MIPS assemblers do not support this directive.
+
+
+File: as.info,  Node: MIPS autoextend,  Next: MIPS insn,  Prev: MIPS symbol sizes,  Up: MIPS-Dependent
+
+8.21.6 Directives for extending MIPS 16 bit instructions
+--------------------------------------------------------
+
+By default, MIPS 16 instructions are automatically extended to 32 bits
+when necessary.  The directive `.set noautoextend' will turn this off.
+When `.set noautoextend' is in effect, any 32 bit instruction must be
+explicitly extended with the `.e' modifier (e.g., `li.e $4,1000').  The
+directive `.set autoextend' may be used to once again automatically
+extend instructions when necessary.
+
+   This directive is only meaningful when in MIPS 16 mode.  Traditional
+MIPS assemblers do not support this directive.
+
+
+File: as.info,  Node: MIPS insn,  Next: MIPS option stack,  Prev: MIPS autoextend,  Up: MIPS-Dependent
+
+8.21.7 Directive to mark data as an instruction
+-----------------------------------------------
+
+The `.insn' directive tells `as' that the following data is actually
+instructions.  This makes a difference in MIPS 16 mode: when loading
+the address of a label which precedes instructions, `as' automatically
+adds 1 to the value, so that jumping to the loaded address will do the
+right thing.
+
+
+File: as.info,  Node: MIPS option stack,  Next: MIPS ASE instruction generation overrides,  Prev: MIPS insn,  Up: MIPS-Dependent
+
+8.21.8 Directives to save and restore options
+---------------------------------------------
+
+The directives `.set push' and `.set pop' may be used to save and
+restore the current settings for all the options which are controlled
+by `.set'.  The `.set push' directive saves the current settings on a
+stack.  The `.set pop' directive pops the stack and restores the
+settings.
+
+   These directives can be useful inside an macro which must change an
+option such as the ISA level or instruction reordering but does not want
+to change the state of the code which invoked the macro.
+
+   Traditional MIPS assemblers do not support these directives.
+
+
+File: as.info,  Node: MIPS ASE instruction generation overrides,  Prev: MIPS option stack,  Up: MIPS-Dependent
+
+8.21.9 Directives to control generation of MIPS ASE instructions
+----------------------------------------------------------------
+
+The directive `.set mips3d' makes the assembler accept instructions
+from the MIPS-3D Application Specific Extension from that point on in
+the assembly.  The `.set nomips3d' directive prevents MIPS-3D
+instructions from being accepted.
+
+   The directive `.set mdmx' makes the assembler accept instructions
+from the MDMX Application Specific Extension from that point on in the
+assembly.  The `.set nomdmx' directive prevents MDMX instructions from
+being accepted.
+
+   Traditional MIPS assemblers do not support these directives.
+
+
+File: as.info,  Node: MMIX-Dependent,  Next: MSP430-Dependent,  Prev: MIPS-Dependent,  Up: Machine Dependencies
+
+8.22 MMIX Dependent Features
+============================
+
+* Menu:
+
+* MMIX-Opts::              Command-line Options
+* MMIX-Expand::            Instruction expansion
+* MMIX-Syntax::            Syntax
+* MMIX-mmixal::		   Differences to `mmixal' syntax and semantics
+
+
+File: as.info,  Node: MMIX-Opts,  Next: MMIX-Expand,  Up: MMIX-Dependent
+
+8.22.1 Command-line Options
+---------------------------
+
+The MMIX version of `as' has some machine-dependent options.
+
+   When `--fixed-special-register-names' is specified, only the register
+names specified in *Note MMIX-Regs:: are recognized in the instructions
+`PUT' and `GET'.
+
+   You can use the `--globalize-symbols' to make all symbols global.
+This option is useful when splitting up a `mmixal' program into several
+files.
+
+   The `--gnu-syntax' turns off most syntax compatibility with
+`mmixal'.  Its usability is currently doubtful.
+
+   The `--relax' option is not fully supported, but will eventually make
+the object file prepared for linker relaxation.
+
+   If you want to avoid inadvertently calling a predefined symbol and
+would rather get an error, for example when using `as' with a compiler
+or other machine-generated code, specify `--no-predefined-syms'.  This
+turns off built-in predefined definitions of all such symbols,
+including rounding-mode symbols, segment symbols, `BIT' symbols, and
+`TRAP' symbols used in `mmix' "system calls".  It also turns off
+predefined special-register names, except when used in `PUT' and `GET'
+instructions.
+
+   By default, some instructions are expanded to fit the size of the
+operand or an external symbol (*note MMIX-Expand::).  By passing
+`--no-expand', no such expansion will be done, instead causing errors
+at link time if the operand does not fit.
+
+   The `mmixal' documentation (*note mmixsite::) specifies that global
+registers allocated with the `GREG' directive (*note MMIX-greg::) and
+initialized to the same non-zero value, will refer to the same global
+register.  This isn't strictly enforceable in `as' since the final
+addresses aren't known until link-time, but it will do an effort unless
+the `--no-merge-gregs' option is specified.  (Register merging isn't
+yet implemented in `ld'.)
+
+   `as' will warn every time it expands an instruction to fit an
+operand unless the option `-x' is specified.  It is believed that this
+behaviour is more useful than just mimicking `mmixal''s behaviour, in
+which instructions are only expanded if the `-x' option is specified,
+and assembly fails otherwise, when an instruction needs to be expanded.
+It needs to be kept in mind that `mmixal' is both an assembler and
+linker, while `as' will expand instructions that at link stage can be
+contracted.  (Though linker relaxation isn't yet implemented in `ld'.)
+The option `-x' also imples `--linker-allocated-gregs'.
+
+   If instruction expansion is enabled, `as' can expand a `PUSHJ'
+instruction into a series of instructions.  The shortest expansion is
+to not expand it, but just mark the call as redirectable to a stub,
+which `ld' creates at link-time, but only if the original `PUSHJ'
+instruction is found not to reach the target.  The stub consists of the
+necessary instructions to form a jump to the target.  This happens if
+`as' can assert that the `PUSHJ' instruction can reach such a stub.
+The option `--no-pushj-stubs' disables this shorter expansion, and the
+longer series of instructions is then created at assembly-time.  The
+option `--no-stubs' is a synonym, intended for compatibility with
+future releases, where generation of stubs for other instructions may
+be implemented.
+
+   Usually a two-operand-expression (*note GREG-base::) without a
+matching `GREG' directive is treated as an error by `as'.  When the
+option `--linker-allocated-gregs' is in effect, they are instead passed
+through to the linker, which will allocate as many global registers as
+is needed.
+
+
+File: as.info,  Node: MMIX-Expand,  Next: MMIX-Syntax,  Prev: MMIX-Opts,  Up: MMIX-Dependent
+
+8.22.2 Instruction expansion
+----------------------------
+
+When `as' encounters an instruction with an operand that is either not
+known or does not fit the operand size of the instruction, `as' (and
+`ld') will expand the instruction into a sequence of instructions
+semantically equivalent to the operand fitting the instruction.
+Expansion will take place for the following instructions:
+
+`GETA'
+     Expands to a sequence of four instructions: `SETL', `INCML',
+     `INCMH' and `INCH'.  The operand must be a multiple of four.
+
+Conditional branches
+     A branch instruction is turned into a branch with the complemented
+     condition and prediction bit over five instructions; four
+     instructions setting `$255' to the operand value, which like with
+     `GETA' must be a multiple of four, and a final `GO $255,$255,0'.
+
+`PUSHJ'
+     Similar to expansion for conditional branches; four instructions
+     set `$255' to the operand value, followed by a `PUSHGO
+     $255,$255,0'.
+
+`JMP'
+     Similar to conditional branches and `PUSHJ'.  The final instruction
+     is `GO $255,$255,0'.
+
+   The linker `ld' is expected to shrink these expansions for code
+assembled with `--relax' (though not currently implemented).
+
+
+File: as.info,  Node: MMIX-Syntax,  Next: MMIX-mmixal,  Prev: MMIX-Expand,  Up: MMIX-Dependent
+
+8.22.3 Syntax
+-------------
+
+The assembly syntax is supposed to be upward compatible with that
+described in Sections 1.3 and 1.4 of `The Art of Computer Programming,
+Volume 1'.  Draft versions of those chapters as well as other MMIX
+information is located at
+`http://www-cs-faculty.stanford.edu/~knuth/mmix-news.html'.  Most code
+examples from the mmixal package located there should work unmodified
+when assembled and linked as single files, with a few noteworthy
+exceptions (*note MMIX-mmixal::).
+
+   Before an instruction is emitted, the current location is aligned to
+the next four-byte boundary.  If a label is defined at the beginning of
+the line, its value will be the aligned value.
+
+   In addition to the traditional hex-prefix `0x', a hexadecimal number
+can also be specified by the prefix character `#'.
+
+   After all operands to an MMIX instruction or directive have been
+specified, the rest of the line is ignored, treated as a comment.
+
+* Menu:
+
+* MMIX-Chars::		        Special Characters
+* MMIX-Symbols::		Symbols
+* MMIX-Regs::			Register Names
+* MMIX-Pseudos::		Assembler Directives
+
+
+File: as.info,  Node: MMIX-Chars,  Next: MMIX-Symbols,  Up: MMIX-Syntax
+
+8.22.3.1 Special Characters
+...........................
+
+The characters `*' and `#' are line comment characters; each start a
+comment at the beginning of a line, but only at the beginning of a
+line.  A `#' prefixes a hexadecimal number if found elsewhere on a line.
+
+   Two other characters, `%' and `!', each start a comment anywhere on
+the line.  Thus you can't use the `modulus' and `not' operators in
+expressions normally associated with these two characters.
+
+   A `;' is a line separator, treated as a new-line, so separate
+instructions can be specified on a single line.
+
+
+File: as.info,  Node: MMIX-Symbols,  Next: MMIX-Regs,  Prev: MMIX-Chars,  Up: MMIX-Syntax
+
+8.22.3.2 Symbols
+................
+
+The character `:' is permitted in identifiers.  There are two
+exceptions to it being treated as any other symbol character: if a
+symbol begins with `:', it means that the symbol is in the global
+namespace and that the current prefix should not be prepended to that
+symbol (*note MMIX-prefix::).  The `:' is then not considered part of
+the symbol.  For a symbol in the label position (first on a line), a `:'
+at the end of a symbol is silently stripped off.  A label is permitted,
+but not required, to be followed by a `:', as with many other assembly
+formats.
+
+   The character `@' in an expression, is a synonym for `.', the
+current location.
+
+   In addition to the common forward and backward local symbol formats
+(*note Symbol Names::), they can be specified with upper-case `B' and
+`F', as in `8B' and `9F'.  A local label defined for the current
+position is written with a `H' appended to the number:
+     3H LDB $0,$1,2
+   This and traditional local-label formats cannot be mixed: a label
+must be defined and referred to using the same format.
+
+   There's a minor caveat: just as for the ordinary local symbols, the
+local symbols are translated into ordinary symbols using control
+characters are to hide the ordinal number of the symbol.
+Unfortunately, these symbols are not translated back in error messages.
+Thus you may see confusing error messages when local symbols are used.
+Control characters `\003' (control-C) and `\004' (control-D) are used
+for the MMIX-specific local-symbol syntax.
+
+   The symbol `Main' is handled specially; it is always global.
+
+   By defining the symbols `__.MMIX.start..text' and
+`__.MMIX.start..data', the address of respectively the `.text' and
+`.data' segments of the final program can be defined, though when
+linking more than one object file, the code or data in the object file
+containing the symbol is not guaranteed to be start at that position;
+just the final executable.  *Note MMIX-loc::.
+
+
+File: as.info,  Node: MMIX-Regs,  Next: MMIX-Pseudos,  Prev: MMIX-Symbols,  Up: MMIX-Syntax
+
+8.22.3.3 Register names
+.......................
+
+Local and global registers are specified as `$0' to `$255'.  The
+recognized special register names are `rJ', `rA', `rB', `rC', `rD',
+`rE', `rF', `rG', `rH', `rI', `rK', `rL', `rM', `rN', `rO', `rP', `rQ',
+`rR', `rS', `rT', `rU', `rV', `rW', `rX', `rY', `rZ', `rBB', `rTT',
+`rWW', `rXX', `rYY' and `rZZ'.  A leading `:' is optional for special
+register names.
+
+   Local and global symbols can be equated to register names and used in
+place of ordinary registers.
+
+   Similarly for special registers, local and global symbols can be
+used.  Also, symbols equated from numbers and constant expressions are
+allowed in place of a special register, except when either of the
+options `--no-predefined-syms' and `--fixed-special-register-names' are
+specified.  Then only the special register names above are allowed for
+the instructions having a special register operand; `GET' and `PUT'.
+
+
+File: as.info,  Node: MMIX-Pseudos,  Prev: MMIX-Regs,  Up: MMIX-Syntax
+
+8.22.3.4 Assembler Directives
+.............................
+
+`LOC'
+     The `LOC' directive sets the current location to the value of the
+     operand field, which may include changing sections.  If the
+     operand is a constant, the section is set to either `.data' if the
+     value is `0x2000000000000000' or larger, else it is set to `.text'.
+     Within a section, the current location may only be changed to
+     monotonically higher addresses.  A LOC expression must be a
+     previously defined symbol or a "pure" constant.
+
+     An example, which sets the label PREV to the current location, and
+     updates the current location to eight bytes forward:
+          prev LOC @+8
+
+     When a LOC has a constant as its operand, a symbol
+     `__.MMIX.start..text' or `__.MMIX.start..data' is defined
+     depending on the address as mentioned above.  Each such symbol is
+     interpreted as special by the linker, locating the section at that
+     address.  Note that if multiple files are linked, the first object
+     file with that section will be mapped to that address (not
+     necessarily the file with the LOC definition).
+
+`LOCAL'
+     Example:
+           LOCAL external_symbol
+           LOCAL 42
+           .local asymbol
+
+     This directive-operation generates a link-time assertion that the
+     operand does not correspond to a global register.  The operand is
+     an expression that at link-time resolves to a register symbol or a
+     number.  A number is treated as the register having that number.
+     There is one restriction on the use of this directive: the
+     pseudo-directive must be placed in a section with contents, code
+     or data.
+
+`IS'
+     The `IS' directive:
+          asymbol IS an_expression
+     sets the symbol `asymbol' to `an_expression'.  A symbol may not be
+     set more than once using this directive.  Local labels may be set
+     using this directive, for example:
+          5H IS @+4
+
+`GREG'
+     This directive reserves a global register, gives it an initial
+     value and optionally gives it a symbolic name.  Some examples:
+
+          areg GREG
+          breg GREG data_value
+               GREG data_buffer
+               .greg creg, another_data_value
+
+     The symbolic register name can be used in place of a (non-special)
+     register.  If a value isn't provided, it defaults to zero.  Unless
+     the option `--no-merge-gregs' is specified, non-zero registers
+     allocated with this directive may be eliminated by `as'; another
+     register with the same value used in its place.  Any of the
+     instructions `CSWAP', `GO', `LDA', `LDBU', `LDB', `LDHT', `LDOU',
+     `LDO', `LDSF', `LDTU', `LDT', `LDUNC', `LDVTS', `LDWU', `LDW',
+     `PREGO', `PRELD', `PREST', `PUSHGO', `STBU', `STB', `STCO', `STHT',
+     `STOU', `STSF', `STTU', `STT', `STUNC', `SYNCD', `SYNCID', can
+     have a value nearby an initial value in place of its second and
+     third operands.  Here, "nearby" is defined as within the range
+     0...255 from the initial value of such an allocated register.
+
+          buffer1 BYTE 0,0,0,0,0
+          buffer2 BYTE 0,0,0,0,0
+           ...
+           GREG buffer1
+           LDOU $42,buffer2
+     In the example above, the `Y' field of the `LDOUI' instruction
+     (LDOU with a constant Z) will be replaced with the global register
+     allocated for `buffer1', and the `Z' field will have the value 5,
+     the offset from `buffer1' to `buffer2'.  The result is equivalent
+     to this code:
+          buffer1 BYTE 0,0,0,0,0
+          buffer2 BYTE 0,0,0,0,0
+           ...
+          tmpreg GREG buffer1
+           LDOU $42,tmpreg,(buffer2-buffer1)
+
+     Global registers allocated with this directive are allocated in
+     order higher-to-lower within a file.  Other than that, the exact
+     order of register allocation and elimination is undefined.  For
+     example, the order is undefined when more than one file with such
+     directives are linked together.  With the options `-x' and
+     `--linker-allocated-gregs', `GREG' directives for two-operand
+     cases like the one mentioned above can be omitted.  Sufficient
+     global registers will then be allocated by the linker.
+
+`BYTE'
+     The `BYTE' directive takes a series of operands separated by a
+     comma.  If an operand is a string (*note Strings::), each
+     character of that string is emitted as a byte.  Other operands
+     must be constant expressions without forward references, in the
+     range 0...255.  If you need operands having expressions with
+     forward references, use `.byte' (*note Byte::).  An operand can be
+     omitted, defaulting to a zero value.
+
+`WYDE'
+`TETRA'
+`OCTA'
+     The directives `WYDE', `TETRA' and `OCTA' emit constants of two,
+     four and eight bytes size respectively.  Before anything else
+     happens for the directive, the current location is aligned to the
+     respective constant-size boundary.  If a label is defined at the
+     beginning of the line, its value will be that after the alignment.
+     A single operand can be omitted, defaulting to a zero value
+     emitted for the directive.  Operands can be expressed as strings
+     (*note Strings::), in which case each character in the string is
+     emitted as a separate constant of the size indicated by the
+     directive.
+
+`PREFIX'
+     The `PREFIX' directive sets a symbol name prefix to be prepended to
+     all symbols (except local symbols, *note MMIX-Symbols::), that are
+     not prefixed with `:', until the next `PREFIX' directive.  Such
+     prefixes accumulate.  For example,
+           PREFIX a
+           PREFIX b
+          c IS 0
+     defines a symbol `abc' with the value 0.
+
+`BSPEC'
+`ESPEC'
+     A pair of `BSPEC' and `ESPEC' directives delimit a section of
+     special contents (without specified semantics).  Example:
+           BSPEC 42
+           TETRA 1,2,3
+           ESPEC
+     The single operand to `BSPEC' must be number in the range 0...255.
+     The `BSPEC' number 80 is used by the GNU binutils implementation.
+
+
+File: as.info,  Node: MMIX-mmixal,  Prev: MMIX-Syntax,  Up: MMIX-Dependent
+
+8.22.4 Differences to `mmixal'
+------------------------------
+
+The binutils `as' and `ld' combination has a few differences in
+function compared to `mmixal' (*note mmixsite::).
+
+   The replacement of a symbol with a GREG-allocated register (*note
+GREG-base::) is not handled the exactly same way in `as' as in
+`mmixal'.  This is apparent in the `mmixal' example file `inout.mms',
+where different registers with different offsets, eventually yielding
+the same address, are used in the first instruction.  This type of
+difference should however not affect the function of any program unless
+it has specific assumptions about the allocated register number.
+
+   Line numbers (in the `mmo' object format) are currently not
+supported.
+
+   Expression operator precedence is not that of mmixal: operator
+precedence is that of the C programming language.  It's recommended to
+use parentheses to explicitly specify wanted operator precedence
+whenever more than one type of operators are used.
+
+   The serialize unary operator `&', the fractional division operator
+`//', the logical not operator `!' and the modulus operator `%' are not
+available.
+
+   Symbols are not global by default, unless the option
+`--globalize-symbols' is passed.  Use the `.global' directive to
+globalize symbols (*note Global::).
+
+   Operand syntax is a bit stricter with `as' than `mmixal'.  For
+example, you can't say `addu 1,2,3', instead you must write `addu
+$1,$2,3'.
+
+   You can't LOC to a lower address than those already visited (i.e.
+"backwards").
+
+   A LOC directive must come before any emitted code.
+
+   Predefined symbols are visible as file-local symbols after use.  (In
+the ELF file, that is--the linked mmo file has no notion of a file-local
+symbol.)
+
+   Some mapping of constant expressions to sections in LOC expressions
+is attempted, but that functionality is easily confused and should be
+avoided unless compatibility with `mmixal' is required.  A LOC
+expression to `0x2000000000000000' or higher, maps to the `.data'
+section and lower addresses map to the `.text' section (*note
+MMIX-loc::).
+
+   The code and data areas are each contiguous.  Sparse programs with
+far-away LOC directives will take up the same amount of space as a
+contiguous program with zeros filled in the gaps between the LOC
+directives.  If you need sparse programs, you might try and get the
+wanted effect with a linker script and splitting up the code parts into
+sections (*note Section::).  Assembly code for this, to be compatible
+with `mmixal', would look something like:
+      .if 0
+      LOC away_expression
+      .else
+      .section away,"ax"
+      .fi
+   `as' will not execute the LOC directive and `mmixal' ignores the
+lines with `.'.  This construct can be used generally to help
+compatibility.
+
+   Symbols can't be defined twice-not even to the same value.
+
+   Instruction mnemonics are recognized case-insensitive, though the
+`IS' and `GREG' pseudo-operations must be specified in upper-case
+characters.
+
+   There's no unicode support.
+
+   The following is a list of programs in `mmix.tar.gz', available at
+`http://www-cs-faculty.stanford.edu/~knuth/mmix-news.html', last
+checked with the version dated 2001-08-25 (md5sum
+c393470cfc86fac040487d22d2bf0172) that assemble with `mmixal' but do
+not assemble with `as':
+
+`silly.mms'
+     LOC to a previous address.
+
+`sim.mms'
+     Redefines symbol `Done'.
+
+`test.mms'
+     Uses the serial operator `&'.
+
+
+File: as.info,  Node: MSP430-Dependent,  Next: SH-Dependent,  Prev: MMIX-Dependent,  Up: Machine Dependencies
+
+8.23 MSP 430 Dependent Features
+===============================
+
+* Menu:
+
+* MSP430 Options::              Options
+* MSP430 Syntax::               Syntax
+* MSP430 Floating Point::       Floating Point
+* MSP430 Directives::           MSP 430 Machine Directives
+* MSP430 Opcodes::              Opcodes
+* MSP430 Profiling Capability::	Profiling Capability
+
+
+File: as.info,  Node: MSP430 Options,  Next: MSP430 Syntax,  Up: MSP430-Dependent
+
+8.23.1 Options
+--------------
+
+`as' has only -m flag which selects the mpu arch. Currently has no
+effect.
+
+
+File: as.info,  Node: MSP430 Syntax,  Next: MSP430 Floating Point,  Prev: MSP430 Options,  Up: MSP430-Dependent
+
+8.23.2 Syntax
+-------------
+
+* Menu:
+
+* MSP430-Macros::		Macros
+* MSP430-Chars::                Special Characters
+* MSP430-Regs::                 Register Names
+* MSP430-Ext::			Assembler Extensions
+
+
+File: as.info,  Node: MSP430-Macros,  Next: MSP430-Chars,  Up: MSP430 Syntax
+
+8.23.2.1 Macros
+...............
+
+The macro syntax used on the MSP 430 is like that described in the MSP
+430 Family Assembler Specification.  Normal `as' macros should still
+work.
+
+   Additional built-in macros are:
+
+`llo(exp)'
+     Extracts least significant word from 32-bit expression 'exp'.
+
+`lhi(exp)'
+     Extracts most significant word from 32-bit expression 'exp'.
+
+`hlo(exp)'
+     Extracts 3rd word from 64-bit expression 'exp'.
+
+`hhi(exp)'
+     Extracts 4rd word from 64-bit expression 'exp'.
+
+
+   They normally being used as an immediate source operand.
+         mov	#llo(1), r10	;	== mov	#1, r10
+         mov	#lhi(1), r10	;	== mov	#0, r10
+
+
+File: as.info,  Node: MSP430-Chars,  Next: MSP430-Regs,  Prev: MSP430-Macros,  Up: MSP430 Syntax
+
+8.23.2.2 Special Characters
+...........................
+
+`;' is the line comment character.
+
+   The character `$' in jump instructions indicates current location and
+implemented only for TI syntax compatibility.
+
+
+File: as.info,  Node: MSP430-Regs,  Next: MSP430-Ext,  Prev: MSP430-Chars,  Up: MSP430 Syntax
+
+8.23.2.3 Register Names
+.......................
+
+General-purpose registers are represented by predefined symbols of the
+form `rN' (for global registers), where N represents a number between
+`0' and `15'.  The leading letters may be in either upper or lower
+case; for example, `r13' and `R7' are both valid register names.
+
+   Register names `PC', `SP' and `SR' cannot be used as register names
+and will be treated as variables. Use `r0', `r1', and `r2' instead.
+
+
+File: as.info,  Node: MSP430-Ext,  Prev: MSP430-Regs,  Up: MSP430 Syntax
+
+8.23.2.4 Assembler Extensions
+.............................
+
+`@rN'
+     As destination operand being treated as `0(rn)'
+
+`0(rN)'
+     As source operand being treated as `@rn'
+
+`jCOND +N'
+     Skips next N bytes followed by jump instruction and equivalent to
+     `jCOND $+N+2'
+
+
+   Also, there are some instructions, which cannot be found in other
+assemblers.  These are branch instructions, which has different opcodes
+upon jump distance.  They all got PC relative addressing mode.
+
+`beq label'
+     A polymorph instruction which is `jeq label' in case if jump
+     distance within allowed range for cpu's jump instruction. If not,
+     this unrolls into a sequence of
+            jne $+6
+            br  label
+
+`bne label'
+     A polymorph instruction which is `jne label' or `jeq +4; br label'
+
+`blt label'
+     A polymorph instruction which is `jl label' or `jge +4; br label'
+
+`bltn label'
+     A polymorph instruction which is `jn label' or `jn +2; jmp +4; br
+     label'
+
+`bltu label'
+     A polymorph instruction which is `jlo label' or `jhs +2; br label'
+
+`bge label'
+     A polymorph instruction which is `jge label' or `jl +4; br label'
+
+`bgeu label'
+     A polymorph instruction which is `jhs label' or `jlo +4; br label'
+
+`bgt label'
+     A polymorph instruction which is `jeq +2; jge label' or `jeq +6;
+     jl  +4; br label'
+
+`bgtu label'
+     A polymorph instruction which is `jeq +2; jhs label' or `jeq +6;
+     jlo +4; br label'
+
+`bleu label'
+     A polymorph instruction which is `jeq label; jlo label' or `jeq
+     +2; jhs +4; br label'
+
+`ble label'
+     A polymorph instruction which is `jeq label; jl  label' or `jeq
+     +2; jge +4; br label'
+
+`jump label'
+     A polymorph instruction which is `jmp label' or `br label'
+
+
+File: as.info,  Node: MSP430 Floating Point,  Next: MSP430 Directives,  Prev: MSP430 Syntax,  Up: MSP430-Dependent
+
+8.23.3 Floating Point
+---------------------
+
+The MSP 430 family uses IEEE 32-bit floating-point numbers.
+
+
+File: as.info,  Node: MSP430 Directives,  Next: MSP430 Opcodes,  Prev: MSP430 Floating Point,  Up: MSP430-Dependent
+
+8.23.4 MSP 430 Machine Directives
+---------------------------------
+
+`.file'
+     This directive is ignored; it is accepted for compatibility with
+     other MSP 430 assemblers.
+
+          _Warning:_ in other versions of the GNU assembler, `.file' is
+          used for the directive called `.app-file' in the MSP 430
+          support.
+
+`.line'
+     This directive is ignored; it is accepted for compatibility with
+     other MSP 430 assemblers.
+
+`.arch'
+     Currently this directive is ignored; it is accepted for
+     compatibility with other MSP 430 assemblers.
+
+`.profiler'
+     This directive instructs assembler to add new profile entry to the
+     object file.
+
+
+
+File: as.info,  Node: MSP430 Opcodes,  Next: MSP430 Profiling Capability,  Prev: MSP430 Directives,  Up: MSP430-Dependent
+
+8.23.5 Opcodes
+--------------
+
+`as' implements all the standard MSP 430 opcodes.  No additional
+pseudo-instructions are needed on this family.
+
+   For information on the 430 machine instruction set, see `MSP430
+User's Manual, document slau049b', Texas Instrument, Inc.
+
+
+File: as.info,  Node: MSP430 Profiling Capability,  Prev: MSP430 Opcodes,  Up: MSP430-Dependent
+
+8.23.6 Profiling Capability
+---------------------------
+
+It is a performance hit to use gcc's profiling approach for this tiny
+target.  Even more - jtag hardware facility does not perform any
+profiling functions.  However we've got gdb's built-in simulator where
+we can do anything.
+
+   We define new section `.profiler' which holds all profiling
+information.  We define new pseudo operation `.profiler' which will
+instruct assembler to add new profile entry to the object file. Profile
+should take place at the present address.
+
+   Pseudo operation format:
+
+   `.profiler flags,function_to_profile [, cycle_corrector, extra]'
+
+   where:
+
+          `flags' is a combination of the following characters:
+
+    `s'
+          function entry
+
+    `x'
+          function exit
+
+    `i'
+          function is in init section
+
+    `f'
+          function is in fini section
+
+    `l'
+          library call
+
+    `c'
+          libc standard call
+
+    `d'
+          stack value demand
+
+    `I'
+          interrupt service routine
+
+    `P'
+          prologue start
+
+    `p'
+          prologue end
+
+    `E'
+          epilogue start
+
+    `e'
+          epilogue end
+
+    `j'
+          long jump / sjlj unwind
+
+    `a'
+          an arbitrary code fragment
+
+    `t'
+          extra parameter saved (a constant value like frame size)
+
+`function_to_profile'
+     a function address
+
+`cycle_corrector'
+     a value which should be added to the cycle counter, zero if
+     omitted.
+
+`extra'
+     any extra parameter, zero if omitted.
+
+
+   For example:
+     .global fxx
+     .type fxx,@function
+     fxx:
+     .LFrameOffset_fxx=0x08
+     .profiler "scdP", fxx     ; function entry.
+     			  ; we also demand stack value to be saved
+       push r11
+       push r10
+       push r9
+       push r8
+     .profiler "cdpt",fxx,0, .LFrameOffset_fxx  ; check stack value at this point
+     					  ; (this is a prologue end)
+     					  ; note, that spare var filled with
+     					  ; the farme size
+       mov r15,r8
+     ...
+     .profiler cdE,fxx         ; check stack
+       pop r8
+       pop r9
+       pop r10
+       pop r11
+     .profiler xcde,fxx,3      ; exit adds 3 to the cycle counter
+       ret                     ; cause 'ret' insn takes 3 cycles
+
+
+File: as.info,  Node: PDP-11-Dependent,  Next: PJ-Dependent,  Prev: SH64-Dependent,  Up: Machine Dependencies
+
+8.24 PDP-11 Dependent Features
+==============================
+
+* Menu:
+
+* PDP-11-Options::		Options
+* PDP-11-Pseudos::		Assembler Directives
+* PDP-11-Syntax::		DEC Syntax versus BSD Syntax
+* PDP-11-Mnemonics::		Instruction Naming
+* PDP-11-Synthetic::		Synthetic Instructions
+
+
+File: as.info,  Node: PDP-11-Options,  Next: PDP-11-Pseudos,  Up: PDP-11-Dependent
+
+8.24.1 Options
+--------------
+
+The PDP-11 version of `as' has a rich set of machine dependent options.
+
+8.24.1.1 Code Generation Options
+................................
+
+`-mpic | -mno-pic'
+     Generate position-independent (or position-dependent) code.
+
+     The default is to generate position-independent code.
+
+8.24.1.2 Instruction Set Extension Options
+..........................................
+
+These options enables or disables the use of extensions over the base
+line instruction set as introduced by the first PDP-11 CPU: the KA11.
+Most options come in two variants: a `-m'EXTENSION that enables
+EXTENSION, and a `-mno-'EXTENSION that disables EXTENSION.
+
+   The default is to enable all extensions.
+
+`-mall | -mall-extensions'
+     Enable all instruction set extensions.
+
+`-mno-extensions'
+     Disable all instruction set extensions.
+
+`-mcis | -mno-cis'
+     Enable (or disable) the use of the commercial instruction set,
+     which consists of these instructions: `ADDNI', `ADDN', `ADDPI',
+     `ADDP', `ASHNI', `ASHN', `ASHPI', `ASHP', `CMPCI', `CMPC',
+     `CMPNI', `CMPN', `CMPPI', `CMPP', `CVTLNI', `CVTLN', `CVTLPI',
+     `CVTLP', `CVTNLI', `CVTNL', `CVTNPI', `CVTNP', `CVTPLI', `CVTPL',
+     `CVTPNI', `CVTPN', `DIVPI', `DIVP', `L2DR', `L3DR', `LOCCI',
+     `LOCC', `MATCI', `MATC', `MOVCI', `MOVC', `MOVRCI', `MOVRC',
+     `MOVTCI', `MOVTC', `MULPI', `MULP', `SCANCI', `SCANC', `SKPCI',
+     `SKPC', `SPANCI', `SPANC', `SUBNI', `SUBN', `SUBPI', and `SUBP'.
+
+`-mcsm | -mno-csm'
+     Enable (or disable) the use of the `CSM' instruction.
+
+`-meis | -mno-eis'
+     Enable (or disable) the use of the extended instruction set, which
+     consists of these instructions: `ASHC', `ASH', `DIV', `MARK',
+     `MUL', `RTT', `SOB' `SXT', and `XOR'.
+
+`-mfis | -mkev11'
+`-mno-fis | -mno-kev11'
+     Enable (or disable) the use of the KEV11 floating-point
+     instructions: `FADD', `FDIV', `FMUL', and `FSUB'.
+
+`-mfpp | -mfpu | -mfp-11'
+`-mno-fpp | -mno-fpu | -mno-fp-11'
+     Enable (or disable) the use of FP-11 floating-point instructions:
+     `ABSF', `ADDF', `CFCC', `CLRF', `CMPF', `DIVF', `LDCFF', `LDCIF',
+     `LDEXP', `LDF', `LDFPS', `MODF', `MULF', `NEGF', `SETD', `SETF',
+     `SETI', `SETL', `STCFF', `STCFI', `STEXP', `STF', `STFPS', `STST',
+     `SUBF', and `TSTF'.
+
+`-mlimited-eis | -mno-limited-eis'
+     Enable (or disable) the use of the limited extended instruction
+     set: `MARK', `RTT', `SOB', `SXT', and `XOR'.
+
+     The -mno-limited-eis options also implies -mno-eis.
+
+`-mmfpt | -mno-mfpt'
+     Enable (or disable) the use of the `MFPT' instruction.
+
+`-mmultiproc | -mno-multiproc'
+     Enable (or disable) the use of multiprocessor instructions:
+     `TSTSET' and `WRTLCK'.
+
+`-mmxps | -mno-mxps'
+     Enable (or disable) the use of the `MFPS' and `MTPS' instructions.
+
+`-mspl | -mno-spl'
+     Enable (or disable) the use of the `SPL' instruction.
+
+     Enable (or disable) the use of the microcode instructions: `LDUB',
+     `MED', and `XFC'.
+
+8.24.1.3 CPU Model Options
+..........................
+
+These options enable the instruction set extensions supported by a
+particular CPU, and disables all other extensions.
+
+`-mka11'
+     KA11 CPU.  Base line instruction set only.
+
+`-mkb11'
+     KB11 CPU.  Enable extended instruction set and `SPL'.
+
+`-mkd11a'
+     KD11-A CPU.  Enable limited extended instruction set.
+
+`-mkd11b'
+     KD11-B CPU.  Base line instruction set only.
+
+`-mkd11d'
+     KD11-D CPU.  Base line instruction set only.
+
+`-mkd11e'
+     KD11-E CPU.  Enable extended instruction set, `MFPS', and `MTPS'.
+
+`-mkd11f | -mkd11h | -mkd11q'
+     KD11-F, KD11-H, or KD11-Q CPU.  Enable limited extended
+     instruction set, `MFPS', and `MTPS'.
+
+`-mkd11k'
+     KD11-K CPU.  Enable extended instruction set, `LDUB', `MED',
+     `MFPS', `MFPT', `MTPS', and `XFC'.
+
+`-mkd11z'
+     KD11-Z CPU.  Enable extended instruction set, `CSM', `MFPS',
+     `MFPT', `MTPS', and `SPL'.
+
+`-mf11'
+     F11 CPU.  Enable extended instruction set, `MFPS', `MFPT', and
+     `MTPS'.
+
+`-mj11'
+     J11 CPU.  Enable extended instruction set, `CSM', `MFPS', `MFPT',
+     `MTPS', `SPL', `TSTSET', and `WRTLCK'.
+
+`-mt11'
+     T11 CPU.  Enable limited extended instruction set, `MFPS', and
+     `MTPS'.
+
+8.24.1.4 Machine Model Options
+..............................
+
+These options enable the instruction set extensions supported by a
+particular machine model, and disables all other extensions.
+
+`-m11/03'
+     Same as `-mkd11f'.
+
+`-m11/04'
+     Same as `-mkd11d'.
+
+`-m11/05 | -m11/10'
+     Same as `-mkd11b'.
+
+`-m11/15 | -m11/20'
+     Same as `-mka11'.
+
+`-m11/21'
+     Same as `-mt11'.
+
+`-m11/23 | -m11/24'
+     Same as `-mf11'.
+
+`-m11/34'
+     Same as `-mkd11e'.
+
+`-m11/34a'
+     Ame as `-mkd11e' `-mfpp'.
+
+`-m11/35 | -m11/40'
+     Same as `-mkd11a'.
+
+`-m11/44'
+     Same as `-mkd11z'.
+
+`-m11/45 | -m11/50 | -m11/55 | -m11/70'
+     Same as `-mkb11'.
+
+`-m11/53 | -m11/73 | -m11/83 | -m11/84 | -m11/93 | -m11/94'
+     Same as `-mj11'.
+
+`-m11/60'
+     Same as `-mkd11k'.
+
+
+File: as.info,  Node: PDP-11-Pseudos,  Next: PDP-11-Syntax,  Prev: PDP-11-Options,  Up: PDP-11-Dependent
+
+8.24.2 Assembler Directives
+---------------------------
+
+The PDP-11 version of `as' has a few machine dependent assembler
+directives.
+
+`.bss'
+     Switch to the `bss' section.
+
+`.even'
+     Align the location counter to an even number.
+
+
+File: as.info,  Node: PDP-11-Syntax,  Next: PDP-11-Mnemonics,  Prev: PDP-11-Pseudos,  Up: PDP-11-Dependent
+
+8.24.3 PDP-11 Assembly Language Syntax
+--------------------------------------
+
+`as' supports both DEC syntax and BSD syntax.  The only difference is
+that in DEC syntax, a `#' character is used to denote an immediate
+constants, while in BSD syntax the character for this purpose is `$'.
+
+   eneral-purpose registers are named `r0' through `r7'.  Mnemonic
+alternatives for `r6' and `r7' are `sp' and `pc', respectively.
+
+   Floating-point registers are named `ac0' through `ac3', or
+alternatively `fr0' through `fr3'.
+
+   Comments are started with a `#' or a `/' character, and extend to
+the end of the line.  (FIXME: clash with immediates?)
+
+
+File: as.info,  Node: PDP-11-Mnemonics,  Next: PDP-11-Synthetic,  Prev: PDP-11-Syntax,  Up: PDP-11-Dependent
+
+8.24.4 Instruction Naming
+-------------------------
+
+Some instructions have alternative names.
+
+`BCC'
+     `BHIS'
+
+`BCS'
+     `BLO'
+
+`L2DR'
+     `L2D'
+
+`L3DR'
+     `L3D'
+
+`SYS'
+     `TRAP'
+
+
+File: as.info,  Node: PDP-11-Synthetic,  Prev: PDP-11-Mnemonics,  Up: PDP-11-Dependent
+
+8.24.5 Synthetic Instructions
+-----------------------------
+
+The `JBR' and `J'CC synthetic instructions are not supported yet.
+
+
+File: as.info,  Node: PJ-Dependent,  Next: PPC-Dependent,  Prev: PDP-11-Dependent,  Up: Machine Dependencies
+
+8.25 picoJava Dependent Features
+================================
+
+* Menu:
+
+* PJ Options::              Options
+
+
+File: as.info,  Node: PJ Options,  Up: PJ-Dependent
+
+8.25.1 Options
+--------------
+
+`as' has two additional command-line options for the picoJava
+architecture.
+`-ml'
+     This option selects little endian data output.
+
+`-mb'
+     This option selects big endian data output.
+
+
+File: as.info,  Node: PPC-Dependent,  Next: Sparc-Dependent,  Prev: PJ-Dependent,  Up: Machine Dependencies
+
+8.26 PowerPC Dependent Features
+===============================
+
+* Menu:
+
+* PowerPC-Opts::                Options
+* PowerPC-Pseudo::              PowerPC Assembler Directives
+
+
+File: as.info,  Node: PowerPC-Opts,  Next: PowerPC-Pseudo,  Up: PPC-Dependent
+
+8.26.1 Options
+--------------
+
+The PowerPC chip family includes several successive levels, using the
+same core instruction set, but including a few additional instructions
+at each level.  There are exceptions to this however.  For details on
+what instructions each variant supports, please see the chip's
+architecture reference manual.
+
+   The following table lists all available PowerPC options.
+
+`-mpwrx | -mpwr2'
+     Generate code for POWER/2 (RIOS2).
+
+`-mpwr'
+     Generate code for POWER (RIOS1)
+
+`-m601'
+     Generate code for PowerPC 601.
+
+`-mppc, -mppc32, -m603, -m604'
+     Generate code for PowerPC 603/604.
+
+`-m403, -m405'
+     Generate code for PowerPC 403/405.
+
+`-m440'
+     Generate code for PowerPC 440.  BookE and some 405 instructions.
+
+`-m7400, -m7410, -m7450, -m7455'
+     Generate code for PowerPC 7400/7410/7450/7455.
+
+`-mppc64, -m620'
+     Generate code for PowerPC 620/625/630.
+
+`-mppc64bridge'
+     Generate code for PowerPC 64, including bridge insns.
+
+`-mbooke64'
+     Generate code for 64-bit BookE.
+
+`-mbooke, mbooke32'
+     Generate code for 32-bit BookE.
+
+`-maltivec'
+     Generate code for processors with AltiVec instructions.
+
+`-mpower4'
+     Generate code for Power4 architecture.
+
+`-mcom'
+     Generate code Power/PowerPC common instructions.
+
+`-many'
+     Generate code for any architecture (PWR/PWRX/PPC).
+
+`-mregnames'
+     Allow symbolic names for registers.
+
+`-mno-regnames'
+     Do not allow symbolic names for registers.
+
+`-mrelocatable'
+     Support for GCC's -mrelocatble option.
+
+`-mrelocatable-lib'
+     Support for GCC's -mrelocatble-lib option.
+
+`-memb'
+     Set PPC_EMB bit in ELF flags.
+
+`-mlittle, -mlittle-endian'
+     Generate code for a little endian machine.
+
+`-mbig, -mbig-endian'
+     Generate code for a big endian machine.
+
+`-msolaris'
+     Generate code for Solaris.
+
+`-mno-solaris'
+     Do not generate code for Solaris.
+
+
+File: as.info,  Node: PowerPC-Pseudo,  Prev: PowerPC-Opts,  Up: PPC-Dependent
+
+8.26.2 PowerPC Assembler Directives
+-----------------------------------
+
+A number of assembler directives are available for PowerPC.  The
+following table is far from complete.
+
+`.machine "string"'
+     This directive allows you to change the machine for which code is
+     generated.  `"string"' may be any of the -m cpu selection options
+     (without the -m) enclosed in double quotes, `"push"', or `"pop"'.
+     `.machine "push"' saves the currently selected cpu, which may be
+     restored with `.machine "pop"'.
+
+
+File: as.info,  Node: SH-Dependent,  Next: SH64-Dependent,  Prev: MSP430-Dependent,  Up: Machine Dependencies
+
+8.27 Renesas / SuperH SH Dependent Features
+===========================================
+
+* Menu:
+
+* SH Options::              Options
+* SH Syntax::               Syntax
+* SH Floating Point::       Floating Point
+* SH Directives::           SH Machine Directives
+* SH Opcodes::              Opcodes
+
+
+File: as.info,  Node: SH Options,  Next: SH Syntax,  Up: SH-Dependent
+
+8.27.1 Options
+--------------
+
+`as' has following command-line options for the Renesas (formerly
+Hitachi) / SuperH SH family.
+
+`-little'
+     Generate little endian code.
+
+`-big'
+     Generate big endian code.
+
+`-relax'
+     Alter jump instructions for long displacements.
+
+`-small'
+     Align sections to 4 byte boundaries, not 16.
+
+`-dsp'
+     Enable sh-dsp insns, and disable sh3e / sh4 insns.
+
+`-renesas'
+     Disable optimization with section symbol for compatibility with
+     Renesas assembler.
+
+`-isa=sh4 | sh4a'
+     Specify the sh4 or sh4a instruction set.
+
+`-isa=dsp'
+     Enable sh-dsp insns, and disable sh3e / sh4 insns.
+
+`-isa=fp'
+     Enable sh2e, sh3e, sh4, and sh4a insn sets.
+
+`-isa=all'
+     Enable sh1, sh2, sh2e, sh3, sh3e, sh4, sh4a, and sh-dsp insn sets.
+
+
+
+File: as.info,  Node: SH Syntax,  Next: SH Floating Point,  Prev: SH Options,  Up: SH-Dependent
+
+8.27.2 Syntax
+-------------
+
+* Menu:
+
+* SH-Chars::                Special Characters
+* SH-Regs::                 Register Names
+* SH-Addressing::           Addressing Modes
+
+
+File: as.info,  Node: SH-Chars,  Next: SH-Regs,  Up: SH Syntax
+
+8.27.2.1 Special Characters
+...........................
+
+`!' is the line comment character.
+
+   You can use `;' instead of a newline to separate statements.
+
+   Since `$' has no special meaning, you may use it in symbol names.
+
+
+File: as.info,  Node: SH-Regs,  Next: SH-Addressing,  Prev: SH-Chars,  Up: SH Syntax
+
+8.27.2.2 Register Names
+.......................
+
+You can use the predefined symbols `r0', `r1', `r2', `r3', `r4', `r5',
+`r6', `r7', `r8', `r9', `r10', `r11', `r12', `r13', `r14', and `r15' to
+refer to the SH registers.
+
+   The SH also has these control registers:
+
+`pr'
+     procedure register (holds return address)
+
+`pc'
+     program counter
+
+`mach'
+`macl'
+     high and low multiply accumulator registers
+
+`sr'
+     status register
+
+`gbr'
+     global base register
+
+`vbr'
+     vector base register (for interrupt vectors)
+
+
+File: as.info,  Node: SH-Addressing,  Prev: SH-Regs,  Up: SH Syntax
+
+8.27.2.3 Addressing Modes
+.........................
+
+`as' understands the following addressing modes for the SH.  `RN' in
+the following refers to any of the numbered registers, but _not_ the
+control registers.
+
+`RN'
+     Register direct
+
+`@RN'
+     Register indirect
+
+`@-RN'
+     Register indirect with pre-decrement
+
+`@RN+'
+     Register indirect with post-increment
+
+`@(DISP, RN)'
+     Register indirect with displacement
+
+`@(R0, RN)'
+     Register indexed
+
+`@(DISP, GBR)'
+     `GBR' offset
+
+`@(R0, GBR)'
+     GBR indexed
+
+`ADDR'
+`@(DISP, PC)'
+     PC relative address (for branch or for addressing memory).  The
+     `as' implementation allows you to use the simpler form ADDR
+     anywhere a PC relative address is called for; the alternate form
+     is supported for compatibility with other assemblers.
+
+`#IMM'
+     Immediate data
+
+
+File: as.info,  Node: SH Floating Point,  Next: SH Directives,  Prev: SH Syntax,  Up: SH-Dependent
+
+8.27.3 Floating Point
+---------------------
+
+SH2E, SH3E and SH4 groups have on-chip floating-point unit (FPU). Other
+SH groups can use `.float' directive to generate IEEE floating-point
+numbers.
+
+   SH2E and SH3E support single-precision floating point calculations as
+well as entirely PCAPI compatible emulation of double-precision
+floating point calculations. SH2E and SH3E instructions are a subset of
+the floating point calculations conforming to the IEEE754 standard.
+
+   In addition to single-precision and double-precision floating-point
+operation capability, the on-chip FPU of SH4 has a 128-bit graphic
+engine that enables 32-bit floating-point data to be processed 128 bits
+at a time. It also supports 4 * 4 array operations and inner product
+operations. Also, a superscalar architecture is employed that enables
+simultaneous execution of two instructions (including FPU
+instructions), providing performance of up to twice that of
+conventional architectures at the same frequency.
+
+
+File: as.info,  Node: SH Directives,  Next: SH Opcodes,  Prev: SH Floating Point,  Up: SH-Dependent
+
+8.27.4 SH Machine Directives
+----------------------------
+
+`uaword'
+`ualong'
+     `as' will issue a warning when a misaligned `.word' or `.long'
+     directive is used.  You may use `.uaword' or `.ualong' to indicate
+     that the value is intentionally misaligned.
+
+
+File: as.info,  Node: SH Opcodes,  Prev: SH Directives,  Up: SH-Dependent
+
+8.27.5 Opcodes
+--------------
+
+For detailed information on the SH machine instruction set, see
+`SH-Microcomputer User's Manual' (Renesas) or `SH-4 32-bit CPU Core
+Architecture' (SuperH) and `SuperH (SH) 64-Bit RISC Series' (SuperH).
+
+   `as' implements all the standard SH opcodes.  No additional
+pseudo-instructions are needed on this family.  Note, however, that
+because `as' supports a simpler form of PC-relative addressing, you may
+simply write (for example)
+
+     mov.l  bar,r0
+
+where other assemblers might require an explicit displacement to `bar'
+from the program counter:
+
+     mov.l  @(DISP, PC)
+
+   Here is a summary of SH opcodes:
+
+     Legend:
+     Rn        a numbered register
+     Rm        another numbered register
+     #imm      immediate data
+     disp      displacement
+     disp8     8-bit displacement
+     disp12    12-bit displacement
+
+     add #imm,Rn                    lds.l @Rn+,PR
+     add Rm,Rn                      mac.w @Rm+,@Rn+
+     addc Rm,Rn                     mov #imm,Rn
+     addv Rm,Rn                     mov Rm,Rn
+     and #imm,R0                    mov.b Rm,@(R0,Rn)
+     and Rm,Rn                      mov.b Rm,@-Rn
+     and.b #imm,@(R0,GBR)           mov.b Rm,@Rn
+     bf disp8                       mov.b @(disp,Rm),R0
+     bra disp12                     mov.b @(disp,GBR),R0
+     bsr disp12                     mov.b @(R0,Rm),Rn
+     bt disp8                       mov.b @Rm+,Rn
+     clrmac                         mov.b @Rm,Rn
+     clrt                           mov.b R0,@(disp,Rm)
+     cmp/eq #imm,R0                 mov.b R0,@(disp,GBR)
+     cmp/eq Rm,Rn                   mov.l Rm,@(disp,Rn)
+     cmp/ge Rm,Rn                   mov.l Rm,@(R0,Rn)
+     cmp/gt Rm,Rn                   mov.l Rm,@-Rn
+     cmp/hi Rm,Rn                   mov.l Rm,@Rn
+     cmp/hs Rm,Rn                   mov.l @(disp,Rn),Rm
+     cmp/pl Rn                      mov.l @(disp,GBR),R0
+     cmp/pz Rn                      mov.l @(disp,PC),Rn
+     cmp/str Rm,Rn                  mov.l @(R0,Rm),Rn
+     div0s Rm,Rn                    mov.l @Rm+,Rn
+     div0u                          mov.l @Rm,Rn
+     div1 Rm,Rn                     mov.l R0,@(disp,GBR)
+     exts.b Rm,Rn                   mov.w Rm,@(R0,Rn)
+     exts.w Rm,Rn                   mov.w Rm,@-Rn
+     extu.b Rm,Rn                   mov.w Rm,@Rn
+     extu.w Rm,Rn                   mov.w @(disp,Rm),R0
+     jmp @Rn                        mov.w @(disp,GBR),R0
+     jsr @Rn                        mov.w @(disp,PC),Rn
+     ldc Rn,GBR                     mov.w @(R0,Rm),Rn
+     ldc Rn,SR                      mov.w @Rm+,Rn
+     ldc Rn,VBR                     mov.w @Rm,Rn
+     ldc.l @Rn+,GBR                 mov.w R0,@(disp,Rm)
+     ldc.l @Rn+,SR                  mov.w R0,@(disp,GBR)
+     ldc.l @Rn+,VBR                 mova @(disp,PC),R0
+     lds Rn,MACH                    movt Rn
+     lds Rn,MACL                    muls Rm,Rn
+     lds Rn,PR                      mulu Rm,Rn
+     lds.l @Rn+,MACH                neg Rm,Rn
+     lds.l @Rn+,MACL                negc Rm,Rn
+
+     nop                            stc VBR,Rn
+     not Rm,Rn                      stc.l GBR,@-Rn
+     or #imm,R0                     stc.l SR,@-Rn
+     or Rm,Rn                       stc.l VBR,@-Rn
+     or.b #imm,@(R0,GBR)            sts MACH,Rn
+     rotcl Rn                       sts MACL,Rn
+     rotcr Rn                       sts PR,Rn
+     rotl Rn                        sts.l MACH,@-Rn
+     rotr Rn                        sts.l MACL,@-Rn
+     rte                            sts.l PR,@-Rn
+     rts                            sub Rm,Rn
+     sett                           subc Rm,Rn
+     shal Rn                        subv Rm,Rn
+     shar Rn                        swap.b Rm,Rn
+     shll Rn                        swap.w Rm,Rn
+     shll16 Rn                      tas.b @Rn
+     shll2 Rn                       trapa #imm
+     shll8 Rn                       tst #imm,R0
+     shlr Rn                        tst Rm,Rn
+     shlr16 Rn                      tst.b #imm,@(R0,GBR)
+     shlr2 Rn                       xor #imm,R0
+     shlr8 Rn                       xor Rm,Rn
+     sleep                          xor.b #imm,@(R0,GBR)
+     stc GBR,Rn                     xtrct Rm,Rn
+     stc SR,Rn
+
+
+File: as.info,  Node: SH64-Dependent,  Next: PDP-11-Dependent,  Prev: SH-Dependent,  Up: Machine Dependencies
+
+8.28 SuperH SH64 Dependent Features
+===================================
+
+* Menu:
+
+* SH64 Options::              Options
+* SH64 Syntax::               Syntax
+* SH64 Directives::           SH64 Machine Directives
+* SH64 Opcodes::              Opcodes
+
+
+File: as.info,  Node: SH64 Options,  Next: SH64 Syntax,  Up: SH64-Dependent
+
+8.28.1 Options
+--------------
+
+`-isa=sh4 | sh4a'
+     Specify the sh4 or sh4a instruction set.
+
+`-isa=dsp'
+     Enable sh-dsp insns, and disable sh3e / sh4 insns.
+
+`-isa=fp'
+     Enable sh2e, sh3e, sh4, and sh4a insn sets.
+
+`-isa=all'
+     Enable sh1, sh2, sh2e, sh3, sh3e, sh4, sh4a, and sh-dsp insn sets.
+
+`-isa=shmedia | -isa=shcompact'
+     Specify the default instruction set.  `SHmedia' specifies the
+     32-bit opcodes, and `SHcompact' specifies the 16-bit opcodes
+     compatible with previous SH families.  The default depends on the
+     ABI selected; the default for the 64-bit ABI is SHmedia, and the
+     default for the 32-bit ABI is SHcompact.  If neither the ABI nor
+     the ISA is specified, the default is 32-bit SHcompact.
+
+     Note that the `.mode' pseudo-op is not permitted if the ISA is not
+     specified on the command line.
+
+`-abi=32 | -abi=64'
+     Specify the default ABI.  If the ISA is specified and the ABI is
+     not, the default ABI depends on the ISA, with SHmedia defaulting
+     to 64-bit and SHcompact defaulting to 32-bit.
+
+     Note that the `.abi' pseudo-op is not permitted if the ABI is not
+     specified on the command line.  When the ABI is specified on the
+     command line, any `.abi' pseudo-ops in the source must match it.
+
+`-shcompact-const-crange'
+     Emit code-range descriptors for constants in SHcompact code
+     sections.
+
+`-no-mix'
+     Disallow SHmedia code in the same section as constants and
+     SHcompact code.
+
+`-no-expand'
+     Do not expand MOVI, PT, PTA or PTB instructions.
+
+`-expand-pt32'
+     With -abi=64, expand PT, PTA and PTB instructions to 32 bits only.
+
+
+
+File: as.info,  Node: SH64 Syntax,  Next: SH64 Directives,  Prev: SH64 Options,  Up: SH64-Dependent
+
+8.28.2 Syntax
+-------------
+
+* Menu:
+
+* SH64-Chars::                Special Characters
+* SH64-Regs::                 Register Names
+* SH64-Addressing::           Addressing Modes
+
+
+File: as.info,  Node: SH64-Chars,  Next: SH64-Regs,  Up: SH64 Syntax
+
+8.28.2.1 Special Characters
+...........................
+
+`!' is the line comment character.
+
+   You can use `;' instead of a newline to separate statements.
+
+   Since `$' has no special meaning, you may use it in symbol names.
+
+
+File: as.info,  Node: SH64-Regs,  Next: SH64-Addressing,  Prev: SH64-Chars,  Up: SH64 Syntax
+
+8.28.2.2 Register Names
+.......................
+
+You can use the predefined symbols `r0' through `r63' to refer to the
+SH64 general registers, `cr0' through `cr63' for control registers,
+`tr0' through `tr7' for target address registers, `fr0' through `fr63'
+for single-precision floating point registers, `dr0' through `dr62'
+(even numbered registers only) for double-precision floating point
+registers, `fv0' through `fv60' (multiples of four only) for
+single-precision floating point vectors, `fp0' through `fp62' (even
+numbered registers only) for single-precision floating point pairs,
+`mtrx0' through `mtrx48' (multiples of 16 only) for 4x4 matrices of
+single-precision floating point registers, `pc' for the program
+counter, and `fpscr' for the floating point status and control register.
+
+   You can also refer to the control registers by the mnemonics `sr',
+`ssr', `pssr', `intevt', `expevt', `pexpevt', `tra', `spc', `pspc',
+`resvec', `vbr', `tea', `dcr', `kcr0', `kcr1', `ctc', and `usr'.
+
+
+File: as.info,  Node: SH64-Addressing,  Prev: SH64-Regs,  Up: SH64 Syntax
+
+8.28.2.3 Addressing Modes
+.........................
+
+SH64 operands consist of either a register or immediate value.  The
+immediate value can be a constant or label reference (or portion of a
+label reference), as in this example:
+
+     	movi	4,r2
+     	pt	function, tr4
+     	movi	(function >> 16) & 65535,r0
+     	shori	function & 65535, r0
+     	ld.l	r0,4,r0
+
+   Instruction label references can reference labels in either SHmedia
+or SHcompact.  To differentiate between the two, labels in SHmedia
+sections will always have the least significant bit set (i.e. they will
+be odd), which SHcompact labels will have the least significant bit
+reset (i.e. they will be even).  If you need to reference the actual
+address of a label, you can use the `datalabel' modifier, as in this
+example:
+
+     	.long	function
+     	.long	datalabel function
+
+   In that example, the first longword may or may not have the least
+significant bit set depending on whether the label is an SHmedia label
+or an SHcompact label.  The second longword will be the actual address
+of the label, regardless of what type of label it is.
+
+
+File: as.info,  Node: SH64 Directives,  Next: SH64 Opcodes,  Prev: SH64 Syntax,  Up: SH64-Dependent
+
+8.28.3 SH64 Machine Directives
+------------------------------
+
+In addition to the SH directives, the SH64 provides the following
+directives:
+
+`.mode [shmedia|shcompact]'
+`.isa [shmedia|shcompact]'
+     Specify the ISA for the following instructions (the two directives
+     are equivalent).  Note that programs such as `objdump' rely on
+     symbolic labels to determine when such mode switches occur (by
+     checking the least significant bit of the label's address), so
+     such mode/isa changes should always be followed by a label (in
+     practice, this is true anyway).  Note that you cannot use these
+     directives if you didn't specify an ISA on the command line.
+
+`.abi [32|64]'
+     Specify the ABI for the following instructions.  Note that you
+     cannot use this directive unless you specified an ABI on the
+     command line, and the ABIs specified must match.
+
+`.uaquad'
+     Like .uaword and .ualong, this allows you to specify an
+     intentionally unaligned quadword (64 bit word).
+
+
+
+File: as.info,  Node: SH64 Opcodes,  Prev: SH64 Directives,  Up: SH64-Dependent
+
+8.28.4 Opcodes
+--------------
+
+For detailed information on the SH64 machine instruction set, see
+`SuperH 64 bit RISC Series Architecture Manual' (SuperH, Inc.).
+
+   `as' implements all the standard SH64 opcodes.  In addition, the
+following pseudo-opcodes may be expanded into one or more alternate
+opcodes:
+
+`movi'
+     If the value doesn't fit into a standard `movi' opcode, `as' will
+     replace the `movi' with a sequence of `movi' and `shori' opcodes.
+
+`pt'
+     This expands to a sequence of `movi' and `shori' opcode, followed
+     by a `ptrel' opcode, or to a `pta' or `ptb' opcode, depending on
+     the label referenced.
+
+
+
+File: as.info,  Node: Sparc-Dependent,  Next: TIC54X-Dependent,  Prev: PPC-Dependent,  Up: Machine Dependencies
+
+8.29 SPARC Dependent Features
+=============================
+
+* Menu:
+
+* Sparc-Opts::                  Options
+* Sparc-Aligned-Data::		Option to enforce aligned data
+* Sparc-Float::                 Floating Point
+* Sparc-Directives::            Sparc Machine Directives
+
+
+File: as.info,  Node: Sparc-Opts,  Next: Sparc-Aligned-Data,  Up: Sparc-Dependent
+
+8.29.1 Options
+--------------
+
+The SPARC chip family includes several successive levels, using the same
+core instruction set, but including a few additional instructions at
+each level.  There are exceptions to this however.  For details on what
+instructions each variant supports, please see the chip's architecture
+reference manual.
+
+   By default, `as' assumes the core instruction set (SPARC v6), but
+"bumps" the architecture level as needed: it switches to successively
+higher architectures as it encounters instructions that only exist in
+the higher levels.
+
+   If not configured for SPARC v9 (`sparc64-*-*') GAS will not bump
+passed sparclite by default, an option must be passed to enable the v9
+instructions.
+
+   GAS treats sparclite as being compatible with v8, unless an
+architecture is explicitly requested.  SPARC v9 is always incompatible
+with sparclite.
+
+`-Av6 | -Av7 | -Av8 | -Asparclet | -Asparclite'
+`-Av8plus | -Av8plusa | -Av9 | -Av9a'
+     Use one of the `-A' options to select one of the SPARC
+     architectures explicitly.  If you select an architecture
+     explicitly, `as' reports a fatal error if it encounters an
+     instruction or feature requiring an incompatible or higher level.
+
+     `-Av8plus' and `-Av8plusa' select a 32 bit environment.
+
+     `-Av9' and `-Av9a' select a 64 bit environment and are not
+     available unless GAS is explicitly configured with 64 bit
+     environment support.
+
+     `-Av8plusa' and `-Av9a' enable the SPARC V9 instruction set with
+     UltraSPARC extensions.
+
+`-xarch=v8plus | -xarch=v8plusa'
+     For compatibility with the Solaris v9 assembler.  These options are
+     equivalent to -Av8plus and -Av8plusa, respectively.
+
+`-bump'
+     Warn whenever it is necessary to switch to another level.  If an
+     architecture level is explicitly requested, GAS will not issue
+     warnings until that level is reached, and will then bump the level
+     as required (except between incompatible levels).
+
+`-32 | -64'
+     Select the word size, either 32 bits or 64 bits.  These options
+     are only available with the ELF object file format, and require
+     that the necessary BFD support has been included.
+
+
+File: as.info,  Node: Sparc-Aligned-Data,  Next: Sparc-Float,  Prev: Sparc-Opts,  Up: Sparc-Dependent
+
+8.29.2 Enforcing aligned data
+-----------------------------
+
+SPARC GAS normally permits data to be misaligned.  For example, it
+permits the `.long' pseudo-op to be used on a byte boundary.  However,
+the native SunOS and Solaris assemblers issue an error when they see
+misaligned data.
+
+   You can use the `--enforce-aligned-data' option to make SPARC GAS
+also issue an error about misaligned data, just as the SunOS and Solaris
+assemblers do.
+
+   The `--enforce-aligned-data' option is not the default because gcc
+issues misaligned data pseudo-ops when it initializes certain packed
+data structures (structures defined using the `packed' attribute).  You
+may have to assemble with GAS in order to initialize packed data
+structures in your own code.
+
+
+File: as.info,  Node: Sparc-Float,  Next: Sparc-Directives,  Prev: Sparc-Aligned-Data,  Up: Sparc-Dependent
+
+8.29.3 Floating Point
+---------------------
+
+The Sparc uses IEEE floating-point numbers.
+
+
+File: as.info,  Node: Sparc-Directives,  Prev: Sparc-Float,  Up: Sparc-Dependent
+
+8.29.4 Sparc Machine Directives
+-------------------------------
+
+The Sparc version of `as' supports the following additional machine
+directives:
+
+`.align'
+     This must be followed by the desired alignment in bytes.
+
+`.common'
+     This must be followed by a symbol name, a positive number, and
+     `"bss"'.  This behaves somewhat like `.comm', but the syntax is
+     different.
+
+`.half'
+     This is functionally identical to `.short'.
+
+`.nword'
+     On the Sparc, the `.nword' directive produces native word sized
+     value, ie. if assembling with -32 it is equivalent to `.word', if
+     assembling with -64 it is equivalent to `.xword'.
+
+`.proc'
+     This directive is ignored.  Any text following it on the same line
+     is also ignored.
+
+`.register'
+     This directive declares use of a global application or system
+     register.  It must be followed by a register name %g2, %g3, %g6 or
+     %g7, comma and the symbol name for that register.  If symbol name
+     is `#scratch', it is a scratch register, if it is `#ignore', it
+     just suppresses any errors about using undeclared global register,
+     but does not emit any information about it into the object file.
+     This can be useful e.g. if you save the register before use and
+     restore it after.
+
+`.reserve'
+     This must be followed by a symbol name, a positive number, and
+     `"bss"'.  This behaves somewhat like `.lcomm', but the syntax is
+     different.
+
+`.seg'
+     This must be followed by `"text"', `"data"', or `"data1"'.  It
+     behaves like `.text', `.data', or `.data 1'.
+
+`.skip'
+     This is functionally identical to the `.space' directive.
+
+`.word'
+     On the Sparc, the `.word' directive produces 32 bit values,
+     instead of the 16 bit values it produces on many other machines.
+
+`.xword'
+     On the Sparc V9 processor, the `.xword' directive produces 64 bit
+     values.
+
+
+File: as.info,  Node: TIC54X-Dependent,  Next: V850-Dependent,  Prev: Sparc-Dependent,  Up: Machine Dependencies
+
+8.30 TIC54X Dependent Features
+==============================
+
+* Menu:
+
+* TIC54X-Opts::              Command-line Options
+* TIC54X-Block::             Blocking
+* TIC54X-Env::               Environment Settings
+* TIC54X-Constants::         Constants Syntax
+* TIC54X-Subsyms::           String Substitution
+* TIC54X-Locals::            Local Label Syntax
+* TIC54X-Builtins::          Builtin Assembler Math Functions
+* TIC54X-Ext::               Extended Addressing Support
+* TIC54X-Directives::        Directives
+* TIC54X-Macros::            Macro Features
+* TIC54X-MMRegs::            Memory-mapped Registers
+
+
+File: as.info,  Node: TIC54X-Opts,  Next: TIC54X-Block,  Up: TIC54X-Dependent
+
+8.30.1 Options
+--------------
+
+The TMS320C54x version of `as' has a few machine-dependent options.
+
+   You can use the `-mfar-mode' option to enable extended addressing
+mode.  All addresses will be assumed to be > 16 bits, and the
+appropriate relocation types will be used.  This option is equivalent
+to using the `.far_mode' directive in the assembly code.  If you do not
+use the `-mfar-mode' option, all references will be assumed to be 16
+bits.  This option may be abbreviated to `-mf'.
+
+   You can use the `-mcpu' option to specify a particular CPU.  This
+option is equivalent to using the `.version' directive in the assembly
+code.  For recognized CPU codes, see *Note `.version':
+TIC54X-Directives.  The default CPU version is `542'.
+
+   You can use the `-merrors-to-file' option to redirect error output
+to a file (this provided for those deficient environments which don't
+provide adequate output redirection).  This option may be abbreviated to
+`-me'.
+
+
+File: as.info,  Node: TIC54X-Block,  Next: TIC54X-Env,  Prev: TIC54X-Opts,  Up: TIC54X-Dependent
+
+8.30.2 Blocking
+---------------
+
+A blocked section or memory block is guaranteed not to cross the
+blocking boundary (usually a page, or 128 words) if it is smaller than
+the blocking size, or to start on a page boundary if it is larger than
+the blocking size.
+
+
+File: as.info,  Node: TIC54X-Env,  Next: TIC54X-Constants,  Prev: TIC54X-Block,  Up: TIC54X-Dependent
+
+8.30.3 Environment Settings
+---------------------------
+
+`C54XDSP_DIR' and `A_DIR' are semicolon-separated paths which are added
+to the list of directories normally searched for source and include
+files.  `C54XDSP_DIR' will override `A_DIR'.
+
+
+File: as.info,  Node: TIC54X-Constants,  Next: TIC54X-Subsyms,  Prev: TIC54X-Env,  Up: TIC54X-Dependent
+
+8.30.4 Constants Syntax
+-----------------------
+
+The TIC54X version of `as' allows the following additional constant
+formats, using a suffix to indicate the radix:
+
+     Binary                  `000000B, 011000b'
+     Octal                   `10Q, 224q'
+     Hexadecimal             `45h, 0FH'
+
+
+File: as.info,  Node: TIC54X-Subsyms,  Next: TIC54X-Locals,  Prev: TIC54X-Constants,  Up: TIC54X-Dependent
+
+8.30.5 String Substitution
+--------------------------
+
+A subset of allowable symbols (which we'll call subsyms) may be assigned
+arbitrary string values.  This is roughly equivalent to C preprocessor
+#define macros.  When `as' encounters one of these symbols, the symbol
+is replaced in the input stream by its string value.  Subsym names
+*must* begin with a letter.
+
+   Subsyms may be defined using the `.asg' and `.eval' directives
+(*Note `.asg': TIC54X-Directives, *Note `.eval': TIC54X-Directives.
+
+   Expansion is recursive until a previously encountered symbol is
+seen, at which point substitution stops.
+
+   In this example, x is replaced with SYM2; SYM2 is replaced with
+SYM1, and SYM1 is replaced with x.  At this point, x has already been
+encountered and the substitution stops.
+
+      .asg   "x",SYM1
+      .asg   "SYM1",SYM2
+      .asg   "SYM2",x
+      add    x,a             ; final code assembled is "add  x, a"
+
+   Macro parameters are converted to subsyms; a side effect of this is
+the normal `as' '\ARG' dereferencing syntax is unnecessary.  Subsyms
+defined within a macro will have global scope, unless the `.var'
+directive is used to identify the subsym as a local macro variable
+*note `.var': TIC54X-Directives.
+
+   Substitution may be forced in situations where replacement might be
+ambiguous by placing colons on either side of the subsym.  The following
+code:
+
+      .eval  "10",x
+     LAB:X:  add     #x, a
+
+   When assembled becomes:
+
+     LAB10  add     #10, a
+
+   Smaller parts of the string assigned to a subsym may be accessed with
+the following syntax:
+
+``:SYMBOL(CHAR_INDEX):''
+     Evaluates to a single-character string, the character at
+     CHAR_INDEX.
+
+``:SYMBOL(START,LENGTH):''
+     Evaluates to a substring of SYMBOL beginning at START with length
+     LENGTH.
+
+
+File: as.info,  Node: TIC54X-Locals,  Next: TIC54X-Builtins,  Prev: TIC54X-Subsyms,  Up: TIC54X-Dependent
+
+8.30.6 Local Labels
+-------------------
+
+Local labels may be defined in two ways:
+
+   * $N, where N is a decimal number between 0 and 9
+
+   * LABEL?, where LABEL is any legal symbol name.
+
+   Local labels thus defined may be redefined or automatically
+generated.  The scope of a local label is based on when it may be
+undefined or reset.  This happens when one of the following situations
+is encountered:
+
+   * .newblock directive *note `.newblock': TIC54X-Directives.
+
+   * The current section is changed (.sect, .text, or .data)
+
+   * Entering or leaving an included file
+
+   * The macro scope where the label was defined is exited
+
+
+File: as.info,  Node: TIC54X-Builtins,  Next: TIC54X-Ext,  Prev: TIC54X-Locals,  Up: TIC54X-Dependent
+
+8.30.7 Math Builtins
+--------------------
+
+The following built-in functions may be used to generate a
+floating-point value.  All return a floating-point value except `$cvi',
+`$int', and `$sgn', which return an integer value.
+
+``$acos(EXPR)''
+     Returns the floating point arccosine of EXPR.
+
+``$asin(EXPR)''
+     Returns the floating point arcsine of EXPR.
+
+``$atan(EXPR)''
+     Returns the floating point arctangent of EXPR.
+
+``$atan2(EXPR1,EXPR2)''
+     Returns the floating point arctangent of EXPR1 / EXPR2.
+
+``$ceil(EXPR)''
+     Returns the smallest integer not less than EXPR as floating point.
+
+``$cosh(EXPR)''
+     Returns the floating point hyperbolic cosine of EXPR.
+
+``$cos(EXPR)''
+     Returns the floating point cosine of EXPR.
+
+``$cvf(EXPR)''
+     Returns the integer value EXPR converted to floating-point.
+
+``$cvi(EXPR)''
+     Returns the floating point value EXPR converted to integer.
+
+``$exp(EXPR)''
+     Returns the floating point value e ^ EXPR.
+
+``$fabs(EXPR)''
+     Returns the floating point absolute value of EXPR.
+
+``$floor(EXPR)''
+     Returns the largest integer that is not greater than EXPR as
+     floating point.
+
+``$fmod(EXPR1,EXPR2)''
+     Returns the floating point remainder of EXPR1 / EXPR2.
+
+``$int(EXPR)''
+     Returns 1 if EXPR evaluates to an integer, zero otherwise.
+
+``$ldexp(EXPR1,EXPR2)''
+     Returns the floating point value EXPR1 * 2 ^ EXPR2.
+
+``$log10(EXPR)''
+     Returns the base 10 logarithm of EXPR.
+
+``$log(EXPR)''
+     Returns the natural logarithm of EXPR.
+
+``$max(EXPR1,EXPR2)''
+     Returns the floating point maximum of EXPR1 and EXPR2.
+
+``$min(EXPR1,EXPR2)''
+     Returns the floating point minimum of EXPR1 and EXPR2.
+
+``$pow(EXPR1,EXPR2)''
+     Returns the floating point value EXPR1 ^ EXPR2.
+
+``$round(EXPR)''
+     Returns the nearest integer to EXPR as a floating point number.
+
+``$sgn(EXPR)''
+     Returns -1, 0, or 1 based on the sign of EXPR.
+
+``$sin(EXPR)''
+     Returns the floating point sine of EXPR.
+
+``$sinh(EXPR)''
+     Returns the floating point hyperbolic sine of EXPR.
+
+``$sqrt(EXPR)''
+     Returns the floating point square root of EXPR.
+
+``$tan(EXPR)''
+     Returns the floating point tangent of EXPR.
+
+``$tanh(EXPR)''
+     Returns the floating point hyperbolic tangent of EXPR.
+
+``$trunc(EXPR)''
+     Returns the integer value of EXPR truncated towards zero as
+     floating point.
+
+
+
+File: as.info,  Node: TIC54X-Ext,  Next: TIC54X-Directives,  Prev: TIC54X-Builtins,  Up: TIC54X-Dependent
+
+8.30.8 Extended Addressing
+--------------------------
+
+The `LDX' pseudo-op is provided for loading the extended addressing bits
+of a label or address.  For example, if an address `_label' resides in
+extended program memory, the value of `_label' may be loaded as follows:
+      ldx     #_label,16,a    ; loads extended bits of _label
+      or      #_label,a       ; loads lower 16 bits of _label
+      bacc    a               ; full address is in accumulator A
+
+
+File: as.info,  Node: TIC54X-Directives,  Next: TIC54X-Macros,  Prev: TIC54X-Ext,  Up: TIC54X-Dependent
+
+8.30.9 Directives
+-----------------
+
+`.align [SIZE]'
+`.even'
+     Align the section program counter on the next boundary, based on
+     SIZE.  SIZE may be any power of 2.  `.even' is equivalent to
+     `.align' with a SIZE of 2.
+    `1'
+          Align SPC to word boundary
+
+    `2'
+          Align SPC to longword boundary (same as .even)
+
+    `128'
+          Align SPC to page boundary
+
+`.asg STRING, NAME'
+     Assign NAME the string STRING.  String replacement is performed on
+     STRING before assignment.
+
+`.eval STRING, NAME'
+     Evaluate the contents of string STRING and assign the result as a
+     string to the subsym NAME.  String replacement is performed on
+     STRING before assignment.
+
+`.bss SYMBOL, SIZE [, [BLOCKING_FLAG] [,ALIGNMENT_FLAG]]'
+     Reserve space for SYMBOL in the .bss section.  SIZE is in words.
+     If present, BLOCKING_FLAG indicates the allocated space should be
+     aligned on a page boundary if it would otherwise cross a page
+     boundary.  If present, ALIGNMENT_FLAG causes the assembler to
+     allocate SIZE on a long word boundary.
+
+`.byte VALUE [,...,VALUE_N]'
+`.ubyte VALUE [,...,VALUE_N]'
+`.char VALUE [,...,VALUE_N]'
+`.uchar VALUE [,...,VALUE_N]'
+     Place one or more bytes into consecutive words of the current
+     section.  The upper 8 bits of each word is zero-filled.  If a
+     label is used, it points to the word allocated for the first byte
+     encountered.
+
+`.clink ["SECTION_NAME"]'
+     Set STYP_CLINK flag for this section, which indicates to the
+     linker that if no symbols from this section are referenced, the
+     section should not be included in the link.  If SECTION_NAME is
+     omitted, the current section is used.
+
+`.c_mode'
+     TBD.
+
+`.copy "FILENAME" | FILENAME'
+`.include "FILENAME" | FILENAME'
+     Read source statements from FILENAME.  The normal include search
+     path is used.  Normally .copy will cause statements from the
+     included file to be printed in the assembly listing and .include
+     will not, but this distinction is not currently implemented.
+
+`.data'
+     Begin assembling code into the .data section.
+
+`.double VALUE [,...,VALUE_N]'
+`.ldouble VALUE [,...,VALUE_N]'
+`.float VALUE [,...,VALUE_N]'
+`.xfloat VALUE [,...,VALUE_N]'
+     Place an IEEE single-precision floating-point representation of
+     one or more floating-point values into the current section.  All
+     but `.xfloat' align the result on a longword boundary.  Values are
+     stored most-significant word first.
+
+`.drlist'
+`.drnolist'
+     Control printing of directives to the listing file.  Ignored.
+
+`.emsg STRING'
+`.mmsg STRING'
+`.wmsg STRING'
+     Emit a user-defined error, message, or warning, respectively.
+
+`.far_mode'
+     Use extended addressing when assembling statements.  This should
+     appear only once per file, and is equivalent to the -mfar-mode
+     option *note `-mfar-mode': TIC54X-Opts.
+
+`.fclist'
+`.fcnolist'
+     Control printing of false conditional blocks to the listing file.
+
+`.field VALUE [,SIZE]'
+     Initialize a bitfield of SIZE bits in the current section.  If
+     VALUE is relocatable, then SIZE must be 16.  SIZE defaults to 16
+     bits.  If VALUE does not fit into SIZE bits, the value will be
+     truncated.  Successive `.field' directives will pack starting at
+     the current word, filling the most significant bits first, and
+     aligning to the start of the next word if the field size does not
+     fit into the space remaining in the current word.  A `.align'
+     directive with an operand of 1 will force the next `.field'
+     directive to begin packing into a new word.  If a label is used, it
+     points to the word that contains the specified field.
+
+`.global SYMBOL [,...,SYMBOL_N]'
+`.def SYMBOL [,...,SYMBOL_N]'
+`.ref SYMBOL [,...,SYMBOL_N]'
+     `.def' nominally identifies a symbol defined in the current file
+     and availalbe to other files.  `.ref' identifies a symbol used in
+     the current file but defined elsewhere.  Both map to the standard
+     `.global' directive.
+
+`.half VALUE [,...,VALUE_N]'
+`.uhalf VALUE [,...,VALUE_N]'
+`.short VALUE [,...,VALUE_N]'
+`.ushort VALUE [,...,VALUE_N]'
+`.int VALUE [,...,VALUE_N]'
+`.uint VALUE [,...,VALUE_N]'
+`.word VALUE [,...,VALUE_N]'
+`.uword VALUE [,...,VALUE_N]'
+     Place one or more values into consecutive words of the current
+     section.  If a label is used, it points to the word allocated for
+     the first value encountered.
+
+`.label SYMBOL'
+     Define a special SYMBOL to refer to the load time address of the
+     current section program counter.
+
+`.length'
+`.width'
+     Set the page length and width of the output listing file.  Ignored.
+
+`.list'
+`.nolist'
+     Control whether the source listing is printed.  Ignored.
+
+`.long VALUE [,...,VALUE_N]'
+`.ulong VALUE [,...,VALUE_N]'
+`.xlong VALUE [,...,VALUE_N]'
+     Place one or more 32-bit values into consecutive words in the
+     current section.  The most significant word is stored first.
+     `.long' and `.ulong' align the result on a longword boundary;
+     `xlong' does not.
+
+`.loop [COUNT]'
+`.break [CONDITION]'
+`.endloop'
+     Repeatedly assemble a block of code.  `.loop' begins the block, and
+     `.endloop' marks its termination.  COUNT defaults to 1024, and
+     indicates the number of times the block should be repeated.
+     `.break' terminates the loop so that assembly begins after the
+     `.endloop' directive.  The optional CONDITION will cause the loop
+     to terminate only if it evaluates to zero.
+
+`MACRO_NAME .macro [PARAM1][,...PARAM_N]'
+`[.mexit]'
+`.endm'
+     See the section on macros for more explanation (*Note
+     TIC54X-Macros::.
+
+`.mlib "FILENAME" | FILENAME'
+     Load the macro library FILENAME.  FILENAME must be an archived
+     library (BFD ar-compatible) of text files, expected to contain
+     only macro definitions.   The standard include search path is used.
+
+`.mlist'
+
+`.mnolist'
+     Control whether to include macro and loop block expansions in the
+     listing output.  Ignored.
+
+`.mmregs'
+     Define global symbolic names for the 'c54x registers.  Supposedly
+     equivalent to executing `.set' directives for each register with
+     its memory-mapped value, but in reality is provided only for
+     compatibility and does nothing.
+
+`.newblock'
+     This directive resets any TIC54X local labels currently defined.
+     Normal `as' local labels are unaffected.
+
+`.option OPTION_LIST'
+     Set listing options.  Ignored.
+
+`.sblock "SECTION_NAME" | SECTION_NAME [,"NAME_N" | NAME_N]'
+     Designate SECTION_NAME for blocking.  Blocking guarantees that a
+     section will start on a page boundary (128 words) if it would
+     otherwise cross a page boundary.  Only initialized sections may be
+     designated with this directive.  See also *Note TIC54X-Block::.
+
+`.sect "SECTION_NAME"'
+     Define a named initialized section and make it the current section.
+
+`SYMBOL .set "VALUE"'
+`SYMBOL .equ "VALUE"'
+     Equate a constant VALUE to a SYMBOL, which is placed in the symbol
+     table.  SYMBOL may not be previously defined.
+
+`.space SIZE_IN_BITS'
+`.bes SIZE_IN_BITS'
+     Reserve the given number of bits in the current section and
+     zero-fill them.  If a label is used with `.space', it points to the
+     *first* word reserved.  With `.bes', the label points to the
+     *last* word reserved.
+
+`.sslist'
+`.ssnolist'
+     Controls the inclusion of subsym replacement in the listing
+     output.  Ignored.
+
+`.string "STRING" [,...,"STRING_N"]'
+`.pstring "STRING" [,...,"STRING_N"]'
+     Place 8-bit characters from STRING into the current section.
+     `.string' zero-fills the upper 8 bits of each word, while
+     `.pstring' puts two characters into each word, filling the
+     most-significant bits first.  Unused space is zero-filled.  If a
+     label is used, it points to the first word initialized.
+
+`[STAG] .struct [OFFSET]'
+`[NAME_1] element [COUNT_1]'
+`[NAME_2] element [COUNT_2]'
+`[TNAME] .tag STAGX [TCOUNT]'
+`...'
+`[NAME_N] element [COUNT_N]'
+`[SSIZE] .endstruct'
+`LABEL .tag [STAG]'
+     Assign symbolic offsets to the elements of a structure.  STAG
+     defines a symbol to use to reference the structure.  OFFSET
+     indicates a starting value to use for the first element
+     encountered; otherwise it defaults to zero.  Each element can have
+     a named offset, NAME, which is a symbol assigned the value of the
+     element's offset into the structure.  If STAG is missing, these
+     become global symbols.  COUNT adjusts the offset that many times,
+     as if `element' were an array.  `element' may be one of `.byte',
+     `.word', `.long', `.float', or any equivalent of those, and the
+     structure offset is adjusted accordingly.  `.field' and `.string'
+     are also allowed; the size of `.field' is one bit, and `.string'
+     is considered to be one word in size.  Only element descriptors,
+     structure/union tags, `.align' and conditional assembly directives
+     are allowed within `.struct'/`.endstruct'.  `.align' aligns member
+     offsets to word boundaries only.  SSIZE, if provided, will always
+     be assigned the size of the structure.
+
+     The `.tag' directive, in addition to being used to define a
+     structure/union element within a structure, may be used to apply a
+     structure to a symbol.  Once applied to LABEL, the individual
+     structure elements may be applied to LABEL to produce the desired
+     offsets using LABEL as the structure base.
+
+`.tab'
+     Set the tab size in the output listing.  Ignored.
+
+`[UTAG] .union'
+`[NAME_1] element [COUNT_1]'
+`[NAME_2] element [COUNT_2]'
+`[TNAME] .tag UTAGX[,TCOUNT]'
+`...'
+`[NAME_N] element [COUNT_N]'
+`[USIZE] .endstruct'
+`LABEL .tag [UTAG]'
+     Similar to `.struct', but the offset after each element is reset to
+     zero, and the USIZE is set to the maximum of all defined elements.
+     Starting offset for the union is always zero.
+
+`[SYMBOL] .usect "SECTION_NAME", SIZE, [,[BLOCKING_FLAG] [,ALIGNMENT_FLAG]]'
+     Reserve space for variables in a named, uninitialized section
+     (similar to .bss).  `.usect' allows definitions sections
+     independent of .bss.  SYMBOL points to the first location reserved
+     by this allocation.  The symbol may be used as a variable name.
+     SIZE is the allocated size in words.  BLOCKING_FLAG indicates
+     whether to block this section on a page boundary (128 words)
+     (*note TIC54X-Block::).  ALIGNMENT FLAG indicates whether the
+     section should be longword-aligned.
+
+`.var SYM[,..., SYM_N]'
+     Define a subsym to be a local variable within a macro.  See *Note
+     TIC54X-Macros::.
+
+`.version VERSION'
+     Set which processor to build instructions for.  Though the
+     following values are accepted, the op is ignored.
+    `541'
+    `542'
+    `543'
+    `545'
+    `545LP'
+    `546LP'
+    `548'
+    `549'
+
+
+File: as.info,  Node: TIC54X-Macros,  Next: TIC54X-MMRegs,  Prev: TIC54X-Directives,  Up: TIC54X-Dependent
+
+8.30.10 Macros
+--------------
+
+Macros do not require explicit dereferencing of arguments (i.e. \ARG).
+
+   During macro expansion, the macro parameters are converted to
+subsyms.  If the number of arguments passed the macro invocation
+exceeds the number of parameters defined, the last parameter is
+assigned the string equivalent of all remaining arguments.  If fewer
+arguments are given than parameters, the missing parameters are
+assigned empty strings.  To include a comma in an argument, you must
+enclose the argument in quotes.
+
+   The following built-in subsym functions allow examination of the
+string value of subsyms (or ordinary strings).  The arguments are
+strings unless otherwise indicated (subsyms passed as args will be
+replaced by the strings they represent).
+``$symlen(STR)''
+     Returns the length of STR.
+
+``$symcmp(STR1,STR2)''
+     Returns 0 if STR1 == STR2, non-zero otherwise.
+
+``$firstch(STR,CH)''
+     Returns index of the first occurrence of character constant CH in
+     STR.
+
+``$lastch(STR,CH)''
+     Returns index of the last occurrence of character constant CH in
+     STR.
+
+``$isdefed(SYMBOL)''
+     Returns zero if the symbol SYMBOL is not in the symbol table,
+     non-zero otherwise.
+
+``$ismember(SYMBOL,LIST)''
+     Assign the first member of comma-separated string LIST to SYMBOL;
+     LIST is reassigned the remainder of the list.  Returns zero if
+     LIST is a null string.  Both arguments must be subsyms.
+
+``$iscons(EXPR)''
+     Returns 1 if string EXPR is binary, 2 if octal, 3 if hexadecimal,
+     4 if a character, 5 if decimal, and zero if not an integer.
+
+``$isname(NAME)''
+     Returns 1 if NAME is a valid symbol name, zero otherwise.
+
+``$isreg(REG)''
+     Returns 1 if REG is a valid predefined register name (AR0-AR7
+     only).
+
+``$structsz(STAG)''
+     Returns the size of the structure or union represented by STAG.
+
+``$structacc(STAG)''
+     Returns the reference point of the structure or union represented
+     by STAG.   Always returns zero.
+
+
+
+File: as.info,  Node: TIC54X-MMRegs,  Prev: TIC54X-Macros,  Up: TIC54X-Dependent
+
+8.30.11 Memory-mapped Registers
+-------------------------------
+
+The following symbols are recognized as memory-mapped registers:
+
+
+
+File: as.info,  Node: Z8000-Dependent,  Next: Vax-Dependent,  Prev: Xtensa-Dependent,  Up: Machine Dependencies
+
+8.31 Z8000 Dependent Features
+=============================
+
+   The Z8000 as supports both members of the Z8000 family: the
+unsegmented Z8002, with 16 bit addresses, and the segmented Z8001 with
+24 bit addresses.
+
+   When the assembler is in unsegmented mode (specified with the
+`unsegm' directive), an address takes up one word (16 bit) sized
+register.  When the assembler is in segmented mode (specified with the
+`segm' directive), a 24-bit address takes up a long (32 bit) register.
+*Note Assembler Directives for the Z8000: Z8000 Directives, for a list
+of other Z8000 specific assembler directives.
+
+* Menu:
+
+* Z8000 Options::               Command-line options for the Z8000
+* Z8000 Syntax::                Assembler syntax for the Z8000
+* Z8000 Directives::            Special directives for the Z8000
+* Z8000 Opcodes::               Opcodes
+
+
+File: as.info,  Node: Z8000 Options,  Next: Z8000 Syntax,  Up: Z8000-Dependent
+
+8.31.1 Options
+--------------
+
+`-z8001'
+     Generate segmented code by default.
+
+`-z8002'
+     Generate unsegmented code by default.
+
+
+File: as.info,  Node: Z8000 Syntax,  Next: Z8000 Directives,  Prev: Z8000 Options,  Up: Z8000-Dependent
+
+8.31.2 Syntax
+-------------
+
+* Menu:
+
+* Z8000-Chars::                Special Characters
+* Z8000-Regs::                 Register Names
+* Z8000-Addressing::           Addressing Modes
+
+
+File: as.info,  Node: Z8000-Chars,  Next: Z8000-Regs,  Up: Z8000 Syntax
+
+8.31.2.1 Special Characters
+...........................
+
+`!' is the line comment character.
+
+   You can use `;' instead of a newline to separate statements.
+
+
+File: as.info,  Node: Z8000-Regs,  Next: Z8000-Addressing,  Prev: Z8000-Chars,  Up: Z8000 Syntax
+
+8.31.2.2 Register Names
+.......................
+
+The Z8000 has sixteen 16 bit registers, numbered 0 to 15.  You can refer
+to different sized groups of registers by register number, with the
+prefix `r' for 16 bit registers, `rr' for 32 bit registers and `rq' for
+64 bit registers.  You can also refer to the contents of the first
+eight (of the sixteen 16 bit registers) by bytes.  They are named `rlN'
+and `rhN'.
+
+_byte registers_
+     rl0 rh0 rl1 rh1 rl2 rh2 rl3 rh3
+     rl4 rh4 rl5 rh5 rl6 rh6 rl7 rh7
+
+_word registers_
+     r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15
+
+_long word registers_
+     rr0 rr2 rr4 rr6 rr8 rr10 rr12 rr14
+
+_quad word registers_
+     rq0 rq4 rq8 rq12
+
+
+File: as.info,  Node: Z8000-Addressing,  Prev: Z8000-Regs,  Up: Z8000 Syntax
+
+8.31.2.3 Addressing Modes
+.........................
+
+as understands the following addressing modes for the Z8000:
+
+`rlN'
+`rhN'
+`rN'
+`rrN'
+`rqN'
+     Register direct:  8bit, 16bit, 32bit, and 64bit registers.
+
+`@rN'
+`@rrN'
+     Indirect register:  @rrN in segmented mode, @rN in unsegmented
+     mode.
+
+`ADDR'
+     Direct: the 16 bit or 24 bit address (depending on whether the
+     assembler is in segmented or unsegmented mode) of the operand is
+     in the instruction.
+
+`address(rN)'
+     Indexed: the 16 or 24 bit address is added to the 16 bit register
+     to produce the final address in memory of the operand.
+
+`rN(#IMM)'
+`rrN(#IMM)'
+     Base Address: the 16 or 24 bit register is added to the 16 bit sign
+     extended immediate displacement to produce the final address in
+     memory of the operand.
+
+`rN(rM)'
+`rrN(rM)'
+     Base Index: the 16 or 24 bit register rN or rrN is added to the
+     sign extended 16 bit index register rM to produce the final
+     address in memory of the operand.
+
+`#XX'
+     Immediate data XX.
+
+
+File: as.info,  Node: Z8000 Directives,  Next: Z8000 Opcodes,  Prev: Z8000 Syntax,  Up: Z8000-Dependent
+
+8.31.3 Assembler Directives for the Z8000
+-----------------------------------------
+
+The Z8000 port of as includes additional assembler directives, for
+compatibility with other Z8000 assemblers.  These do not begin with `.'
+(unlike the ordinary as directives).
+
+`segm'
+`.z8001'
+     Generate code for the segmented Z8001.
+
+`unsegm'
+`.z8002'
+     Generate code for the unsegmented Z8002.
+
+`name'
+     Synonym for `.file'
+
+`global'
+     Synonym for `.global'
+
+`wval'
+     Synonym for `.word'
+
+`lval'
+     Synonym for `.long'
+
+`bval'
+     Synonym for `.byte'
+
+`sval'
+     Assemble a string.  `sval' expects one string literal, delimited by
+     single quotes.  It assembles each byte of the string into
+     consecutive addresses.  You can use the escape sequence `%XX'
+     (where XX represents a two-digit hexadecimal number) to represent
+     the character whose ASCII value is XX.  Use this feature to
+     describe single quote and other characters that may not appear in
+     string literals as themselves.  For example, the C statement
+     `char *a = "he said \"it's 50% off\"";' is represented in Z8000
+     assembly language (shown with the assembler output in hex at the
+     left) as
+
+          68652073    sval    'he said %22it%27s 50%25 off%22%00'
+          61696420
+          22697427
+          73203530
+          25206F66
+          662200
+
+`rsect'
+     synonym for `.section'
+
+`block'
+     synonym for `.space'
+
+`even'
+     special case of `.align'; aligns output to even byte boundary.
+
+
+File: as.info,  Node: Z8000 Opcodes,  Prev: Z8000 Directives,  Up: Z8000-Dependent
+
+8.31.4 Opcodes
+--------------
+
+For detailed information on the Z8000 machine instruction set, see
+`Z8000 Technical Manual'.
+
+   The following table summarizes the opcodes and their arguments:
+
+                 rs   16 bit source register
+                 rd   16 bit destination register
+                 rbs   8 bit source register
+                 rbd   8 bit destination register
+                 rrs   32 bit source register
+                 rrd   32 bit destination register
+                 rqs   64 bit source register
+                 rqd   64 bit destination register
+                 addr 16/24 bit address
+                 imm  immediate data
+
+     adc rd,rs               clrb addr               cpsir @rd,@rs,rr,cc
+     adcb rbd,rbs            clrb addr(rd)           cpsirb @rd,@rs,rr,cc
+     add rd,@rs              clrb rbd                dab rbd
+     add rd,addr             com @rd                 dbjnz rbd,disp7
+     add rd,addr(rs)         com addr                dec @rd,imm4m1
+     add rd,imm16            com addr(rd)            dec addr(rd),imm4m1
+     add rd,rs               com rd                  dec addr,imm4m1
+     addb rbd,@rs            comb @rd                dec rd,imm4m1
+     addb rbd,addr           comb addr               decb @rd,imm4m1
+     addb rbd,addr(rs)       comb addr(rd)           decb addr(rd),imm4m1
+     addb rbd,imm8           comb rbd                decb addr,imm4m1
+     addb rbd,rbs            comflg flags            decb rbd,imm4m1
+     addl rrd,@rs            cp @rd,imm16            di i2
+     addl rrd,addr           cp addr(rd),imm16       div rrd,@rs
+     addl rrd,addr(rs)       cp addr,imm16           div rrd,addr
+     addl rrd,imm32          cp rd,@rs               div rrd,addr(rs)
+     addl rrd,rrs            cp rd,addr              div rrd,imm16
+     and rd,@rs              cp rd,addr(rs)          div rrd,rs
+     and rd,addr             cp rd,imm16             divl rqd,@rs
+     and rd,addr(rs)         cp rd,rs                divl rqd,addr
+     and rd,imm16            cpb @rd,imm8            divl rqd,addr(rs)
+     and rd,rs               cpb addr(rd),imm8       divl rqd,imm32
+     andb rbd,@rs            cpb addr,imm8           divl rqd,rrs
+     andb rbd,addr           cpb rbd,@rs             djnz rd,disp7
+     andb rbd,addr(rs)       cpb rbd,addr            ei i2
+     andb rbd,imm8           cpb rbd,addr(rs)        ex rd,@rs
+     andb rbd,rbs            cpb rbd,imm8            ex rd,addr
+     bit @rd,imm4            cpb rbd,rbs             ex rd,addr(rs)
+     bit addr(rd),imm4       cpd rd,@rs,rr,cc        ex rd,rs
+     bit addr,imm4           cpdb rbd,@rs,rr,cc      exb rbd,@rs
+     bit rd,imm4             cpdr rd,@rs,rr,cc       exb rbd,addr
+     bit rd,rs               cpdrb rbd,@rs,rr,cc     exb rbd,addr(rs)
+     bitb @rd,imm4           cpi rd,@rs,rr,cc        exb rbd,rbs
+     bitb addr(rd),imm4      cpib rbd,@rs,rr,cc      ext0e imm8
+     bitb addr,imm4          cpir rd,@rs,rr,cc       ext0f imm8
+     bitb rbd,imm4           cpirb rbd,@rs,rr,cc     ext8e imm8
+     bitb rbd,rs             cpl rrd,@rs             ext8f imm8
+     bpt                     cpl rrd,addr            exts rrd
+     call @rd                cpl rrd,addr(rs)        extsb rd
+     call addr               cpl rrd,imm32           extsl rqd
+     call addr(rd)           cpl rrd,rrs             halt
+     calr disp12             cpsd @rd,@rs,rr,cc      in rd,@rs
+     clr @rd                 cpsdb @rd,@rs,rr,cc     in rd,imm16
+     clr addr                cpsdr @rd,@rs,rr,cc     inb rbd,@rs
+     clr addr(rd)            cpsdrb @rd,@rs,rr,cc    inb rbd,imm16
+     clr rd                  cpsi @rd,@rs,rr,cc      inc @rd,imm4m1
+     clrb @rd                cpsib @rd,@rs,rr,cc     inc addr(rd),imm4m1
+     inc addr,imm4m1         ldb rbd,rs(rx)          mult rrd,addr(rs)
+     inc rd,imm4m1           ldb rd(imm16),rbs       mult rrd,imm16
+     incb @rd,imm4m1         ldb rd(rx),rbs          mult rrd,rs
+     incb addr(rd),imm4m1    ldctl ctrl,rs           multl rqd,@rs
+     incb addr,imm4m1        ldctl rd,ctrl           multl rqd,addr
+     incb rbd,imm4m1         ldd @rs,@rd,rr          multl rqd,addr(rs)
+     ind @rd,@rs,ra          lddb @rs,@rd,rr         multl rqd,imm32
+     indb @rd,@rs,rba        lddr @rs,@rd,rr         multl rqd,rrs
+     inib @rd,@rs,ra         lddrb @rs,@rd,rr        neg @rd
+     inibr @rd,@rs,ra        ldi @rd,@rs,rr          neg addr
+     iret                    ldib @rd,@rs,rr         neg addr(rd)
+     jp cc,@rd               ldir @rd,@rs,rr         neg rd
+     jp cc,addr              ldirb @rd,@rs,rr        negb @rd
+     jp cc,addr(rd)          ldk rd,imm4             negb addr
+     jr cc,disp8             ldl @rd,rrs             negb addr(rd)
+     ld @rd,imm16            ldl addr(rd),rrs        negb rbd
+     ld @rd,rs               ldl addr,rrs            nop
+     ld addr(rd),imm16       ldl rd(imm16),rrs       or rd,@rs
+     ld addr(rd),rs          ldl rd(rx),rrs          or rd,addr
+     ld addr,imm16           ldl rrd,@rs             or rd,addr(rs)
+     ld addr,rs              ldl rrd,addr            or rd,imm16
+     ld rd(imm16),rs         ldl rrd,addr(rs)        or rd,rs
+     ld rd(rx),rs            ldl rrd,imm32           orb rbd,@rs
+     ld rd,@rs               ldl rrd,rrs             orb rbd,addr
+     ld rd,addr              ldl rrd,rs(imm16)       orb rbd,addr(rs)
+     ld rd,addr(rs)          ldl rrd,rs(rx)          orb rbd,imm8
+     ld rd,imm16             ldm @rd,rs,n            orb rbd,rbs
+     ld rd,rs                ldm addr(rd),rs,n       out @rd,rs
+     ld rd,rs(imm16)         ldm addr,rs,n           out imm16,rs
+     ld rd,rs(rx)            ldm rd,@rs,n            outb @rd,rbs
+     lda rd,addr             ldm rd,addr(rs),n       outb imm16,rbs
+     lda rd,addr(rs)         ldm rd,addr,n           outd @rd,@rs,ra
+     lda rd,rs(imm16)        ldps @rs                outdb @rd,@rs,rba
+     lda rd,rs(rx)           ldps addr               outib @rd,@rs,ra
+     ldar rd,disp16          ldps addr(rs)           outibr @rd,@rs,ra
+     ldb @rd,imm8            ldr disp16,rs           pop @rd,@rs
+     ldb @rd,rbs             ldr rd,disp16           pop addr(rd),@rs
+     ldb addr(rd),imm8       ldrb disp16,rbs         pop addr,@rs
+     ldb addr(rd),rbs        ldrb rbd,disp16         pop rd,@rs
+     ldb addr,imm8           ldrl disp16,rrs         popl @rd,@rs
+     ldb addr,rbs            ldrl rrd,disp16         popl addr(rd),@rs
+     ldb rbd,@rs             mbit                    popl addr,@rs
+     ldb rbd,addr            mreq rd                 popl rrd,@rs
+     ldb rbd,addr(rs)        mres                    push @rd,@rs
+     ldb rbd,imm8            mset                    push @rd,addr
+     ldb rbd,rbs             mult rrd,@rs            push @rd,addr(rs)
+     ldb rbd,rs(imm16)       mult rrd,addr           push @rd,imm16
+     push @rd,rs             set addr,imm4           subl rrd,imm32
+     pushl @rd,@rs           set rd,imm4             subl rrd,rrs
+     pushl @rd,addr          set rd,rs               tcc cc,rd
+     pushl @rd,addr(rs)      setb @rd,imm4           tccb cc,rbd
+     pushl @rd,rrs           setb addr(rd),imm4      test @rd
+     res @rd,imm4            setb addr,imm4          test addr
+     res addr(rd),imm4       setb rbd,imm4           test addr(rd)
+     res addr,imm4           setb rbd,rs             test rd
+     res rd,imm4             setflg imm4             testb @rd
+     res rd,rs               sinb rbd,imm16          testb addr
+     resb @rd,imm4           sinb rd,imm16           testb addr(rd)
+     resb addr(rd),imm4      sind @rd,@rs,ra         testb rbd
+     resb addr,imm4          sindb @rd,@rs,rba       testl @rd
+     resb rbd,imm4           sinib @rd,@rs,ra        testl addr
+     resb rbd,rs             sinibr @rd,@rs,ra       testl addr(rd)
+     resflg imm4             sla rd,imm8             testl rrd
+     ret cc                  slab rbd,imm8           trdb @rd,@rs,rba
+     rl rd,imm1or2           slal rrd,imm8           trdrb @rd,@rs,rba
+     rlb rbd,imm1or2         sll rd,imm8             trib @rd,@rs,rbr
+     rlc rd,imm1or2          sllb rbd,imm8           trirb @rd,@rs,rbr
+     rlcb rbd,imm1or2        slll rrd,imm8           trtdrb @ra,@rb,rbr
+     rldb rbb,rba            sout imm16,rs           trtib @ra,@rb,rr
+     rr rd,imm1or2           soutb imm16,rbs         trtirb @ra,@rb,rbr
+     rrb rbd,imm1or2         soutd @rd,@rs,ra        trtrb @ra,@rb,rbr
+     rrc rd,imm1or2          soutdb @rd,@rs,rba      tset @rd
+     rrcb rbd,imm1or2        soutib @rd,@rs,ra       tset addr
+     rrdb rbb,rba            soutibr @rd,@rs,ra      tset addr(rd)
+     rsvd36                  sra rd,imm8             tset rd
+     rsvd38                  srab rbd,imm8           tsetb @rd
+     rsvd78                  sral rrd,imm8           tsetb addr
+     rsvd7e                  srl rd,imm8             tsetb addr(rd)
+     rsvd9d                  srlb rbd,imm8           tsetb rbd
+     rsvd9f                  srll rrd,imm8           xor rd,@rs
+     rsvdb9                  sub rd,@rs              xor rd,addr
+     rsvdbf                  sub rd,addr             xor rd,addr(rs)
+     sbc rd,rs               sub rd,addr(rs)         xor rd,imm16
+     sbcb rbd,rbs            sub rd,imm16            xor rd,rs
+     sc imm8                 sub rd,rs               xorb rbd,@rs
+     sda rd,rs               subb rbd,@rs            xorb rbd,addr
+     sdab rbd,rs             subb rbd,addr           xorb rbd,addr(rs)
+     sdal rrd,rs             subb rbd,addr(rs)       xorb rbd,imm8
+     sdl rd,rs               subb rbd,imm8           xorb rbd,rbs
+     sdlb rbd,rs             subb rbd,rbs            xorb rbd,rbs
+     sdll rrd,rs             subl rrd,@rs
+     set @rd,imm4            subl rrd,addr
+     set addr(rd),imm4       subl rrd,addr(rs)
+
+
+File: as.info,  Node: Vax-Dependent,  Prev: Z8000-Dependent,  Up: Machine Dependencies
+
+8.32 VAX Dependent Features
+===========================
+
+* Menu:
+
+* VAX-Opts::                    VAX Command-Line Options
+* VAX-float::                   VAX Floating Point
+* VAX-directives::              Vax Machine Directives
+* VAX-opcodes::                 VAX Opcodes
+* VAX-branch::                  VAX Branch Improvement
+* VAX-operands::                VAX Operands
+* VAX-no::                      Not Supported on VAX
+
+
+File: as.info,  Node: VAX-Opts,  Next: VAX-float,  Up: Vax-Dependent
+
+8.32.1 VAX Command-Line Options
+-------------------------------
+
+The Vax version of `as' accepts any of the following options, gives a
+warning message that the option was ignored and proceeds.  These
+options are for compatibility with scripts designed for other people's
+assemblers.
+
+``-D' (Debug)'
+``-S' (Symbol Table)'
+``-T' (Token Trace)'
+     These are obsolete options used to debug old assemblers.
+
+``-d' (Displacement size for JUMPs)'
+     This option expects a number following the `-d'.  Like options
+     that expect filenames, the number may immediately follow the `-d'
+     (old standard) or constitute the whole of the command line
+     argument that follows `-d' (GNU standard).
+
+``-V' (Virtualize Interpass Temporary File)'
+     Some other assemblers use a temporary file.  This option commanded
+     them to keep the information in active memory rather than in a
+     disk file.  `as' always does this, so this option is redundant.
+
+``-J' (JUMPify Longer Branches)'
+     Many 32-bit computers permit a variety of branch instructions to
+     do the same job.  Some of these instructions are short (and fast)
+     but have a limited range; others are long (and slow) but can
+     branch anywhere in virtual memory.  Often there are 3 flavors of
+     branch: short, medium and long.  Some other assemblers would emit
+     short and medium branches, unless told by this option to emit
+     short and long branches.
+
+``-t' (Temporary File Directory)'
+     Some other assemblers may use a temporary file, and this option
+     takes a filename being the directory to site the temporary file.
+     Since `as' does not use a temporary disk file, this option makes
+     no difference.  `-t' needs exactly one filename.
+
+   The Vax version of the assembler accepts additional options when
+compiled for VMS:
+
+`-h N'
+     External symbol or section (used for global variables) names are
+     not case sensitive on VAX/VMS and always mapped to upper case.
+     This is contrary to the C language definition which explicitly
+     distinguishes upper and lower case.  To implement a standard
+     conforming C compiler, names must be changed (mapped) to preserve
+     the case information.  The default mapping is to convert all lower
+     case characters to uppercase and adding an underscore followed by
+     a 6 digit hex value, representing a 24 digit binary value.  The
+     one digits in the binary value represent which characters are
+     uppercase in the original symbol name.
+
+     The `-h N' option determines how we map names.  This takes several
+     values.  No `-h' switch at all allows case hacking as described
+     above.  A value of zero (`-h0') implies names should be upper
+     case, and inhibits the case hack.  A value of 2 (`-h2') implies
+     names should be all lower case, with no case hack.  A value of 3
+     (`-h3') implies that case should be preserved.  The value 1 is
+     unused.  The `-H' option directs `as' to display every mapped
+     symbol during assembly.
+
+     Symbols whose names include a dollar sign `$' are exceptions to the
+     general name mapping.  These symbols are normally only used to
+     reference VMS library names.  Such symbols are always mapped to
+     upper case.
+
+`-+'
+     The `-+' option causes `as' to truncate any symbol name larger
+     than 31 characters.  The `-+' option also prevents some code
+     following the `_main' symbol normally added to make the object
+     file compatible with Vax-11 "C".
+
+`-1'
+     This option is ignored for backward compatibility with `as'
+     version 1.x.
+
+`-H'
+     The `-H' option causes `as' to print every symbol which was
+     changed by case mapping.
+
+
+File: as.info,  Node: VAX-float,  Next: VAX-directives,  Prev: VAX-Opts,  Up: Vax-Dependent
+
+8.32.2 VAX Floating Point
+-------------------------
+
+Conversion of flonums to floating point is correct, and compatible with
+previous assemblers.  Rounding is towards zero if the remainder is
+exactly half the least significant bit.
+
+   `D', `F', `G' and `H' floating point formats are understood.
+
+   Immediate floating literals (_e.g._ `S`$6.9') are rendered
+correctly.  Again, rounding is towards zero in the boundary case.
+
+   The `.float' directive produces `f' format numbers.  The `.double'
+directive produces `d' format numbers.
+
+
+File: as.info,  Node: VAX-directives,  Next: VAX-opcodes,  Prev: VAX-float,  Up: Vax-Dependent
+
+8.32.3 Vax Machine Directives
+-----------------------------
+
+The Vax version of the assembler supports four directives for
+generating Vax floating point constants.  They are described in the
+table below.
+
+`.dfloat'
+     This expects zero or more flonums, separated by commas, and
+     assembles Vax `d' format 64-bit floating point constants.
+
+`.ffloat'
+     This expects zero or more flonums, separated by commas, and
+     assembles Vax `f' format 32-bit floating point constants.
+
+`.gfloat'
+     This expects zero or more flonums, separated by commas, and
+     assembles Vax `g' format 64-bit floating point constants.
+
+`.hfloat'
+     This expects zero or more flonums, separated by commas, and
+     assembles Vax `h' format 128-bit floating point constants.
+
+
+
+File: as.info,  Node: VAX-opcodes,  Next: VAX-branch,  Prev: VAX-directives,  Up: Vax-Dependent
+
+8.32.4 VAX Opcodes
+------------------
+
+All DEC mnemonics are supported.  Beware that `case...' instructions
+have exactly 3 operands.  The dispatch table that follows the `case...'
+instruction should be made with `.word' statements.  This is compatible
+with all unix assemblers we know of.
+
+
+File: as.info,  Node: VAX-branch,  Next: VAX-operands,  Prev: VAX-opcodes,  Up: Vax-Dependent
+
+8.32.5 VAX Branch Improvement
+-----------------------------
+
+Certain pseudo opcodes are permitted.  They are for branch
+instructions.  They expand to the shortest branch instruction that
+reaches the target.  Generally these mnemonics are made by substituting
+`j' for `b' at the start of a DEC mnemonic.  This feature is included
+both for compatibility and to help compilers.  If you do not need this
+feature, avoid these opcodes.  Here are the mnemonics, and the code
+they can expand into.
+
+`jbsb'
+     `Jsb' is already an instruction mnemonic, so we chose `jbsb'.
+    (byte displacement)
+          `bsbb ...'
+
+    (word displacement)
+          `bsbw ...'
+
+    (long displacement)
+          `jsb ...'
+
+`jbr'
+`jr'
+     Unconditional branch.
+    (byte displacement)
+          `brb ...'
+
+    (word displacement)
+          `brw ...'
+
+    (long displacement)
+          `jmp ...'
+
+`jCOND'
+     COND may be any one of the conditional branches `neq', `nequ',
+     `eql', `eqlu', `gtr', `geq', `lss', `gtru', `lequ', `vc', `vs',
+     `gequ', `cc', `lssu', `cs'.  COND may also be one of the bit tests
+     `bs', `bc', `bss', `bcs', `bsc', `bcc', `bssi', `bcci', `lbs',
+     `lbc'.  NOTCOND is the opposite condition to COND.
+    (byte displacement)
+          `bCOND ...'
+
+    (word displacement)
+          `bNOTCOND foo ; brw ... ; foo:'
+
+    (long displacement)
+          `bNOTCOND foo ; jmp ... ; foo:'
+
+`jacbX'
+     X may be one of `b d f g h l w'.
+    (word displacement)
+          `OPCODE ...'
+
+    (long displacement)
+               OPCODE ..., foo ;
+               brb bar ;
+               foo: jmp ... ;
+               bar:
+
+`jaobYYY'
+     YYY may be one of `lss leq'.
+
+`jsobZZZ'
+     ZZZ may be one of `geq gtr'.
+    (byte displacement)
+          `OPCODE ...'
+
+    (word displacement)
+               OPCODE ..., foo ;
+               brb bar ;
+               foo: brw DESTINATION ;
+               bar:
+
+    (long displacement)
+               OPCODE ..., foo ;
+               brb bar ;
+               foo: jmp DESTINATION ;
+               bar:
+
+`aobleq'
+`aoblss'
+`sobgeq'
+`sobgtr'
+
+    (byte displacement)
+          `OPCODE ...'
+
+    (word displacement)
+               OPCODE ..., foo ;
+               brb bar ;
+               foo: brw DESTINATION ;
+               bar:
+
+    (long displacement)
+               OPCODE ..., foo ;
+               brb bar ;
+               foo: jmp DESTINATION ;
+               bar:
+
+
+File: as.info,  Node: VAX-operands,  Next: VAX-no,  Prev: VAX-branch,  Up: Vax-Dependent
+
+8.32.6 VAX Operands
+-------------------
+
+The immediate character is `$' for Unix compatibility, not `#' as DEC
+writes it.
+
+   The indirect character is `*' for Unix compatibility, not `@' as DEC
+writes it.
+
+   The displacement sizing character is ``' (an accent grave) for Unix
+compatibility, not `^' as DEC writes it.  The letter preceding ``' may
+have either case.  `G' is not understood, but all other letters (`b i l
+s w') are understood.
+
+   Register names understood are `r0 r1 r2 ... r15 ap fp sp pc'.  Upper
+and lower case letters are equivalent.
+
+   For instance
+     tstb *w`$4(r5)
+
+   Any expression is permitted in an operand.  Operands are comma
+separated.
+
+
+File: as.info,  Node: VAX-no,  Prev: VAX-operands,  Up: Vax-Dependent
+
+8.32.7 Not Supported on VAX
+---------------------------
+
+Vax bit fields can not be assembled with `as'.  Someone can add the
+required code if they really need it.
+
+
+File: as.info,  Node: V850-Dependent,  Next: Xtensa-Dependent,  Prev: TIC54X-Dependent,  Up: Machine Dependencies
+
+8.33 v850 Dependent Features
+============================
+
+* Menu:
+
+* V850 Options::              Options
+* V850 Syntax::               Syntax
+* V850 Floating Point::       Floating Point
+* V850 Directives::           V850 Machine Directives
+* V850 Opcodes::              Opcodes
+
+
+File: as.info,  Node: V850 Options,  Next: V850 Syntax,  Up: V850-Dependent
+
+8.33.1 Options
+--------------
+
+`as' supports the following additional command-line options for the
+V850 processor family:
+
+`-wsigned_overflow'
+     Causes warnings to be produced when signed immediate values
+     overflow the space available for then within their opcodes.  By
+     default this option is disabled as it is possible to receive
+     spurious warnings due to using exact bit patterns as immediate
+     constants.
+
+`-wunsigned_overflow'
+     Causes warnings to be produced when unsigned immediate values
+     overflow the space available for then within their opcodes.  By
+     default this option is disabled as it is possible to receive
+     spurious warnings due to using exact bit patterns as immediate
+     constants.
+
+`-mv850'
+     Specifies that the assembled code should be marked as being
+     targeted at the V850 processor.  This allows the linker to detect
+     attempts to link such code with code assembled for other
+     processors.
+
+`-mv850e'
+     Specifies that the assembled code should be marked as being
+     targeted at the V850E processor.  This allows the linker to detect
+     attempts to link such code with code assembled for other
+     processors.
+
+`-mv850e1'
+     Specifies that the assembled code should be marked as being
+     targeted at the V850E1 processor.  This allows the linker to
+     detect attempts to link such code with code assembled for other
+     processors.
+
+`-mv850any'
+     Specifies that the assembled code should be marked as being
+     targeted at the V850 processor but support instructions that are
+     specific to the extended variants of the process.  This allows the
+     production of binaries that contain target specific code, but
+     which are also intended to be used in a generic fashion.  For
+     example libgcc.a contains generic routines used by the code
+     produced by GCC for all versions of the v850 architecture,
+     together with support routines only used by the V850E architecture.
+
+`-mrelax'
+     Enables relaxation.  This allows the .longcall and .longjump pseudo
+     ops to be used in the assembler source code.  These ops label
+     sections of code which are either a long function call or a long
+     branch.  The assembler will then flag these sections of code and
+     the linker will attempt to relax them.
+
+
+
+File: as.info,  Node: V850 Syntax,  Next: V850 Floating Point,  Prev: V850 Options,  Up: V850-Dependent
+
+8.33.2 Syntax
+-------------
+
+* Menu:
+
+* V850-Chars::                Special Characters
+* V850-Regs::                 Register Names
+
+
+File: as.info,  Node: V850-Chars,  Next: V850-Regs,  Up: V850 Syntax
+
+8.33.2.1 Special Characters
+...........................
+
+`#' is the line comment character.
+
+
+File: as.info,  Node: V850-Regs,  Prev: V850-Chars,  Up: V850 Syntax
+
+8.33.2.2 Register Names
+.......................
+
+`as' supports the following names for registers:
+`general register 0'
+     r0, zero
+
+`general register 1'
+     r1
+
+`general register 2'
+     r2, hp 
+
+`general register 3'
+     r3, sp 
+
+`general register 4'
+     r4, gp 
+
+`general register 5'
+     r5, tp
+
+`general register 6'
+     r6
+
+`general register 7'
+     r7
+
+`general register 8'
+     r8
+
+`general register 9'
+     r9
+
+`general register 10'
+     r10
+
+`general register 11'
+     r11
+
+`general register 12'
+     r12
+
+`general register 13'
+     r13
+
+`general register 14'
+     r14
+
+`general register 15'
+     r15
+
+`general register 16'
+     r16
+
+`general register 17'
+     r17
+
+`general register 18'
+     r18
+
+`general register 19'
+     r19
+
+`general register 20'
+     r20
+
+`general register 21'
+     r21
+
+`general register 22'
+     r22
+
+`general register 23'
+     r23
+
+`general register 24'
+     r24
+
+`general register 25'
+     r25
+
+`general register 26'
+     r26
+
+`general register 27'
+     r27
+
+`general register 28'
+     r28
+
+`general register 29'
+     r29 
+
+`general register 30'
+     r30, ep 
+
+`general register 31'
+     r31, lp 
+
+`system register 0'
+     eipc 
+
+`system register 1'
+     eipsw 
+
+`system register 2'
+     fepc 
+
+`system register 3'
+     fepsw 
+
+`system register 4'
+     ecr 
+
+`system register 5'
+     psw 
+
+`system register 16'
+     ctpc 
+
+`system register 17'
+     ctpsw 
+
+`system register 18'
+     dbpc 
+
+`system register 19'
+     dbpsw 
+
+`system register 20'
+     ctbp
+
+
+File: as.info,  Node: V850 Floating Point,  Next: V850 Directives,  Prev: V850 Syntax,  Up: V850-Dependent
+
+8.33.3 Floating Point
+---------------------
+
+The V850 family uses IEEE floating-point numbers.
+
+
+File: as.info,  Node: V850 Directives,  Next: V850 Opcodes,  Prev: V850 Floating Point,  Up: V850-Dependent
+
+8.33.4 V850 Machine Directives
+------------------------------
+
+`.offset <EXPRESSION>'
+     Moves the offset into the current section to the specified amount.
+
+`.section "name", <type>'
+     This is an extension to the standard .section directive.  It sets
+     the current section to be <type> and creates an alias for this
+     section called "name".
+
+`.v850'
+     Specifies that the assembled code should be marked as being
+     targeted at the V850 processor.  This allows the linker to detect
+     attempts to link such code with code assembled for other
+     processors.
+
+`.v850e'
+     Specifies that the assembled code should be marked as being
+     targeted at the V850E processor.  This allows the linker to detect
+     attempts to link such code with code assembled for other
+     processors.
+
+`.v850e1'
+     Specifies that the assembled code should be marked as being
+     targeted at the V850E1 processor.  This allows the linker to
+     detect attempts to link such code with code assembled for other
+     processors.
+
+
+
+File: as.info,  Node: V850 Opcodes,  Prev: V850 Directives,  Up: V850-Dependent
+
+8.33.5 Opcodes
+--------------
+
+`as' implements all the standard V850 opcodes.
+
+   `as' also implements the following pseudo ops:
+
+`hi0()'
+     Computes the higher 16 bits of the given expression and stores it
+     into the immediate operand field of the given instruction.  For
+     example:
+
+     `mulhi hi0(here - there), r5, r6'
+
+     computes the difference between the address of labels 'here' and
+     'there', takes the upper 16 bits of this difference, shifts it
+     down 16 bits and then mutliplies it by the lower 16 bits in
+     register 5, putting the result into register 6.
+
+`lo()'
+     Computes the lower 16 bits of the given expression and stores it
+     into the immediate operand field of the given instruction.  For
+     example:
+
+     `addi lo(here - there), r5, r6'
+
+     computes the difference between the address of labels 'here' and
+     'there', takes the lower 16 bits of this difference and adds it to
+     register 5, putting the result into register 6.
+
+`hi()'
+     Computes the higher 16 bits of the given expression and then adds
+     the value of the most significant bit of the lower 16 bits of the
+     expression and stores the result into the immediate operand field
+     of the given instruction.  For example the following code can be
+     used to compute the address of the label 'here' and store it into
+     register 6:
+
+     `movhi hi(here), r0, r6'     `movea lo(here), r6, r6'
+
+     The reason for this special behaviour is that movea performs a sign
+     extension on its immediate operand.  So for example if the address
+     of 'here' was 0xFFFFFFFF then without the special behaviour of the
+     hi() pseudo-op the movhi instruction would put 0xFFFF0000 into r6,
+     then the movea instruction would takes its immediate operand,
+     0xFFFF, sign extend it to 32 bits, 0xFFFFFFFF, and then add it
+     into r6 giving 0xFFFEFFFF which is wrong (the fifth nibble is E).
+     With the hi() pseudo op adding in the top bit of the lo() pseudo
+     op, the movhi instruction actually stores 0 into r6 (0xFFFF + 1 =
+     0x0000), so that the movea instruction stores 0xFFFFFFFF into r6 -
+     the right value.
+
+`hilo()'
+     Computes the 32 bit value of the given expression and stores it
+     into the immediate operand field of the given instruction (which
+     must be a mov instruction).  For example:
+
+     `mov hilo(here), r6'
+
+     computes the absolute address of label 'here' and puts the result
+     into register 6.
+
+`sdaoff()'
+     Computes the offset of the named variable from the start of the
+     Small Data Area (whoes address is held in register 4, the GP
+     register) and stores the result as a 16 bit signed value in the
+     immediate operand field of the given instruction.  For example:
+
+     `ld.w sdaoff(_a_variable)[gp],r6'
+
+     loads the contents of the location pointed to by the label
+     '_a_variable' into register 6, provided that the label is located
+     somewhere within +/- 32K of the address held in the GP register.
+     [Note the linker assumes that the GP register contains a fixed
+     address set to the address of the label called '__gp'.  This can
+     either be set up automatically by the linker, or specifically set
+     by using the `--defsym __gp=<value>' command line option].
+
+`tdaoff()'
+     Computes the offset of the named variable from the start of the
+     Tiny Data Area (whoes address is held in register 30, the EP
+     register) and stores the result as a 4,5, 7 or 8 bit unsigned
+     value in the immediate operand field of the given instruction.
+     For example:
+
+     `sld.w tdaoff(_a_variable)[ep],r6'
+
+     loads the contents of the location pointed to by the label
+     '_a_variable' into register 6, provided that the label is located
+     somewhere within +256 bytes of the address held in the EP
+     register.  [Note the linker assumes that the EP register contains
+     a fixed address set to the address of the label called '__ep'.
+     This can either be set up automatically by the linker, or
+     specifically set by using the `--defsym __ep=<value>' command line
+     option].
+
+`zdaoff()'
+     Computes the offset of the named variable from address 0 and
+     stores the result as a 16 bit signed value in the immediate
+     operand field of the given instruction.  For example:
+
+     `movea zdaoff(_a_variable),zero,r6'
+
+     puts the address of the label '_a_variable' into register 6,
+     assuming that the label is somewhere within the first 32K of
+     memory.  (Strictly speaking it also possible to access the last
+     32K of memory as well, as the offsets are signed).
+
+`ctoff()'
+     Computes the offset of the named variable from the start of the
+     Call Table Area (whoes address is helg in system register 20, the
+     CTBP register) and stores the result a 6 or 16 bit unsigned value
+     in the immediate field of then given instruction or piece of data.
+     For example:
+
+     `callt ctoff(table_func1)'
+
+     will put the call the function whoes address is held in the call
+     table at the location labeled 'table_func1'.
+
+`.longcall `name''
+     Indicates that the following sequence of instructions is a long
+     call to function `name'.  The linker will attempt to shorten this
+     call sequence if `name' is within a 22bit offset of the call.  Only
+     valid if the `-mrelax' command line switch has been enabled.
+
+`.longjump `name''
+     Indicates that the following sequence of instructions is a long
+     jump to label `name'.  The linker will attempt to shorten this code
+     sequence if `name' is within a 22bit offset of the jump.  Only
+     valid if the `-mrelax' command line switch has been enabled.
+
+
+   For information on the V850 instruction set, see `V850 Family
+32-/16-Bit single-Chip Microcontroller Architecture Manual' from NEC.
+Ltd.
+
+
+File: as.info,  Node: Xtensa-Dependent,  Next: Z8000-Dependent,  Prev: V850-Dependent,  Up: Machine Dependencies
+
+8.34 Xtensa Dependent Features
+==============================
+
+   This chapter covers features of the GNU assembler that are specific
+to the Xtensa architecture.  For details about the Xtensa instruction
+set, please consult the `Xtensa Instruction Set Architecture (ISA)
+Reference Manual'.
+
+* Menu:
+
+* Xtensa Options::              Command-line Options.
+* Xtensa Syntax::               Assembler Syntax for Xtensa Processors.
+* Xtensa Optimizations::        Assembler Optimizations.
+* Xtensa Relaxation::           Other Automatic Transformations.
+* Xtensa Directives::           Directives for Xtensa Processors.
+
+
+File: as.info,  Node: Xtensa Options,  Next: Xtensa Syntax,  Up: Xtensa-Dependent
+
+8.34.1 Command Line Options
+---------------------------
+
+The Xtensa version of the GNU assembler supports these special options:
+
+`--text-section-literals | --no-text-section-literals'
+     Control the treatment of literal pools.  The default is
+     `--no-text-section-literals', which places literals in a separate
+     section in the output file.  This allows the literal pool to be
+     placed in a data RAM/ROM.  With `--text-section-literals', the
+     literals are interspersed in the text section in order to keep
+     them as close as possible to their references.  This may be
+     necessary for large assembly files, where the literals would
+     otherwise be out of range of the `L32R' instructions in the text
+     section.  These options only affect literals referenced via
+     PC-relative `L32R' instructions; literals for absolute mode `L32R'
+     instructions are handled separately.
+
+`--absolute-literals | --no-absolute-literals'
+     Indicate to the assembler whether `L32R' instructions use absolute
+     or PC-relative addressing.  If the processor includes the absolute
+     addressing option, the default is to use absolute `L32R'
+     relocations.  Otherwise, only the PC-relative `L32R' relocations
+     can be used.
+
+`--target-align | --no-target-align'
+     Enable or disable automatic alignment to reduce branch penalties
+     at some expense in code size.  *Note Automatic Instruction
+     Alignment: Xtensa Automatic Alignment.  This optimization is
+     enabled by default.  Note that the assembler will always align
+     instructions like `LOOP' that have fixed alignment requirements.
+
+`--longcalls | --no-longcalls'
+     Enable or disable transformation of call instructions to allow
+     calls across a greater range of addresses.  *Note Function Call
+     Relaxation: Xtensa Call Relaxation.  This option should be used
+     when call targets can potentially be out of range.  It may degrade
+     both code size and performance, but the linker can generally
+     optimize away the unnecessary overhead when a call ends up within
+     range.  The default is `--no-longcalls'.
+
+`--transform | --no-transform'
+     Enable or disable all assembler transformations of Xtensa
+     instructions, including both relaxation and optimization.  The
+     default is `--transform'; `--no-transform' should only be used in
+     the rare cases when the instructions must be exactly as specified
+     in the assembly source.  Using `--no-transform' causes out of range
+     instruction operands to be errors.
+
+`--rename-section OLDNAME=NEWNAME'
+     Rename the OLDNAME section to NEWNAME.  This option can be used
+     multiple times to rename multiple sections.
+
+
+File: as.info,  Node: Xtensa Syntax,  Next: Xtensa Optimizations,  Prev: Xtensa Options,  Up: Xtensa-Dependent
+
+8.34.2 Assembler Syntax
+-----------------------
+
+Block comments are delimited by `/*' and `*/'.  End of line comments
+may be introduced with either `#' or `//'.
+
+   Instructions consist of a leading opcode or macro name followed by
+whitespace and an optional comma-separated list of operands:
+
+     OPCODE [OPERAND, ...]
+
+   Instructions must be separated by a newline or semicolon.
+
+   FLIX instructions, which bundle multiple opcodes together in a single
+instruction, are specified by enclosing the bundled opcodes inside
+braces:
+
+     {
+     [FORMAT]
+     OPCODE0 [OPERANDS]
+     OPCODE1 [OPERANDS]
+     OPCODE2 [OPERANDS]
+     ...
+     }
+
+   The opcodes in a FLIX instruction are listed in the same order as the
+corresponding instruction slots in the TIE format declaration.
+Directives and labels are not allowed inside the braces of a FLIX
+instruction.  A particular TIE format name can optionally be specified
+immediately after the opening brace, but this is usually unnecessary.
+The assembler will automatically search for a format that can encode the
+specified opcodes, so the format name need only be specified in rare
+cases where there is more than one applicable format and where it
+matters which of those formats is used.  A FLIX instruction can also be
+specified on a single line by separating the opcodes with semicolons:
+
+     { [FORMAT;] OPCODE0 [OPERANDS]; OPCODE1 [OPERANDS]; OPCODE2 [OPERANDS]; ... }
+
+   The assembler can automatically bundle opcodes into FLIX
+instructions.  It encodes the opcodes in order, one at a time, choosing
+the smallest format where each opcode can be encoded and filling unused
+instruction slots with no-ops.
+
+* Menu:
+
+* Xtensa Opcodes::              Opcode Naming Conventions.
+* Xtensa Registers::            Register Naming.
+
+
+File: as.info,  Node: Xtensa Opcodes,  Next: Xtensa Registers,  Up: Xtensa Syntax
+
+8.34.2.1 Opcode Names
+.....................
+
+See the `Xtensa Instruction Set Architecture (ISA) Reference Manual'
+for a complete list of opcodes and descriptions of their semantics.
+
+   If an opcode name is prefixed with an underscore character (`_'),
+`as' will not transform that instruction in any way.  The underscore
+prefix disables both optimization (*note Xtensa Optimizations: Xtensa
+Optimizations.) and relaxation (*note Xtensa Relaxation: Xtensa
+Relaxation.) for that particular instruction.  Only use the underscore
+prefix when it is essential to select the exact opcode produced by the
+assembler.  Using this feature unnecessarily makes the code less
+efficient by disabling assembler optimization and less flexible by
+disabling relaxation.
+
+   Note that this special handling of underscore prefixes only applies
+to Xtensa opcodes, not to either built-in macros or user-defined macros.
+When an underscore prefix is used with a macro (e.g., `_MOV'), it
+refers to a different macro.  The assembler generally provides built-in
+macros both with and without the underscore prefix, where the underscore
+versions behave as if the underscore carries through to the instructions
+in the macros.  For example, `_MOV' may expand to `_MOV.N'.
+
+   The underscore prefix only applies to individual instructions, not to
+series of instructions.  For example, if a series of instructions have
+underscore prefixes, the assembler will not transform the individual
+instructions, but it may insert other instructions between them (e.g.,
+to align a `LOOP' instruction).  To prevent the assembler from
+modifying a series of instructions as a whole, use the `no-transform'
+directive.  *Note transform: Transform Directive.
+
+
+File: as.info,  Node: Xtensa Registers,  Prev: Xtensa Opcodes,  Up: Xtensa Syntax
+
+8.34.2.2 Register Names
+.......................
+
+The assembly syntax for a register file entry is the "short" name for a
+TIE register file followed by the index into that register file.  For
+example, the general-purpose `AR' register file has a short name of
+`a', so these registers are named `a0'...`a15'.  As a special feature,
+`sp' is also supported as a synonym for `a1'.  Additional registers may
+be added by processor configuration options and by designer-defined TIE
+extensions.  An initial `$' character is optional in all register names.
+
+
+File: as.info,  Node: Xtensa Optimizations,  Next: Xtensa Relaxation,  Prev: Xtensa Syntax,  Up: Xtensa-Dependent
+
+8.34.3 Xtensa Optimizations
+---------------------------
+
+The optimizations currently supported by `as' are generation of density
+instructions where appropriate and automatic branch target alignment.
+
+* Menu:
+
+* Density Instructions::        Using Density Instructions.
+* Xtensa Automatic Alignment::  Automatic Instruction Alignment.
+
+
+File: as.info,  Node: Density Instructions,  Next: Xtensa Automatic Alignment,  Up: Xtensa Optimizations
+
+8.34.3.1 Using Density Instructions
+...................................
+
+The Xtensa instruction set has a code density option that provides
+16-bit versions of some of the most commonly used opcodes.  Use of these
+opcodes can significantly reduce code size.  When possible, the
+assembler automatically translates instructions from the core Xtensa
+instruction set into equivalent instructions from the Xtensa code
+density option.  This translation can be disabled by using underscore
+prefixes (*note Opcode Names: Xtensa Opcodes.), by using the
+`--no-transform' command-line option (*note Command Line Options:
+Xtensa Options.), or by using the `no-transform' directive (*note
+transform: Transform Directive.).
+
+   It is a good idea _not_ to use the density instructions directly.
+The assembler will automatically select dense instructions where
+possible.  If you later need to use an Xtensa processor without the code
+density option, the same assembly code will then work without
+modification.
+
+
+File: as.info,  Node: Xtensa Automatic Alignment,  Prev: Density Instructions,  Up: Xtensa Optimizations
+
+8.34.3.2 Automatic Instruction Alignment
+........................................
+
+The Xtensa assembler will automatically align certain instructions, both
+to optimize performance and to satisfy architectural requirements.
+
+   As an optimization to improve performance, the assembler attempts to
+align branch targets so they do not cross instruction fetch boundaries.
+(Xtensa processors can be configured with either 32-bit or 64-bit
+instruction fetch widths.)  An instruction immediately following a call
+is treated as a branch target in this context, because it will be the
+target of a return from the call.  This alignment has the potential to
+reduce branch penalties at some expense in code size.  The assembler
+will not attempt to align labels with the prefixes `.Ln' and `.LM',
+since these labels are used for debugging information and are not
+typically branch targets.  This optimization is enabled by default.
+You can disable it with the `--no-target-align' command-line option
+(*note Command Line Options: Xtensa Options.).
+
+   The target alignment optimization is done without adding instructions
+that could increase the execution time of the program.  If there are
+density instructions in the code preceding a target, the assembler can
+change the target alignment by widening some of those instructions to
+the equivalent 24-bit instructions.  Extra bytes of padding can be
+inserted immediately following unconditional jump and return
+instructions.  This approach is usually successful in aligning many,
+but not all, branch targets.
+
+   The `LOOP' family of instructions must be aligned such that the
+first instruction in the loop body does not cross an instruction fetch
+boundary (e.g., with a 32-bit fetch width, a `LOOP' instruction must be
+on either a 1 or 2 mod 4 byte boundary).  The assembler knows about
+this restriction and inserts the minimal number of 2 or 3 byte no-op
+instructions to satisfy it.  When no-op instructions are added, any
+label immediately preceding the original loop will be moved in order to
+refer to the loop instruction, not the newly generated no-op
+instruction.  To preserve binary compatibility across processors with
+different fetch widths, the assembler conservatively assumes a 32-bit
+fetch width when aligning `LOOP' instructions (except if the first
+instruction in the loop is a 64-bit instruction).
+
+   Similarly, the `ENTRY' instruction must be aligned on a 0 mod 4 byte
+boundary.  The assembler satisfies this requirement by inserting zero
+bytes when required.  In addition, labels immediately preceding the
+`ENTRY' instruction will be moved to the newly aligned instruction
+location.
+
+
+File: as.info,  Node: Xtensa Relaxation,  Next: Xtensa Directives,  Prev: Xtensa Optimizations,  Up: Xtensa-Dependent
+
+8.34.4 Xtensa Relaxation
+------------------------
+
+When an instruction operand is outside the range allowed for that
+particular instruction field, `as' can transform the code to use a
+functionally-equivalent instruction or sequence of instructions.  This
+process is known as "relaxation".  This is typically done for branch
+instructions because the distance of the branch targets is not known
+until assembly-time.  The Xtensa assembler offers branch relaxation and
+also extends this concept to function calls, `MOVI' instructions and
+other instructions with immediate fields.
+
+* Menu:
+
+* Xtensa Branch Relaxation::        Relaxation of Branches.
+* Xtensa Call Relaxation::          Relaxation of Function Calls.
+* Xtensa Immediate Relaxation::     Relaxation of other Immediate Fields.
+
+
+File: as.info,  Node: Xtensa Branch Relaxation,  Next: Xtensa Call Relaxation,  Up: Xtensa Relaxation
+
+8.34.4.1 Conditional Branch Relaxation
+......................................
+
+When the target of a branch is too far away from the branch itself,
+i.e., when the offset from the branch to the target is too large to fit
+in the immediate field of the branch instruction, it may be necessary to
+replace the branch with a branch around a jump.  For example,
+
+         beqz    a2, L
+
+   may result in:
+
+         bnez.n  a2, M
+         j L
+     M:
+
+   (The `BNEZ.N' instruction would be used in this example only if the
+density option is available.  Otherwise, `BNEZ' would be used.)
+
+   This relaxation works well because the unconditional jump instruction
+has a much larger offset range than the various conditional branches.
+However, an error will occur if a branch target is beyond the range of a
+jump instruction.  `as' cannot relax unconditional jumps.  Similarly,
+an error will occur if the original input contains an unconditional
+jump to a target that is out of range.
+
+   Branch relaxation is enabled by default.  It can be disabled by using
+underscore prefixes (*note Opcode Names: Xtensa Opcodes.), the
+`--no-transform' command-line option (*note Command Line Options:
+Xtensa Options.), or the `no-transform' directive (*note transform:
+Transform Directive.).
+
+
+File: as.info,  Node: Xtensa Call Relaxation,  Next: Xtensa Immediate Relaxation,  Prev: Xtensa Branch Relaxation,  Up: Xtensa Relaxation
+
+8.34.4.2 Function Call Relaxation
+.................................
+
+Function calls may require relaxation because the Xtensa immediate call
+instructions (`CALL0', `CALL4', `CALL8' and `CALL12') provide a
+PC-relative offset of only 512 Kbytes in either direction.  For larger
+programs, it may be necessary to use indirect calls (`CALLX0',
+`CALLX4', `CALLX8' and `CALLX12') where the target address is specified
+in a register.  The Xtensa assembler can automatically relax immediate
+call instructions into indirect call instructions.  This relaxation is
+done by loading the address of the called function into the callee's
+return address register and then using a `CALLX' instruction.  So, for
+example:
+
+         call8 func
+
+   might be relaxed to:
+
+         .literal .L1, func
+         l32r    a8, .L1
+         callx8  a8
+
+   Because the addresses of targets of function calls are not generally
+known until link-time, the assembler must assume the worst and relax all
+the calls to functions in other source files, not just those that really
+will be out of range.  The linker can recognize calls that were
+unnecessarily relaxed, and it will remove the overhead introduced by the
+assembler for those cases where direct calls are sufficient.
+
+   Call relaxation is disabled by default because it can have a negative
+effect on both code size and performance, although the linker can
+usually eliminate the unnecessary overhead.  If a program is too large
+and some of the calls are out of range, function call relaxation can be
+enabled using the `--longcalls' command-line option or the `longcalls'
+directive (*note longcalls: Longcalls Directive.).
+
+
+File: as.info,  Node: Xtensa Immediate Relaxation,  Prev: Xtensa Call Relaxation,  Up: Xtensa Relaxation
+
+8.34.4.3 Other Immediate Field Relaxation
+.........................................
+
+The assembler normally performs the following other relaxations.  They
+can be disabled by using underscore prefixes (*note Opcode Names:
+Xtensa Opcodes.), the `--no-transform' command-line option (*note
+Command Line Options: Xtensa Options.), or the `no-transform' directive
+(*note transform: Transform Directive.).
+
+   The `MOVI' machine instruction can only materialize values in the
+range from -2048 to 2047.  Values outside this range are best
+materialized with `L32R' instructions.  Thus:
+
+         movi a0, 100000
+
+   is assembled into the following machine code:
+
+         .literal .L1, 100000
+         l32r a0, .L1
+
+   The `L8UI' machine instruction can only be used with immediate
+offsets in the range from 0 to 255. The `L16SI' and `L16UI' machine
+instructions can only be used with offsets from 0 to 510.  The `L32I'
+machine instruction can only be used with offsets from 0 to 1020.  A
+load offset outside these ranges can be materalized with an `L32R'
+instruction if the destination register of the load is different than
+the source address register.  For example:
+
+         l32i a1, a0, 2040
+
+   is translated to:
+
+         .literal .L1, 2040
+         l32r a1, .L1
+         addi a1, a0, a1
+         l32i a1, a1, 0
+
+If the load destination and source address register are the same, an
+out-of-range offset causes an error.
+
+   The Xtensa `ADDI' instruction only allows immediate operands in the
+range from -128 to 127.  There are a number of alternate instruction
+sequences for the `ADDI' operation.  First, if the immediate is 0, the
+`ADDI' will be turned into a `MOV.N' instruction (or the equivalent
+`OR' instruction if the code density option is not available).  If the
+`ADDI' immediate is outside of the range -128 to 127, but inside the
+range -32896 to 32639, an `ADDMI' instruction or `ADDMI'/`ADDI'
+sequence will be used.  Finally, if the immediate is outside of this
+range and a free register is available, an `L32R'/`ADD' sequence will
+be used with a literal allocated from the literal pool.
+
+   For example:
+
+         addi    a5, a6, 0
+         addi    a5, a6, 512
+         addi    a5, a6, 513
+         addi    a5, a6, 50000
+
+   is assembled into the following:
+
+         .literal .L1, 50000
+         mov.n   a5, a6
+         addmi   a5, a6, 0x200
+         addmi   a5, a6, 0x200
+         addi    a5, a5, 1
+         l32r    a5, .L1
+         add     a5, a6, a5
+
+
+File: as.info,  Node: Xtensa Directives,  Prev: Xtensa Relaxation,  Up: Xtensa-Dependent
+
+8.34.5 Directives
+-----------------
+
+The Xtensa assember supports a region-based directive syntax:
+
+         .begin DIRECTIVE [OPTIONS]
+         ...
+         .end DIRECTIVE
+
+   All the Xtensa-specific directives that apply to a region of code use
+this syntax.
+
+   The directive applies to code between the `.begin' and the `.end'.
+The state of the option after the `.end' reverts to what it was before
+the `.begin'.  A nested `.begin'/`.end' region can further change the
+state of the directive without having to be aware of its outer state.
+For example, consider:
+
+         .begin no-transform
+     L:  add a0, a1, a2
+         .begin transform
+     M:  add a0, a1, a2
+         .end transform
+     N:  add a0, a1, a2
+         .end no-transform
+
+   The `ADD' opcodes at `L' and `N' in the outer `no-transform' region
+both result in `ADD' machine instructions, but the assembler selects an
+`ADD.N' instruction for the `ADD' at `M' in the inner `transform'
+region.
+
+   The advantage of this style is that it works well inside macros
+which can preserve the context of their callers.
+
+   The following directives are available:
+
+* Menu:
+
+* Schedule Directive::         Enable instruction scheduling.
+* Longcalls Directive::        Use Indirect Calls for Greater Range.
+* Transform Directive::        Disable All Assembler Transformations.
+* Literal Directive::          Intermix Literals with Instructions.
+* Literal Position Directive:: Specify Inline Literal Pool Locations.
+* Literal Prefix Directive::   Specify Literal Section Name Prefix.
+* Absolute Literals Directive:: Control PC-Relative vs. Absolute Literals.
+
+
+File: as.info,  Node: Schedule Directive,  Next: Longcalls Directive,  Up: Xtensa Directives
+
+8.34.5.1 schedule
+.................
+
+The `schedule' directive is recognized only for compatibility with
+Tensilica's assembler.
+
+         .begin [no-]schedule
+         .end [no-]schedule
+
+   This directive is ignored and has no effect on `as'.
+
+
+File: as.info,  Node: Longcalls Directive,  Next: Transform Directive,  Prev: Schedule Directive,  Up: Xtensa Directives
+
+8.34.5.2 longcalls
+..................
+
+The `longcalls' directive enables or disables function call relaxation.
+*Note Function Call Relaxation: Xtensa Call Relaxation.
+
+         .begin [no-]longcalls
+         .end [no-]longcalls
+
+   Call relaxation is disabled by default unless the `--longcalls'
+command-line option is specified.  The `longcalls' directive overrides
+the default determined by the command-line options.
+
+
+File: as.info,  Node: Transform Directive,  Next: Literal Directive,  Prev: Longcalls Directive,  Up: Xtensa Directives
+
+8.34.5.3 transform
+..................
+
+This directive enables or disables all assembler transformation,
+including relaxation (*note Xtensa Relaxation: Xtensa Relaxation.) and
+optimization (*note Xtensa Optimizations: Xtensa Optimizations.).
+
+         .begin [no-]transform
+         .end [no-]transform
+
+   Transformations are enabled by default unless the `--no-transform'
+option is used.  The `transform' directive overrides the default
+determined by the command-line options.  An underscore opcode prefix,
+disabling transformation of that opcode, always takes precedence over
+both directives and command-line flags.
+
+
+File: as.info,  Node: Literal Directive,  Next: Literal Position Directive,  Prev: Transform Directive,  Up: Xtensa Directives
+
+8.34.5.4 literal
+................
+
+The `.literal' directive is used to define literal pool data, i.e.,
+read-only 32-bit data accessed via `L32R' instructions.
+
+         .literal LABEL, VALUE[, VALUE...]
+
+   This directive is similar to the standard `.word' directive, except
+that the actual location of the literal data is determined by the
+assembler and linker, not by the position of the `.literal' directive.
+Using this directive gives the assembler freedom to locate the literal
+data in the most appropriate place and possibly to combine identical
+literals.  For example, the code:
+
+         entry sp, 40
+         .literal .L1, sym
+         l32r    a4, .L1
+
+   can be used to load a pointer to the symbol `sym' into register
+`a4'.  The value of `sym' will not be placed between the `ENTRY' and
+`L32R' instructions; instead, the assembler puts the data in a literal
+pool.
+
+   Literal pools for absolute mode `L32R' instructions (*note Absolute
+Literals Directive::) are placed in a seperate `.lit4' section.  By
+default literal pools for PC-relative mode `L32R' instructions are
+placed in a separate `.literal' section; however, when using the
+`--text-section-literals' option (*note Command Line Options: Xtensa
+Options.), the literal pools are placed in the current section.  These
+text section literal pools are created automatically before `ENTRY'
+instructions and manually after `.literal_position' directives (*note
+literal_position: Literal Position Directive.).  If there are no
+preceding `ENTRY' instructions, explicit `.literal_position' directives
+must be used to place the text section literal pools; otherwise, `as'
+will report an error.
+
+
+File: as.info,  Node: Literal Position Directive,  Next: Literal Prefix Directive,  Prev: Literal Directive,  Up: Xtensa Directives
+
+8.34.5.5 literal_position
+.........................
+
+When using `--text-section-literals' to place literals inline in the
+section being assembled, the `.literal_position' directive can be used
+to mark a potential location for a literal pool.
+
+         .literal_position
+
+   The `.literal_position' directive is ignored when the
+`--text-section-literals' option is not used or when `L32R'
+instructions use the absolute addressing mode.
+
+   The assembler will automatically place text section literal pools
+before `ENTRY' instructions, so the `.literal_position' directive is
+only needed to specify some other location for a literal pool.  You may
+need to add an explicit jump instruction to skip over an inline literal
+pool.
+
+   For example, an interrupt vector does not begin with an `ENTRY'
+instruction so the assembler will be unable to automatically find a good
+place to put a literal pool.  Moreover, the code for the interrupt
+vector must be at a specific starting address, so the literal pool
+cannot come before the start of the code.  The literal pool for the
+vector must be explicitly positioned in the middle of the vector (before
+any uses of the literals, due to the negative offsets used by
+PC-relative `L32R' instructions).  The `.literal_position' directive
+can be used to do this.  In the following code, the literal for `M'
+will automatically be aligned correctly and is placed after the
+unconditional jump.
+
+         .global M
+     code_start:
+         j continue
+         .literal_position
+         .align 4
+     continue:
+         movi    a4, M
+
+
+File: as.info,  Node: Literal Prefix Directive,  Next: Absolute Literals Directive,  Prev: Literal Position Directive,  Up: Xtensa Directives
+
+8.34.5.6 literal_prefix
+.......................
+
+The `literal_prefix' directive allows you to specify different sections
+to hold literals from different portions of an assembly file.  With
+this directive, a single assembly file can be used to generate code
+into multiple sections, including literals generated by the assembler.
+
+         .begin literal_prefix [NAME]
+         .end literal_prefix
+
+   By default the assembler places literal pools in sections separate
+from the instructions, using the default literal section names of
+`.literal' for PC-relative mode `L32R' instructions and `.lit4' for
+absolute mode `L32R' instructions (*note Absolute Literals
+Directive::).  The `literal_prefix' directive causes different literal
+sections to be used for the code inside the delimited region.  The new
+literal sections are determined by including NAME as a prefix to the
+default literal section names.  If the NAME argument is omitted, the
+literal sections revert to the defaults.  This directive has no effect
+when using the `--text-section-literals' option (*note Command Line
+Options: Xtensa Options.).
+
+   Except for two special cases, the assembler determines the new
+literal sections by simply prepending NAME to the default section names,
+resulting in `NAME.literal' and `NAME.lit4' sections.  The
+`literal_prefix' directive is often used with the name of the current
+text section as the prefix argument.  To facilitate this usage, the
+assembler uses special case rules when it recognizes NAME as a text
+section name.  First, if NAME ends with `.text', that suffix is not
+included in the literal section name.  For example, if NAME is
+`.iram0.text', then the literal sections will be `.iram0.literal' and
+`.iram0.lit4'.  Second, if NAME begins with `.gnu.linkonce.t.', then
+the literal section names are formed by replacing the `.t' substring
+with `.literal' and `.lit4'.  For example, if NAME is
+`.gnu.linkonce.t.func', the literal sections will be
+`.gnu.linkonce.literal.func' and `.gnu.linkonce.lit4.func'.
+
+
+File: as.info,  Node: Absolute Literals Directive,  Prev: Literal Prefix Directive,  Up: Xtensa Directives
+
+8.34.5.7 absolute-literals
+..........................
+
+The `absolute-literals' and `no-absolute-literals' directives control
+the absolute vs. PC-relative mode for `L32R' instructions.  These are
+relevant only for Xtensa configurations that include the absolute
+addressing option for `L32R' instructions.
+
+         .begin [no-]absolute-literals
+         .end [no-]absolute-literals
+
+   These directives do not change the `L32R' mode--they only cause the
+assembler to emit the appropriate kind of relocation for `L32R'
+instructions and to place the literal values in the appropriate section.
+To change the `L32R' mode, the program must write the `LITBASE' special
+register.  It is the programmer's responsibility to keep track of the
+mode and indicate to the assembler which mode is used in each region of
+code.
+
+   If the Xtensa configuration includes the absolute `L32R' addressing
+option, the default is to assume absolute `L32R' addressing unless the
+`--no-absolute-literals' command-line option is specified.  Otherwise,
+the default is to assume PC-relative `L32R' addressing.  The
+`absolute-literals' directive can then be used to override the default
+determined by the command-line options.
+
+
+File: as.info,  Node: Reporting Bugs,  Next: Acknowledgements,  Prev: Machine Dependencies,  Up: Top
+
+9 Reporting Bugs
+****************
+
+Your bug reports play an essential role in making `as' reliable.
+
+   Reporting a bug may help you by bringing a solution to your problem,
+or it may not.  But in any case the principal function of a bug report
+is to help the entire community by making the next version of `as' work
+better.  Bug reports are your contribution to the maintenance of `as'.
+
+   In order for a bug report to serve its purpose, you must include the
+information that enables us to fix the bug.
+
+* Menu:
+
+* Bug Criteria::                Have you found a bug?
+* Bug Reporting::               How to report bugs
+
+
+File: as.info,  Node: Bug Criteria,  Next: Bug Reporting,  Up: Reporting Bugs
+
+9.1 Have You Found a Bug?
+=========================
+
+If you are not sure whether you have found a bug, here are some
+guidelines:
+
+   * If the assembler gets a fatal signal, for any input whatever, that
+     is a `as' bug.  Reliable assemblers never crash.
+
+   * If `as' produces an error message for valid input, that is a bug.
+
+   * If `as' does not produce an error message for invalid input, that
+     is a bug.  However, you should note that your idea of "invalid
+     input" might be our idea of "an extension" or "support for
+     traditional practice".
+
+   * If you are an experienced user of assemblers, your suggestions for
+     improvement of `as' are welcome in any case.
+
+
+File: as.info,  Node: Bug Reporting,  Prev: Bug Criteria,  Up: Reporting Bugs
+
+9.2 How to Report Bugs
+======================
+
+A number of companies and individuals offer support for GNU products.
+If you obtained `as' from a support organization, we recommend you
+contact that organization first.
+
+   You can find contact information for many support companies and
+individuals in the file `etc/SERVICE' in the GNU Emacs distribution.
+
+   In any event, we also recommend that you send bug reports for `as'
+to `bug-binutils@gnu.org'.
+
+   The fundamental principle of reporting bugs usefully is this:
+*report all the facts*.  If you are not sure whether to state a fact or
+leave it out, state it!
+
+   Often people omit facts because they think they know what causes the
+problem and assume that some details do not matter.  Thus, you might
+assume that the name of a symbol you use in an example does not matter.
+Well, probably it does not, but one cannot be sure.  Perhaps the bug
+is a stray memory reference which happens to fetch from the location
+where that name is stored in memory; perhaps, if the name were
+different, the contents of that location would fool the assembler into
+doing the right thing despite the bug.  Play it safe and give a
+specific, complete example.  That is the easiest thing for you to do,
+and the most helpful.
+
+   Keep in mind that the purpose of a bug report is to enable us to fix
+the bug if it is new to us.  Therefore, always write your bug reports
+on the assumption that the bug has not been reported previously.
+
+   Sometimes people give a few sketchy facts and ask, "Does this ring a
+bell?"  This cannot help us fix a bug, so it is basically useless.  We
+respond by asking for enough details to enable us to investigate.  You
+might as well expedite matters by sending them to begin with.
+
+   To enable us to fix the bug, you should include all these things:
+
+   * The version of `as'.  `as' announces it if you start it with the
+     `--version' argument.
+
+     Without this, we will not know whether there is any point in
+     looking for the bug in the current version of `as'.
+
+   * Any patches you may have applied to the `as' source.
+
+   * The type of machine you are using, and the operating system name
+     and version number.
+
+   * What compiler (and its version) was used to compile `as'--e.g.
+     "`gcc-2.7'".
+
+   * The command arguments you gave the assembler to assemble your
+     example and observe the bug.  To guarantee you will not omit
+     something important, list them all.  A copy of the Makefile (or
+     the output from make) is sufficient.
+
+     If we were to try to guess the arguments, we would probably guess
+     wrong and then we might not encounter the bug.
+
+   * A complete input file that will reproduce the bug.  If the bug is
+     observed when the assembler is invoked via a compiler, send the
+     assembler source, not the high level language source.  Most
+     compilers will produce the assembler source when run with the `-S'
+     option.  If you are using `gcc', use the options `-v
+     --save-temps'; this will save the assembler source in a file with
+     an extension of `.s', and also show you exactly how `as' is being
+     run.
+
+   * A description of what behavior you observe that you believe is
+     incorrect.  For example, "It gets a fatal signal."
+
+     Of course, if the bug is that `as' gets a fatal signal, then we
+     will certainly notice it.  But if the bug is incorrect output, we
+     might not notice unless it is glaringly wrong.  You might as well
+     not give us a chance to make a mistake.
+
+     Even if the problem you experience is a fatal signal, you should
+     still say so explicitly.  Suppose something strange is going on,
+     such as, your copy of `as' is out of synch, or you have
+     encountered a bug in the C library on your system.  (This has
+     happened!)  Your copy might crash and ours would not.  If you told
+     us to expect a crash, then when ours fails to crash, we would know
+     that the bug was not happening for us.  If you had not told us to
+     expect a crash, then we would not be able to draw any conclusion
+     from our observations.
+
+   * If you wish to suggest changes to the `as' source, send us context
+     diffs, as generated by `diff' with the `-u', `-c', or `-p' option.
+     Always send diffs from the old file to the new file.  If you even
+     discuss something in the `as' source, refer to it by context, not
+     by line number.
+
+     The line numbers in our development sources will not match those
+     in your sources.  Your line numbers would convey no useful
+     information to us.
+
+   Here are some things that are not necessary:
+
+   * A description of the envelope of the bug.
+
+     Often people who encounter a bug spend a lot of time investigating
+     which changes to the input file will make the bug go away and which
+     changes will not affect it.
+
+     This is often time consuming and not very useful, because the way
+     we will find the bug is by running a single example under the
+     debugger with breakpoints, not by pure deduction from a series of
+     examples.  We recommend that you save your time for something else.
+
+     Of course, if you can find a simpler example to report _instead_
+     of the original one, that is a convenience for us.  Errors in the
+     output will be easier to spot, running under the debugger will take
+     less time, and so on.
+
+     However, simplification is not vital; if you do not want to do
+     this, report the bug anyway and send us the entire test case you
+     used.
+
+   * A patch for the bug.
+
+     A patch for the bug does help us if it is a good one.  But do not
+     omit the necessary information, such as the test case, on the
+     assumption that a patch is all we need.  We might see problems
+     with your patch and decide to fix the problem another way, or we
+     might not understand it at all.
+
+     Sometimes with a program as complicated as `as' it is very hard to
+     construct an example that will make the program follow a certain
+     path through the code.  If you do not send us the example, we will
+     not be able to construct one, so we will not be able to verify
+     that the bug is fixed.
+
+     And if we cannot understand what bug you are trying to fix, or why
+     your patch should be an improvement, we will not install it.  A
+     test case will help us to understand.
+
+   * A guess about what the bug is or what it depends on.
+
+     Such guesses are usually wrong.  Even we cannot guess right about
+     such things without first using the debugger to find the facts.
+
+
+File: as.info,  Node: Acknowledgements,  Next: GNU Free Documentation License,  Prev: Reporting Bugs,  Up: Top
+
+10 Acknowledgements
+*******************
+
+If you have contributed to GAS and your name isn't listed here, it is
+not meant as a slight.  We just don't know about it.  Send mail to the
+maintainer, and we'll correct the situation.  Currently the maintainer
+is Ken Raeburn (email address `raeburn@cygnus.com').
+
+   Dean Elsner wrote the original GNU assembler for the VAX.(1)
+
+   Jay Fenlason maintained GAS for a while, adding support for
+GDB-specific debug information and the 68k series machines, most of the
+preprocessing pass, and extensive changes in `messages.c',
+`input-file.c', `write.c'.
+
+   K. Richard Pixley maintained GAS for a while, adding various
+enhancements and many bug fixes, including merging support for several
+processors, breaking GAS up to handle multiple object file format back
+ends (including heavy rewrite, testing, an integration of the coff and
+b.out back ends), adding configuration including heavy testing and
+verification of cross assemblers and file splits and renaming,
+converted GAS to strictly ANSI C including full prototypes, added
+support for m680[34]0 and cpu32, did considerable work on i960
+including a COFF port (including considerable amounts of reverse
+engineering), a SPARC opcode file rewrite, DECstation, rs6000, and
+hp300hpux host ports, updated "know" assertions and made them work,
+much other reorganization, cleanup, and lint.
+
+   Ken Raeburn wrote the high-level BFD interface code to replace most
+of the code in format-specific I/O modules.
+
+   The original VMS support was contributed by David L. Kashtan.  Eric
+Youngdale has done much work with it since.
+
+   The Intel 80386 machine description was written by Eliot Dresselhaus.
+
+   Minh Tran-Le at IntelliCorp contributed some AIX 386 support.
+
+   The Motorola 88k machine description was contributed by Devon Bowen
+of Buffalo University and Torbjorn Granlund of the Swedish Institute of
+Computer Science.
+
+   Keith Knowles at the Open Software Foundation wrote the original
+MIPS back end (`tc-mips.c', `tc-mips.h'), and contributed Rose format
+support (which hasn't been merged in yet).  Ralph Campbell worked with
+the MIPS code to support a.out format.
+
+   Support for the Zilog Z8k and Renesas H8/300 and H8/500 processors
+(tc-z8k, tc-h8300, tc-h8500), and IEEE 695 object file format
+(obj-ieee), was written by Steve Chamberlain of Cygnus Support.  Steve
+also modified the COFF back end to use BFD for some low-level
+operations, for use with the H8/300 and AMD 29k targets.
+
+   John Gilmore built the AMD 29000 support, added `.include' support,
+and simplified the configuration of which versions accept which
+directives.  He updated the 68k machine description so that Motorola's
+opcodes always produced fixed-size instructions (e.g., `jsr'), while
+synthetic instructions remained shrinkable (`jbsr').  John fixed many
+bugs, including true tested cross-compilation support, and one bug in
+relaxation that took a week and required the proverbial one-bit fix.
+
+   Ian Lance Taylor of Cygnus Support merged the Motorola and MIT
+syntax for the 68k, completed support for some COFF targets (68k, i386
+SVR3, and SCO Unix), added support for MIPS ECOFF and ELF targets,
+wrote the initial RS/6000 and PowerPC assembler, and made a few other
+minor patches.
+
+   Steve Chamberlain made GAS able to generate listings.
+
+   Hewlett-Packard contributed support for the HP9000/300.
+
+   Jeff Law wrote GAS and BFD support for the native HPPA object format
+(SOM) along with a fairly extensive HPPA testsuite (for both SOM and
+ELF object formats).  This work was supported by both the Center for
+Software Science at the University of Utah and Cygnus Support.
+
+   Support for ELF format files has been worked on by Mark Eichin of
+Cygnus Support (original, incomplete implementation for SPARC), Pete
+Hoogenboom and Jeff Law at the University of Utah (HPPA mainly),
+Michael Meissner of the Open Software Foundation (i386 mainly), and Ken
+Raeburn of Cygnus Support (sparc, and some initial 64-bit support).
+
+   Linas Vepstas added GAS support for the ESA/390 "IBM 370"
+architecture.
+
+   Richard Henderson rewrote the Alpha assembler. Klaus Kaempf wrote
+GAS and BFD support for openVMS/Alpha.
+
+   Timothy Wall, Michael Hayes, and Greg Smart contributed to the
+various tic* flavors.
+
+   David Heine, Sterling Augustine, Bob Wilson and John Ruttenberg from
+Tensilica, Inc. added support for Xtensa processors.
+
+   Several engineers at Cygnus Support have also provided many small
+bug fixes and configuration enhancements.
+
+   Many others have contributed large or small bugfixes and
+enhancements.  If you have contributed significant work and are not
+mentioned on this list, and want to be, let us know.  Some of the
+history has been lost; we are not intentionally leaving anyone out.
+
+   ---------- Footnotes ----------
+
+   (1) Any more details?
+
+
+File: as.info,  Node: GNU Free Documentation License,  Next: Index,  Prev: Acknowledgements,  Up: Top
+
+Appendix A GNU Free Documentation License
+*****************************************
+
+                        Version 1.1, March 2000
+
+     Copyright (C) 2000, 2003 Free Software Foundation, Inc.
+     59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+
+     Everyone is permitted to copy and distribute verbatim copies
+     of this license document, but changing it is not allowed.
+
+
+  0. PREAMBLE
+
+     The purpose of this License is to make a manual, textbook, or other
+     written document "free" in the sense of freedom: to assure everyone
+     the effective freedom to copy and redistribute it, with or without
+     modifying it, either commercially or noncommercially.  Secondarily,
+     this License preserves for the author and publisher a way to get
+     credit for their work, while not being considered responsible for
+     modifications made by others.
+
+     This License is a kind of "copyleft", which means that derivative
+     works of the document must themselves be free in the same sense.
+     It complements the GNU General Public License, which is a copyleft
+     license designed for free software.
+
+     We have designed this License in order to use it for manuals for
+     free software, because free software needs free documentation: a
+     free program should come with manuals providing the same freedoms
+     that the software does.  But this License is not limited to
+     software manuals; it can be used for any textual work, regardless
+     of subject matter or whether it is published as a printed book.
+     We recommend this License principally for works whose purpose is
+     instruction or reference.
+
+
+  1. APPLICABILITY AND DEFINITIONS
+
+     This License applies to any manual or other work that contains a
+     notice placed by the copyright holder saying it can be distributed
+     under the terms of this License.  The "Document", below, refers to
+     any such manual or work.  Any member of the public is a licensee,
+     and is addressed as "you."
+
+     A "Modified Version" of the Document means any work containing the
+     Document or a portion of it, either copied verbatim, or with
+     modifications and/or translated into another language.
+
+     A "Secondary Section" is a named appendix or a front-matter
+     section of the Document that deals exclusively with the
+     relationship of the publishers or authors of the Document to the
+     Document's overall subject (or to related matters) and contains
+     nothing that could fall directly within that overall subject.
+     (For example, if the Document is in part a textbook of
+     mathematics, a Secondary Section may not explain any mathematics.)
+     The relationship could be a matter of historical connection with
+     the subject or with related matters, or of legal, commercial,
+     philosophical, ethical or political position regarding them.
+
+     The "Invariant Sections" are certain Secondary Sections whose
+     titles are designated, as being those of Invariant Sections, in
+     the notice that says that the Document is released under this
+     License.
+
+     The "Cover Texts" are certain short passages of text that are
+     listed, as Front-Cover Texts or Back-Cover Texts, in the notice
+     that says that the Document is released under this License.
+
+     A "Transparent" copy of the Document means a machine-readable copy,
+     represented in a format whose specification is available to the
+     general public, whose contents can be viewed and edited directly
+     and straightforwardly with generic text editors or (for images
+     composed of pixels) generic paint programs or (for drawings) some
+     widely available drawing editor, and that is suitable for input to
+     text formatters or for automatic translation to a variety of
+     formats suitable for input to text formatters.  A copy made in an
+     otherwise Transparent file format whose markup has been designed
+     to thwart or discourage subsequent modification by readers is not
+     Transparent.  A copy that is not "Transparent" is called "Opaque."
+
+     Examples of suitable formats for Transparent copies include plain
+     ASCII without markup, Texinfo input format, LaTeX input format,
+     SGML or XML using a publicly available DTD, and
+     standard-conforming simple HTML designed for human modification.
+     Opaque formats include PostScript, PDF, proprietary formats that
+     can be read and edited only by proprietary word processors, SGML
+     or XML for which the DTD and/or processing tools are not generally
+     available, and the machine-generated HTML produced by some word
+     processors for output purposes only.
+
+     The "Title Page" means, for a printed book, the title page itself,
+     plus such following pages as are needed to hold, legibly, the
+     material this License requires to appear in the title page.  For
+     works in formats which do not have any title page as such, "Title
+     Page" means the text near the most prominent appearance of the
+     work's title, preceding the beginning of the body of the text.
+
+  2. VERBATIM COPYING
+
+     You may copy and distribute the Document in any medium, either
+     commercially or noncommercially, provided that this License, the
+     copyright notices, and the license notice saying this License
+     applies to the Document are reproduced in all copies, and that you
+     add no other conditions whatsoever to those of this License.  You
+     may not use technical measures to obstruct or control the reading
+     or further copying of the copies you make or distribute.  However,
+     you may accept compensation in exchange for copies.  If you
+     distribute a large enough number of copies you must also follow
+     the conditions in section 3.
+
+     You may also lend copies, under the same conditions stated above,
+     and you may publicly display copies.
+
+  3. COPYING IN QUANTITY
+
+     If you publish printed copies of the Document numbering more than
+     100, and the Document's license notice requires Cover Texts, you
+     must enclose the copies in covers that carry, clearly and legibly,
+     all these Cover Texts: Front-Cover Texts on the front cover, and
+     Back-Cover Texts on the back cover.  Both covers must also clearly
+     and legibly identify you as the publisher of these copies.  The
+     front cover must present the full title with all words of the
+     title equally prominent and visible.  You may add other material
+     on the covers in addition.  Copying with changes limited to the
+     covers, as long as they preserve the title of the Document and
+     satisfy these conditions, can be treated as verbatim copying in
+     other respects.
+
+     If the required texts for either cover are too voluminous to fit
+     legibly, you should put the first ones listed (as many as fit
+     reasonably) on the actual cover, and continue the rest onto
+     adjacent pages.
+
+     If you publish or distribute Opaque copies of the Document
+     numbering more than 100, you must either include a
+     machine-readable Transparent copy along with each Opaque copy, or
+     state in or with each Opaque copy a publicly-accessible
+     computer-network location containing a complete Transparent copy
+     of the Document, free of added material, which the general
+     network-using public has access to download anonymously at no
+     charge using public-standard network protocols.  If you use the
+     latter option, you must take reasonably prudent steps, when you
+     begin distribution of Opaque copies in quantity, to ensure that
+     this Transparent copy will remain thus accessible at the stated
+     location until at least one year after the last time you
+     distribute an Opaque copy (directly or through your agents or
+     retailers) of that edition to the public.
+
+     It is requested, but not required, that you contact the authors of
+     the Document well before redistributing any large number of
+     copies, to give them a chance to provide you with an updated
+     version of the Document.
+
+  4. MODIFICATIONS
+
+     You may copy and distribute a Modified Version of the Document
+     under the conditions of sections 2 and 3 above, provided that you
+     release the Modified Version under precisely this License, with
+     the Modified Version filling the role of the Document, thus
+     licensing distribution and modification of the Modified Version to
+     whoever possesses a copy of it.  In addition, you must do these
+     things in the Modified Version:
+
+     A. Use in the Title Page (and on the covers, if any) a title
+     distinct    from that of the Document, and from those of previous
+     versions    (which should, if there were any, be listed in the
+     History section    of the Document).  You may use the same title
+     as a previous version    if the original publisher of that version
+     gives permission.
+     B. List on the Title Page, as authors, one or more persons or
+     entities    responsible for authorship of the modifications in the
+     Modified    Version, together with at least five of the principal
+     authors of the    Document (all of its principal authors, if it
+     has less than five).
+     C. State on the Title page the name of the publisher of the
+     Modified Version, as the publisher.
+     D. Preserve all the copyright notices of the Document.
+     E. Add an appropriate copyright notice for your modifications
+     adjacent to the other copyright notices.
+     F. Include, immediately after the copyright notices, a license
+     notice    giving the public permission to use the Modified Version
+     under the    terms of this License, in the form shown in the
+     Addendum below.
+     G. Preserve in that license notice the full lists of Invariant
+     Sections    and required Cover Texts given in the Document's
+     license notice.
+     H. Include an unaltered copy of this License.
+     I. Preserve the section entitled "History", and its title, and add
+     to    it an item stating at least the title, year, new authors, and
+       publisher of the Modified Version as given on the Title Page.
+     If    there is no section entitled "History" in the Document,
+     create one    stating the title, year, authors, and publisher of
+     the Document as    given on its Title Page, then add an item
+     describing the Modified    Version as stated in the previous
+     sentence.
+     J. Preserve the network location, if any, given in the Document for
+       public access to a Transparent copy of the Document, and
+     likewise    the network locations given in the Document for
+     previous versions    it was based on.  These may be placed in the
+     "History" section.     You may omit a network location for a work
+     that was published at    least four years before the Document
+     itself, or if the original    publisher of the version it refers
+     to gives permission.
+     K. In any section entitled "Acknowledgements" or "Dedications",
+     preserve the section's title, and preserve in the section all the
+      substance and tone of each of the contributor acknowledgements
+     and/or dedications given therein.
+     L. Preserve all the Invariant Sections of the Document,
+     unaltered in their text and in their titles.  Section numbers
+     or the equivalent are not considered part of the section titles.
+     M. Delete any section entitled "Endorsements."  Such a section
+     may not be included in the Modified Version.
+     N. Do not retitle any existing section as "Endorsements"    or to
+     conflict in title with any Invariant Section.
+
+     If the Modified Version includes new front-matter sections or
+     appendices that qualify as Secondary Sections and contain no
+     material copied from the Document, you may at your option
+     designate some or all of these sections as invariant.  To do this,
+     add their titles to the list of Invariant Sections in the Modified
+     Version's license notice.  These titles must be distinct from any
+     other section titles.
+
+     You may add a section entitled "Endorsements", provided it contains
+     nothing but endorsements of your Modified Version by various
+     parties-for example, statements of peer review or that the text has
+     been approved by an organization as the authoritative definition
+     of a standard.
+
+     You may add a passage of up to five words as a Front-Cover Text,
+     and a passage of up to 25 words as a Back-Cover Text, to the end
+     of the list of Cover Texts in the Modified Version.  Only one
+     passage of Front-Cover Text and one of Back-Cover Text may be
+     added by (or through arrangements made by) any one entity.  If the
+     Document already includes a cover text for the same cover,
+     previously added by you or by arrangement made by the same entity
+     you are acting on behalf of, you may not add another; but you may
+     replace the old one, on explicit permission from the previous
+     publisher that added the old one.
+
+     The author(s) and publisher(s) of the Document do not by this
+     License give permission to use their names for publicity for or to
+     assert or imply endorsement of any Modified Version.
+
+  5. COMBINING DOCUMENTS
+
+     You may combine the Document with other documents released under
+     this License, under the terms defined in section 4 above for
+     modified versions, provided that you include in the combination
+     all of the Invariant Sections of all of the original documents,
+     unmodified, and list them all as Invariant Sections of your
+     combined work in its license notice.
+
+     The combined work need only contain one copy of this License, and
+     multiple identical Invariant Sections may be replaced with a single
+     copy.  If there are multiple Invariant Sections with the same name
+     but different contents, make the title of each such section unique
+     by adding at the end of it, in parentheses, the name of the
+     original author or publisher of that section if known, or else a
+     unique number.  Make the same adjustment to the section titles in
+     the list of Invariant Sections in the license notice of the
+     combined work.
+
+     In the combination, you must combine any sections entitled
+     "History" in the various original documents, forming one section
+     entitled "History"; likewise combine any sections entitled
+     "Acknowledgements", and any sections entitled "Dedications."  You
+     must delete all sections entitled "Endorsements."
+
+  6. COLLECTIONS OF DOCUMENTS
+
+     You may make a collection consisting of the Document and other
+     documents released under this License, and replace the individual
+     copies of this License in the various documents with a single copy
+     that is included in the collection, provided that you follow the
+     rules of this License for verbatim copying of each of the
+     documents in all other respects.
+
+     You may extract a single document from such a collection, and
+     distribute it individually under this License, provided you insert
+     a copy of this License into the extracted document, and follow
+     this License in all other respects regarding verbatim copying of
+     that document.
+
+  7. AGGREGATION WITH INDEPENDENT WORKS
+
+     A compilation of the Document or its derivatives with other
+     separate and independent documents or works, in or on a volume of
+     a storage or distribution medium, does not as a whole count as a
+     Modified Version of the Document, provided no compilation
+     copyright is claimed for the compilation.  Such a compilation is
+     called an "aggregate", and this License does not apply to the
+     other self-contained works thus compiled with the Document, on
+     account of their being thus compiled, if they are not themselves
+     derivative works of the Document.
+
+     If the Cover Text requirement of section 3 is applicable to these
+     copies of the Document, then if the Document is less than one
+     quarter of the entire aggregate, the Document's Cover Texts may be
+     placed on covers that surround only the Document within the
+     aggregate.  Otherwise they must appear on covers around the whole
+     aggregate.
+
+  8. TRANSLATION
+
+     Translation is considered a kind of modification, so you may
+     distribute translations of the Document under the terms of section
+     4.  Replacing Invariant Sections with translations requires special
+     permission from their copyright holders, but you may include
+     translations of some or all Invariant Sections in addition to the
+     original versions of these Invariant Sections.  You may include a
+     translation of this License provided that you also include the
+     original English version of this License.  In case of a
+     disagreement between the translation and the original English
+     version of this License, the original English version will prevail.
+
+  9. TERMINATION
+
+     You may not copy, modify, sublicense, or distribute the Document
+     except as expressly provided for under this License.  Any other
+     attempt to copy, modify, sublicense or distribute the Document is
+     void, and will automatically terminate your rights under this
+     License.  However, parties who have received copies, or rights,
+     from you under this License will not have their licenses
+     terminated so long as such parties remain in full compliance.
+
+ 10. FUTURE REVISIONS OF THIS LICENSE
+
+     The Free Software Foundation may publish new, revised versions of
+     the GNU Free Documentation License from time to time.  Such new
+     versions will be similar in spirit to the present version, but may
+     differ in detail to address new problems or concerns.  See
+     http://www.gnu.org/copyleft/.
+
+     Each version of the License is given a distinguishing version
+     number.  If the Document specifies that a particular numbered
+     version of this License "or any later version" applies to it, you
+     have the option of following the terms and conditions either of
+     that specified version or of any later version that has been
+     published (not as a draft) by the Free Software Foundation.  If
+     the Document does not specify a version number of this License,
+     you may choose any version ever published (not as a draft) by the
+     Free Software Foundation.
+
+
+ADDENDUM: How to use this License for your documents
+====================================================
+
+To use this License in a document you have written, include a copy of
+the License in the document and put the following copyright and license
+notices just after the title page:
+
+     Copyright (C)  YEAR  YOUR NAME.
+     Permission is granted to copy, distribute and/or modify this document
+     under the terms of the GNU Free Documentation License, Version 1.1
+     or any later version published by the Free Software Foundation;
+     with the Invariant Sections being LIST THEIR TITLES, with the
+     Front-Cover Texts being LIST, and with the Back-Cover Texts being LIST.
+     A copy of the license is included in the section entitled "GNU
+     Free Documentation License."
+
+   If you have no Invariant Sections, write "with no Invariant Sections"
+instead of saying which ones are invariant.  If you have no Front-Cover
+Texts, write "no Front-Cover Texts" instead of "Front-Cover Texts being
+LIST"; likewise for Back-Cover Texts.
+
+   If your document contains nontrivial examples of program code, we
+recommend releasing these examples in parallel under your choice of
+free software license, such as the GNU General Public License, to
+permit their use in free software.
+
+
+File: as.info,  Node: Index,  Prev: GNU Free Documentation License,  Up: Top
+
+Index
+*****
+
+ [index ]
+* Menu:
+
+* #:                                     Comments.            (line  39)
+* #APP:                                  Preprocessing.       (line  27)
+* #NO_APP:                               Preprocessing.       (line  27)
+* $ in symbol names <1>:                 SH64-Chars.          (line  10)
+* $ in symbol names <2>:                 SH-Chars.            (line  10)
+* $ in symbol names <3>:                 H8/500-Chars.        (line  10)
+* $ in symbol names <4>:                 D30V-Chars.          (line  63)
+* $ in symbol names:                     D10V-Chars.          (line  46)
+* $a:                                    ARM Mapping Symbols. (line   9)
+* $acos math builtin, TIC54X:            TIC54X-Builtins.     (line  10)
+* $asin math builtin, TIC54X:            TIC54X-Builtins.     (line  13)
+* $atan math builtin, TIC54X:            TIC54X-Builtins.     (line  16)
+* $atan2 math builtin, TIC54X:           TIC54X-Builtins.     (line  19)
+* $ceil math builtin, TIC54X:            TIC54X-Builtins.     (line  22)
+* $cos math builtin, TIC54X:             TIC54X-Builtins.     (line  28)
+* $cosh math builtin, TIC54X:            TIC54X-Builtins.     (line  25)
+* $cvf math builtin, TIC54X:             TIC54X-Builtins.     (line  31)
+* $cvi math builtin, TIC54X:             TIC54X-Builtins.     (line  34)
+* $d:                                    ARM Mapping Symbols. (line  15)
+* $exp math builtin, TIC54X:             TIC54X-Builtins.     (line  37)
+* $fabs math builtin, TIC54X:            TIC54X-Builtins.     (line  40)
+* $firstch subsym builtin, TIC54X:       TIC54X-Macros.       (line  26)
+* $floor math builtin, TIC54X:           TIC54X-Builtins.     (line  43)
+* $fmod math builtin, TIC54X:            TIC54X-Builtins.     (line  47)
+* $int math builtin, TIC54X:             TIC54X-Builtins.     (line  50)
+* $iscons subsym builtin, TIC54X:        TIC54X-Macros.       (line  43)
+* $isdefed subsym builtin, TIC54X:       TIC54X-Macros.       (line  34)
+* $ismember subsym builtin, TIC54X:      TIC54X-Macros.       (line  38)
+* $isname subsym builtin, TIC54X:        TIC54X-Macros.       (line  47)
+* $isreg subsym builtin, TIC54X:         TIC54X-Macros.       (line  50)
+* $lastch subsym builtin, TIC54X:        TIC54X-Macros.       (line  30)
+* $ldexp math builtin, TIC54X:           TIC54X-Builtins.     (line  53)
+* $log math builtin, TIC54X:             TIC54X-Builtins.     (line  59)
+* $log10 math builtin, TIC54X:           TIC54X-Builtins.     (line  56)
+* $max math builtin, TIC54X:             TIC54X-Builtins.     (line  62)
+* $min math builtin, TIC54X:             TIC54X-Builtins.     (line  65)
+* $pow math builtin, TIC54X:             TIC54X-Builtins.     (line  68)
+* $round math builtin, TIC54X:           TIC54X-Builtins.     (line  71)
+* $sgn math builtin, TIC54X:             TIC54X-Builtins.     (line  74)
+* $sin math builtin, TIC54X:             TIC54X-Builtins.     (line  77)
+* $sinh math builtin, TIC54X:            TIC54X-Builtins.     (line  80)
+* $sqrt math builtin, TIC54X:            TIC54X-Builtins.     (line  83)
+* $structacc subsym builtin, TIC54X:     TIC54X-Macros.       (line  57)
+* $structsz subsym builtin, TIC54X:      TIC54X-Macros.       (line  54)
+* $symcmp subsym builtin, TIC54X:        TIC54X-Macros.       (line  23)
+* $symlen subsym builtin, TIC54X:        TIC54X-Macros.       (line  20)
+* $t:                                    ARM Mapping Symbols. (line  12)
+* $tan math builtin, TIC54X:             TIC54X-Builtins.     (line  86)
+* $tanh math builtin, TIC54X:            TIC54X-Builtins.     (line  89)
+* $trunc math builtin, TIC54X:           TIC54X-Builtins.     (line  92)
+* -+ option, VAX/VMS:                    VAX-Opts.            (line  71)
+* --:                                    Command Line.        (line  10)
+* --32 option, i386:                     i386-Options.        (line   8)
+* --32 option, x86-64:                   i386-Options.        (line   8)
+* --64 option, i386:                     i386-Options.        (line   8)
+* --64 option, x86-64:                   i386-Options.        (line   8)
+* --absolute-literals:                   Xtensa Options.      (line  22)
+* --alternate:                           alternate.           (line   6)
+* --base-size-default-16:                M68K-Opts.           (line  40)
+* --base-size-default-32:                M68K-Opts.           (line  40)
+* --bitwise-or option, M680x0:           M68K-Opts.           (line  33)
+* --disp-size-default-16:                M68K-Opts.           (line  49)
+* --disp-size-default-32:                M68K-Opts.           (line  49)
+* --emulation=crisaout command line option, CRIS: CRIS-Opts.  (line   9)
+* --emulation=criself command line option, CRIS: CRIS-Opts.   (line   9)
+* --enforce-aligned-data:                Sparc-Aligned-Data.  (line  11)
+* --fatal-warnings:                      W.                   (line  16)
+* --fixed-special-register-names command line option, MMIX: MMIX-Opts.
+                                                              (line   8)
+* --force-long-branchs:                  M68HC11-Opts.        (line  69)
+* --generate-example:                    M68HC11-Opts.        (line  86)
+* --globalize-symbols command line option, MMIX: MMIX-Opts.   (line  12)
+* --gnu-syntax command line option, MMIX: MMIX-Opts.          (line  16)
+* --linker-allocated-gregs command line option, MMIX: MMIX-Opts.
+                                                              (line  67)
+* --listing-cont-lines:                  listing.             (line  33)
+* --listing-lhs-width:                   listing.             (line  15)
+* --listing-lhs-width2:                  listing.             (line  20)
+* --listing-rhs-width:                   listing.             (line  27)
+* --longcalls:                           Xtensa Options.      (line  36)
+* --march=ARCHITECTURE command line option, CRIS: CRIS-Opts.  (line  33)
+* --MD:                                  MD.                  (line   6)
+* --mul-bug-abort command line option, CRIS: CRIS-Opts.       (line  61)
+* --no-absolute-literals:                Xtensa Options.      (line  22)
+* --no-expand command line option, MMIX: MMIX-Opts.           (line  31)
+* --no-longcalls:                        Xtensa Options.      (line  36)
+* --no-merge-gregs command line option, MMIX: MMIX-Opts.      (line  36)
+* --no-mul-bug-abort command line option, CRIS: CRIS-Opts.    (line  61)
+* --no-predefined-syms command line option, MMIX: MMIX-Opts.  (line  22)
+* --no-pushj-stubs command line option, MMIX: MMIX-Opts.      (line  54)
+* --no-stubs command line option, MMIX:  MMIX-Opts.           (line  54)
+* --no-target-align:                     Xtensa Options.      (line  29)
+* --no-text-section-literals:            Xtensa Options.      (line   9)
+* --no-transform:                        Xtensa Options.      (line  45)
+* --no-underscore command line option, CRIS: CRIS-Opts.       (line  15)
+* --no-warn:                             W.                   (line  11)
+* --pcrel:                               M68K-Opts.           (line  61)
+* --pic command line option, CRIS:       CRIS-Opts.           (line  27)
+* --print-insn-syntax:                   M68HC11-Opts.        (line  75)
+* --print-opcodes:                       M68HC11-Opts.        (line  79)
+* --register-prefix-optional option, M680x0: M68K-Opts.       (line  20)
+* --relax command line option, MMIX:     MMIX-Opts.           (line  19)
+* --rename-section:                      Xtensa Options.      (line  53)
+* --short-branchs:                       M68HC11-Opts.        (line  54)
+* --statistics:                          statistics.          (line   6)
+* --strict-direct-mode:                  M68HC11-Opts.        (line  44)
+* --target-align:                        Xtensa Options.      (line  29)
+* --text-section-literals:               Xtensa Options.      (line   9)
+* --traditional-format:                  traditional-format.  (line   6)
+* --transform:                           Xtensa Options.      (line  45)
+* --underscore command line option, CRIS: CRIS-Opts.          (line  15)
+* --warn:                                W.                   (line  19)
+* -1 option, VAX/VMS:                    VAX-Opts.            (line  77)
+* -32addr command line option, Alpha:    Alpha Options.       (line  50)
+* -a:                                    a.                   (line   6)
+* -A options, i960:                      Options-i960.        (line   6)
+* -ac:                                   a.                   (line   6)
+* -ad:                                   a.                   (line   6)
+* -ah:                                   a.                   (line   6)
+* -al:                                   a.                   (line   6)
+* -an:                                   a.                   (line   6)
+* -as:                                   a.                   (line   6)
+* -Asparclet:                            Sparc-Opts.          (line  25)
+* -Asparclite:                           Sparc-Opts.          (line  25)
+* -Av6:                                  Sparc-Opts.          (line  25)
+* -Av8:                                  Sparc-Opts.          (line  25)
+* -Av9:                                  Sparc-Opts.          (line  25)
+* -Av9a:                                 Sparc-Opts.          (line  25)
+* -b option, i960:                       Options-i960.        (line  22)
+* -big:                                  SH Options.          (line   9)
+* -big option, M32R:                     M32R-Opts.           (line  35)
+* -construct-floats:                     MIPS Opts.           (line 145)
+* -D:                                    D.                   (line   6)
+* -D, ignored on VAX:                    VAX-Opts.            (line  11)
+* -d, VAX option:                        VAX-Opts.            (line  16)
+* -dsp:                                  SH Options.          (line   9)
+* -eabi= command line option, ARM:       ARM Options.         (line 104)
+* -EB command line option, ARC:          ARC Options.         (line  31)
+* -EB command line option, ARM:          ARM Options.         (line 109)
+* -EB option (MIPS):                     MIPS Opts.           (line  13)
+* -EB option, M32R:                      M32R-Opts.           (line  39)
+* -EL command line option, ARC:          ARC Options.         (line  35)
+* -EL command line option, ARM:          ARM Options.         (line 113)
+* -EL option (MIPS):                     MIPS Opts.           (line  13)
+* -EL option, M32R:                      M32R-Opts.           (line  32)
+* -f:                                    f.                   (line   6)
+* -F command line option, Alpha:         Alpha Options.       (line  50)
+* -G command line option, Alpha:         Alpha Options.       (line  46)
+* -g command line option, Alpha:         Alpha Options.       (line  40)
+* -G option (MIPS):                      MIPS Opts.           (line   8)
+* -H option, VAX/VMS:                    VAX-Opts.            (line  81)
+* -h option, VAX/VMS:                    VAX-Opts.            (line  45)
+* -I PATH:                               I.                   (line   6)
+* -ignore-parallel-conflicts option, M32RX: M32R-Opts.        (line  87)
+* -Ip option, M32RX:                     M32R-Opts.           (line  97)
+* -J, ignored on VAX:                    VAX-Opts.            (line  27)
+* -K:                                    K.                   (line   6)
+* -k command line option, ARM:           ARM Options.         (line 117)
+* -KPIC option, M32R:                    M32R-Opts.           (line  42)
+* -L:                                    L.                   (line   6)
+* -l option, M680x0:                     M68K-Opts.           (line   8)
+* -little:                               SH Options.          (line   9)
+* -little option, M32R:                  M32R-Opts.           (line  27)
+* -M:                                    M.                   (line   6)
+* -m11/03:                               PDP-11-Options.      (line 140)
+* -m11/04:                               PDP-11-Options.      (line 143)
+* -m11/05:                               PDP-11-Options.      (line 146)
+* -m11/10:                               PDP-11-Options.      (line 146)
+* -m11/15:                               PDP-11-Options.      (line 149)
+* -m11/20:                               PDP-11-Options.      (line 149)
+* -m11/21:                               PDP-11-Options.      (line 152)
+* -m11/23:                               PDP-11-Options.      (line 155)
+* -m11/24:                               PDP-11-Options.      (line 155)
+* -m11/34:                               PDP-11-Options.      (line 158)
+* -m11/34a:                              PDP-11-Options.      (line 161)
+* -m11/35:                               PDP-11-Options.      (line 164)
+* -m11/40:                               PDP-11-Options.      (line 164)
+* -m11/44:                               PDP-11-Options.      (line 167)
+* -m11/45:                               PDP-11-Options.      (line 170)
+* -m11/50:                               PDP-11-Options.      (line 170)
+* -m11/53:                               PDP-11-Options.      (line 173)
+* -m11/55:                               PDP-11-Options.      (line 170)
+* -m11/60:                               PDP-11-Options.      (line 176)
+* -m11/70:                               PDP-11-Options.      (line 170)
+* -m11/73:                               PDP-11-Options.      (line 173)
+* -m11/83:                               PDP-11-Options.      (line 173)
+* -m11/84:                               PDP-11-Options.      (line 173)
+* -m11/93:                               PDP-11-Options.      (line 173)
+* -m11/94:                               PDP-11-Options.      (line 173)
+* -m32r option, M32R:                    M32R-Opts.           (line  21)
+* -m32rx option, M32R2:                  M32R-Opts.           (line  17)
+* -m32rx option, M32RX:                  M32R-Opts.           (line   9)
+* -m68000 and related options:           M68K-Opts.           (line  73)
+* -m68hc11:                              M68HC11-Opts.        (line   9)
+* -m68hc12:                              M68HC11-Opts.        (line  14)
+* -m68hcs12:                             M68HC11-Opts.        (line  21)
+* -mall:                                 PDP-11-Options.      (line  26)
+* -mall-extensions:                      PDP-11-Options.      (line  26)
+* -mapcs command line option, ARM:       ARM Options.         (line  77)
+* -mapcs-float command line option, ARM: ARM Options.         (line  90)
+* -mapcs-reentrant command line option, ARM: ARM Options.     (line  95)
+* -marc[5|6|7|8] command line option, ARC: ARC Options.       (line   6)
+* -march= command line option, ARM:      ARM Options.         (line  35)
+* -matpcs command line option, ARM:      ARM Options.         (line  82)
+* -mcis:                                 PDP-11-Options.      (line  32)
+* -mconstant-gp command line option, IA-64: IA-64 Options.    (line   6)
+* -mCPU command line option, Alpha:      Alpha Options.       (line   6)
+* -mcpu option, cpu:                     TIC54X-Opts.         (line  15)
+* -mcpu= command line option, ARM:       ARM Options.         (line   6)
+* -mcsm:                                 PDP-11-Options.      (line  43)
+* -mdebug command line option, Alpha:    Alpha Options.       (line  25)
+* -me option, stderr redirect:           TIC54X-Opts.         (line  20)
+* -meis:                                 PDP-11-Options.      (line  46)
+* -merrors-to-file option, stderr redirect: TIC54X-Opts.      (line  20)
+* -mf option, far-mode:                  TIC54X-Opts.         (line   8)
+* -mf11:                                 PDP-11-Options.      (line 122)
+* -mfar-mode option, far-mode:           TIC54X-Opts.         (line   8)
+* -mfis:                                 PDP-11-Options.      (line  51)
+* -mfloat-abi= command line option, ARM: ARM Options.         (line  99)
+* -mfp-11:                               PDP-11-Options.      (line  56)
+* -mfpp:                                 PDP-11-Options.      (line  56)
+* -mfpu:                                 PDP-11-Options.      (line  56)
+* -mfpu= command line option, ARM:       ARM Options.         (line  49)
+* -mip2022 option, IP2K:                 IP2K-Opts.           (line  14)
+* -mip2022ext option, IP2022:            IP2K-Opts.           (line   9)
+* -mj11:                                 PDP-11-Options.      (line 126)
+* -mka11:                                PDP-11-Options.      (line  92)
+* -mkb11:                                PDP-11-Options.      (line  95)
+* -mkd11a:                               PDP-11-Options.      (line  98)
+* -mkd11b:                               PDP-11-Options.      (line 101)
+* -mkd11d:                               PDP-11-Options.      (line 104)
+* -mkd11e:                               PDP-11-Options.      (line 107)
+* -mkd11f:                               PDP-11-Options.      (line 110)
+* -mkd11h:                               PDP-11-Options.      (line 110)
+* -mkd11k:                               PDP-11-Options.      (line 114)
+* -mkd11q:                               PDP-11-Options.      (line 110)
+* -mkd11z:                               PDP-11-Options.      (line 118)
+* -mkev11:                               PDP-11-Options.      (line  51)
+* -mlimited-eis:                         PDP-11-Options.      (line  64)
+* -mlong:                                M68HC11-Opts.        (line  32)
+* -mlong-double:                         M68HC11-Opts.        (line  40)
+* -mmfpt:                                PDP-11-Options.      (line  70)
+* -mmicrocode:                           PDP-11-Options.      (line  83)
+* -mmutiproc:                            PDP-11-Options.      (line  73)
+* -mmxps:                                PDP-11-Options.      (line  77)
+* -mno-cis:                              PDP-11-Options.      (line  32)
+* -mno-csm:                              PDP-11-Options.      (line  43)
+* -mno-eis:                              PDP-11-Options.      (line  46)
+* -mno-extensions:                       PDP-11-Options.      (line  29)
+* -mno-fis:                              PDP-11-Options.      (line  51)
+* -mno-fp-11:                            PDP-11-Options.      (line  56)
+* -mno-fpp:                              PDP-11-Options.      (line  56)
+* -mno-fpu:                              PDP-11-Options.      (line  56)
+* -mno-kev11:                            PDP-11-Options.      (line  51)
+* -mno-limited-eis:                      PDP-11-Options.      (line  64)
+* -mno-mfpt:                             PDP-11-Options.      (line  70)
+* -mno-microcode:                        PDP-11-Options.      (line  83)
+* -mno-mutiproc:                         PDP-11-Options.      (line  73)
+* -mno-mxps:                             PDP-11-Options.      (line  77)
+* -mno-pic:                              PDP-11-Options.      (line  11)
+* -mno-spl:                              PDP-11-Options.      (line  80)
+* -mno-sym32:                            MIPS Opts.           (line 133)
+* -mpic:                                 PDP-11-Options.      (line  11)
+* -mrelax command line option, V850:     V850 Options.        (line  51)
+* -mshort:                               M68HC11-Opts.        (line  27)
+* -mshort-double:                        M68HC11-Opts.        (line  36)
+* -mspl:                                 PDP-11-Options.      (line  80)
+* -msym32:                               MIPS Opts.           (line 133)
+* -mt11:                                 PDP-11-Options.      (line 130)
+* -mthumb command line option, ARM:      ARM Options.         (line  68)
+* -mthumb-interwork command line option, ARM: ARM Options.    (line  73)
+* -mv850 command line option, V850:      V850 Options.        (line  23)
+* -mv850any command line option, V850:   V850 Options.        (line  41)
+* -mv850e command line option, V850:     V850 Options.        (line  29)
+* -mv850e1 command line option, V850:    V850 Options.        (line  35)
+* -N command line option, CRIS:          CRIS-Opts.           (line  57)
+* -nIp option, M32RX:                    M32R-Opts.           (line 101)
+* -no-bitinst, M32R2:                    M32R-Opts.           (line  54)
+* -no-construct-floats:                  MIPS Opts.           (line 145)
+* -no-ignore-parallel-conflicts option, M32RX: M32R-Opts.     (line  93)
+* -no-mdebug command line option, Alpha: Alpha Options.       (line  25)
+* -no-parallel option, M32RX:            M32R-Opts.           (line  51)
+* -no-relax option, i960:                Options-i960.        (line  66)
+* -no-warn-explicit-parallel-conflicts option, M32RX: M32R-Opts.
+                                                              (line  79)
+* -no-warn-unmatched-high option, M32R:  M32R-Opts.           (line 111)
+* -nocpp ignored (MIPS):                 MIPS Opts.           (line 136)
+* -o:                                    o.                   (line   6)
+* -O option, M32RX:                      M32R-Opts.           (line  59)
+* -parallel option, M32RX:               M32R-Opts.           (line  46)
+* -R:                                    R.                   (line   6)
+* -relax:                                SH Options.          (line   9)
+* -relax command line option, Alpha:     Alpha Options.       (line  32)
+* -renesas:                              SH Options.          (line   9)
+* -S, ignored on VAX:                    VAX-Opts.            (line  11)
+* -small:                                SH Options.          (line   9)
+* -t, ignored on VAX:                    VAX-Opts.            (line  36)
+* -T, ignored on VAX:                    VAX-Opts.            (line  11)
+* -v:                                    v.                   (line   6)
+* -V, redundant on VAX:                  VAX-Opts.            (line  22)
+* -version:                              v.                   (line   6)
+* -W:                                    W.                   (line  11)
+* -warn-explicit-parallel-conflicts option, M32RX: M32R-Opts. (line  65)
+* -warn-unmatched-high option, M32R:     M32R-Opts.           (line 105)
+* -Wnp option, M32RX:                    M32R-Opts.           (line  83)
+* -Wnuh option, M32RX:                   M32R-Opts.           (line 117)
+* -Wp option, M32RX:                     M32R-Opts.           (line  75)
+* -wsigned_overflow command line option, V850: V850 Options.  (line   9)
+* -Wuh option, M32RX:                    M32R-Opts.           (line 114)
+* -wunsigned_overflow command line option, V850: V850 Options.
+                                                              (line  16)
+* -x command line option, MMIX:          MMIX-Opts.           (line  44)
+* -z8001 command line option, Z8000:     Z8000 Options.       (line   6)
+* -z8002 command line option, Z8000:     Z8000 Options.       (line   9)
+* . (symbol):                            Dot.                 (line   6)
+* .big directive, M32RX:                 M32R-Directives.     (line  88)
+* .cantunwind directive, ARM:            ARM Directives.      (line  87)
+* .fnend directive, ARM:                 ARM Directives.      (line  78)
+* .fnstart directive, ARM:               ARM Directives.      (line  75)
+* .handlerdata directive, ARM:           ARM Directives.      (line  98)
+* .insn:                                 MIPS insn.           (line   6)
+* .little directive, M32RX:              M32R-Directives.     (line  82)
+* .ltorg directive, ARM:                 ARM Directives.      (line  58)
+* .m32r directive, M32R:                 M32R-Directives.     (line  66)
+* .m32r2 directive, M32R2:               M32R-Directives.     (line  77)
+* .m32rx directive, M32RX:               M32R-Directives.     (line  72)
+* .movsp directive, ARM:                 ARM Directives.      (line 136)
+* .o:                                    Object.              (line   6)
+* .pad directive, ARM:                   ARM Directives.      (line 131)
+* .param on HPPA:                        HPPA Directives.     (line  19)
+* .personality directive, ARM:           ARM Directives.      (line  91)
+* .personalityindex directive, ARM:      ARM Directives.      (line  94)
+* .pool directive, ARM:                  ARM Directives.      (line  72)
+* .save directive, ARM:                  ARM Directives.      (line 107)
+* .set autoextend:                       MIPS autoextend.     (line   6)
+* .set mdmx:                             MIPS ASE instruction generation overrides.
+                                                              (line  11)
+* .set mips3d:                           MIPS ASE instruction generation overrides.
+                                                              (line   6)
+* .set mipsN:                            MIPS ISA.            (line   6)
+* .set noautoextend:                     MIPS autoextend.     (line   6)
+* .set nomdmx:                           MIPS ASE instruction generation overrides.
+                                                              (line  11)
+* .set nomips3d:                         MIPS ASE instruction generation overrides.
+                                                              (line   6)
+* .set nosym32:                          MIPS symbol sizes.   (line   6)
+* .set pop:                              MIPS option stack.   (line   6)
+* .set push:                             MIPS option stack.   (line   6)
+* .set sym32:                            MIPS symbol sizes.   (line   6)
+* .setfp directive, ARM:                 ARM Directives.      (line 139)
+* .unwind_raw directive, ARM:            ARM Directives.      (line 153)
+* .v850 directive, V850:                 V850 Directives.     (line  14)
+* .v850e directive, V850:                V850 Directives.     (line  20)
+* .v850e1 directive, V850:               V850 Directives.     (line  26)
+* .z8001:                                Z8000 Directives.    (line  11)
+* .z8002:                                Z8000 Directives.    (line  15)
+* 16-bit code, i386:                     i386-16bit.          (line   6)
+* 29K support:                           AMD29K-Dependent.    (line   6)
+* 2byte directive, ARC:                  ARC Directives.      (line   9)
+* 3byte directive, ARC:                  ARC Directives.      (line  12)
+* 3DNow!, i386:                          i386-SIMD.           (line   6)
+* 3DNow!, x86-64:                        i386-SIMD.           (line   6)
+* 430 support:                           MSP430-Dependent.    (line   6)
+* 4byte directive, ARC:                  ARC Directives.      (line  15)
+* : (label):                             Statements.          (line  30)
+* @word modifier, D10V:                  D10V-Word.           (line   6)
+* \" (doublequote character):            Strings.             (line  43)
+* \\ (\ character):                      Strings.             (line  40)
+* \b (backspace character):              Strings.             (line  15)
+* \DDD (octal character code):           Strings.             (line  30)
+* \f (formfeed character):               Strings.             (line  18)
+* \n (newline character):                Strings.             (line  21)
+* \r (carriage return character):        Strings.             (line  24)
+* \t (tab):                              Strings.             (line  27)
+* \XD... (hex character code):           Strings.             (line  36)
+* _ opcode prefix:                       Xtensa Opcodes.      (line   9)
+* a.out:                                 Object.              (line   6)
+* a.out symbol attributes:               a.out Symbols.       (line   6)
+* A_DIR environment variable, TIC54X:    TIC54X-Env.          (line   6)
+* ABI options, SH64:                     SH64 Options.        (line  29)
+* ABORT directive:                       ABORT.               (line   6)
+* abort directive:                       Abort.               (line   6)
+* absolute section:                      Ld Sections.         (line  29)
+* absolute-literals directive:           Absolute Literals Directive.
+                                                              (line   6)
+* ADDI instructions, relaxation:         Xtensa Immediate Relaxation.
+                                                              (line  43)
+* addition, permitted arguments:         Infix Ops.           (line  46)
+* addresses:                             Expressions.         (line   6)
+* addresses, format of:                  Secs Background.     (line  68)
+* addressing modes, D10V:                D10V-Addressing.     (line   6)
+* addressing modes, D30V:                D30V-Addressing.     (line   6)
+* addressing modes, H8/300:              H8/300-Addressing.   (line   6)
+* addressing modes, H8/500:              H8/500-Addressing.   (line   6)
+* addressing modes, M680x0:              M68K-Syntax.         (line  21)
+* addressing modes, M68HC11:             M68HC11-Syntax.      (line  17)
+* addressing modes, SH:                  SH-Addressing.       (line   6)
+* addressing modes, SH64:                SH64-Addressing.     (line   6)
+* addressing modes, Z8000:               Z8000-Addressing.    (line   6)
+* ADR reg,<label> pseudo op, ARM:        ARM Opcodes.         (line  25)
+* ADRL reg,<label> pseudo op, ARM:       ARM Opcodes.         (line  35)
+* advancing location counter:            Org.                 (line   6)
+* align directive:                       Align.               (line   6)
+* align directive, ARM:                  ARM Directives.      (line   6)
+* align directive, M88K:                 M88K Directives.     (line   9)
+* align directive, SPARC:                Sparc-Directives.    (line   9)
+* align directive, TIC54X:               TIC54X-Directives.   (line   6)
+* alignment of branch targets:           Xtensa Automatic Alignment.
+                                                              (line   6)
+* alignment of ENTRY instructions:       Xtensa Automatic Alignment.
+                                                              (line   6)
+* alignment of LOOP instructions:        Xtensa Automatic Alignment.
+                                                              (line   6)
+* Alpha floating point (IEEE):           Alpha Floating Point.
+                                                              (line   6)
+* Alpha line comment character:          Alpha-Chars.         (line   6)
+* Alpha line separator:                  Alpha-Chars.         (line   8)
+* Alpha notes:                           Alpha Notes.         (line   6)
+* Alpha options:                         Alpha Options.       (line   6)
+* Alpha registers:                       Alpha-Regs.          (line   6)
+* Alpha relocations:                     Alpha-Relocs.        (line   6)
+* Alpha support:                         Alpha-Dependent.     (line   6)
+* Alpha Syntax:                          Alpha Options.       (line  54)
+* Alpha-only directives:                 Alpha Directives.    (line  10)
+* altered difference tables:             Word.                (line  12)
+* alternate syntax for the 680x0:        M68K-Moto-Syntax.    (line   6)
+* AMD 29K floating point (IEEE):         AMD29K Floating Point.
+                                                              (line   6)
+* AMD 29K identifiers:                   AMD29K-Chars.        (line   8)
+* AMD 29K line comment character:        AMD29K-Chars.        (line   6)
+* AMD 29K machine directives:            AMD29K Directives.   (line   6)
+* AMD 29K macros:                        AMD29K-Macros.       (line   6)
+* AMD 29K opcodes:                       AMD29K Opcodes.      (line   6)
+* AMD 29K options (none):                AMD29K Options.      (line   6)
+* AMD 29K protected registers:           AMD29K-Regs.         (line  20)
+* AMD 29K register names:                AMD29K-Regs.         (line   6)
+* AMD 29K special purpose registers:     AMD29K-Regs.         (line  20)
+* AMD 29K support:                       AMD29K-Dependent.    (line   6)
+* ARC floating point (IEEE):             ARC Floating Point.  (line   6)
+* ARC machine directives:                ARC Directives.      (line   6)
+* ARC opcodes:                           ARC Opcodes.         (line   6)
+* ARC options (none):                    ARC Options.         (line   6)
+* ARC register names:                    ARC-Regs.            (line   6)
+* ARC special characters:                ARC-Chars.           (line   6)
+* ARC support:                           ARC-Dependent.       (line   6)
+* arc5 arc5, ARC:                        ARC Options.         (line  10)
+* arc6 arc6, ARC:                        ARC Options.         (line  13)
+* arc7 arc7, ARC:                        ARC Options.         (line  21)
+* arc8 arc8, ARC:                        ARC Options.         (line  24)
+* arch directive, i386:                  i386-Arch.           (line   6)
+* arch directive, x86-64:                i386-Arch.           (line   6)
+* architecture options, i960:            Options-i960.        (line   6)
+* architecture options, IP2022:          IP2K-Opts.           (line   9)
+* architecture options, IP2K:            IP2K-Opts.           (line  14)
+* architecture options, M32R:            M32R-Opts.           (line  21)
+* architecture options, M32R2:           M32R-Opts.           (line  17)
+* architecture options, M32RX:           M32R-Opts.           (line   9)
+* architecture options, M680x0:          M68K-Opts.           (line  73)
+* Architecture variant option, CRIS:     CRIS-Opts.           (line  33)
+* architectures, PowerPC:                PowerPC-Opts.        (line   6)
+* architectures, SPARC:                  Sparc-Opts.          (line   6)
+* arguments for addition:                Infix Ops.           (line  46)
+* arguments for subtraction:             Infix Ops.           (line  51)
+* arguments in expressions:              Arguments.           (line   6)
+* arithmetic functions:                  Operators.           (line   6)
+* arithmetic operands:                   Arguments.           (line   6)
+* arm directive, ARM:                    ARM Directives.      (line  36)
+* ARM floating point (IEEE):             ARM Floating Point.  (line   6)
+* ARM identifiers:                       ARM-Chars.           (line  15)
+* ARM immediate character:               ARM-Chars.           (line  13)
+* ARM line comment character:            ARM-Chars.           (line   6)
+* ARM line separator:                    ARM-Chars.           (line  10)
+* ARM machine directives:                ARM Directives.      (line   6)
+* ARM opcodes:                           ARM Opcodes.         (line   6)
+* ARM options (none):                    ARM Options.         (line   6)
+* ARM register names:                    ARM-Regs.            (line   6)
+* ARM support:                           ARM-Dependent.       (line   6)
+* ascii directive:                       Ascii.               (line   6)
+* asciz directive:                       Asciz.               (line   6)
+* asg directive, TIC54X:                 TIC54X-Directives.   (line  20)
+* assembler bugs, reporting:             Bug Reporting.       (line   6)
+* assembler crash:                       Bug Criteria.        (line   9)
+* assembler directive .arch, CRIS:       CRIS-Pseudos.        (line  45)
+* assembler directive .dword, CRIS:      CRIS-Pseudos.        (line  12)
+* assembler directive .far, M68HC11:     M68HC11-Directives.  (line  20)
+* assembler directive .interrupt, M68HC11: M68HC11-Directives.
+                                                              (line  26)
+* assembler directive .mode, M68HC11:    M68HC11-Directives.  (line  16)
+* assembler directive .relax, M68HC11:   M68HC11-Directives.  (line  10)
+* assembler directive .syntax, CRIS:     CRIS-Pseudos.        (line  17)
+* assembler directive .xrefb, M68HC11:   M68HC11-Directives.  (line  31)
+* assembler directive BSPEC, MMIX:       MMIX-Pseudos.        (line 131)
+* assembler directive BYTE, MMIX:        MMIX-Pseudos.        (line  97)
+* assembler directive ESPEC, MMIX:       MMIX-Pseudos.        (line 131)
+* assembler directive GREG, MMIX:        MMIX-Pseudos.        (line  50)
+* assembler directive IS, MMIX:          MMIX-Pseudos.        (line  42)
+* assembler directive LOC, MMIX:         MMIX-Pseudos.        (line   7)
+* assembler directive LOCAL, MMIX:       MMIX-Pseudos.        (line  28)
+* assembler directive OCTA, MMIX:        MMIX-Pseudos.        (line 108)
+* assembler directive PREFIX, MMIX:      MMIX-Pseudos.        (line 120)
+* assembler directive TETRA, MMIX:       MMIX-Pseudos.        (line 108)
+* assembler directive WYDE, MMIX:        MMIX-Pseudos.        (line 108)
+* assembler directives, CRIS:            CRIS-Pseudos.        (line   6)
+* assembler directives, M68HC11:         M68HC11-Directives.  (line   6)
+* assembler directives, M68HC12:         M68HC11-Directives.  (line   6)
+* assembler directives, MMIX:            MMIX-Pseudos.        (line   6)
+* assembler internal logic error:        As Sections.         (line  13)
+* assembler version:                     v.                   (line   6)
+* assembler, and linker:                 Secs Background.     (line  10)
+* assembly listings, enabling:           a.                   (line   6)
+* assigning values to symbols <1>:       Equ.                 (line   6)
+* assigning values to symbols:           Setting Symbols.     (line   6)
+* atmp directive, i860:                  Directives-i860.     (line  16)
+* att_syntax pseudo op, i386:            i386-Syntax.         (line   6)
+* att_syntax pseudo op, x86-64:          i386-Syntax.         (line   6)
+* attributes, symbol:                    Symbol Attributes.   (line   6)
+* auxiliary attributes, COFF symbols:    COFF Symbols.        (line  19)
+* auxiliary symbol information, COFF:    Dim.                 (line   6)
+* Av7:                                   Sparc-Opts.          (line  25)
+* backslash (\\):                        Strings.             (line  40)
+* backspace (\b):                        Strings.             (line  15)
+* balign directive:                      Balign.              (line   6)
+* balignl directive:                     Balign.              (line  27)
+* balignw directive:                     Balign.              (line  27)
+* bes directive, TIC54X:                 TIC54X-Directives.   (line 197)
+* big endian output, MIPS:               Overview.            (line 550)
+* big endian output, PJ:                 Overview.            (line 457)
+* big-endian output, MIPS:               MIPS Opts.           (line  13)
+* bignums:                               Bignums.             (line   6)
+* binary constants, TIC54X:              TIC54X-Constants.    (line   8)
+* binary files, including:               Incbin.              (line   6)
+* binary integers:                       Integers.            (line   6)
+* bit names, IA-64:                      IA-64-Bits.          (line   6)
+* bitfields, not supported on VAX:       VAX-no.              (line   6)
+* block:                                 Z8000 Directives.    (line  55)
+* block directive, AMD 29K:              AMD29K Directives.   (line   6)
+* branch improvement, M680x0:            M68K-Branch.         (line   6)
+* branch improvement, M68HC11:           M68HC11-Branch.      (line   6)
+* branch improvement, VAX:               VAX-branch.          (line   6)
+* branch instructions, relaxation:       Xtensa Branch Relaxation.
+                                                              (line   6)
+* branch recording, i960:                Options-i960.        (line  22)
+* branch statistics table, i960:         Options-i960.        (line  40)
+* branch target alignment:               Xtensa Automatic Alignment.
+                                                              (line   6)
+* break directive, TIC54X:               TIC54X-Directives.   (line 143)
+* BSD syntax:                            PDP-11-Syntax.       (line   6)
+* bss directive, i960:                   Directives-i960.     (line   6)
+* bss directive, M88K:                   M88K Directives.     (line  40)
+* bss directive, TIC54X:                 TIC54X-Directives.   (line  29)
+* bss section <1>:                       bss.                 (line   6)
+* bss section:                           Ld Sections.         (line  20)
+* bug criteria:                          Bug Criteria.        (line   6)
+* bug reports:                           Bug Reporting.       (line   6)
+* bugs in assembler:                     Reporting Bugs.      (line   6)
+* Built-in symbols, CRIS:                CRIS-Symbols.        (line   6)
+* builtin math functions, TIC54X:        TIC54X-Builtins.     (line   6)
+* builtin subsym functions, TIC54X:      TIC54X-Macros.       (line  16)
+* bus lock prefixes, i386:               i386-Prefixes.       (line  36)
+* bval:                                  Z8000 Directives.    (line  30)
+* byte directive:                        Byte.                (line   6)
+* byte directive, TIC54X:                TIC54X-Directives.   (line  36)
+* C54XDSP_DIR environment variable, TIC54X: TIC54X-Env.       (line   6)
+* c_mode directive, TIC54X:              TIC54X-Directives.   (line  51)
+* call instructions, i386:               i386-Mnemonics.      (line  51)
+* call instructions, relaxation:         Xtensa Call Relaxation.
+                                                              (line   6)
+* call instructions, x86-64:             i386-Mnemonics.      (line  51)
+* callj, i960 pseudo-opcode:             callj-i960.          (line   6)
+* carriage return (\r):                  Strings.             (line  24)
+* cfi_endproc directive:                 CFI directives.      (line  14)
+* cfi_startproc directive:               CFI directives.      (line   6)
+* char directive, TIC54X:                TIC54X-Directives.   (line  36)
+* character constants:                   Characters.          (line   6)
+* character escape codes:                Strings.             (line  15)
+* character, single:                     Chars.               (line   6)
+* characters used in symbols:            Symbol Intro.        (line   6)
+* clink directive, TIC54X:               TIC54X-Directives.   (line  45)
+* code directive, ARM:                   ARM Directives.      (line  29)
+* code16 directive, i386:                i386-16bit.          (line   6)
+* code16gcc directive, i386:             i386-16bit.          (line   6)
+* code32 directive, i386:                i386-16bit.          (line   6)
+* code64 directive, i386:                i386-16bit.          (line   6)
+* code64 directive, x86-64:              i386-16bit.          (line   6)
+* COFF auxiliary symbol information:     Dim.                 (line   6)
+* COFF structure debugging:              Tag.                 (line   6)
+* COFF symbol attributes:                COFF Symbols.        (line   6)
+* COFF symbol descriptor:                Desc.                (line   6)
+* COFF symbol storage class:             Scl.                 (line   6)
+* COFF symbol type:                      Type.                (line  11)
+* COFF symbols, debugging:               Def.                 (line   6)
+* COFF value attribute:                  Val.                 (line   6)
+* COMDAT:                                Linkonce.            (line   6)
+* comm directive:                        Comm.                (line   6)
+* command line conventions:              Command Line.        (line   6)
+* command line options, V850:            V850 Options.        (line   9)
+* command-line options ignored, VAX:     VAX-Opts.            (line   6)
+* comments:                              Comments.            (line   6)
+* comments, M680x0:                      M68K-Chars.          (line   6)
+* comments, removed by preprocessor:     Preprocessing.       (line  11)
+* common directive, SPARC:               Sparc-Directives.    (line  12)
+* common sections:                       Linkonce.            (line   6)
+* common variable storage:               bss.                 (line   6)
+* compare and jump expansions, i960:     Compare-and-branch-i960.
+                                                              (line  13)
+* compare/branch instructions, i960:     Compare-and-branch-i960.
+                                                              (line   6)
+* comparison expressions:                Infix Ops.           (line  57)
+* conditional assembly:                  If.                  (line   6)
+* constant, single character:            Chars.               (line   6)
+* constants:                             Constants.           (line   6)
+* constants, bignum:                     Bignums.             (line   6)
+* constants, character:                  Characters.          (line   6)
+* constants, converted by preprocessor:  Preprocessing.       (line  14)
+* constants, floating point:             Flonums.             (line   6)
+* constants, integer:                    Integers.            (line   6)
+* constants, number:                     Numbers.             (line   6)
+* constants, string:                     Strings.             (line   6)
+* constants, TIC54X:                     TIC54X-Constants.    (line   6)
+* conversion instructions, i386:         i386-Mnemonics.      (line  32)
+* conversion instructions, x86-64:       i386-Mnemonics.      (line  32)
+* coprocessor wait, i386:                i386-Prefixes.       (line  40)
+* copy directive, TIC54X:                TIC54X-Directives.   (line  54)
+* cputype directive, AMD 29K:            AMD29K Directives.   (line  14)
+* crash of assembler:                    Bug Criteria.        (line   9)
+* CRIS --emulation=crisaout command line option: CRIS-Opts.   (line   9)
+* CRIS --emulation=criself command line option: CRIS-Opts.    (line   9)
+* CRIS --march=ARCHITECTURE command line option: CRIS-Opts.   (line  33)
+* CRIS --mul-bug-abort command line option: CRIS-Opts.        (line  61)
+* CRIS --no-mul-bug-abort command line option: CRIS-Opts.     (line  61)
+* CRIS --no-underscore command line option: CRIS-Opts.        (line  15)
+* CRIS --pic command line option:        CRIS-Opts.           (line  27)
+* CRIS --underscore command line option: CRIS-Opts.           (line  15)
+* CRIS -N command line option:           CRIS-Opts.           (line  57)
+* CRIS architecture variant option:      CRIS-Opts.           (line  33)
+* CRIS assembler directive .arch:        CRIS-Pseudos.        (line  45)
+* CRIS assembler directive .dword:       CRIS-Pseudos.        (line  12)
+* CRIS assembler directive .syntax:      CRIS-Pseudos.        (line  17)
+* CRIS assembler directives:             CRIS-Pseudos.        (line   6)
+* CRIS built-in symbols:                 CRIS-Symbols.        (line   6)
+* CRIS instruction expansion:            CRIS-Expand.         (line   6)
+* CRIS line comment characters:          CRIS-Chars.          (line   6)
+* CRIS options:                          CRIS-Opts.           (line   6)
+* CRIS position-independent code:        CRIS-Opts.           (line  27)
+* CRIS pseudo-op .arch:                  CRIS-Pseudos.        (line  45)
+* CRIS pseudo-op .dword:                 CRIS-Pseudos.        (line  12)
+* CRIS pseudo-op .syntax:                CRIS-Pseudos.        (line  17)
+* CRIS pseudo-ops:                       CRIS-Pseudos.        (line   6)
+* CRIS register names:                   CRIS-Regs.           (line   6)
+* CRIS support:                          CRIS-Dependent.      (line   6)
+* CRIS symbols in position-independent code: CRIS-Pic.        (line   6)
+* ctbp register, V850:                   V850-Regs.           (line 131)
+* ctoff pseudo-op, V850:                 V850 Opcodes.        (line 111)
+* ctpc register, V850:                   V850-Regs.           (line 119)
+* ctpsw register, V850:                  V850-Regs.           (line 122)
+* current address:                       Dot.                 (line   6)
+* current address, advancing:            Org.                 (line   6)
+* D10V @word modifier:                   D10V-Word.           (line   6)
+* D10V addressing modes:                 D10V-Addressing.     (line   6)
+* D10V floating point:                   D10V-Float.          (line   6)
+* D10V line comment character:           D10V-Chars.          (line   6)
+* D10V opcode summary:                   D10V-Opcodes.        (line   6)
+* D10V optimization:                     Overview.            (line 345)
+* D10V options:                          D10V-Opts.           (line   6)
+* D10V registers:                        D10V-Regs.           (line   6)
+* D10V size modifiers:                   D10V-Size.           (line   6)
+* D10V sub-instruction ordering:         D10V-Chars.          (line   6)
+* D10V sub-instructions:                 D10V-Subs.           (line   6)
+* D10V support:                          D10V-Dependent.      (line   6)
+* D10V syntax:                           D10V-Syntax.         (line   6)
+* D30V addressing modes:                 D30V-Addressing.     (line   6)
+* D30V floating point:                   D30V-Float.          (line   6)
+* D30V Guarded Execution:                D30V-Guarded.        (line   6)
+* D30V line comment character:           D30V-Chars.          (line   6)
+* D30V nops:                             Overview.            (line 353)
+* D30V nops after 32-bit multiply:       Overview.            (line 356)
+* D30V opcode summary:                   D30V-Opcodes.        (line   6)
+* D30V optimization:                     Overview.            (line 350)
+* D30V options:                          D30V-Opts.           (line   6)
+* D30V registers:                        D30V-Regs.           (line   6)
+* D30V size modifiers:                   D30V-Size.           (line   6)
+* D30V sub-instruction ordering:         D30V-Chars.          (line   6)
+* D30V sub-instructions:                 D30V-Subs.           (line   6)
+* D30V support:                          D30V-Dependent.      (line   6)
+* D30V syntax:                           D30V-Syntax.         (line   6)
+* data alignment on SPARC:               Sparc-Aligned-Data.  (line   6)
+* data and text sections, joining:       R.                   (line   6)
+* data directive:                        Data.                (line   6)
+* data directive, TIC54X:                TIC54X-Directives.   (line  61)
+* data section:                          Ld Sections.         (line   9)
+* data1 directive, M680x0:               M68K-Directives.     (line   9)
+* data2 directive, M680x0:               M68K-Directives.     (line  12)
+* datalabel, SH64:                       SH64-Addressing.     (line  16)
+* dbpc register, V850:                   V850-Regs.           (line 125)
+* dbpsw register, V850:                  V850-Regs.           (line 128)
+* debuggers, and symbol order:           Symbols.             (line  10)
+* debugging COFF symbols:                Def.                 (line   6)
+* DEC syntax:                            PDP-11-Syntax.       (line   6)
+* decimal integers:                      Integers.            (line  12)
+* def directive:                         Def.                 (line   6)
+* def directive, M88K:                   M88K Directives.     (line  36)
+* def directive, TIC54X:                 TIC54X-Directives.   (line 103)
+* density instructions:                  Density Instructions.
+                                                              (line   6)
+* dependency tracking:                   MD.                  (line   6)
+* deprecated directives:                 Deprecated.          (line   6)
+* desc directive:                        Desc.                (line   6)
+* descriptor, of a.out symbol:           Symbol Desc.         (line   6)
+* dfloat directive, M88K:                M88K Directives.     (line  13)
+* dfloat directive, VAX:                 VAX-directives.      (line  10)
+* difference tables altered:             Word.                (line  12)
+* difference tables, warning:            K.                   (line   6)
+* differences, mmixal:                   MMIX-mmixal.         (line   6)
+* dim directive:                         Dim.                 (line   6)
+* directives and instructions:           Statements.          (line  19)
+* directives for PowerPC:                PowerPC-Pseudo.      (line   6)
+* directives, M32R:                      M32R-Directives.     (line   6)
+* directives, M680x0:                    M68K-Directives.     (line   6)
+* directives, machine independent:       Pseudo Ops.          (line   6)
+* directives, Xtensa:                    Xtensa Directives.   (line   6)
+* directives, Z8000:                     Z8000 Directives.    (line   6)
+* displacement sizing character, VAX:    VAX-operands.        (line  12)
+* dollar local symbols:                  Symbol Names.        (line  93)
+* dot (symbol):                          Dot.                 (line   6)
+* double directive:                      Double.              (line   6)
+* double directive, i386:                i386-Float.          (line  14)
+* double directive, M680x0:              M68K-Float.          (line  14)
+* double directive, M68HC11:             M68HC11-Float.       (line  14)
+* double directive, TIC54X:              TIC54X-Directives.   (line  64)
+* double directive, VAX:                 VAX-float.           (line  15)
+* double directive, x86-64:              i386-Float.          (line  14)
+* doublequote (\"):                      Strings.             (line  43)
+* drlist directive, TIC54X:              TIC54X-Directives.   (line  73)
+* drnolist directive, TIC54X:            TIC54X-Directives.   (line  73)
+* dual directive, i860:                  Directives-i860.     (line   6)
+* ECOFF sections:                        MIPS Object.         (line   6)
+* ecr register, V850:                    V850-Regs.           (line 113)
+* eight-byte integer:                    Quad.                (line   9)
+* eipc register, V850:                   V850-Regs.           (line 101)
+* eipsw register, V850:                  V850-Regs.           (line 104)
+* eject directive:                       Eject.               (line   6)
+* ELF symbol type:                       Type.                (line  25)
+* else directive:                        Else.                (line   6)
+* elseif directive:                      Elseif.              (line   6)
+* empty expressions:                     Empty Exprs.         (line   6)
+* emsg directive, TIC54X:                TIC54X-Directives.   (line  77)
+* emulation:                             Overview.            (line 629)
+* end directive:                         End.                 (line   6)
+* enddual directive, i860:               Directives-i860.     (line  11)
+* endef directive:                       Endef.               (line   6)
+* endfunc directive:                     Endfunc.             (line   6)
+* endianness, MIPS:                      Overview.            (line 550)
+* endianness, PJ:                        Overview.            (line 457)
+* endif directive:                       Endif.               (line   6)
+* endloop directive, TIC54X:             TIC54X-Directives.   (line 143)
+* endm directive:                        Macro.               (line  61)
+* endm directive, TIC54X:                TIC54X-Directives.   (line 153)
+* endstruct directive, TIC54X:           TIC54X-Directives.   (line 217)
+* endunion directive, TIC54X:            TIC54X-Directives.   (line 251)
+* ENTRY instructions, alignment:         Xtensa Automatic Alignment.
+                                                              (line   6)
+* environment settings, TIC54X:          TIC54X-Env.          (line   6)
+* EOF, newline must precede:             Statements.          (line  13)
+* ep register, V850:                     V850-Regs.           (line  95)
+* equ directive:                         Equ.                 (line   6)
+* equ directive, TIC54X:                 TIC54X-Directives.   (line 192)
+* equiv directive:                       Equiv.               (line   6)
+* err directive:                         Err.                 (line   6)
+* error directive:                       Error.               (line   6)
+* error messages:                        Errors.              (line   6)
+* error on valid input:                  Bug Criteria.        (line  12)
+* errors, caused by warnings:            W.                   (line  16)
+* errors, continuing after:              Z.                   (line   6)
+* ESA/390 floating point (IEEE):         ESA/390 Floating Point.
+                                                              (line   6)
+* ESA/390 support:                       ESA/390-Dependent.   (line   6)
+* ESA/390 Syntax:                        ESA/390 Options.     (line   8)
+* ESA/390-only directives:               ESA/390 Directives.  (line  12)
+* escape codes, character:               Strings.             (line  15)
+* eval directive, TIC54X:                TIC54X-Directives.   (line  24)
+* even:                                  Z8000 Directives.    (line  58)
+* even directive, M680x0:                M68K-Directives.     (line  15)
+* even directive, TIC54X:                TIC54X-Directives.   (line   6)
+* exitm directive:                       Macro.               (line  64)
+* expr (internal section):               As Sections.         (line  17)
+* expression arguments:                  Arguments.           (line   6)
+* expressions:                           Expressions.         (line   6)
+* expressions, comparison:               Infix Ops.           (line  57)
+* expressions, empty:                    Empty Exprs.         (line   6)
+* expressions, integer:                  Integer Exprs.       (line   6)
+* extAuxRegister directive, ARC:         ARC Directives.      (line  18)
+* extCondCode directive, ARC:            ARC Directives.      (line  41)
+* extCoreRegister directive, ARC:        ARC Directives.      (line  53)
+* extend directive M680x0:               M68K-Float.          (line  17)
+* extend directive M68HC11:              M68HC11-Float.       (line  17)
+* extended directive, i960:              Directives-i960.     (line  13)
+* extern directive:                      Extern.              (line   6)
+* extInstruction directive, ARC:         ARC Directives.      (line  78)
+* fail directive:                        Fail.                (line   6)
+* far_mode directive, TIC54X:            TIC54X-Directives.   (line  82)
+* faster processing (-f):                f.                   (line   6)
+* fatal signal:                          Bug Criteria.        (line   9)
+* fclist directive, TIC54X:              TIC54X-Directives.   (line  87)
+* fcnolist directive, TIC54X:            TIC54X-Directives.   (line  87)
+* fepc register, V850:                   V850-Regs.           (line 107)
+* fepsw register, V850:                  V850-Regs.           (line 110)
+* ffloat directive, M88K:                M88K Directives.     (line  16)
+* ffloat directive, VAX:                 VAX-directives.      (line  14)
+* field directive, TIC54X:               TIC54X-Directives.   (line  91)
+* file directive:                        File.                (line   6)
+* file directive, AMD 29K:               AMD29K Directives.   (line  18)
+* file directive, MSP 430:               MSP430 Directives.   (line   6)
+* file name, logical:                    File.                (line   6)
+* files, including:                      Include.             (line   6)
+* files, input:                          Input Files.         (line   6)
+* fill directive:                        Fill.                (line   6)
+* filling memory <1>:                    Space.               (line   6)
+* filling memory:                        Skip.                (line   6)
+* FLIX syntax:                           Xtensa Syntax.       (line   6)
+* float directive:                       Float.               (line   6)
+* float directive, i386:                 i386-Float.          (line  14)
+* float directive, M680x0:               M68K-Float.          (line  11)
+* float directive, M68HC11:              M68HC11-Float.       (line  11)
+* float directive, TIC54X:               TIC54X-Directives.   (line  64)
+* float directive, VAX:                  VAX-float.           (line  15)
+* float directive, x86-64:               i386-Float.          (line  14)
+* floating point numbers:                Flonums.             (line   6)
+* floating point numbers (double):       Double.              (line   6)
+* floating point numbers (single) <1>:   Single.              (line   6)
+* floating point numbers (single):       Float.               (line   6)
+* floating point, Alpha (IEEE):          Alpha Floating Point.
+                                                              (line   6)
+* floating point, AMD 29K (IEEE):        AMD29K Floating Point.
+                                                              (line   6)
+* floating point, ARC (IEEE):            ARC Floating Point.  (line   6)
+* floating point, ARM (IEEE):            ARM Floating Point.  (line   6)
+* floating point, D10V:                  D10V-Float.          (line   6)
+* floating point, D30V:                  D30V-Float.          (line   6)
+* floating point, ESA/390 (IEEE):        ESA/390 Floating Point.
+                                                              (line   6)
+* floating point, H8/300 (IEEE):         H8/300 Floating Point.
+                                                              (line   6)
+* floating point, H8/500 (IEEE):         H8/500 Floating Point.
+                                                              (line   6)
+* floating point, HPPA (IEEE):           HPPA Floating Point. (line   6)
+* floating point, i386:                  i386-Float.          (line   6)
+* floating point, i960 (IEEE):           Floating Point-i960. (line   6)
+* floating point, M680x0:                M68K-Float.          (line   6)
+* floating point, M68HC11:               M68HC11-Float.       (line   6)
+* floating point, MSP 430 (IEEE):        MSP430 Floating Point.
+                                                              (line   6)
+* floating point, SH (IEEE):             SH Floating Point.   (line   6)
+* floating point, SPARC (IEEE):          Sparc-Float.         (line   6)
+* floating point, V850 (IEEE):           V850 Floating Point. (line   6)
+* floating point, VAX:                   VAX-float.           (line   6)
+* floating point, x86-64:                i386-Float.          (line   6)
+* flonums:                               Flonums.             (line   6)
+* force_thumb directive, ARM:            ARM Directives.      (line  39)
+* format of error messages:              Errors.              (line  24)
+* format of warning messages:            Errors.              (line  12)
+* formfeed (\f):                         Strings.             (line  18)
+* func directive:                        Func.                (line   6)
+* functions, in expressions:             Operators.           (line   6)
+* gbr960, i960 postprocessor:            Options-i960.        (line  40)
+* gfloat directive, VAX:                 VAX-directives.      (line  18)
+* global:                                Z8000 Directives.    (line  21)
+* global directive:                      Global.              (line   6)
+* global directive, TIC54X:              TIC54X-Directives.   (line 103)
+* gp register, MIPS:                     MIPS Object.         (line  11)
+* gp register, V850:                     V850-Regs.           (line  17)
+* grouping data:                         Sub-Sections.        (line   6)
+* H8/300 addressing modes:               H8/300-Addressing.   (line   6)
+* H8/300 floating point (IEEE):          H8/300 Floating Point.
+                                                              (line   6)
+* H8/300 line comment character:         H8/300-Chars.        (line   6)
+* H8/300 line separator:                 H8/300-Chars.        (line   8)
+* H8/300 machine directives (none):      H8/300 Directives.   (line   6)
+* H8/300 opcode summary:                 H8/300 Opcodes.      (line   6)
+* H8/300 options (none):                 H8/300 Options.      (line   6)
+* H8/300 registers:                      H8/300-Regs.         (line   6)
+* H8/300 size suffixes:                  H8/300 Opcodes.      (line 163)
+* H8/300 support:                        H8/300-Dependent.    (line   6)
+* H8/300H, assembling for:               H8/300 Directives.   (line   8)
+* H8/500 addressing modes:               H8/500-Addressing.   (line   6)
+* H8/500 floating point (IEEE):          H8/500 Floating Point.
+                                                              (line   6)
+* H8/500 line comment character:         H8/500-Chars.        (line   6)
+* H8/500 line separator:                 H8/500-Chars.        (line   8)
+* H8/500 machine directives (none):      H8/500 Directives.   (line   6)
+* H8/500 opcode summary:                 H8/500 Opcodes.      (line   6)
+* H8/500 options (none):                 H8/500 Options.      (line   6)
+* H8/500 registers:                      H8/500-Regs.         (line   6)
+* H8/500 support:                        H8/500-Dependent.    (line   6)
+* half directive, ARC:                   ARC Directives.      (line 156)
+* half directive, M88K:                  M88K Directives.     (line  19)
+* half directive, SPARC:                 Sparc-Directives.    (line  17)
+* half directive, TIC54X:                TIC54X-Directives.   (line 111)
+* hex character code (\XD...):           Strings.             (line  36)
+* hexadecimal integers:                  Integers.            (line  15)
+* hfloat directive, VAX:                 VAX-directives.      (line  22)
+* hi pseudo-op, V850:                    V850 Opcodes.        (line  33)
+* hi0 pseudo-op, V850:                   V850 Opcodes.        (line  10)
+* hidden directive:                      Hidden.              (line   6)
+* high directive, M32R:                  M32R-Directives.     (line  18)
+* hilo pseudo-op, V850:                  V850 Opcodes.        (line  55)
+* HPPA directives not supported:         HPPA Directives.     (line  11)
+* HPPA floating point (IEEE):            HPPA Floating Point. (line   6)
+* HPPA Syntax:                           HPPA Options.        (line   8)
+* HPPA-only directives:                  HPPA Directives.     (line  24)
+* hword directive:                       hword.               (line   6)
+* i370 support:                          ESA/390-Dependent.   (line   6)
+* i386 16-bit code:                      i386-16bit.          (line   6)
+* i386 arch directive:                   i386-Arch.           (line   6)
+* i386 att_syntax pseudo op:             i386-Syntax.         (line   6)
+* i386 conversion instructions:          i386-Mnemonics.      (line  32)
+* i386 floating point:                   i386-Float.          (line   6)
+* i386 immediate operands:               i386-Syntax.         (line  15)
+* i386 instruction naming:               i386-Mnemonics.      (line   6)
+* i386 instruction prefixes:             i386-Prefixes.       (line   6)
+* i386 intel_syntax pseudo op:           i386-Syntax.         (line   6)
+* i386 jump optimization:                i386-Jumps.          (line   6)
+* i386 jump, call, return:               i386-Syntax.         (line  38)
+* i386 jump/call operands:               i386-Syntax.         (line  15)
+* i386 memory references:                i386-Memory.         (line   6)
+* i386 mul, imul instructions:           i386-Notes.          (line   6)
+* i386 options:                          i386-Options.        (line   6)
+* i386 register operands:                i386-Syntax.         (line  15)
+* i386 registers:                        i386-Regs.           (line   6)
+* i386 sections:                         i386-Syntax.         (line  44)
+* i386 size suffixes:                    i386-Syntax.         (line  29)
+* i386 source, destination operands:     i386-Syntax.         (line  22)
+* i386 support:                          i386-Dependent.      (line   6)
+* i386 syntax compatibility:             i386-Syntax.         (line   6)
+* i80306 support:                        i386-Dependent.      (line   6)
+* i860 machine directives:               Directives-i860.     (line   6)
+* i860 opcodes:                          Opcodes for i860.    (line   6)
+* i860 support:                          i860-Dependent.      (line   6)
+* i960 architecture options:             Options-i960.        (line   6)
+* i960 branch recording:                 Options-i960.        (line  22)
+* i960 callj pseudo-opcode:              callj-i960.          (line   6)
+* i960 compare and jump expansions:      Compare-and-branch-i960.
+                                                              (line  13)
+* i960 compare/branch instructions:      Compare-and-branch-i960.
+                                                              (line   6)
+* i960 floating point (IEEE):            Floating Point-i960. (line   6)
+* i960 machine directives:               Directives-i960.     (line   6)
+* i960 opcodes:                          Opcodes for i960.    (line   6)
+* i960 options:                          Options-i960.        (line   6)
+* i960 support:                          i960-Dependent.      (line   6)
+* IA-64 line comment character:          IA-64-Chars.         (line   6)
+* IA-64 line separator:                  IA-64-Chars.         (line   8)
+* IA-64 options:                         IA-64 Options.       (line   6)
+* IA-64 Processor-status-Register bit names: IA-64-Bits.      (line   6)
+* IA-64 registers:                       IA-64-Regs.          (line   6)
+* IA-64 support:                         IA-64-Dependent.     (line   6)
+* IA-64 Syntax:                          IA-64 Options.       (line  90)
+* ident directive:                       Ident.               (line   6)
+* identifiers, AMD 29K:                  AMD29K-Chars.        (line   8)
+* identifiers, ARM:                      ARM-Chars.           (line  15)
+* identifiers, MSP 430:                  MSP430-Chars.        (line   8)
+* if directive:                          If.                  (line   6)
+* ifc directive:                         If.                  (line  21)
+* ifdef directive:                       If.                  (line  16)
+* ifeq directive:                        If.                  (line  29)
+* ifeqs directive:                       If.                  (line  32)
+* ifge directive:                        If.                  (line  36)
+* ifgt directive:                        If.                  (line  40)
+* ifle directive:                        If.                  (line  44)
+* iflt directive:                        If.                  (line  48)
+* ifnc directive:                        If.                  (line  52)
+* ifndef directive:                      If.                  (line  56)
+* ifne directive:                        If.                  (line  63)
+* ifnes directive:                       If.                  (line  67)
+* ifnotdef directive:                    If.                  (line  56)
+* immediate character, ARM:              ARM-Chars.           (line  13)
+* immediate character, M680x0:           M68K-Chars.          (line   6)
+* immediate character, VAX:              VAX-operands.        (line   6)
+* immediate fields, relaxation:          Xtensa Immediate Relaxation.
+                                                              (line   6)
+* immediate operands, i386:              i386-Syntax.         (line  15)
+* immediate operands, x86-64:            i386-Syntax.         (line  15)
+* imul instruction, i386:                i386-Notes.          (line   6)
+* imul instruction, x86-64:              i386-Notes.          (line   6)
+* incbin directive:                      Incbin.              (line   6)
+* include directive:                     Include.             (line   6)
+* include directive search path:         I.                   (line   6)
+* indirect character, VAX:               VAX-operands.        (line   9)
+* infix operators:                       Infix Ops.           (line   6)
+* inhibiting interrupts, i386:           i386-Prefixes.       (line  36)
+* input:                                 Input Files.         (line   6)
+* input file linenumbers:                Input Files.         (line  35)
+* instruction expansion, CRIS:           CRIS-Expand.         (line   6)
+* instruction expansion, MMIX:           MMIX-Expand.         (line   6)
+* instruction naming, i386:              i386-Mnemonics.      (line   6)
+* instruction naming, x86-64:            i386-Mnemonics.      (line   6)
+* instruction prefixes, i386:            i386-Prefixes.       (line   6)
+* instruction set, M680x0:               M68K-opcodes.        (line   6)
+* instruction set, M68HC11:              M68HC11-opcodes.     (line   6)
+* instruction summary, D10V:             D10V-Opcodes.        (line   6)
+* instruction summary, D30V:             D30V-Opcodes.        (line   6)
+* instruction summary, H8/300:           H8/300 Opcodes.      (line   6)
+* instruction summary, H8/500:           H8/500 Opcodes.      (line   6)
+* instruction summary, SH:               SH Opcodes.          (line   6)
+* instruction summary, SH64:             SH64 Opcodes.        (line   6)
+* instruction summary, Z8000:            Z8000 Opcodes.       (line   6)
+* instructions and directives:           Statements.          (line  19)
+* int directive:                         Int.                 (line   6)
+* int directive, H8/300:                 H8/300 Directives.   (line   6)
+* int directive, H8/500:                 H8/500 Directives.   (line   6)
+* int directive, i386:                   i386-Float.          (line  21)
+* int directive, TIC54X:                 TIC54X-Directives.   (line 111)
+* int directive, x86-64:                 i386-Float.          (line  21)
+* integer expressions:                   Integer Exprs.       (line   6)
+* integer, 16-byte:                      Octa.                (line   6)
+* integer, 8-byte:                       Quad.                (line   9)
+* integers:                              Integers.            (line   6)
+* integers, 16-bit:                      hword.               (line   6)
+* integers, 32-bit:                      Int.                 (line   6)
+* integers, binary:                      Integers.            (line   6)
+* integers, decimal:                     Integers.            (line  12)
+* integers, hexadecimal:                 Integers.            (line  15)
+* integers, octal:                       Integers.            (line   9)
+* integers, one byte:                    Byte.                (line   6)
+* intel_syntax pseudo op, i386:          i386-Syntax.         (line   6)
+* intel_syntax pseudo op, x86-64:        i386-Syntax.         (line   6)
+* internal assembler sections:           As Sections.         (line   6)
+* internal directive:                    Internal.            (line   6)
+* invalid input:                         Bug Criteria.        (line  14)
+* invocation summary:                    Overview.            (line   6)
+* IP2K architecture options:             IP2K-Opts.           (line   9)
+* IP2K options:                          IP2K-Opts.           (line   6)
+* IP2K support:                          IP2K-Dependent.      (line   6)
+* irp directive:                         Irp.                 (line   6)
+* irpc directive:                        Irpc.                (line   6)
+* ISA options, SH64:                     SH64 Options.        (line   6)
+* joining text and data sections:        R.                   (line   6)
+* jump instructions, i386:               i386-Mnemonics.      (line  51)
+* jump instructions, x86-64:             i386-Mnemonics.      (line  51)
+* jump optimization, i386:               i386-Jumps.          (line   6)
+* jump optimization, x86-64:             i386-Jumps.          (line   6)
+* jump/call operands, i386:              i386-Syntax.         (line  15)
+* jump/call operands, x86-64:            i386-Syntax.         (line  15)
+* L16SI instructions, relaxation:        Xtensa Immediate Relaxation.
+                                                              (line  23)
+* L16UI instructions, relaxation:        Xtensa Immediate Relaxation.
+                                                              (line  23)
+* L32I instructions, relaxation:         Xtensa Immediate Relaxation.
+                                                              (line  23)
+* L8UI instructions, relaxation:         Xtensa Immediate Relaxation.
+                                                              (line  23)
+* label (:):                             Statements.          (line  30)
+* label directive, TIC54X:               TIC54X-Directives.   (line 123)
+* labels:                                Labels.              (line   6)
+* lcomm directive:                       Lcomm.               (line   6)
+* ld:                                    Object.              (line  16)
+* ldouble directive M680x0:              M68K-Float.          (line  17)
+* ldouble directive M68HC11:             M68HC11-Float.       (line  17)
+* ldouble directive, TIC54X:             TIC54X-Directives.   (line  64)
+* LDR reg,=<label> pseudo op, ARM:       ARM Opcodes.         (line  15)
+* leafproc directive, i960:              Directives-i960.     (line  18)
+* length directive, TIC54X:              TIC54X-Directives.   (line 127)
+* length of symbols:                     Symbol Intro.        (line  14)
+* lflags directive (ignored):            Lflags.              (line   6)
+* line comment character:                Comments.            (line  19)
+* line comment character, Alpha:         Alpha-Chars.         (line   6)
+* line comment character, AMD 29K:       AMD29K-Chars.        (line   6)
+* line comment character, ARM:           ARM-Chars.           (line   6)
+* line comment character, D10V:          D10V-Chars.          (line   6)
+* line comment character, D30V:          D30V-Chars.          (line   6)
+* line comment character, H8/300:        H8/300-Chars.        (line   6)
+* line comment character, H8/500:        H8/500-Chars.        (line   6)
+* line comment character, IA-64:         IA-64-Chars.         (line   6)
+* line comment character, M680x0:        M68K-Chars.          (line   6)
+* line comment character, MSP 430:       MSP430-Chars.        (line   6)
+* line comment character, SH:            SH-Chars.            (line   6)
+* line comment character, SH64:          SH64-Chars.          (line   6)
+* line comment character, V850:          V850-Chars.          (line   6)
+* line comment character, Z8000:         Z8000-Chars.         (line   6)
+* line comment characters, CRIS:         CRIS-Chars.          (line   6)
+* line comment characters, MMIX:         MMIX-Chars.          (line   6)
+* line directive:                        Line.                (line   6)
+* line directive, AMD 29K:               AMD29K Directives.   (line  26)
+* line directive, MSP 430:               MSP430 Directives.   (line  14)
+* line numbers, in input files:          Input Files.         (line  35)
+* line numbers, in warnings/errors:      Errors.              (line  16)
+* line separator character:              Statements.          (line   6)
+* line separator, Alpha:                 Alpha-Chars.         (line   8)
+* line separator, ARM:                   ARM-Chars.           (line  10)
+* line separator, H8/300:                H8/300-Chars.        (line   8)
+* line separator, H8/500:                H8/500-Chars.        (line   8)
+* line separator, IA-64:                 IA-64-Chars.         (line   8)
+* line separator, SH:                    SH-Chars.            (line   8)
+* line separator, SH64:                  SH64-Chars.          (line   8)
+* line separator, Z8000:                 Z8000-Chars.         (line   8)
+* lines starting with #:                 Comments.            (line  39)
+* linker:                                Object.              (line  16)
+* linker, and assembler:                 Secs Background.     (line  10)
+* linkonce directive:                    Linkonce.            (line   6)
+* list directive:                        List.                (line   6)
+* list directive, TIC54X:                TIC54X-Directives.   (line 131)
+* listing control, turning off:          Nolist.              (line   6)
+* listing control, turning on:           List.                (line   6)
+* listing control: new page:             Eject.               (line   6)
+* listing control: paper size:           Psize.               (line   6)
+* listing control: subtitle:             Sbttl.               (line   6)
+* listing control: title line:           Title.               (line   6)
+* listings, enabling:                    a.                   (line   6)
+* literal directive:                     Literal Directive.   (line   6)
+* literal_position directive:            Literal Position Directive.
+                                                              (line   6)
+* literal_prefix directive:              Literal Prefix Directive.
+                                                              (line   6)
+* little endian output, MIPS:            Overview.            (line 553)
+* little endian output, PJ:              Overview.            (line 460)
+* little-endian output, MIPS:            MIPS Opts.           (line  13)
+* ln directive:                          Ln.                  (line   6)
+* lo pseudo-op, V850:                    V850 Opcodes.        (line  22)
+* local common symbols:                  Lcomm.               (line   6)
+* local labels, retaining in output:     L.                   (line   6)
+* local symbol names:                    Symbol Names.        (line  24)
+* location counter:                      Dot.                 (line   6)
+* location counter, advancing:           Org.                 (line   6)
+* logical file name:                     File.                (line   6)
+* logical line number:                   Line.                (line   6)
+* logical line numbers:                  Comments.            (line  39)
+* long directive:                        Long.                (line   6)
+* long directive, ARC:                   ARC Directives.      (line 159)
+* long directive, i386:                  i386-Float.          (line  21)
+* long directive, TIC54X:                TIC54X-Directives.   (line 135)
+* long directive, x86-64:                i386-Float.          (line  21)
+* longcall pseudo-op, V850:              V850 Opcodes.        (line 123)
+* longcalls directive:                   Longcalls Directive. (line   6)
+* longjump pseudo-op, V850:              V850 Opcodes.        (line 129)
+* loop directive, TIC54X:                TIC54X-Directives.   (line 143)
+* LOOP instructions, alignment:          Xtensa Automatic Alignment.
+                                                              (line   6)
+* low directive, M32R:                   M32R-Directives.     (line   9)
+* lp register, V850:                     V850-Regs.           (line  98)
+* lval:                                  Z8000 Directives.    (line  27)
+* M32R architecture options:             M32R-Opts.           (line   9)
+* M32R directives:                       M32R-Directives.     (line   6)
+* M32R options:                          M32R-Opts.           (line   6)
+* M32R support:                          M32R-Dependent.      (line   6)
+* M32R warnings:                         M32R-Warnings.       (line   6)
+* M680x0 addressing modes:               M68K-Syntax.         (line  21)
+* M680x0 architecture options:           M68K-Opts.           (line  73)
+* M680x0 branch improvement:             M68K-Branch.         (line   6)
+* M680x0 directives:                     M68K-Directives.     (line   6)
+* M680x0 floating point:                 M68K-Float.          (line   6)
+* M680x0 immediate character:            M68K-Chars.          (line   6)
+* M680x0 line comment character:         M68K-Chars.          (line   6)
+* M680x0 opcodes:                        M68K-opcodes.        (line   6)
+* M680x0 options:                        M68K-Opts.           (line   6)
+* M680x0 pseudo-opcodes:                 M68K-Branch.         (line   6)
+* M680x0 size modifiers:                 M68K-Syntax.         (line   8)
+* M680x0 support:                        M68K-Dependent.      (line   6)
+* M680x0 syntax:                         M68K-Syntax.         (line   8)
+* M68HC11 addressing modes:              M68HC11-Syntax.      (line  17)
+* M68HC11 and M68HC12 support:           M68HC11-Dependent.   (line   6)
+* M68HC11 assembler directive .far:      M68HC11-Directives.  (line  20)
+* M68HC11 assembler directive .interrupt: M68HC11-Directives. (line  26)
+* M68HC11 assembler directive .mode:     M68HC11-Directives.  (line  16)
+* M68HC11 assembler directive .relax:    M68HC11-Directives.  (line  10)
+* M68HC11 assembler directive .xrefb:    M68HC11-Directives.  (line  31)
+* M68HC11 assembler directives:          M68HC11-Directives.  (line   6)
+* M68HC11 branch improvement:            M68HC11-Branch.      (line   6)
+* M68HC11 floating point:                M68HC11-Float.       (line   6)
+* M68HC11 modifiers:                     M68HC11-Modifiers.   (line   6)
+* M68HC11 opcodes:                       M68HC11-opcodes.     (line   6)
+* M68HC11 options:                       M68HC11-Opts.        (line   6)
+* M68HC11 pseudo-opcodes:                M68HC11-Branch.      (line   6)
+* M68HC11 syntax:                        M68HC11-Syntax.      (line   6)
+* M68HC12 assembler directives:          M68HC11-Directives.  (line   6)
+* M88K support:                          M88K-Dependent.      (line   6)
+* machine dependencies:                  Machine Dependencies.
+                                                              (line   6)
+* machine directives, AMD 29K:           AMD29K Directives.   (line   6)
+* machine directives, ARC:               ARC Directives.      (line   6)
+* machine directives, ARM:               ARM Directives.      (line   6)
+* machine directives, H8/300 (none):     H8/300 Directives.   (line   6)
+* machine directives, H8/500 (none):     H8/500 Directives.   (line   6)
+* machine directives, i860:              Directives-i860.     (line   6)
+* machine directives, i960:              Directives-i960.     (line   6)
+* machine directives, MSP 430:           MSP430 Directives.   (line   6)
+* machine directives, SH:                SH Directives.       (line   6)
+* machine directives, SH64:              SH64 Directives.     (line   9)
+* machine directives, SPARC:             Sparc-Directives.    (line   6)
+* machine directives, TIC54X:            TIC54X-Directives.   (line   6)
+* machine directives, V850:              V850 Directives.     (line   6)
+* machine directives, VAX:               VAX-directives.      (line   6)
+* machine independent directives:        Pseudo Ops.          (line   6)
+* machine instructions (not covered):    Manual.              (line  14)
+* machine-independent syntax:            Syntax.              (line   6)
+* macro directive:                       Macro.               (line  28)
+* macro directive, TIC54X:               TIC54X-Directives.   (line 153)
+* macros:                                Macro.               (line   6)
+* Macros, AMD 29K:                       AMD29K-Macros.       (line   6)
+* macros, count executed:                Macro.               (line  66)
+* Macros, MSP 430:                       MSP430-Macros.       (line   6)
+* macros, TIC54X:                        TIC54X-Macros.       (line   6)
+* make rules:                            MD.                  (line   6)
+* manual, structure and purpose:         Manual.              (line   6)
+* math builtins, TIC54X:                 TIC54X-Builtins.     (line   6)
+* Maximum number of continuation lines:  listing.             (line  33)
+* memory references, i386:               i386-Memory.         (line   6)
+* memory references, x86-64:             i386-Memory.         (line   6)
+* memory-mapped registers, TIC54X:       TIC54X-MMRegs.       (line   6)
+* merging text and data sections:        R.                   (line   6)
+* messages from assembler:               Errors.              (line   6)
+* minus, permitted arguments:            Infix Ops.           (line  51)
+* MIPS architecture options:             MIPS Opts.           (line  20)
+* MIPS big-endian output:                MIPS Opts.           (line  13)
+* MIPS debugging directives:             MIPS Stabs.          (line   6)
+* MIPS ECOFF sections:                   MIPS Object.         (line   6)
+* MIPS endianness:                       Overview.            (line 550)
+* MIPS ISA:                              Overview.            (line 556)
+* MIPS ISA override:                     MIPS ISA.            (line   6)
+* MIPS little-endian output:             MIPS Opts.           (line  13)
+* MIPS MDMX instruction generation override: MIPS ASE instruction generation overrides.
+                                                              (line  11)
+* MIPS MIPS-3D instruction generation override: MIPS ASE instruction generation overrides.
+                                                              (line   6)
+* MIPS option stack:                     MIPS option stack.   (line   6)
+* MIPS processor:                        MIPS-Dependent.      (line   6)
+* MIT:                                   M68K-Syntax.         (line   6)
+* mlib directive, TIC54X:                TIC54X-Directives.   (line 159)
+* mlist directive, TIC54X:               TIC54X-Directives.   (line 164)
+* MMIX assembler directive BSPEC:        MMIX-Pseudos.        (line 131)
+* MMIX assembler directive BYTE:         MMIX-Pseudos.        (line  97)
+* MMIX assembler directive ESPEC:        MMIX-Pseudos.        (line 131)
+* MMIX assembler directive GREG:         MMIX-Pseudos.        (line  50)
+* MMIX assembler directive IS:           MMIX-Pseudos.        (line  42)
+* MMIX assembler directive LOC:          MMIX-Pseudos.        (line   7)
+* MMIX assembler directive LOCAL:        MMIX-Pseudos.        (line  28)
+* MMIX assembler directive OCTA:         MMIX-Pseudos.        (line 108)
+* MMIX assembler directive PREFIX:       MMIX-Pseudos.        (line 120)
+* MMIX assembler directive TETRA:        MMIX-Pseudos.        (line 108)
+* MMIX assembler directive WYDE:         MMIX-Pseudos.        (line 108)
+* MMIX assembler directives:             MMIX-Pseudos.        (line   6)
+* MMIX line comment characters:          MMIX-Chars.          (line   6)
+* MMIX options:                          MMIX-Opts.           (line   6)
+* MMIX pseudo-op BSPEC:                  MMIX-Pseudos.        (line 131)
+* MMIX pseudo-op BYTE:                   MMIX-Pseudos.        (line  97)
+* MMIX pseudo-op ESPEC:                  MMIX-Pseudos.        (line 131)
+* MMIX pseudo-op GREG:                   MMIX-Pseudos.        (line  50)
+* MMIX pseudo-op IS:                     MMIX-Pseudos.        (line  42)
+* MMIX pseudo-op LOC:                    MMIX-Pseudos.        (line   7)
+* MMIX pseudo-op LOCAL:                  MMIX-Pseudos.        (line  28)
+* MMIX pseudo-op OCTA:                   MMIX-Pseudos.        (line 108)
+* MMIX pseudo-op PREFIX:                 MMIX-Pseudos.        (line 120)
+* MMIX pseudo-op TETRA:                  MMIX-Pseudos.        (line 108)
+* MMIX pseudo-op WYDE:                   MMIX-Pseudos.        (line 108)
+* MMIX pseudo-ops:                       MMIX-Pseudos.        (line   6)
+* MMIX register names:                   MMIX-Regs.           (line   6)
+* MMIX support:                          MMIX-Dependent.      (line   6)
+* mmixal differences:                    MMIX-mmixal.         (line   6)
+* mmregs directive, TIC54X:              TIC54X-Directives.   (line 170)
+* mmsg directive, TIC54X:                TIC54X-Directives.   (line  77)
+* MMX, i386:                             i386-SIMD.           (line   6)
+* MMX, x86-64:                           i386-SIMD.           (line   6)
+* mnemonic suffixes, i386:               i386-Syntax.         (line  29)
+* mnemonic suffixes, x86-64:             i386-Syntax.         (line  29)
+* mnemonics for opcodes, VAX:            VAX-opcodes.         (line   6)
+* mnemonics, D10V:                       D10V-Opcodes.        (line   6)
+* mnemonics, D30V:                       D30V-Opcodes.        (line   6)
+* mnemonics, H8/300:                     H8/300 Opcodes.      (line   6)
+* mnemonics, H8/500:                     H8/500 Opcodes.      (line   6)
+* mnemonics, SH:                         SH Opcodes.          (line   6)
+* mnemonics, SH64:                       SH64 Opcodes.        (line   6)
+* mnemonics, Z8000:                      Z8000 Opcodes.       (line   6)
+* mnolist directive, TIC54X:             TIC54X-Directives.   (line 164)
+* Motorola syntax for the 680x0:         M68K-Moto-Syntax.    (line   6)
+* MOVI instructions, relaxation:         Xtensa Immediate Relaxation.
+                                                              (line  12)
+* MRI compatibility mode:                M.                   (line   6)
+* mri directive:                         MRI.                 (line   6)
+* MRI mode, temporarily:                 MRI.                 (line   6)
+* MSP 430 floating point (IEEE):         MSP430 Floating Point.
+                                                              (line   6)
+* MSP 430 identifiers:                   MSP430-Chars.        (line   8)
+* MSP 430 line comment character:        MSP430-Chars.        (line   6)
+* MSP 430 machine directives:            MSP430 Directives.   (line   6)
+* MSP 430 macros:                        MSP430-Macros.       (line   6)
+* MSP 430 opcodes:                       MSP430 Opcodes.      (line   6)
+* MSP 430 options (none):                MSP430 Options.      (line   6)
+* MSP 430 profiling capability:          MSP430 Profiling Capability.
+                                                              (line   6)
+* MSP 430 register names:                MSP430-Regs.         (line   6)
+* MSP 430 support:                       MSP430-Dependent.    (line   6)
+* MSP430 Assembler Extensions:           MSP430-Ext.          (line   6)
+* mul instruction, i386:                 i386-Notes.          (line   6)
+* mul instruction, x86-64:               i386-Notes.          (line   6)
+* name:                                  Z8000 Directives.    (line  18)
+* named section:                         Section.             (line   6)
+* named sections:                        Ld Sections.         (line   8)
+* names, symbol:                         Symbol Names.        (line   6)
+* naming object file:                    o.                   (line   6)
+* new page, in listings:                 Eject.               (line   6)
+* newblock directive, TIC54X:            TIC54X-Directives.   (line 176)
+* newline (\n):                          Strings.             (line  21)
+* newline, required at file end:         Statements.          (line  13)
+* no-absolute-literals directive:        Absolute Literals Directive.
+                                                              (line   6)
+* no-longcalls directive:                Longcalls Directive. (line   6)
+* no-schedule directive:                 Schedule Directive.  (line   6)
+* no-transform directive:                Transform Directive. (line   6)
+* nolist directive:                      Nolist.              (line   6)
+* nolist directive, TIC54X:              TIC54X-Directives.   (line 131)
+* NOP pseudo op, ARM:                    ARM Opcodes.         (line   9)
+* notes for Alpha:                       Alpha Notes.         (line   6)
+* null-terminated strings:               Asciz.               (line   6)
+* number constants:                      Numbers.             (line   6)
+* number of macros executed:             Macro.               (line  66)
+* numbered subsections:                  Sub-Sections.        (line   6)
+* numbers, 16-bit:                       hword.               (line   6)
+* numeric values:                        Expressions.         (line   6)
+* nword directive, SPARC:                Sparc-Directives.    (line  20)
+* object file:                           Object.              (line   6)
+* object file format:                    Object Formats.      (line   6)
+* object file name:                      o.                   (line   6)
+* object file, after errors:             Z.                   (line   6)
+* obsolescent directives:                Deprecated.          (line   6)
+* octa directive:                        Octa.                (line   6)
+* octal character code (\DDD):           Strings.             (line  30)
+* octal integers:                        Integers.            (line   9)
+* offset directive, V850:                V850 Directives.     (line   6)
+* opcode mnemonics, VAX:                 VAX-opcodes.         (line   6)
+* opcode names, Xtensa:                  Xtensa Opcodes.      (line   6)
+* opcode summary, D10V:                  D10V-Opcodes.        (line   6)
+* opcode summary, D30V:                  D30V-Opcodes.        (line   6)
+* opcode summary, H8/300:                H8/300 Opcodes.      (line   6)
+* opcode summary, H8/500:                H8/500 Opcodes.      (line   6)
+* opcode summary, SH:                    SH Opcodes.          (line   6)
+* opcode summary, SH64:                  SH64 Opcodes.        (line   6)
+* opcode summary, Z8000:                 Z8000 Opcodes.       (line   6)
+* opcodes for AMD 29K:                   AMD29K Opcodes.      (line   6)
+* opcodes for ARC:                       ARC Opcodes.         (line   6)
+* opcodes for ARM:                       ARM Opcodes.         (line   6)
+* opcodes for MSP 430:                   MSP430 Opcodes.      (line   6)
+* opcodes for V850:                      V850 Opcodes.        (line   6)
+* opcodes, i860:                         Opcodes for i860.    (line   6)
+* opcodes, i960:                         Opcodes for i960.    (line   6)
+* opcodes, M680x0:                       M68K-opcodes.        (line   6)
+* opcodes, M68HC11:                      M68HC11-opcodes.     (line   6)
+* operand delimiters, i386:              i386-Syntax.         (line  15)
+* operand delimiters, x86-64:            i386-Syntax.         (line  15)
+* operand notation, VAX:                 VAX-operands.        (line   6)
+* operands in expressions:               Arguments.           (line   6)
+* operator precedence:                   Infix Ops.           (line  11)
+* operators, in expressions:             Operators.           (line   6)
+* operators, permitted arguments:        Infix Ops.           (line   6)
+* optimization, D10V:                    Overview.            (line 345)
+* optimization, D30V:                    Overview.            (line 350)
+* optimizations:                         Xtensa Optimizations.
+                                                              (line   6)
+* option directive, ARC:                 ARC Directives.      (line 162)
+* option directive, TIC54X:              TIC54X-Directives.   (line 180)
+* option summary:                        Overview.            (line   6)
+* options for Alpha:                     Alpha Options.       (line   6)
+* options for AMD29K (none):             AMD29K Options.      (line   6)
+* options for ARC (none):                ARC Options.         (line   6)
+* options for ARM (none):                ARM Options.         (line   6)
+* options for i386:                      i386-Options.        (line   6)
+* options for IA-64:                     IA-64 Options.       (line   6)
+* options for MSP430 (none):             MSP430 Options.      (line   6)
+* options for PDP-11:                    PDP-11-Options.      (line   6)
+* options for PowerPC:                   PowerPC-Opts.        (line   6)
+* options for SPARC:                     Sparc-Opts.          (line   6)
+* options for V850 (none):               V850 Options.        (line   6)
+* options for VAX/VMS:                   VAX-Opts.            (line  42)
+* options for x86-64:                    i386-Options.        (line   6)
+* options, all versions of assembler:    Invoking.            (line   6)
+* options, command line:                 Command Line.        (line  13)
+* options, CRIS:                         CRIS-Opts.           (line   6)
+* options, D10V:                         D10V-Opts.           (line   6)
+* options, D30V:                         D30V-Opts.           (line   6)
+* options, H8/300 (none):                H8/300 Options.      (line   6)
+* options, H8/500 (none):                H8/500 Options.      (line   6)
+* options, i960:                         Options-i960.        (line   6)
+* options, IP2K:                         IP2K-Opts.           (line   6)
+* options, M32R:                         M32R-Opts.           (line   6)
+* options, M680x0:                       M68K-Opts.           (line   6)
+* options, M68HC11:                      M68HC11-Opts.        (line   6)
+* options, MMIX:                         MMIX-Opts.           (line   6)
+* options, PJ:                           PJ Options.          (line   6)
+* options, SH:                           SH Options.          (line   6)
+* options, SH64:                         SH64 Options.        (line   6)
+* options, TIC54X:                       TIC54X-Opts.         (line   6)
+* options, Z8000:                        Z8000 Options.       (line   6)
+* org directive:                         Org.                 (line   6)
+* other attribute, of a.out symbol:      Symbol Other.        (line   6)
+* output file:                           Object.              (line   6)
+* p2align directive:                     P2align.             (line   6)
+* p2alignl directive:                    P2align.             (line  28)
+* p2alignw directive:                    P2align.             (line  28)
+* padding the location counter:          Align.               (line   6)
+* padding the location counter given a power of two: P2align. (line   6)
+* padding the location counter given number of bytes: Balign. (line   6)
+* page, in listings:                     Eject.               (line   6)
+* paper size, for listings:              Psize.               (line   6)
+* paths for .include:                    I.                   (line   6)
+* patterns, writing in memory:           Fill.                (line   6)
+* PDP-11 comments:                       PDP-11-Syntax.       (line  16)
+* PDP-11 floating-point register syntax: PDP-11-Syntax.       (line  13)
+* PDP-11 general-purpose register syntax: PDP-11-Syntax.      (line  10)
+* PDP-11 instruction naming:             PDP-11-Mnemonics.    (line   6)
+* PDP-11 support:                        PDP-11-Dependent.    (line   6)
+* PDP-11 syntax:                         PDP-11-Syntax.       (line   6)
+* PIC code generation for ARM:           ARM Options.         (line 117)
+* PIC code generation for M32R:          M32R-Opts.           (line  42)
+* PJ endianness:                         Overview.            (line 457)
+* PJ options:                            PJ Options.          (line   6)
+* PJ support:                            PJ-Dependent.        (line   6)
+* plus, permitted arguments:             Infix Ops.           (line  46)
+* popsection directive:                  PopSection.          (line   6)
+* Position-independent code, CRIS:       CRIS-Opts.           (line  27)
+* Position-independent code, symbols in, CRIS: CRIS-Pic.      (line   6)
+* PowerPC architectures:                 PowerPC-Opts.        (line   6)
+* PowerPC directives:                    PowerPC-Pseudo.      (line   6)
+* PowerPC options:                       PowerPC-Opts.        (line   6)
+* PowerPC support:                       PPC-Dependent.       (line   6)
+* precedence of operators:               Infix Ops.           (line  11)
+* precision, floating point:             Flonums.             (line   6)
+* prefix operators:                      Prefix Ops.          (line   6)
+* prefixes, i386:                        i386-Prefixes.       (line   6)
+* preprocessing:                         Preprocessing.       (line   6)
+* preprocessing, turning on and off:     Preprocessing.       (line  27)
+* previous directive:                    Previous.            (line   6)
+* primary attributes, COFF symbols:      COFF Symbols.        (line  13)
+* print directive:                       Print.               (line   6)
+* proc directive, SPARC:                 Sparc-Directives.    (line  25)
+* profiler directive, MSP 430:           MSP430 Directives.   (line  22)
+* profiling capability for MSP 430:      MSP430 Profiling Capability.
+                                                              (line   6)
+* protected directive:                   Protected.           (line   6)
+* protected registers, AMD 29K:          AMD29K-Regs.         (line  20)
+* pseudo-op .arch, CRIS:                 CRIS-Pseudos.        (line  45)
+* pseudo-op .dword, CRIS:                CRIS-Pseudos.        (line  12)
+* pseudo-op .syntax, CRIS:               CRIS-Pseudos.        (line  17)
+* pseudo-op BSPEC, MMIX:                 MMIX-Pseudos.        (line 131)
+* pseudo-op BYTE, MMIX:                  MMIX-Pseudos.        (line  97)
+* pseudo-op ESPEC, MMIX:                 MMIX-Pseudos.        (line 131)
+* pseudo-op GREG, MMIX:                  MMIX-Pseudos.        (line  50)
+* pseudo-op IS, MMIX:                    MMIX-Pseudos.        (line  42)
+* pseudo-op LOC, MMIX:                   MMIX-Pseudos.        (line   7)
+* pseudo-op LOCAL, MMIX:                 MMIX-Pseudos.        (line  28)
+* pseudo-op OCTA, MMIX:                  MMIX-Pseudos.        (line 108)
+* pseudo-op PREFIX, MMIX:                MMIX-Pseudos.        (line 120)
+* pseudo-op TETRA, MMIX:                 MMIX-Pseudos.        (line 108)
+* pseudo-op WYDE, MMIX:                  MMIX-Pseudos.        (line 108)
+* pseudo-opcodes, M680x0:                M68K-Branch.         (line   6)
+* pseudo-opcodes, M68HC11:               M68HC11-Branch.      (line   6)
+* pseudo-ops for branch, VAX:            VAX-branch.          (line   6)
+* pseudo-ops, CRIS:                      CRIS-Pseudos.        (line   6)
+* pseudo-ops, machine independent:       Pseudo Ops.          (line   6)
+* pseudo-ops, MMIX:                      MMIX-Pseudos.        (line   6)
+* psize directive:                       Psize.               (line   6)
+* PSR bits:                              IA-64-Bits.          (line   6)
+* pstring directive, TIC54X:             TIC54X-Directives.   (line 209)
+* psw register, V850:                    V850-Regs.           (line 116)
+* purgem directive:                      Purgem.              (line   6)
+* purpose of GNU assembler:              GNU Assembler.       (line  12)
+* pushsection directive:                 PushSection.         (line   6)
+* quad directive:                        Quad.                (line   6)
+* quad directive, i386:                  i386-Float.          (line  21)
+* quad directive, x86-64:                i386-Float.          (line  21)
+* real-mode code, i386:                  i386-16bit.          (line   6)
+* ref directive, TIC54X:                 TIC54X-Directives.   (line 103)
+* register directive, SPARC:             Sparc-Directives.    (line  29)
+* register names, Alpha:                 Alpha-Regs.          (line   6)
+* register names, AMD 29K:               AMD29K-Regs.         (line   6)
+* register names, ARC:                   ARC-Regs.            (line   6)
+* register names, ARM:                   ARM-Regs.            (line   6)
+* register names, CRIS:                  CRIS-Regs.           (line   6)
+* register names, H8/300:                H8/300-Regs.         (line   6)
+* register names, IA-64:                 IA-64-Regs.          (line   6)
+* register names, MMIX:                  MMIX-Regs.           (line   6)
+* register names, MSP 430:               MSP430-Regs.         (line   6)
+* register names, V850:                  V850-Regs.           (line   6)
+* register names, VAX:                   VAX-operands.        (line  17)
+* register names, Xtensa:                Xtensa Registers.    (line   6)
+* register operands, i386:               i386-Syntax.         (line  15)
+* register operands, x86-64:             i386-Syntax.         (line  15)
+* registers, D10V:                       D10V-Regs.           (line   6)
+* registers, D30V:                       D30V-Regs.           (line   6)
+* registers, H8/500:                     H8/500-Regs.         (line   6)
+* registers, i386:                       i386-Regs.           (line   6)
+* registers, SH:                         SH-Regs.             (line   6)
+* registers, SH64:                       SH64-Regs.           (line   6)
+* registers, TIC54X memory-mapped:       TIC54X-MMRegs.       (line   6)
+* registers, x86-64:                     i386-Regs.           (line   6)
+* registers, Z8000:                      Z8000-Regs.          (line   6)
+* relaxation:                            Xtensa Relaxation.   (line   6)
+* relaxation of ADDI instructions:       Xtensa Immediate Relaxation.
+                                                              (line  43)
+* relaxation of branch instructions:     Xtensa Branch Relaxation.
+                                                              (line   6)
+* relaxation of call instructions:       Xtensa Call Relaxation.
+                                                              (line   6)
+* relaxation of immediate fields:        Xtensa Immediate Relaxation.
+                                                              (line   6)
+* relaxation of L16SI instructions:      Xtensa Immediate Relaxation.
+                                                              (line  23)
+* relaxation of L16UI instructions:      Xtensa Immediate Relaxation.
+                                                              (line  23)
+* relaxation of L32I instructions:       Xtensa Immediate Relaxation.
+                                                              (line  23)
+* relaxation of L8UI instructions:       Xtensa Immediate Relaxation.
+                                                              (line  23)
+* relaxation of MOVI instructions:       Xtensa Immediate Relaxation.
+                                                              (line  12)
+* relocation:                            Sections.            (line   6)
+* relocation example:                    Ld Sections.         (line  40)
+* relocations, Alpha:                    Alpha-Relocs.        (line   6)
+* repeat prefixes, i386:                 i386-Prefixes.       (line  44)
+* reporting bugs in assembler:           Reporting Bugs.      (line   6)
+* rept directive:                        Rept.                (line   6)
+* req directive, ARM:                    ARM Directives.      (line  13)
+* reserve directive, SPARC:              Sparc-Directives.    (line  39)
+* return instructions, i386:             i386-Syntax.         (line  38)
+* return instructions, x86-64:           i386-Syntax.         (line  38)
+* REX prefixes, i386:                    i386-Prefixes.       (line  46)
+* rsect:                                 Z8000 Directives.    (line  52)
+* sblock directive, TIC54X:              TIC54X-Directives.   (line 183)
+* sbttl directive:                       Sbttl.               (line   6)
+* schedule directive:                    Schedule Directive.  (line   6)
+* scl directive:                         Scl.                 (line   6)
+* sdaoff pseudo-op, V850:                V850 Opcodes.        (line  65)
+* search path for .include:              I.                   (line   6)
+* sect directive, AMD 29K:               AMD29K Directives.   (line  30)
+* sect directive, MSP 430:               MSP430 Directives.   (line  18)
+* sect directive, TIC54X:                TIC54X-Directives.   (line 189)
+* section directive (COFF version):      Section.             (line  16)
+* section directive (ELF version):       Section.             (line  67)
+* section directive, V850:               V850 Directives.     (line   9)
+* section override prefixes, i386:       i386-Prefixes.       (line  23)
+* Section Stack <1>:                     SubSection.          (line   6)
+* Section Stack <2>:                     Section.             (line  62)
+* Section Stack <3>:                     PushSection.         (line   6)
+* Section Stack <4>:                     PopSection.          (line   6)
+* Section Stack:                         Previous.            (line   6)
+* section-relative addressing:           Secs Background.     (line  68)
+* sections:                              Sections.            (line   6)
+* sections in messages, internal:        As Sections.         (line   6)
+* sections, i386:                        i386-Syntax.         (line  44)
+* sections, named:                       Ld Sections.         (line   8)
+* sections, x86-64:                      i386-Syntax.         (line  44)
+* seg directive, SPARC:                  Sparc-Directives.    (line  44)
+* segm:                                  Z8000 Directives.    (line  10)
+* set directive:                         Set.                 (line   6)
+* set directive, M88K:                   M88K Directives.     (line  30)
+* set directive, TIC54X:                 TIC54X-Directives.   (line 192)
+* SH addressing modes:                   SH-Addressing.       (line   6)
+* SH floating point (IEEE):              SH Floating Point.   (line   6)
+* SH line comment character:             SH-Chars.            (line   6)
+* SH line separator:                     SH-Chars.            (line   8)
+* SH machine directives:                 SH Directives.       (line   6)
+* SH opcode summary:                     SH Opcodes.          (line   6)
+* SH options:                            SH Options.          (line   6)
+* SH registers:                          SH-Regs.             (line   6)
+* SH support:                            SH-Dependent.        (line   6)
+* SH64 ABI options:                      SH64 Options.        (line  29)
+* SH64 addressing modes:                 SH64-Addressing.     (line   6)
+* SH64 ISA options:                      SH64 Options.        (line   6)
+* SH64 line comment character:           SH64-Chars.          (line   6)
+* SH64 line separator:                   SH64-Chars.          (line   8)
+* SH64 machine directives:               SH64 Directives.     (line   9)
+* SH64 opcode summary:                   SH64 Opcodes.        (line   6)
+* SH64 options:                          SH64 Options.        (line   6)
+* SH64 registers:                        SH64-Regs.           (line   6)
+* SH64 support:                          SH64-Dependent.      (line   6)
+* shigh directive, M32R:                 M32R-Directives.     (line  26)
+* short directive:                       Short.               (line   6)
+* short directive, ARC:                  ARC Directives.      (line 171)
+* short directive, TIC54X:               TIC54X-Directives.   (line 111)
+* SIMD, i386:                            i386-SIMD.           (line   6)
+* SIMD, x86-64:                          i386-SIMD.           (line   6)
+* single character constant:             Chars.               (line   6)
+* single directive:                      Single.              (line   6)
+* single directive, i386:                i386-Float.          (line  14)
+* single directive, x86-64:              i386-Float.          (line  14)
+* sixteen bit integers:                  hword.               (line   6)
+* sixteen byte integer:                  Octa.                (line   6)
+* size directive (COFF version):         Size.                (line  11)
+* size directive (ELF version):          Size.                (line  22)
+* size modifiers, D10V:                  D10V-Size.           (line   6)
+* size modifiers, D30V:                  D30V-Size.           (line   6)
+* size modifiers, M680x0:                M68K-Syntax.         (line   8)
+* size prefixes, i386:                   i386-Prefixes.       (line  27)
+* size suffixes, H8/300:                 H8/300 Opcodes.      (line 163)
+* sizes operands, i386:                  i386-Syntax.         (line  29)
+* sizes operands, x86-64:                i386-Syntax.         (line  29)
+* skip directive:                        Skip.                (line   6)
+* skip directive, M680x0:                M68K-Directives.     (line  19)
+* skip directive, SPARC:                 Sparc-Directives.    (line  48)
+* sleb128 directive:                     Sleb128.             (line   6)
+* small objects, MIPS ECOFF:             MIPS Object.         (line  11)
+* SOM symbol attributes:                 SOM Symbols.         (line   6)
+* source program:                        Input Files.         (line   6)
+* source, destination operands; i386:    i386-Syntax.         (line  22)
+* source, destination operands; x86-64:  i386-Syntax.         (line  22)
+* sp register:                           Xtensa Registers.    (line   6)
+* sp register, V850:                     V850-Regs.           (line  14)
+* space directive:                       Space.               (line   6)
+* space directive, TIC54X:               TIC54X-Directives.   (line 197)
+* space used, maximum for assembly:      statistics.          (line   6)
+* SPARC architectures:                   Sparc-Opts.          (line   6)
+* SPARC data alignment:                  Sparc-Aligned-Data.  (line   6)
+* SPARC floating point (IEEE):           Sparc-Float.         (line   6)
+* SPARC machine directives:              Sparc-Directives.    (line   6)
+* SPARC options:                         Sparc-Opts.          (line   6)
+* SPARC support:                         Sparc-Dependent.     (line   6)
+* special characters, ARC:               ARC-Chars.           (line   6)
+* special characters, M680x0:            M68K-Chars.          (line   6)
+* special purpose registers, AMD 29K:    AMD29K-Regs.         (line  20)
+* special purpose registers, MSP 430:    MSP430-Regs.         (line  11)
+* sslist directive, TIC54X:              TIC54X-Directives.   (line 204)
+* ssnolist directive, TIC54X:            TIC54X-Directives.   (line 204)
+* stabd directive:                       Stab.                (line  38)
+* stabn directive:                       Stab.                (line  48)
+* stabs directive:                       Stab.                (line  51)
+* stabX directives:                      Stab.                (line   6)
+* standard assembler sections:           Secs Background.     (line  27)
+* standard input, as input file:         Command Line.        (line  10)
+* statement separator character:         Statements.          (line   6)
+* statement separator, Alpha:            Alpha-Chars.         (line   8)
+* statement separator, ARM:              ARM-Chars.           (line  10)
+* statement separator, H8/300:           H8/300-Chars.        (line   8)
+* statement separator, H8/500:           H8/500-Chars.        (line   8)
+* statement separator, IA-64:            IA-64-Chars.         (line   8)
+* statement separator, SH:               SH-Chars.            (line   8)
+* statement separator, SH64:             SH64-Chars.          (line   8)
+* statement separator, Z8000:            Z8000-Chars.         (line   8)
+* statements, structure of:              Statements.          (line   6)
+* statistics, about assembly:            statistics.          (line   6)
+* stopping the assembly:                 Abort.               (line   6)
+* string constants:                      Strings.             (line   6)
+* string directive:                      String.              (line   6)
+* string directive on HPPA:              HPPA Directives.     (line 137)
+* string directive, M88K:                M88K Directives.     (line  25)
+* string directive, TIC54X:              TIC54X-Directives.   (line 209)
+* string literals:                       Ascii.               (line   6)
+* string, copying to object file:        String.              (line   6)
+* struct directive:                      Struct.              (line   6)
+* struct directive, TIC54X:              TIC54X-Directives.   (line 217)
+* structure debugging, COFF:             Tag.                 (line   6)
+* sub-instruction ordering, D10V:        D10V-Chars.          (line   6)
+* sub-instruction ordering, D30V:        D30V-Chars.          (line   6)
+* sub-instructions, D10V:                D10V-Subs.           (line   6)
+* sub-instructions, D30V:                D30V-Subs.           (line   6)
+* subexpressions:                        Arguments.           (line  24)
+* subsection directive:                  SubSection.          (line   6)
+* subsym builtins, TIC54X:               TIC54X-Macros.       (line  16)
+* subtitles for listings:                Sbttl.               (line   6)
+* subtraction, permitted arguments:      Infix Ops.           (line  51)
+* summary of options:                    Overview.            (line   6)
+* support:                               HPPA-Dependent.      (line   6)
+* supporting files, including:           Include.             (line   6)
+* suppressing warnings:                  W.                   (line  11)
+* sval:                                  Z8000 Directives.    (line  33)
+* symbol attributes:                     Symbol Attributes.   (line   6)
+* symbol attributes, a.out:              a.out Symbols.       (line   6)
+* symbol attributes, COFF:               COFF Symbols.        (line   6)
+* symbol attributes, SOM:                SOM Symbols.         (line   6)
+* symbol descriptor, COFF:               Desc.                (line   6)
+* symbol modifiers:                      M68HC11-Modifiers.   (line  12)
+* symbol names:                          Symbol Names.        (line   6)
+* symbol names, $ in <1>:                SH64-Chars.          (line  10)
+* symbol names, $ in <2>:                SH-Chars.            (line  10)
+* symbol names, $ in <3>:                H8/500-Chars.        (line  10)
+* symbol names, $ in <4>:                D30V-Chars.          (line  63)
+* symbol names, $ in:                    D10V-Chars.          (line  46)
+* symbol names, local:                   Symbol Names.        (line  24)
+* symbol names, temporary:               Symbol Names.        (line  24)
+* symbol storage class (COFF):           Scl.                 (line   6)
+* symbol type:                           Symbol Type.         (line   6)
+* symbol type, COFF:                     Type.                (line  11)
+* symbol type, ELF:                      Type.                (line  25)
+* symbol value:                          Symbol Value.        (line   6)
+* symbol value, setting:                 Set.                 (line   6)
+* symbol values, assigning:              Setting Symbols.     (line   6)
+* symbol versioning:                     Symver.              (line   6)
+* symbol, common:                        Comm.                (line   6)
+* symbol, making visible to linker:      Global.              (line   6)
+* symbolic debuggers, information for:   Stab.                (line   6)
+* symbols:                               Symbols.             (line   6)
+* Symbols in position-independent code, CRIS: CRIS-Pic.       (line   6)
+* symbols with uppercase, VAX/VMS:       VAX-Opts.            (line  42)
+* symbols, assigning values to:          Equ.                 (line   6)
+* Symbols, built-in, CRIS:               CRIS-Symbols.        (line   6)
+* Symbols, CRIS, built-in:               CRIS-Symbols.        (line   6)
+* symbols, local common:                 Lcomm.               (line   6)
+* symver directive:                      Symver.              (line   6)
+* syntax compatibility, i386:            i386-Syntax.         (line   6)
+* syntax compatibility, x86-64:          i386-Syntax.         (line   6)
+* syntax, D10V:                          D10V-Syntax.         (line   6)
+* syntax, D30V:                          D30V-Syntax.         (line   6)
+* syntax, M680x0:                        M68K-Syntax.         (line   8)
+* syntax, M68HC11 <1>:                   M68HC11-Modifiers.   (line   6)
+* syntax, M68HC11:                       M68HC11-Syntax.      (line   6)
+* syntax, machine-independent:           Syntax.              (line   6)
+* syntax, Xtensa assembler:              Xtensa Syntax.       (line   6)
+* sysproc directive, i960:               Directives-i960.     (line  37)
+* tab (\t):                              Strings.             (line  27)
+* tab directive, TIC54X:                 TIC54X-Directives.   (line 248)
+* tag directive:                         Tag.                 (line   6)
+* tag directive, TIC54X:                 TIC54X-Directives.   (line 217)
+* tdaoff pseudo-op, V850:                V850 Opcodes.        (line  81)
+* temporary symbol names:                Symbol Names.        (line  24)
+* text and data sections, joining:       R.                   (line   6)
+* text directive:                        Text.                (line   6)
+* text section:                          Ld Sections.         (line   9)
+* tfloat directive, i386:                i386-Float.          (line  14)
+* tfloat directive, x86-64:              i386-Float.          (line  14)
+* thumb directive, ARM:                  ARM Directives.      (line  33)
+* Thumb support:                         ARM-Dependent.       (line   6)
+* thumb_func directive, ARM:             ARM Directives.      (line  43)
+* thumb_set directive, ARM:              ARM Directives.      (line  51)
+* TIC54X builtin math functions:         TIC54X-Builtins.     (line   6)
+* TIC54X machine directives:             TIC54X-Directives.   (line   6)
+* TIC54X memory-mapped registers:        TIC54X-MMRegs.       (line   6)
+* TIC54X options:                        TIC54X-Opts.         (line   6)
+* TIC54X subsym builtins:                TIC54X-Macros.       (line  16)
+* TIC54X support:                        TIC54X-Dependent.    (line   6)
+* TIC54X-specific macros:                TIC54X-Macros.       (line   6)
+* time, total for assembly:              statistics.          (line   6)
+* title directive:                       Title.               (line   6)
+* tp register, V850:                     V850-Regs.           (line  20)
+* transform directive:                   Transform Directive. (line   6)
+* trusted compiler:                      f.                   (line   6)
+* turning preprocessing on and off:      Preprocessing.       (line  27)
+* type directive (COFF version):         Type.                (line  11)
+* type directive (ELF version):          Type.                (line  25)
+* type of a symbol:                      Symbol Type.         (line   6)
+* ualong directive, SH:                  SH Directives.       (line   6)
+* uaword directive, SH:                  SH Directives.       (line   6)
+* ubyte directive, TIC54X:               TIC54X-Directives.   (line  36)
+* uchar directive, TIC54X:               TIC54X-Directives.   (line  36)
+* uhalf directive, TIC54X:               TIC54X-Directives.   (line 111)
+* uint directive, TIC54X:                TIC54X-Directives.   (line 111)
+* uleb128 directive:                     Uleb128.             (line   6)
+* ulong directive, TIC54X:               TIC54X-Directives.   (line 135)
+* undefined section:                     Ld Sections.         (line  36)
+* union directive, TIC54X:               TIC54X-Directives.   (line 251)
+* unreq directive, ARM:                  ARM Directives.      (line  18)
+* unsegm:                                Z8000 Directives.    (line  14)
+* use directive, AMD 29K:                AMD29K Directives.   (line  34)
+* usect directive, TIC54X:               TIC54X-Directives.   (line 263)
+* ushort directive, TIC54X:              TIC54X-Directives.   (line 111)
+* uword directive, TIC54X:               TIC54X-Directives.   (line 111)
+* V850 command line options:             V850 Options.        (line   9)
+* V850 floating point (IEEE):            V850 Floating Point. (line   6)
+* V850 line comment character:           V850-Chars.          (line   6)
+* V850 machine directives:               V850 Directives.     (line   6)
+* V850 opcodes:                          V850 Opcodes.        (line   6)
+* V850 options (none):                   V850 Options.        (line   6)
+* V850 register names:                   V850-Regs.           (line   6)
+* V850 support:                          V850-Dependent.      (line   6)
+* val directive:                         Val.                 (line   6)
+* value attribute, COFF:                 Val.                 (line   6)
+* value of a symbol:                     Symbol Value.        (line   6)
+* var directive, TIC54X:                 TIC54X-Directives.   (line 273)
+* VAX bitfields not supported:           VAX-no.              (line   6)
+* VAX branch improvement:                VAX-branch.          (line   6)
+* VAX command-line options ignored:      VAX-Opts.            (line   6)
+* VAX displacement sizing character:     VAX-operands.        (line  12)
+* VAX floating point:                    VAX-float.           (line   6)
+* VAX immediate character:               VAX-operands.        (line   6)
+* VAX indirect character:                VAX-operands.        (line   9)
+* VAX machine directives:                VAX-directives.      (line   6)
+* VAX opcode mnemonics:                  VAX-opcodes.         (line   6)
+* VAX operand notation:                  VAX-operands.        (line   6)
+* VAX register names:                    VAX-operands.        (line  17)
+* VAX support:                           Vax-Dependent.       (line   6)
+* Vax-11 C compatibility:                VAX-Opts.            (line  42)
+* VAX/VMS options:                       VAX-Opts.            (line  42)
+* version directive:                     Version.             (line   6)
+* version directive, TIC54X:             TIC54X-Directives.   (line 277)
+* version of assembler:                  v.                   (line   6)
+* versions of symbols:                   Symver.              (line   6)
+* visibility <1>:                        Protected.           (line   6)
+* visibility <2>:                        Internal.            (line   6)
+* visibility:                            Hidden.              (line   6)
+* VMS (VAX) options:                     VAX-Opts.            (line  42)
+* vtable_entry directive:                VTableEntry.         (line   6)
+* vtable_inherit directive:              VTableInherit.       (line   6)
+* warning directive:                     Warning.             (line   6)
+* warning for altered difference tables: K.                   (line   6)
+* warning messages:                      Errors.              (line   6)
+* warnings, causing error:               W.                   (line  16)
+* warnings, M32R:                        M32R-Warnings.       (line   6)
+* warnings, suppressing:                 W.                   (line  11)
+* warnings, switching on:                W.                   (line  19)
+* weak directive:                        Weak.                (line   6)
+* whitespace:                            Whitespace.          (line   6)
+* whitespace, removed by preprocessor:   Preprocessing.       (line   7)
+* wide floating point directives, VAX:   VAX-directives.      (line  10)
+* width directive, TIC54X:               TIC54X-Directives.   (line 127)
+* Width of continuation lines of disassembly output: listing. (line  20)
+* Width of first line disassembly output: listing.            (line  15)
+* Width of source line output:           listing.             (line  27)
+* wmsg directive, TIC54X:                TIC54X-Directives.   (line  77)
+* word directive:                        Word.                (line   6)
+* word directive, ARC:                   ARC Directives.      (line 174)
+* word directive, H8/300:                H8/300 Directives.   (line   6)
+* word directive, H8/500:                H8/500 Directives.   (line   6)
+* word directive, i386:                  i386-Float.          (line  21)
+* word directive, M88K:                  M88K Directives.     (line  22)
+* word directive, SPARC:                 Sparc-Directives.    (line  51)
+* word directive, TIC54X:                TIC54X-Directives.   (line 111)
+* word directive, x86-64:                i386-Float.          (line  21)
+* writing patterns in memory:            Fill.                (line   6)
+* wval:                                  Z8000 Directives.    (line  24)
+* x86-64 arch directive:                 i386-Arch.           (line   6)
+* x86-64 att_syntax pseudo op:           i386-Syntax.         (line   6)
+* x86-64 conversion instructions:        i386-Mnemonics.      (line  32)
+* x86-64 floating point:                 i386-Float.          (line   6)
+* x86-64 immediate operands:             i386-Syntax.         (line  15)
+* x86-64 instruction naming:             i386-Mnemonics.      (line   6)
+* x86-64 intel_syntax pseudo op:         i386-Syntax.         (line   6)
+* x86-64 jump optimization:              i386-Jumps.          (line   6)
+* x86-64 jump, call, return:             i386-Syntax.         (line  38)
+* x86-64 jump/call operands:             i386-Syntax.         (line  15)
+* x86-64 memory references:              i386-Memory.         (line   6)
+* x86-64 options:                        i386-Options.        (line   6)
+* x86-64 register operands:              i386-Syntax.         (line  15)
+* x86-64 registers:                      i386-Regs.           (line   6)
+* x86-64 sections:                       i386-Syntax.         (line  44)
+* x86-64 size suffixes:                  i386-Syntax.         (line  29)
+* x86-64 source, destination operands:   i386-Syntax.         (line  22)
+* x86-64 support:                        i386-Dependent.      (line   6)
+* x86-64 syntax compatibility:           i386-Syntax.         (line   6)
+* xfloat directive, TIC54X:              TIC54X-Directives.   (line  64)
+* xlong directive, TIC54X:               TIC54X-Directives.   (line 135)
+* Xtensa architecture:                   Xtensa-Dependent.    (line   6)
+* Xtensa assembler syntax:               Xtensa Syntax.       (line   6)
+* Xtensa directives:                     Xtensa Directives.   (line   6)
+* Xtensa opcode names:                   Xtensa Opcodes.      (line   6)
+* Xtensa register names:                 Xtensa Registers.    (line   6)
+* xword directive, SPARC:                Sparc-Directives.    (line  55)
+* Z800 addressing modes:                 Z8000-Addressing.    (line   6)
+* Z8000 directives:                      Z8000 Directives.    (line   6)
+* Z8000 line comment character:          Z8000-Chars.         (line   6)
+* Z8000 line separator:                  Z8000-Chars.         (line   8)
+* Z8000 opcode summary:                  Z8000 Opcodes.       (line   6)
+* Z8000 options:                         Z8000 Options.       (line   6)
+* Z8000 registers:                       Z8000-Regs.          (line   6)
+* Z8000 support:                         Z8000-Dependent.     (line   6)
+* zdaoff pseudo-op, V850:                V850 Opcodes.        (line  99)
+* zero register, V850:                   V850-Regs.           (line   7)
+* zero-terminated strings:               Asciz.               (line   6)
+
+
 
 Tag Table:
-(Indirect)
-Node: Top778
-Node: Overview1697
-Node: Manual24913
-Node: GNU Assembler25857
-Node: Object Formats27028
-Node: Command Line27480
-Node: Input Files28567
-Node: Object30548
-Node: Errors31500
-Node: Invoking32695
-Node: a34644
-Node: alternate36416
-Node: D36588
-Node: f36821
-Node: I37329
-Node: K37873
-Node: L38176
-Node: listing39013
-Node: M40605
-Node: MD45006
-Node: o45432
-Node: R45887
-Node: statistics46917
-Node: traditional-format47324
-Node: v47797
-Node: W48072
-Node: Z48979
-Node: Syntax49501
-Node: Preprocessing50092
-Node: Whitespace51655
-Node: Comments52051
-Node: Symbol Intro54244
-Node: Statements54934
-Node: Constants56850
-Node: Characters57481
-Node: Strings57983
-Node: Chars60149
-Node: Numbers60903
-Node: Integers61443
-Node: Bignums62099
-Node: Flonums62455
-Node: Sections64210
-Node: Secs Background64588
-Node: Ld Sections69638
-Node: As Sections72022
-Node: Sub-Sections72932
-Node: bss76079
-Node: Symbols77029
-Node: Labels77677
-Node: Setting Symbols78408
-Node: Symbol Names78778
-Node: Dot83247
-Node: Symbol Attributes83694
-Node: Symbol Value84431
-Node: Symbol Type85476
-Node: a.out Symbols85864
-Node: Symbol Desc86126
-Node: Symbol Other86421
-Node: COFF Symbols86590
-Node: SOM Symbols87263
-Node: Expressions87705
-Node: Empty Exprs88454
-Node: Integer Exprs88801
-Node: Arguments89196
-Node: Operators90302
-Node: Prefix Ops90637
-Node: Infix Ops90965
-Node: Pseudo Ops93362
-Node: Abort98386
-Node: ABORT98791
-Node: Align99058
-Node: Ascii101352
-Node: Asciz101661
-Node: Balign101906
-Node: Byte103769
-Node: Comm104007
-Node: CFI directives105381
-Node: Data107637
-Node: Def107964
-Node: Desc108339
-Node: Dim108839
-Node: Double109237
-Node: Eject109575
-Node: Else109750
-Node: Elseif110046
-Node: End110336
-Node: Endef110551
-Node: Endfunc110881
-Node: Endif111056
-Node: Equ111317
-Node: Equiv111626
-Node: Err112126
-Node: Error112436
-Node: Exitm112881
-Node: Extern113050
-Node: Fail113311
-Node: File113756
-Node: Fill114372
-Node: Float115336
-Node: Func115678
-Node: Global116268
-Node: Hidden117018
-Node: hword117597
-Node: Ident117925
-Node: If118231
-Node: Incbin121027
-Node: Include121722
-Node: Int122273
-Node: Internal122654
-Node: Irp123302
-Node: Irpc124107
-Node: Lcomm124932
-Node: Lflags125680
-Node: Line125874
-Node: Linkonce126907
-Node: Ln128134
-Node: MRI128289
-Node: List128627
-Node: Long129237
-Node: Macro129413
-Node: Altmacro132151
-Node: Noaltmacro133481
-Node: Nolist133649
-Node: Octa134079
-Node: Org134413
-Node: P2align135696
-Node: Previous137624
-Node: PopSection138318
-Node: Print138826
-Node: Protected139055
-Node: Psize139702
-Node: Purgem140386
-Node: PushSection140607
-Node: Quad141164
-Node: Rept141619
-Node: Sbttl142032
-Node: Scl142397
-Node: Section142900
-Node: Set148039
-Node: Short148598
-Node: Single148918
-Node: Size149263
-Node: Sleb128150077
-Node: Skip150399
-Node: Space150721
-Node: Stab151613
-Node: String153615
-Node: Struct154041
-Node: SubSection154764
-Node: Symver155325
-Node: Tag157716
-Node: Text158231
-Node: Title158550
-Node: Type158929
-Node: Uleb128160146
-Node: Val160468
-Node: Version160836
-Node: VTableEntry161109
-Node: VTableInherit161397
-Node: Warning161843
-Node: Weak162077
-Node: Word162743
-Node: Deprecated164586
-Node: Machine Dependencies164821
-Node: AMD29K-Dependent167601
-Node: AMD29K Options167992
-Node: AMD29K Syntax168175
-Node: AMD29K-Macros168451
-Node: AMD29K-Chars168715
-Node: AMD29K-Regs168991
-Node: AMD29K Floating Point170270
-Node: AMD29K Directives170485
-Node: AMD29K Opcodes171905
-Node: Alpha-Dependent172250
-Node: Alpha Notes172689
-Node: Alpha Options172970
-Node: Alpha Syntax175168
-Node: Alpha-Chars175637
-Node: Alpha-Regs175868
-Node: Alpha-Relocs176255
-Node: Alpha Floating Point182246
-Node: Alpha Directives182468
-Node: Alpha Opcodes187991
-Node: ARC-Dependent188286
-Node: ARC Options188669
-Node: ARC Syntax189738
-Node: ARC-Chars189970
-Node: ARC-Regs190102
-Node: ARC Floating Point190226
-Node: ARC Directives190537
-Node: ARC Opcodes196508
-Node: ARM-Dependent196734
-Node: ARM Options197161
-Node: ARM Syntax202762
-Node: ARM-Chars202994
-Node: ARM-Regs203518
-Node: ARM Floating Point203703
-Node: ARM Directives203902
-Node: ARM Opcodes209676
-Node: ARM Mapping Symbols211764
-Node: CRIS-Dependent212543
-Node: CRIS-Opts212888
-Ref: march-option214506
-Node: CRIS-Expand216323
-Node: CRIS-Symbols217506
-Node: CRIS-Syntax218675
-Node: CRIS-Chars219011
-Node: CRIS-Pic219562
-Ref: crispic219758
-Node: CRIS-Regs223298
-Node: CRIS-Pseudos223715
-Ref: crisnous224491
-Node: D10V-Dependent225773
-Node: D10V-Opts226124
-Node: D10V-Syntax227087
-Node: D10V-Size227616
-Node: D10V-Subs228589
-Node: D10V-Chars229624
-Node: D10V-Regs231228
-Node: D10V-Addressing232273
-Node: D10V-Word232959
-Node: D10V-Float233474
-Node: D10V-Opcodes233785
-Node: D30V-Dependent234178
-Node: D30V-Opts234531
-Node: D30V-Syntax235206
-Node: D30V-Size235738
-Node: D30V-Subs236709
-Node: D30V-Chars237744
-Node: D30V-Guarded240042
-Node: D30V-Regs240722
-Node: D30V-Addressing241861
-Node: D30V-Float242529
-Node: D30V-Opcodes242840
-Node: H8/300-Dependent243233
-Node: H8/300 Options243645
-Node: H8/300 Syntax243854
-Node: H8/300-Chars244153
-Node: H8/300-Regs244450
-Node: H8/300-Addressing245367
-Node: H8/300 Floating Point246406
-Node: H8/300 Directives246731
-Node: H8/300 Opcodes247857
-Node: H8/500-Dependent256177
-Node: H8/500 Options256589
-Node: H8/500 Syntax256798
-Node: H8/500-Chars257097
-Node: H8/500-Regs257401
-Node: H8/500-Addressing258170
-Node: H8/500 Floating Point258800
-Node: H8/500 Directives259125
-Node: H8/500 Opcodes259453
-Node: HPPA-Dependent264565
-Node: HPPA Notes265000
-Node: HPPA Options265758
-Node: HPPA Syntax265953
-Node: HPPA Floating Point267223
-Node: HPPA Directives267429
-Node: HPPA Opcodes276115
-Node: ESA/390-Dependent276374
-Node: ESA/390 Notes276834
-Node: ESA/390 Options277625
-Node: ESA/390 Syntax277835
-Node: ESA/390 Floating Point280008
-Node: ESA/390 Directives280287
-Node: ESA/390 Opcodes283576
-Node: i386-Dependent283838
-Node: i386-Options284906
-Node: i386-Syntax285751
-Node: i386-Mnemonics288165
-Node: i386-Regs290630
-Node: i386-Prefixes292675
-Node: i386-Memory295435
-Node: i386-Jumps298372
-Node: i386-Float299493
-Node: i386-SIMD301322
-Node: i386-16bit302431
-Node: i386-Bugs304469
-Node: i386-Arch305223
-Node: i386-Notes307358
-Node: i860-Dependent308216
-Node: Notes-i860308612
-Node: Options-i860309517
-Node: Directives-i860310880
-Node: Opcodes for i860311949
-Node: i960-Dependent314116
-Node: Options-i960314519
-Node: Floating Point-i960318403
-Node: Directives-i960318671
-Node: Opcodes for i960320705
-Node: callj-i960321322
-Node: Compare-and-branch-i960321811
-Node: IA-64-Dependent323715
-Node: IA-64 Options324016
-Node: IA-64 Syntax327048
-Node: IA-64-Chars327411
-Node: IA-64-Regs327641
-Node: IA-64-Bits328567
-Node: IA-64 Opcodes329076
-Node: IP2K-Dependent329348
-Node: IP2K-Opts329576
-Node: M32R-Dependent330056
-Node: M32R-Opts330377
-Node: M32R-Directives334543
-Node: M32R-Warnings338518
-Node: M68K-Dependent341524
-Node: M68K-Opts341991
-Node: M68K-Syntax348476
-Node: M68K-Moto-Syntax350315
-Node: M68K-Float352904
-Node: M68K-Directives353424
-Node: M68K-opcodes354030
-Node: M68K-Branch354256
-Node: M68K-Chars358454
-Node: M68HC11-Dependent358867
-Node: M68HC11-Opts359398
-Node: M68HC11-Syntax363214
-Node: M68HC11-Modifiers365428
-Node: M68HC11-Directives367256
-Node: M68HC11-Float368632
-Node: M68HC11-opcodes369160
-Node: M68HC11-Branch369342
-Node: M88K-Dependent371789
-Node: M88K Directives372040
-Node: MIPS-Dependent373560
-Node: MIPS Opts374647
-Node: MIPS Object381615
-Node: MIPS Stabs383181
-Node: MIPS symbol sizes383903
-Node: MIPS ISA385572
-Node: MIPS autoextend386721
-Node: MIPS insn387451
-Node: MIPS option stack387948
-Node: MIPS ASE instruction generation overrides388722
-Node: MMIX-Dependent389495
-Node: MMIX-Opts389875
-Node: MMIX-Expand393479
-Node: MMIX-Syntax394794
-Ref: mmixsite395151
-Node: MMIX-Chars395992
-Node: MMIX-Symbols396646
-Node: MMIX-Regs398714
-Node: MMIX-Pseudos399739
-Ref: MMIX-loc399880
-Ref: MMIX-local400960
-Ref: MMIX-is401492
-Ref: MMIX-greg401763
-Ref: GREG-base402682
-Ref: MMIX-byte403999
-Ref: MMIX-constants404470
-Ref: MMIX-prefix405116
-Ref: MMIX-spec405490
-Node: MMIX-mmixal405824
-Node: MSP430-Dependent409321
-Node: MSP430 Options409787
-Node: MSP430 Syntax409979
-Node: MSP430-Macros410295
-Node: MSP430-Chars411026
-Node: MSP430-Regs411339
-Node: MSP430-Ext411899
-Node: MSP430 Floating Point413720
-Node: MSP430 Directives413944
-Node: MSP430 Opcodes414735
-Node: MSP430 Profiling Capability415130
-Node: PDP-11-Dependent417459
-Node: PDP-11-Options417848
-Node: PDP-11-Pseudos422919
-Node: PDP-11-Syntax423264
-Node: PDP-11-Mnemonics424015
-Node: PDP-11-Synthetic424317
-Node: PJ-Dependent424535
-Node: PJ Options424760
-Node: PPC-Dependent425037
-Node: PowerPC-Opts425324
-Node: PowerPC-Pseudo427289
-Node: SH-Dependent427888
-Node: SH Options428300
-Node: SH Syntax429154
-Node: SH-Chars429427
-Node: SH-Regs429721
-Node: SH-Addressing430335
-Node: SH Floating Point431244
-Node: SH Directives432338
-Node: SH Opcodes432708
-Node: SH64-Dependent437030
-Node: SH64 Options437393
-Node: SH64 Syntax439110
-Node: SH64-Chars439393
-Node: SH64-Regs439693
-Node: SH64-Addressing440789
-Node: SH64 Directives441972
-Node: SH64 Opcodes443082
-Node: Sparc-Dependent443798
-Node: Sparc-Opts444183
-Node: Sparc-Aligned-Data446440
-Node: Sparc-Float447295
-Node: Sparc-Directives447496
-Node: TIC54X-Dependent449456
-Node: TIC54X-Opts450182
-Node: TIC54X-Block451225
-Node: TIC54X-Env451585
-Node: TIC54X-Constants451933
-Node: TIC54X-Subsyms452335
-Node: TIC54X-Locals454244
-Node: TIC54X-Builtins454988
-Node: TIC54X-Ext457459
-Node: TIC54X-Directives458030
-Node: TIC54X-Macros468932
-Node: TIC54X-MMRegs471042
-Node: Z8000-Dependent471258
-Node: Z8000 Options472222
-Node: Z8000 Syntax472439
-Node: Z8000-Chars472729
-Node: Z8000-Regs472962
-Node: Z8000-Addressing473752
-Node: Z8000 Directives474869
-Node: Z8000 Opcodes476478
-Node: Vax-Dependent486420
-Node: VAX-Opts486937
-Node: VAX-float490672
-Node: VAX-directives491304
-Node: VAX-opcodes492165
-Node: VAX-branch492554
-Node: VAX-operands495061
-Node: VAX-no495824
-Node: V850-Dependent496061
-Node: V850 Options496459
-Node: V850 Syntax498848
-Node: V850-Chars499088
-Node: V850-Regs499253
-Node: V850 Floating Point500821
-Node: V850 Directives501027
-Node: V850 Opcodes502170
-Node: Xtensa-Dependent508062
-Node: Xtensa Options508793
-Node: Xtensa Syntax511564
-Node: Xtensa Opcodes513453
-Node: Xtensa Registers515247
-Node: Xtensa Optimizations515880
-Node: Density Instructions516332
-Node: Xtensa Automatic Alignment517434
-Node: Xtensa Relaxation520180
-Node: Xtensa Branch Relaxation521088
-Node: Xtensa Call Relaxation522460
-Node: Xtensa Immediate Relaxation524246
-Node: Xtensa Directives526820
-Node: Schedule Directive528528
-Node: Longcalls Directive528868
-Node: Transform Directive529412
-Node: Literal Directive530154
-Node: Literal Position Directive531939
-Node: Literal Prefix Directive533638
-Node: Absolute Literals Directive535801
-Node: Reporting Bugs537108
-Node: Bug Criteria537832
-Node: Bug Reporting538597
-Node: Acknowledgements545230
-Ref: Acknowledgements-Footnote-1550149
-Node: GNU Free Documentation License550175
-Node: Index569897
+Node: Top812
+Node: Overview1731
+Node: Manual24947
+Node: GNU Assembler25891
+Node: Object Formats27062
+Node: Command Line27514
+Node: Input Files28601
+Node: Object30582
+Node: Errors31534
+Node: Invoking32729
+Node: a34678
+Node: alternate36450
+Node: D36622
+Node: f36855
+Node: I37363
+Node: K37907
+Node: L38210
+Node: listing39047
+Node: M40639
+Node: MD45040
+Node: o45466
+Node: R45921
+Node: statistics46951
+Node: traditional-format47358
+Node: v47831
+Node: W48106
+Node: Z49013
+Node: Syntax49535
+Node: Preprocessing50126
+Node: Whitespace51689
+Node: Comments52085
+Node: Symbol Intro54278
+Node: Statements54968
+Node: Constants56884
+Node: Characters57515
+Node: Strings58017
+Node: Chars60183
+Node: Numbers60937
+Node: Integers61477
+Node: Bignums62133
+Node: Flonums62489
+Node: Sections64244
+Node: Secs Background64622
+Node: Ld Sections69672
+Node: As Sections72056
+Node: Sub-Sections72966
+Node: bss76113
+Node: Symbols77063
+Node: Labels77711
+Node: Setting Symbols78442
+Node: Symbol Names78812
+Node: Dot83281
+Node: Symbol Attributes83728
+Node: Symbol Value84465
+Node: Symbol Type85510
+Node: a.out Symbols85898
+Node: Symbol Desc86160
+Node: Symbol Other86455
+Node: COFF Symbols86624
+Node: SOM Symbols87297
+Node: Expressions87739
+Node: Empty Exprs88488
+Node: Integer Exprs88835
+Node: Arguments89230
+Node: Operators90336
+Node: Prefix Ops90671
+Node: Infix Ops90999
+Node: Pseudo Ops93396
+Node: Abort98420
+Node: ABORT98825
+Node: Align99092
+Node: Ascii101386
+Node: Asciz101695
+Node: Balign101940
+Node: Byte103803
+Node: Comm104041
+Node: CFI directives105415
+Node: Data107671
+Node: Def107998
+Node: Desc108373
+Node: Dim108873
+Node: Double109271
+Node: Eject109609
+Node: Else109784
+Node: Elseif110080
+Node: End110370
+Node: Endef110585
+Node: Endfunc110915
+Node: Endif111090
+Node: Equ111351
+Node: Equiv111660
+Node: Err112160
+Node: Error112470
+Node: Exitm112915
+Node: Extern113084
+Node: Fail113345
+Node: File113790
+Node: Fill114406
+Node: Float115370
+Node: Func115712
+Node: Global116302
+Node: Hidden117052
+Node: hword117631
+Node: Ident117959
+Node: If118265
+Node: Incbin121061
+Node: Include121756
+Node: Int122307
+Node: Internal122688
+Node: Irp123336
+Node: Irpc124141
+Node: Lcomm124966
+Node: Lflags125714
+Node: Line125908
+Node: Linkonce126941
+Node: Ln128168
+Node: MRI128323
+Node: List128661
+Node: Long129271
+Node: Macro129447
+Node: Altmacro132185
+Node: Noaltmacro133515
+Node: Nolist133683
+Node: Octa134113
+Node: Org134447
+Node: P2align135730
+Node: Previous137658
+Node: PopSection138352
+Node: Print138860
+Node: Protected139089
+Node: Psize139736
+Node: Purgem140420
+Node: PushSection140641
+Node: Quad141198
+Node: Rept141653
+Node: Sbttl142066
+Node: Scl142431
+Node: Section142934
+Node: Set148073
+Node: Short148632
+Node: Single148952
+Node: Size149297
+Node: Sleb128150111
+Node: Skip150433
+Node: Space150755
+Node: Stab151647
+Node: String153649
+Node: Struct154075
+Node: SubSection154798
+Node: Symver155359
+Node: Tag157750
+Node: Text158265
+Node: Title158584
+Node: Type158963
+Node: Uleb128160180
+Node: Val160502
+Node: Version160870
+Node: VTableEntry161143
+Node: VTableInherit161431
+Node: Warning161877
+Node: Weak162111
+Node: Word162777
+Node: Deprecated164620
+Node: Machine Dependencies164855
+Node: AMD29K-Dependent167635
+Node: AMD29K Options168026
+Node: AMD29K Syntax168209
+Node: AMD29K-Macros168485
+Node: AMD29K-Chars168749
+Node: AMD29K-Regs169025
+Node: AMD29K Floating Point170304
+Node: AMD29K Directives170519
+Node: AMD29K Opcodes171939
+Node: Alpha-Dependent172284
+Node: Alpha Notes172723
+Node: Alpha Options173004
+Node: Alpha Syntax175202
+Node: Alpha-Chars175671
+Node: Alpha-Regs175902
+Node: Alpha-Relocs176289
+Node: Alpha Floating Point182280
+Node: Alpha Directives182502
+Node: Alpha Opcodes188025
+Node: ARC-Dependent188320
+Node: ARC Options188703
+Node: ARC Syntax189772
+Node: ARC-Chars190004
+Node: ARC-Regs190136
+Node: ARC Floating Point190260
+Node: ARC Directives190571
+Node: ARC Opcodes196542
+Node: ARM-Dependent196768
+Node: ARM Options197195
+Node: ARM Syntax202796
+Node: ARM-Chars203028
+Node: ARM-Regs203552
+Node: ARM Floating Point203737
+Node: ARM Directives203936
+Node: ARM Opcodes209710
+Node: ARM Mapping Symbols211798
+Node: CRIS-Dependent212577
+Node: CRIS-Opts212922
+Ref: march-option214540
+Node: CRIS-Expand216357
+Node: CRIS-Symbols217540
+Node: CRIS-Syntax218709
+Node: CRIS-Chars219045
+Node: CRIS-Pic219596
+Ref: crispic219792
+Node: CRIS-Regs223332
+Node: CRIS-Pseudos223749
+Ref: crisnous224525
+Node: D10V-Dependent225807
+Node: D10V-Opts226158
+Node: D10V-Syntax227121
+Node: D10V-Size227650
+Node: D10V-Subs228623
+Node: D10V-Chars229658
+Node: D10V-Regs231262
+Node: D10V-Addressing232307
+Node: D10V-Word232993
+Node: D10V-Float233508
+Node: D10V-Opcodes233819
+Node: D30V-Dependent234212
+Node: D30V-Opts234565
+Node: D30V-Syntax235240
+Node: D30V-Size235772
+Node: D30V-Subs236743
+Node: D30V-Chars237778
+Node: D30V-Guarded240076
+Node: D30V-Regs240756
+Node: D30V-Addressing241895
+Node: D30V-Float242563
+Node: D30V-Opcodes242874
+Node: H8/300-Dependent243267
+Node: H8/300 Options243679
+Node: H8/300 Syntax243888
+Node: H8/300-Chars244187
+Node: H8/300-Regs244484
+Node: H8/300-Addressing245401
+Node: H8/300 Floating Point246440
+Node: H8/300 Directives246765
+Node: H8/300 Opcodes247891
+Node: H8/500-Dependent256211
+Node: H8/500 Options256623
+Node: H8/500 Syntax256832
+Node: H8/500-Chars257131
+Node: H8/500-Regs257435
+Node: H8/500-Addressing258204
+Node: H8/500 Floating Point258834
+Node: H8/500 Directives259159
+Node: H8/500 Opcodes259487
+Node: HPPA-Dependent264599
+Node: HPPA Notes265034
+Node: HPPA Options265792
+Node: HPPA Syntax265987
+Node: HPPA Floating Point267257
+Node: HPPA Directives267463
+Node: HPPA Opcodes276149
+Node: ESA/390-Dependent276408
+Node: ESA/390 Notes276868
+Node: ESA/390 Options277659
+Node: ESA/390 Syntax277869
+Node: ESA/390 Floating Point280042
+Node: ESA/390 Directives280321
+Node: ESA/390 Opcodes283610
+Node: i386-Dependent283872
+Node: i386-Options284940
+Node: i386-Syntax285785
+Node: i386-Mnemonics288199
+Node: i386-Regs290664
+Node: i386-Prefixes292709
+Node: i386-Memory295469
+Node: i386-Jumps298406
+Node: i386-Float299527
+Node: i386-SIMD301356
+Node: i386-16bit302465
+Node: i386-Bugs304503
+Node: i386-Arch305257
+Node: i386-Notes307392
+Node: i860-Dependent308250
+Node: Notes-i860308646
+Node: Options-i860309551
+Node: Directives-i860310914
+Node: Opcodes for i860311983
+Node: i960-Dependent314150
+Node: Options-i960314553
+Node: Floating Point-i960318437
+Node: Directives-i960318705
+Node: Opcodes for i960320739
+Node: callj-i960321356
+Node: Compare-and-branch-i960321845
+Node: IA-64-Dependent323749
+Node: IA-64 Options324050
+Node: IA-64 Syntax327082
+Node: IA-64-Chars327445
+Node: IA-64-Regs327675
+Node: IA-64-Bits328601
+Node: IA-64 Opcodes329110
+Node: IP2K-Dependent329382
+Node: IP2K-Opts329610
+Node: M32R-Dependent330090
+Node: M32R-Opts330411
+Node: M32R-Directives334577
+Node: M32R-Warnings338552
+Node: M68K-Dependent341558
+Node: M68K-Opts342025
+Node: M68K-Syntax348510
+Node: M68K-Moto-Syntax350349
+Node: M68K-Float352938
+Node: M68K-Directives353458
+Node: M68K-opcodes354064
+Node: M68K-Branch354290
+Node: M68K-Chars358488
+Node: M68HC11-Dependent358901
+Node: M68HC11-Opts359432
+Node: M68HC11-Syntax363248
+Node: M68HC11-Modifiers365462
+Node: M68HC11-Directives367290
+Node: M68HC11-Float368666
+Node: M68HC11-opcodes369194
+Node: M68HC11-Branch369376
+Node: M88K-Dependent371823
+Node: M88K Directives372074
+Node: MIPS-Dependent373594
+Node: MIPS Opts374681
+Node: MIPS Object381649
+Node: MIPS Stabs383215
+Node: MIPS symbol sizes383937
+Node: MIPS ISA385606
+Node: MIPS autoextend386755
+Node: MIPS insn387485
+Node: MIPS option stack387982
+Node: MIPS ASE instruction generation overrides388756
+Node: MMIX-Dependent389529
+Node: MMIX-Opts389909
+Node: MMIX-Expand393513
+Node: MMIX-Syntax394828
+Ref: mmixsite395185
+Node: MMIX-Chars396026
+Node: MMIX-Symbols396680
+Node: MMIX-Regs398748
+Node: MMIX-Pseudos399773
+Ref: MMIX-loc399914
+Ref: MMIX-local400994
+Ref: MMIX-is401526
+Ref: MMIX-greg401797
+Ref: GREG-base402716
+Ref: MMIX-byte404033
+Ref: MMIX-constants404504
+Ref: MMIX-prefix405150
+Ref: MMIX-spec405524
+Node: MMIX-mmixal405858
+Node: MSP430-Dependent409355
+Node: MSP430 Options409821
+Node: MSP430 Syntax410013
+Node: MSP430-Macros410329
+Node: MSP430-Chars411060
+Node: MSP430-Regs411373
+Node: MSP430-Ext411933
+Node: MSP430 Floating Point413754
+Node: MSP430 Directives413978
+Node: MSP430 Opcodes414769
+Node: MSP430 Profiling Capability415164
+Node: PDP-11-Dependent417493
+Node: PDP-11-Options417882
+Node: PDP-11-Pseudos422953
+Node: PDP-11-Syntax423298
+Node: PDP-11-Mnemonics424049
+Node: PDP-11-Synthetic424351
+Node: PJ-Dependent424569
+Node: PJ Options424794
+Node: PPC-Dependent425071
+Node: PowerPC-Opts425358
+Node: PowerPC-Pseudo427323
+Node: SH-Dependent427922
+Node: SH Options428334
+Node: SH Syntax429188
+Node: SH-Chars429461
+Node: SH-Regs429755
+Node: SH-Addressing430369
+Node: SH Floating Point431278
+Node: SH Directives432372
+Node: SH Opcodes432742
+Node: SH64-Dependent437064
+Node: SH64 Options437427
+Node: SH64 Syntax439144
+Node: SH64-Chars439427
+Node: SH64-Regs439727
+Node: SH64-Addressing440823
+Node: SH64 Directives442006
+Node: SH64 Opcodes443116
+Node: Sparc-Dependent443832
+Node: Sparc-Opts444217
+Node: Sparc-Aligned-Data446474
+Node: Sparc-Float447329
+Node: Sparc-Directives447530
+Node: TIC54X-Dependent449490
+Node: TIC54X-Opts450216
+Node: TIC54X-Block451259
+Node: TIC54X-Env451619
+Node: TIC54X-Constants451967
+Node: TIC54X-Subsyms452369
+Node: TIC54X-Locals454278
+Node: TIC54X-Builtins455022
+Node: TIC54X-Ext457493
+Node: TIC54X-Directives458064
+Node: TIC54X-Macros468966
+Node: TIC54X-MMRegs471076
+Node: Z8000-Dependent471292
+Node: Z8000 Options472256
+Node: Z8000 Syntax472473
+Node: Z8000-Chars472763
+Node: Z8000-Regs472996
+Node: Z8000-Addressing473786
+Node: Z8000 Directives474903
+Node: Z8000 Opcodes476512
+Node: Vax-Dependent486454
+Node: VAX-Opts486971
+Node: VAX-float490706
+Node: VAX-directives491338
+Node: VAX-opcodes492199
+Node: VAX-branch492588
+Node: VAX-operands495095
+Node: VAX-no495858
+Node: V850-Dependent496095
+Node: V850 Options496493
+Node: V850 Syntax498882
+Node: V850-Chars499122
+Node: V850-Regs499287
+Node: V850 Floating Point500855
+Node: V850 Directives501061
+Node: V850 Opcodes502204
+Node: Xtensa-Dependent508096
+Node: Xtensa Options508827
+Node: Xtensa Syntax511598
+Node: Xtensa Opcodes513487
+Node: Xtensa Registers515281
+Node: Xtensa Optimizations515914
+Node: Density Instructions516366
+Node: Xtensa Automatic Alignment517468
+Node: Xtensa Relaxation520214
+Node: Xtensa Branch Relaxation521122
+Node: Xtensa Call Relaxation522494
+Node: Xtensa Immediate Relaxation524280
+Node: Xtensa Directives526854
+Node: Schedule Directive528562
+Node: Longcalls Directive528902
+Node: Transform Directive529446
+Node: Literal Directive530188
+Node: Literal Position Directive531973
+Node: Literal Prefix Directive533672
+Node: Absolute Literals Directive535835
+Node: Reporting Bugs537142
+Node: Bug Criteria537866
+Node: Bug Reporting538631
+Node: Acknowledgements545264
+Ref: Acknowledgements-Footnote-1550183
+Node: GNU Free Documentation License550209
+Node: Index569931
 
 End Tag Table
diff -urN binutils-2.16.1/gas/doc/as.info-1 binutils-2.16.1-STEP/gas/doc/as.info-1
--- binutils-2.16.1/gas/doc/as.info-1	2005-06-13 07:02:26.000000000 +1200
+++ binutils-2.16.1-STEP/gas/doc/as.info-1	1970-01-01 12:00:00.000000000 +1200
@@ -1,8426 +0,0 @@
-This is ../.././gas/doc/as.info, produced by makeinfo version 4.7 from
-../.././gas/doc/as.texinfo.
-
-START-INFO-DIR-ENTRY
-* As: (as).                     The GNU assembler.
-* Gas: (as).                    The GNU assembler.
-END-INFO-DIR-ENTRY
-
-   This file documents the GNU Assembler "as".
-
-   Copyright (C) 1991, 92, 93, 94, 95, 96, 97, 98, 99, 2000, 2001, 2002
-Free Software Foundation, Inc.
-
-   Permission is granted to copy, distribute and/or modify this document
-under the terms of the GNU Free Documentation License, Version 1.1 or
-any later version published by the Free Software Foundation; with no
-Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
-Texts.  A copy of the license is included in the section entitled "GNU
-Free Documentation License".
-
-
-File: as.info,  Node: Top,  Next: Overview,  Up: (dir)
-
-Using as
-********
-
-This file is a user guide to the GNU assembler `as' version 2.16.1.
-
-   This document is distributed under the terms of the GNU Free
-Documentation License.  A copy of the license is included in the
-section entitled "GNU Free Documentation License".
-
-* Menu:
-
-* Overview::                    Overview
-* Invoking::                    Command-Line Options
-* Syntax::                      Syntax
-* Sections::                    Sections and Relocation
-* Symbols::                     Symbols
-* Expressions::                 Expressions
-* Pseudo Ops::                  Assembler Directives
-* Machine Dependencies::        Machine Dependent Features
-* Reporting Bugs::              Reporting Bugs
-* Acknowledgements::            Who Did What
-* GNU Free Documentation License::  GNU Free Documentation License
-* Index::                       Index
-
-
-File: as.info,  Node: Overview,  Next: Invoking,  Prev: Top,  Up: Top
-
-1 Overview
-**********
-
-Here is a brief summary of how to invoke `as'.  For details, *note
-Command-Line Options: Invoking.
-
-     as [-a[cdhlns][=FILE]] [-alternate] [-D]
-      [-defsym SYM=VAL] [-f] [-g] [-gstabs] [-gstabs+]
-      [-gdwarf-2] [-help] [-I DIR] [-J] [-K] [-L]
-      [-listing-lhs-width=NUM] [-listing-lhs-width2=NUM]
-      [-listing-rhs-width=NUM] [-listing-cont-lines=NUM]
-      [-keep-locals] [-o OBJFILE] [-R] [-statistics] [-v]
-      [-version] [-version] [-W] [-warn] [-fatal-warnings]
-      [-w] [-x] [-Z] [-target-help] [TARGET-OPTIONS]
-      [-|FILES ...]
-
-     _Target Alpha options:_
-        [-mCPU]
-        [-mdebug | -no-mdebug]
-        [-relax] [-g] [-GSIZE]
-        [-F] [-32addr]
-
-     _Target ARC options:_
-        [-marc[5|6|7|8]]
-        [-EB|-EL]
-
-     _Target ARM options:_
-        [-mcpu=PROCESSOR[+EXTENSION...]]
-        [-march=ARCHITECTURE[+EXTENSION...]]
-        [-mfpu=FLOATING-POINT-FORMAT]
-        [-mfloat-abi=ABI]
-        [-meabi=VER]
-        [-mthumb]
-        [-EB|-EL]
-        [-mapcs-32|-mapcs-26|-mapcs-float|
-         -mapcs-reentrant]
-        [-mthumb-interwork] [-k]
-
-     _Target CRIS options:_
-        [-underscore | -no-underscore]
-        [-pic] [-N]
-        [-emulation=criself | -emulation=crisaout]
-        [-march=v0_v10 | -march=v10 | -march=v32 | -march=common_v10_v32]
-
-     _Target D10V options:_
-        [-O]
-
-     _Target D30V options:_
-        [-O|-n|-N]
-
-     _Target i386 options:_
-        [-32|-64] [-n]
-
-     _Target i960 options:_
-        [-ACA|-ACA_A|-ACB|-ACC|-AKA|-AKB|
-         -AKC|-AMC]
-        [-b] [-no-relax]
-
-     _Target IA-64 options:_
-        [-mconstant-gp|-mauto-pic]
-        [-milp32|-milp64|-mlp64|-mp64]
-        [-mle|mbe]
-        [-munwind-check=warning|-munwind-check=error]
-        [-mhint.b=ok|-mhint.b=warning|-mhint.b=error]
-        [-x|-xexplicit] [-xauto] [-xdebug]
-
-     _Target IP2K options:_
-        [-mip2022|-mip2022ext]
-
-     _Target M32R options:_
-        [-m32rx|-[no-]warn-explicit-parallel-conflicts|
-        -W[n]p]
-
-     _Target M680X0 options:_
-        [-l] [-m68000|-m68010|-m68020|...]
-
-     _Target M68HC11 options:_
-        [-m68hc11|-m68hc12|-m68hcs12]
-        [-mshort|-mlong]
-        [-mshort-double|-mlong-double]
-        [-force-long-branchs] [-short-branchs]
-        [-strict-direct-mode] [-print-insn-syntax]
-        [-print-opcodes] [-generate-example]
-
-     _Target MCORE options:_
-        [-jsri2bsr] [-sifilter] [-relax]
-        [-mcpu=[210|340]]
-
-     _Target MIPS options:_
-        [-nocpp] [-EL] [-EB] [-O[OPTIMIZATION LEVEL]]
-        [-g[DEBUG LEVEL]] [-G NUM] [-KPIC] [-call_shared]
-        [-non_shared] [-xgot]
-        [-mabi=ABI] [-32] [-n32] [-64] [-mfp32] [-mgp32]
-        [-march=CPU] [-mtune=CPU] [-mips1] [-mips2]
-        [-mips3] [-mips4] [-mips5] [-mips32] [-mips32r2]
-        [-mips64] [-mips64r2]
-        [-construct-floats] [-no-construct-floats]
-        [-trap] [-no-break] [-break] [-no-trap]
-        [-mfix7000] [-mno-fix7000]
-        [-mips16] [-no-mips16]
-        [-mips3d] [-no-mips3d]
-        [-mdmx] [-no-mdmx]
-        [-mdebug] [-no-mdebug]
-        [-mpdr] [-mno-pdr]
-
-     _Target MMIX options:_
-        [-fixed-special-register-names] [-globalize-symbols]
-        [-gnu-syntax] [-relax] [-no-predefined-symbols]
-        [-no-expand] [-no-merge-gregs] [-x]
-        [-linker-allocated-gregs]
-
-     _Target PDP11 options:_
-        [-mpic|-mno-pic] [-mall] [-mno-extensions]
-        [-mEXTENSION|-mno-EXTENSION]
-        [-mCPU] [-mMACHINE]
-
-     _Target picoJava options:_
-        [-mb|-me]
-
-     _Target PowerPC options:_
-        [-mpwrx|-mpwr2|-mpwr|-m601|-mppc|-mppc32|-m603|-m604|
-         -m403|-m405|-mppc64|-m620|-mppc64bridge|-mbooke|
-         -mbooke32|-mbooke64]
-        [-mcom|-many|-maltivec] [-memb]
-        [-mregnames|-mno-regnames]
-        [-mrelocatable|-mrelocatable-lib]
-        [-mlittle|-mlittle-endian|-mbig|-mbig-endian]
-        [-msolaris|-mno-solaris]
-
-     _Target SPARC options:_
-        [-Av6|-Av7|-Av8|-Asparclet|-Asparclite
-         -Av8plus|-Av8plusa|-Av9|-Av9a]
-        [-xarch=v8plus|-xarch=v8plusa] [-bump]
-        [-32|-64]
-
-     _Target TIC54X options:_
-      [-mcpu=54[123589]|-mcpu=54[56]lp] [-mfar-mode|-mf]
-      [-merrors-to-file <FILENAME>|-me <FILENAME>]
-
-     _Target Xtensa options:_
-      [-[no-]text-section-literals] [-[no-]absolute-literals]
-      [-[no-]target-align] [-[no-]longcalls]
-      [-[no-]transform]
-      [-rename-section OLDNAME=NEWNAME]
-
-`-a[cdhlmns]'
-     Turn on listings, in any of a variety of ways:
-
-    `-ac'
-          omit false conditionals
-
-    `-ad'
-          omit debugging directives
-
-    `-ah'
-          include high-level source
-
-    `-al'
-          include assembly
-
-    `-am'
-          include macro expansions
-
-    `-an'
-          omit forms processing
-
-    `-as'
-          include symbols
-
-    `=file'
-          set the name of the listing file
-
-     You may combine these options; for example, use `-aln' for assembly
-     listing without forms processing.  The `=file' option, if used,
-     must be the last one.  By itself, `-a' defaults to `-ahls'.
-
-`--alternate'
-     Begin in alternate macro mode, see *Note `.altmacro': Altmacro.
-
-`-D'
-     Ignored.  This option is accepted for script compatibility with
-     calls to other assemblers.
-
-`--defsym SYM=VALUE'
-     Define the symbol SYM to be VALUE before assembling the input file.
-     VALUE must be an integer constant.  As in C, a leading `0x'
-     indicates a hexadecimal value, and a leading `0' indicates an
-     octal value.
-
-`-f'
-     "fast"--skip whitespace and comment preprocessing (assume source is
-     compiler output).
-
-`-g'
-`--gen-debug'
-     Generate debugging information for each assembler source line
-     using whichever debug format is preferred by the target.  This
-     currently means either STABS, ECOFF or DWARF2.
-
-`--gstabs'
-     Generate stabs debugging information for each assembler line.  This
-     may help debugging assembler code, if the debugger can handle it.
-
-`--gstabs+'
-     Generate stabs debugging information for each assembler line, with
-     GNU extensions that probably only gdb can handle, and that could
-     make other debuggers crash or refuse to read your program.  This
-     may help debugging assembler code.  Currently the only GNU
-     extension is the location of the current working directory at
-     assembling time.
-
-`--gdwarf-2'
-     Generate DWARF2 debugging information for each assembler line.
-     This may help debugging assembler code, if the debugger can handle
-     it.  Note--this option is only supported by some targets, not all
-     of them.
-
-`--help'
-     Print a summary of the command line options and exit.
-
-`--target-help'
-     Print a summary of all target specific options and exit.
-
-`-I DIR'
-     Add directory DIR to the search list for `.include' directives.
-
-`-J'
-     Don't warn about signed overflow.
-
-`-K'
-     Issue warnings when difference tables altered for long
-     displacements.
-
-`-L'
-`--keep-locals'
-     Keep (in the symbol table) local symbols.  On traditional a.out
-     systems these start with `L', but different systems have different
-     local label prefixes.
-
-`--listing-lhs-width=NUMBER'
-     Set the maximum width, in words, of the output data column for an
-     assembler listing to NUMBER.
-
-`--listing-lhs-width2=NUMBER'
-     Set the maximum width, in words, of the output data column for
-     continuation lines in an assembler listing to NUMBER.
-
-`--listing-rhs-width=NUMBER'
-     Set the maximum width of an input source line, as displayed in a
-     listing, to NUMBER bytes.
-
-`--listing-cont-lines=NUMBER'
-     Set the maximum number of lines printed in a listing for a single
-     line of input to NUMBER + 1.
-
-`-o OBJFILE'
-     Name the object-file output from `as' OBJFILE.
-
-`-R'
-     Fold the data section into the text section.
-
-`--statistics'
-     Print the maximum space (in bytes) and total time (in seconds)
-     used by assembly.
-
-`--strip-local-absolute'
-     Remove local absolute symbols from the outgoing symbol table.
-
-`-v'
-`-version'
-     Print the `as' version.
-
-`--version'
-     Print the `as' version and exit.
-
-`-W'
-`--no-warn'
-     Suppress warning messages.
-
-`--fatal-warnings'
-     Treat warnings as errors.
-
-`--warn'
-     Don't suppress warning messages or treat them as errors.
-
-`-w'
-     Ignored.
-
-`-x'
-     Ignored.
-
-`-Z'
-     Generate an object file even after errors.
-
-`-- | FILES ...'
-     Standard input, or source files to assemble.
-
-
-   The following options are available when as is configured for an ARC
-processor.
-
-`-marc[5|6|7|8]'
-     This option selects the core processor variant.
-
-`-EB | -EL'
-     Select either big-endian (-EB) or little-endian (-EL) output.
-
-   The following options are available when as is configured for the ARM
-processor family.
-
-`-mcpu=PROCESSOR[+EXTENSION...]'
-     Specify which ARM processor variant is the target.
-
-`-march=ARCHITECTURE[+EXTENSION...]'
-     Specify which ARM architecture variant is used by the target.
-
-`-mfpu=FLOATING-POINT-FORMAT'
-     Select which Floating Point architecture is the target.
-
-`-mfloat-abi=ABI'
-     Select which floating point ABI is in use.
-
-`-mthumb'
-     Enable Thumb only instruction decoding.
-
-`-mapcs-32 | -mapcs-26 | -mapcs-float | -mapcs-reentrant'
-     Select which procedure calling convention is in use.
-
-`-EB | -EL'
-     Select either big-endian (-EB) or little-endian (-EL) output.
-
-`-mthumb-interwork'
-     Specify that the code has been generated with interworking between
-     Thumb and ARM code in mind.
-
-`-k'
-     Specify that PIC code has been generated.
-
-   See the info pages for documentation of the CRIS-specific options.
-
-   The following options are available when as is configured for a D10V
-processor.
-`-O'
-     Optimize output by parallelizing instructions.
-
-   The following options are available when as is configured for a D30V
-processor.
-`-O'
-     Optimize output by parallelizing instructions.
-
-`-n'
-     Warn when nops are generated.
-
-`-N'
-     Warn when a nop after a 32-bit multiply instruction is generated.
-
-   The following options are available when as is configured for the
-Intel 80960 processor.
-
-`-ACA | -ACA_A | -ACB | -ACC | -AKA | -AKB | -AKC | -AMC'
-     Specify which variant of the 960 architecture is the target.
-
-`-b'
-     Add code to collect statistics about branches taken.
-
-`-no-relax'
-     Do not alter compare-and-branch instructions for long
-     displacements; error if necessary.
-
-
-   The following options are available when as is configured for the
-Ubicom IP2K series.
-
-`-mip2022ext'
-     Specifies that the extended IP2022 instructions are allowed.
-
-`-mip2022'
-     Restores the default behaviour, which restricts the permitted
-     instructions to just the basic IP2022 ones.
-
-
-   The following options are available when as is configured for the
-Renesas M32R (formerly Mitsubishi M32R) series.
-
-`--m32rx'
-     Specify which processor in the M32R family is the target.  The
-     default is normally the M32R, but this option changes it to the
-     M32RX.
-
-`--warn-explicit-parallel-conflicts or --Wp'
-     Produce warning messages when questionable parallel constructs are
-     encountered.
-
-`--no-warn-explicit-parallel-conflicts or --Wnp'
-     Do not produce warning messages when questionable parallel
-     constructs are encountered.
-
-
-   The following options are available when as is configured for the
-Motorola 68000 series.
-
-`-l'
-     Shorten references to undefined symbols, to one word instead of
-     two.
-
-`-m68000 | -m68008 | -m68010 | -m68020 | -m68030'
-`| -m68040 | -m68060 | -m68302 | -m68331 | -m68332'
-`| -m68333 | -m68340 | -mcpu32 | -m5200'
-     Specify what processor in the 68000 family is the target.  The
-     default is normally the 68020, but this can be changed at
-     configuration time.
-
-`-m68881 | -m68882 | -mno-68881 | -mno-68882'
-     The target machine does (or does not) have a floating-point
-     coprocessor.  The default is to assume a coprocessor for 68020,
-     68030, and cpu32.  Although the basic 68000 is not compatible with
-     the 68881, a combination of the two can be specified, since it's
-     possible to do emulation of the coprocessor instructions with the
-     main processor.
-
-`-m68851 | -mno-68851'
-     The target machine does (or does not) have a memory-management
-     unit coprocessor.  The default is to assume an MMU for 68020 and
-     up.
-
-
-   For details about the PDP-11 machine dependent features options, see
-*Note PDP-11-Options::.
-
-`-mpic | -mno-pic'
-     Generate position-independent (or position-dependent) code.  The
-     default is `-mpic'.
-
-`-mall'
-`-mall-extensions'
-     Enable all instruction set extensions.  This is the default.
-
-`-mno-extensions'
-     Disable all instruction set extensions.
-
-`-mEXTENSION | -mno-EXTENSION'
-     Enable (or disable) a particular instruction set extension.
-
-`-mCPU'
-     Enable the instruction set extensions supported by a particular
-     CPU, and disable all other extensions.
-
-`-mMACHINE'
-     Enable the instruction set extensions supported by a particular
-     machine model, and disable all other extensions.
-
-   The following options are available when as is configured for a
-picoJava processor.
-
-`-mb'
-     Generate "big endian" format output.
-
-`-ml'
-     Generate "little endian" format output.
-
-
-   The following options are available when as is configured for the
-Motorola 68HC11 or 68HC12 series.
-
-`-m68hc11 | -m68hc12 | -m68hcs12'
-     Specify what processor is the target.  The default is defined by
-     the configuration option when building the assembler.
-
-`-mshort'
-     Specify to use the 16-bit integer ABI.
-
-`-mlong'
-     Specify to use the 32-bit integer ABI.
-
-`-mshort-double'
-     Specify to use the 32-bit double ABI.
-
-`-mlong-double'
-     Specify to use the 64-bit double ABI.
-
-`--force-long-branchs'
-     Relative branches are turned into absolute ones. This concerns
-     conditional branches, unconditional branches and branches to a sub
-     routine.
-
-`-S | --short-branchs'
-     Do not turn relative branchs into absolute ones when the offset is
-     out of range.
-
-`--strict-direct-mode'
-     Do not turn the direct addressing mode into extended addressing
-     mode when the instruction does not support direct addressing mode.
-
-`--print-insn-syntax'
-     Print the syntax of instruction in case of error.
-
-`--print-opcodes'
-     print the list of instructions with syntax and then exit.
-
-`--generate-example'
-     print an example of instruction for each possible instruction and
-     then exit.  This option is only useful for testing `as'.
-
-
-   The following options are available when `as' is configured for the
-SPARC architecture:
-
-`-Av6 | -Av7 | -Av8 | -Asparclet | -Asparclite'
-`-Av8plus | -Av8plusa | -Av9 | -Av9a'
-     Explicitly select a variant of the SPARC architecture.
-
-     `-Av8plus' and `-Av8plusa' select a 32 bit environment.  `-Av9'
-     and `-Av9a' select a 64 bit environment.
-
-     `-Av8plusa' and `-Av9a' enable the SPARC V9 instruction set with
-     UltraSPARC extensions.
-
-`-xarch=v8plus | -xarch=v8plusa'
-     For compatibility with the Solaris v9 assembler.  These options are
-     equivalent to -Av8plus and -Av8plusa, respectively.
-
-`-bump'
-     Warn when the assembler switches to another architecture.
-
-   The following options are available when as is configured for the
-'c54x architecture.
-
-`-mfar-mode'
-     Enable extended addressing mode.  All addresses and relocations
-     will assume extended addressing (usually 23 bits).
-
-`-mcpu=CPU_VERSION'
-     Sets the CPU version being compiled for.
-
-`-merrors-to-file FILENAME'
-     Redirect error output to a file, for broken systems which don't
-     support such behaviour in the shell.
-
-   The following options are available when as is configured for a MIPS
-processor.
-
-`-G NUM'
-     This option sets the largest size of an object that can be
-     referenced implicitly with the `gp' register.  It is only accepted
-     for targets that use ECOFF format, such as a DECstation running
-     Ultrix.  The default value is 8.
-
-`-EB'
-     Generate "big endian" format output.
-
-`-EL'
-     Generate "little endian" format output.
-
-`-mips1'
-`-mips2'
-`-mips3'
-`-mips4'
-`-mips5'
-`-mips32'
-`-mips32r2'
-`-mips64'
-`-mips64r2'
-     Generate code for a particular MIPS Instruction Set Architecture
-     level.  `-mips1' is an alias for `-march=r3000', `-mips2' is an
-     alias for `-march=r6000', `-mips3' is an alias for `-march=r4000'
-     and `-mips4' is an alias for `-march=r8000'.  `-mips5', `-mips32',
-     `-mips32r2', `-mips64', and `-mips64r2' correspond to generic
-     `MIPS V', `MIPS32', `MIPS32 Release 2', `MIPS64', and `MIPS64
-     Release 2' ISA processors, respectively.
-
-`-march=CPU'
-     Generate code for a particular MIPS cpu.
-
-`-mtune=CPU'
-     Schedule and tune for a particular MIPS cpu.
-
-`-mfix7000'
-`-mno-fix7000'
-     Cause nops to be inserted if the read of the destination register
-     of an mfhi or mflo instruction occurs in the following two
-     instructions.
-
-`-mdebug'
-`-no-mdebug'
-     Cause stabs-style debugging output to go into an ECOFF-style
-     .mdebug section instead of the standard ELF .stabs sections.
-
-`-mpdr'
-`-mno-pdr'
-     Control generation of `.pdr' sections.
-
-`-mgp32'
-`-mfp32'
-     The register sizes are normally inferred from the ISA and ABI, but
-     these flags force a certain group of registers to be treated as 32
-     bits wide at all times.  `-mgp32' controls the size of
-     general-purpose registers and `-mfp32' controls the size of
-     floating-point registers.
-
-`-mips16'
-`-no-mips16'
-     Generate code for the MIPS 16 processor.  This is equivalent to
-     putting `.set mips16' at the start of the assembly file.
-     `-no-mips16' turns off this option.
-
-`-mips3d'
-`-no-mips3d'
-     Generate code for the MIPS-3D Application Specific Extension.
-     This tells the assembler to accept MIPS-3D instructions.
-     `-no-mips3d' turns off this option.
-
-`-mdmx'
-`-no-mdmx'
-     Generate code for the MDMX Application Specific Extension.  This
-     tells the assembler to accept MDMX instructions.  `-no-mdmx' turns
-     off this option.
-
-`--construct-floats'
-`--no-construct-floats'
-     The `--no-construct-floats' option disables the construction of
-     double width floating point constants by loading the two halves of
-     the value into the two single width floating point registers that
-     make up the double width register.  By default
-     `--construct-floats' is selected, allowing construction of these
-     floating point constants.
-
-`--emulation=NAME'
-     This option causes `as' to emulate `as' configured for some other
-     target, in all respects, including output format (choosing between
-     ELF and ECOFF only), handling of pseudo-opcodes which may generate
-     debugging information or store symbol table information, and
-     default endianness.  The available configuration names are:
-     `mipsecoff', `mipself', `mipslecoff', `mipsbecoff', `mipslelf',
-     `mipsbelf'.  The first two do not alter the default endianness
-     from that of the primary target for which the assembler was
-     configured; the others change the default to little- or big-endian
-     as indicated by the `b' or `l' in the name.  Using `-EB' or `-EL'
-     will override the endianness selection in any case.
-
-     This option is currently supported only when the primary target
-     `as' is configured for is a MIPS ELF or ECOFF target.
-     Furthermore, the primary target or others specified with
-     `--enable-targets=...' at configuration time must include support
-     for the other format, if both are to be available.  For example,
-     the Irix 5 configuration includes support for both.
-
-     Eventually, this option will support more configurations, with more
-     fine-grained control over the assembler's behavior, and will be
-     supported for more processors.
-
-`-nocpp'
-     `as' ignores this option.  It is accepted for compatibility with
-     the native tools.
-
-`--trap'
-`--no-trap'
-`--break'
-`--no-break'
-     Control how to deal with multiplication overflow and division by
-     zero.  `--trap' or `--no-break' (which are synonyms) take a trap
-     exception (and only work for Instruction Set Architecture level 2
-     and higher); `--break' or `--no-trap' (also synonyms, and the
-     default) take a break exception.
-
-`-n'
-     When this option is used, `as' will issue a warning every time it
-     generates a nop instruction from a macro.
-
-   The following options are available when as is configured for an
-MCore processor.
-
-`-jsri2bsr'
-`-nojsri2bsr'
-     Enable or disable the JSRI to BSR transformation.  By default this
-     is enabled.  The command line option `-nojsri2bsr' can be used to
-     disable it.
-
-`-sifilter'
-`-nosifilter'
-     Enable or disable the silicon filter behaviour.  By default this
-     is disabled.  The default can be overridden by the `-sifilter'
-     command line option.
-
-`-relax'
-     Alter jump instructions for long displacements.
-
-`-mcpu=[210|340]'
-     Select the cpu type on the target hardware.  This controls which
-     instructions can be assembled.
-
-`-EB'
-     Assemble for a big endian target.
-
-`-EL'
-     Assemble for a little endian target.
-
-
-   See the info pages for documentation of the MMIX-specific options.
-
-   The following options are available when as is configured for an
-Xtensa processor.
-
-`--text-section-literals | --no-text-section-literals'
-     With `--text-section-literals', literal pools are interspersed in
-     the text section.  The default is `--no-text-section-literals',
-     which places literals in a separate section in the output file.
-     These options only affect literals referenced via PC-relative
-     `L32R' instructions; literals for absolute mode `L32R'
-     instructions are handled separately.
-
-`--absolute-literals | --no-absolute-literals'
-     Indicate to the assembler whether `L32R' instructions use absolute
-     or PC-relative addressing.  The default is to assume absolute
-     addressing if the Xtensa processor includes the absolute `L32R'
-     addressing option.  Otherwise, only the PC-relative `L32R' mode
-     can be used.
-
-`--target-align | --no-target-align'
-     Enable or disable automatic alignment to reduce branch penalties
-     at the expense of some code density.  The default is
-     `--target-align'.
-
-`--longcalls | --no-longcalls'
-     Enable or disable transformation of call instructions to allow
-     calls across a greater range of addresses.  The default is
-     `--no-longcalls'.
-
-`--transform | --no-transform'
-     Enable or disable all assembler transformations of Xtensa
-     instructions.  The default is `--transform'; `--no-transform'
-     should be used only in the rare cases when the instructions must
-     be exactly as specified in the assembly source.
-
-* Menu:
-
-* Manual::                      Structure of this Manual
-* GNU Assembler::               The GNU Assembler
-* Object Formats::              Object File Formats
-* Command Line::                Command Line
-* Input Files::                 Input Files
-* Object::                      Output (Object) File
-* Errors::                      Error and Warning Messages
-
-
-File: as.info,  Node: Manual,  Next: GNU Assembler,  Up: Overview
-
-1.1 Structure of this Manual
-============================
-
-This manual is intended to describe what you need to know to use GNU
-`as'.  We cover the syntax expected in source files, including notation
-for symbols, constants, and expressions; the directives that `as'
-understands; and of course how to invoke `as'.
-
-   This manual also describes some of the machine-dependent features of
-various flavors of the assembler.
-
-   On the other hand, this manual is _not_ intended as an introduction
-to programming in assembly language--let alone programming in general!
-In a similar vein, we make no attempt to introduce the machine
-architecture; we do _not_ describe the instruction set, standard
-mnemonics, registers or addressing modes that are standard to a
-particular architecture.  You may want to consult the manufacturer's
-machine architecture manual for this information.
-
-
-File: as.info,  Node: GNU Assembler,  Next: Object Formats,  Prev: Manual,  Up: Overview
-
-1.2 The GNU Assembler
-=====================
-
-GNU `as' is really a family of assemblers.  If you use (or have used)
-the GNU assembler on one architecture, you should find a fairly similar
-environment when you use it on another architecture.  Each version has
-much in common with the others, including object file formats, most
-assembler directives (often called "pseudo-ops") and assembler syntax.
-
-   `as' is primarily intended to assemble the output of the GNU C
-compiler `gcc' for use by the linker `ld'.  Nevertheless, we've tried
-to make `as' assemble correctly everything that other assemblers for
-the same machine would assemble.  Any exceptions are documented
-explicitly (*note Machine Dependencies::).  This doesn't mean `as'
-always uses the same syntax as another assembler for the same
-architecture; for example, we know of several incompatible versions of
-680x0 assembly language syntax.
-
-   Unlike older assemblers, `as' is designed to assemble a source
-program in one pass of the source file.  This has a subtle impact on the
-`.org' directive (*note `.org': Org.).
-
-
-File: as.info,  Node: Object Formats,  Next: Command Line,  Prev: GNU Assembler,  Up: Overview
-
-1.3 Object File Formats
-=======================
-
-The GNU assembler can be configured to produce several alternative
-object file formats.  For the most part, this does not affect how you
-write assembly language programs; but directives for debugging symbols
-are typically different in different file formats.  *Note Symbol
-Attributes: Symbol Attributes.
-
-
-File: as.info,  Node: Command Line,  Next: Input Files,  Prev: Object Formats,  Up: Overview
-
-1.4 Command Line
-================
-
-After the program name `as', the command line may contain options and
-file names.  Options may appear in any order, and may be before, after,
-or between file names.  The order of file names is significant.
-
-   `--' (two hyphens) by itself names the standard input file
-explicitly, as one of the files for `as' to assemble.
-
-   Except for `--' any command line argument that begins with a hyphen
-(`-') is an option.  Each option changes the behavior of `as'.  No
-option changes the way another option works.  An option is a `-'
-followed by one or more letters; the case of the letter is important.
-All options are optional.
-
-   Some options expect exactly one file name to follow them.  The file
-name may either immediately follow the option's letter (compatible with
-older assemblers) or it may be the next command argument (GNU
-standard).  These two command lines are equivalent:
-
-     as -o my-object-file.o mumble.s
-     as -omy-object-file.o mumble.s
-
-
-File: as.info,  Node: Input Files,  Next: Object,  Prev: Command Line,  Up: Overview
-
-1.5 Input Files
-===============
-
-We use the phrase "source program", abbreviated "source", to describe
-the program input to one run of `as'.  The program may be in one or
-more files; how the source is partitioned into files doesn't change the
-meaning of the source.
-
-   The source program is a concatenation of the text in all the files,
-in the order specified.
-
-   Each time you run `as' it assembles exactly one source program.  The
-source program is made up of one or more files.  (The standard input is
-also a file.)
-
-   You give `as' a command line that has zero or more input file names.
-The input files are read (from left file name to right).  A command
-line argument (in any position) that has no special meaning is taken to
-be an input file name.
-
-   If you give `as' no file names it attempts to read one input file
-from the `as' standard input, which is normally your terminal.  You may
-have to type <ctl-D> to tell `as' there is no more program to assemble.
-
-   Use `--' if you need to explicitly name the standard input file in
-your command line.
-
-   If the source is empty, `as' produces a small, empty object file.
-
-Filenames and Line-numbers
---------------------------
-
-There are two ways of locating a line in the input file (or files) and
-either may be used in reporting error messages.  One way refers to a
-line number in a physical file; the other refers to a line number in a
-"logical" file.  *Note Error and Warning Messages: Errors.
-
-   "Physical files" are those files named in the command line given to
-`as'.
-
-   "Logical files" are simply names declared explicitly by assembler
-directives; they bear no relation to physical files.  Logical file
-names help error messages reflect the original source file, when `as'
-source is itself synthesized from other files.  `as' understands the
-`#' directives emitted by the `gcc' preprocessor.  See also *Note
-`.file': File.
-
-
-File: as.info,  Node: Object,  Next: Errors,  Prev: Input Files,  Up: Overview
-
-1.6 Output (Object) File
-========================
-
-Every time you run `as' it produces an output file, which is your
-assembly language program translated into numbers.  This file is the
-object file.  Its default name is `a.out', or `b.out' when `as' is
-configured for the Intel 80960.  You can give it another name by using
-the `-o' option.  Conventionally, object file names end with `.o'.  The
-default name is used for historical reasons: older assemblers were
-capable of assembling self-contained programs directly into a runnable
-program.  (For some formats, this isn't currently possible, but it can
-be done for the `a.out' format.)
-
-   The object file is meant for input to the linker `ld'.  It contains
-assembled program code, information to help `ld' integrate the
-assembled program into a runnable file, and (optionally) symbolic
-information for the debugger.
-
-
-File: as.info,  Node: Errors,  Prev: Object,  Up: Overview
-
-1.7 Error and Warning Messages
-==============================
-
-`as' may write warnings and error messages to the standard error file
-(usually your terminal).  This should not happen when  a compiler runs
-`as' automatically.  Warnings report an assumption made so that `as'
-could keep assembling a flawed program; errors report a grave problem
-that stops the assembly.
-
-   Warning messages have the format
-
-     file_name:NNN:Warning Message Text
-
-(where NNN is a line number).  If a logical file name has been given
-(*note `.file': File.) it is used for the filename, otherwise the name
-of the current input file is used.  If a logical line number was given
-(*note `.line': Line.)  then it is used to calculate the number printed,
-otherwise the actual line in the current source file is printed.  The
-message text is intended to be self explanatory (in the grand Unix
-tradition).
-
-   Error messages have the format
-     file_name:NNN:FATAL:Error Message Text
-   The file name and line number are derived as for warning messages.
-The actual message text may be rather less explanatory because many of
-them aren't supposed to happen.
-
-
-File: as.info,  Node: Invoking,  Next: Syntax,  Prev: Overview,  Up: Top
-
-2 Command-Line Options
-**********************
-
-This chapter describes command-line options available in _all_ versions
-of the GNU assembler; *note Machine Dependencies::, for options specific
-to particular machine architectures.
-
-   If you are invoking `as' via the GNU C compiler, you can use the
-`-Wa' option to pass arguments through to the assembler.  The assembler
-arguments must be separated from each other (and the `-Wa') by commas.
-For example:
-
-     gcc -c -g -O -Wa,-alh,-L file.c
-
-This passes two options to the assembler: `-alh' (emit a listing to
-standard output with high-level and assembly source) and `-L' (retain
-local symbols in the symbol table).
-
-   Usually you do not need to use this `-Wa' mechanism, since many
-compiler command-line options are automatically passed to the assembler
-by the compiler.  (You can call the GNU compiler driver with the `-v'
-option to see precisely what options it passes to each compilation
-pass, including the assembler.)
-
-* Menu:
-
-* a::             -a[cdhlns] enable listings
-* alternate::     --alternate enable alternate macro syntax
-* D::             -D for compatibility
-* f::             -f to work faster
-* I::             -I for .include search path
-
-* K::             -K for difference tables
-
-* L::             -L to retain local labels
-* listing::       --listing-XXX to configure listing output
-* M::		  -M or --mri to assemble in MRI compatibility mode
-* MD::            --MD for dependency tracking
-* o::             -o to name the object file
-* R::             -R to join data and text sections
-* statistics::    --statistics to see statistics about assembly
-* traditional-format:: --traditional-format for compatible output
-* v::             -v to announce version
-* W::             -W, --no-warn, --warn, --fatal-warnings to control warnings
-* Z::             -Z to make object file even after errors
-
-
-File: as.info,  Node: a,  Next: alternate,  Up: Invoking
-
-2.1 Enable Listings: `-a[cdhlns]'
-=================================
-
-These options enable listing output from the assembler.  By itself,
-`-a' requests high-level, assembly, and symbols listing.  You can use
-other letters to select specific options for the list: `-ah' requests a
-high-level language listing, `-al' requests an output-program assembly
-listing, and `-as' requests a symbol table listing.  High-level
-listings require that a compiler debugging option like `-g' be used,
-and that assembly listings (`-al') be requested also.
-
-   Use the `-ac' option to omit false conditionals from a listing.  Any
-lines which are not assembled because of a false `.if' (or `.ifdef', or
-any other conditional), or a true `.if' followed by an `.else', will be
-omitted from the listing.
-
-   Use the `-ad' option to omit debugging directives from the listing.
-
-   Once you have specified one of these options, you can further control
-listing output and its appearance using the directives `.list',
-`.nolist', `.psize', `.eject', `.title', and `.sbttl'.  The `-an'
-option turns off all forms processing.  If you do not request listing
-output with one of the `-a' options, the listing-control directives
-have no effect.
-
-   The letters after `-a' may be combined into one option, _e.g._,
-`-aln'.
-
-   Note if the assembler source is coming from the standard input (eg
-because it is being created by `gcc' and the `-pipe' command line switch
-is being used) then the listing will not contain any comments or
-preprocessor directives.  This is because the listing code buffers
-input source lines from stdin only after they have been preprocessed by
-the assembler.  This reduces memory usage and makes the code more
-efficient.
-
-
-File: as.info,  Node: alternate,  Next: D,  Prev: a,  Up: Invoking
-
-2.2 `--alternate'
-=================
-
-Begin in alternate macro mode, see *Note `.altmacro': Altmacro.
-
-
-File: as.info,  Node: D,  Next: f,  Prev: alternate,  Up: Invoking
-
-2.3 `-D'
-========
-
-This option has no effect whatsoever, but it is accepted to make it more
-likely that scripts written for other assemblers also work with `as'.
-
-
-File: as.info,  Node: f,  Next: I,  Prev: D,  Up: Invoking
-
-2.4 Work Faster: `-f'
-=====================
-
-`-f' should only be used when assembling programs written by a
-(trusted) compiler.  `-f' stops the assembler from doing whitespace and
-comment preprocessing on the input file(s) before assembling them.
-*Note Preprocessing: Preprocessing.
-
-     _Warning:_ if you use `-f' when the files actually need to be
-     preprocessed (if they contain comments, for example), `as' does
-     not work correctly.
-
-
-File: as.info,  Node: I,  Next: K,  Prev: f,  Up: Invoking
-
-2.5 `.include' Search Path: `-I' PATH
-=====================================
-
-Use this option to add a PATH to the list of directories `as' searches
-for files specified in `.include' directives (*note `.include':
-Include.).  You may use `-I' as many times as necessary to include a
-variety of paths.  The current working directory is always searched
-first; after that, `as' searches any `-I' directories in the same order
-as they were specified (left to right) on the command line.
-
-
-File: as.info,  Node: K,  Next: L,  Prev: I,  Up: Invoking
-
-2.6 Difference Tables: `-K'
-===========================
-
-`as' sometimes alters the code emitted for directives of the form
-`.word SYM1-SYM2'; *note `.word': Word.  You can use the `-K' option if
-you want a warning issued when this is done.
-
-
-File: as.info,  Node: L,  Next: listing,  Prev: K,  Up: Invoking
-
-2.7 Include Local Labels: `-L'
-==============================
-
-Labels beginning with `L' (upper case only) are called "local labels".
-*Note Symbol Names::.  Normally you do not see such labels when
-debugging, because they are intended for the use of programs (like
-compilers) that compose assembler programs, not for your notice.
-Normally both `as' and `ld' discard such labels, so you do not normally
-debug with them.
-
-   This option tells `as' to retain those `L...' symbols in the object
-file.  Usually if you do this you also tell the linker `ld' to preserve
-symbols whose names begin with `L'.
-
-   By default, a local label is any label beginning with `L', but each
-target is allowed to redefine the local label prefix.  On the HPPA
-local labels begin with `L$'.
-
-
-File: as.info,  Node: listing,  Next: M,  Prev: L,  Up: Invoking
-
-2.8 Configuring listing output: `--listing'
-===========================================
-
-The listing feature of the assembler can be enabled via the command
-line switch `-a' (*note a::).  This feature combines the input source
-file(s) with a hex dump of the corresponding locations in the output
-object file, and displays them as a listing file.  The format of this
-listing can be controlled by pseudo ops inside the assembler source
-(*note List:: *note Title:: *note Sbttl:: *note Psize:: *note Eject::)
-and also by the following switches:
-
-`--listing-lhs-width=`number''
-     Sets the maximum width, in words, of the first line of the hex
-     byte dump.  This dump appears on the left hand side of the listing
-     output.
-
-`--listing-lhs-width2=`number''
-     Sets the maximum width, in words, of any further lines of the hex
-     byte dump for a given input source line.  If this value is not
-     specified, it defaults to being the same as the value specified
-     for `--listing-lhs-width'.  If neither switch is used the default
-     is to one.
-
-`--listing-rhs-width=`number''
-     Sets the maximum width, in characters, of the source line that is
-     displayed alongside the hex dump.  The default value for this
-     parameter is 100.  The source line is displayed on the right hand
-     side of the listing output.
-
-`--listing-cont-lines=`number''
-     Sets the maximum number of continuation lines of hex dump that
-     will be displayed for a given single line of source input.  The
-     default value is 4.
-
-
-File: as.info,  Node: M,  Next: MD,  Prev: listing,  Up: Invoking
-
-2.9 Assemble in MRI Compatibility Mode: `-M'
-============================================
-
-The `-M' or `--mri' option selects MRI compatibility mode.  This
-changes the syntax and pseudo-op handling of `as' to make it compatible
-with the `ASM68K' or the `ASM960' (depending upon the configured
-target) assembler from Microtec Research.  The exact nature of the MRI
-syntax will not be documented here; see the MRI manuals for more
-information.  Note in particular that the handling of macros and macro
-arguments is somewhat different.  The purpose of this option is to
-permit assembling existing MRI assembler code using `as'.
-
-   The MRI compatibility is not complete.  Certain operations of the
-MRI assembler depend upon its object file format, and can not be
-supported using other object file formats.  Supporting these would
-require enhancing each object file format individually.  These are:
-
-   * global symbols in common section
-
-     The m68k MRI assembler supports common sections which are merged
-     by the linker.  Other object file formats do not support this.
-     `as' handles common sections by treating them as a single common
-     symbol.  It permits local symbols to be defined within a common
-     section, but it can not support global symbols, since it has no
-     way to describe them.
-
-   * complex relocations
-
-     The MRI assemblers support relocations against a negated section
-     address, and relocations which combine the start addresses of two
-     or more sections.  These are not support by other object file
-     formats.
-
-   * `END' pseudo-op specifying start address
-
-     The MRI `END' pseudo-op permits the specification of a start
-     address.  This is not supported by other object file formats.  The
-     start address may instead be specified using the `-e' option to
-     the linker, or in a linker script.
-
-   * `IDNT', `.ident' and `NAME' pseudo-ops
-
-     The MRI `IDNT', `.ident' and `NAME' pseudo-ops assign a module
-     name to the output file.  This is not supported by other object
-     file formats.
-
-   * `ORG' pseudo-op
-
-     The m68k MRI `ORG' pseudo-op begins an absolute section at a given
-     address.  This differs from the usual `as' `.org' pseudo-op, which
-     changes the location within the current section.  Absolute
-     sections are not supported by other object file formats.  The
-     address of a section may be assigned within a linker script.
-
-   There are some other features of the MRI assembler which are not
-supported by `as', typically either because they are difficult or
-because they seem of little consequence.  Some of these may be
-supported in future releases.
-
-   * EBCDIC strings
-
-     EBCDIC strings are not supported.
-
-   * packed binary coded decimal
-
-     Packed binary coded decimal is not supported.  This means that the
-     `DC.P' and `DCB.P' pseudo-ops are not supported.
-
-   * `FEQU' pseudo-op
-
-     The m68k `FEQU' pseudo-op is not supported.
-
-   * `NOOBJ' pseudo-op
-
-     The m68k `NOOBJ' pseudo-op is not supported.
-
-   * `OPT' branch control options
-
-     The m68k `OPT' branch control options--`B', `BRS', `BRB', `BRL',
-     and `BRW'--are ignored.  `as' automatically relaxes all branches,
-     whether forward or backward, to an appropriate size, so these
-     options serve no purpose.
-
-   * `OPT' list control options
-
-     The following m68k `OPT' list control options are ignored: `C',
-     `CEX', `CL', `CRE', `E', `G', `I', `M', `MEX', `MC', `MD', `X'.
-
-   * other `OPT' options
-
-     The following m68k `OPT' options are ignored: `NEST', `O', `OLD',
-     `OP', `P', `PCO', `PCR', `PCS', `R'.
-
-   * `OPT' `D' option is default
-
-     The m68k `OPT' `D' option is the default, unlike the MRI assembler.
-     `OPT NOD' may be used to turn it off.
-
-   * `XREF' pseudo-op.
-
-     The m68k `XREF' pseudo-op is ignored.
-
-   * `.debug' pseudo-op
-
-     The i960 `.debug' pseudo-op is not supported.
-
-   * `.extended' pseudo-op
-
-     The i960 `.extended' pseudo-op is not supported.
-
-   * `.list' pseudo-op.
-
-     The various options of the i960 `.list' pseudo-op are not
-     supported.
-
-   * `.optimize' pseudo-op
-
-     The i960 `.optimize' pseudo-op is not supported.
-
-   * `.output' pseudo-op
-
-     The i960 `.output' pseudo-op is not supported.
-
-   * `.setreal' pseudo-op
-
-     The i960 `.setreal' pseudo-op is not supported.
-
-
-
-File: as.info,  Node: MD,  Next: o,  Prev: M,  Up: Invoking
-
-2.10 Dependency Tracking: `--MD'
-================================
-
-`as' can generate a dependency file for the file it creates.  This file
-consists of a single rule suitable for `make' describing the
-dependencies of the main source file.
-
-   The rule is written to the file named in its argument.
-
-   This feature is used in the automatic updating of makefiles.
-
-
-File: as.info,  Node: o,  Next: R,  Prev: MD,  Up: Invoking
-
-2.11 Name the Object File: `-o'
-===============================
-
-There is always one object file output when you run `as'.  By default
-it has the name `a.out' (or `b.out', for Intel 960 targets only).  You
-use this option (which takes exactly one filename) to give the object
-file a different name.
-
-   Whatever the object file is called, `as' overwrites any existing
-file of the same name.
-
-
-File: as.info,  Node: R,  Next: statistics,  Prev: o,  Up: Invoking
-
-2.12 Join Data and Text Sections: `-R'
-======================================
-
-`-R' tells `as' to write the object file as if all data-section data
-lives in the text section.  This is only done at the very last moment:
-your binary data are the same, but data section parts are relocated
-differently.  The data section part of your object file is zero bytes
-long because all its bytes are appended to the text section.  (*Note
-Sections and Relocation: Sections.)
-
-   When you specify `-R' it would be possible to generate shorter
-address displacements (because we do not have to cross between text and
-data section).  We refrain from doing this simply for compatibility with
-older versions of `as'.  In future, `-R' may work this way.
-
-   When `as' is configured for COFF or ELF output, this option is only
-useful if you use sections named `.text' and `.data'.
-
-   `-R' is not supported for any of the HPPA targets.  Using `-R'
-generates a warning from `as'.
-
-
-File: as.info,  Node: statistics,  Next: traditional-format,  Prev: R,  Up: Invoking
-
-2.13 Display Assembly Statistics: `--statistics'
-================================================
-
-Use `--statistics' to display two statistics about the resources used by
-`as': the maximum amount of space allocated during the assembly (in
-bytes), and the total execution time taken for the assembly (in CPU
-seconds).
-
-
-File: as.info,  Node: traditional-format,  Next: v,  Prev: statistics,  Up: Invoking
-
-2.14 Compatible Output: `--traditional-format'
-==============================================
-
-For some targets, the output of `as' is different in some ways from the
-output of some existing assembler.  This switch requests `as' to use
-the traditional format instead.
-
-   For example, it disables the exception frame optimizations which
-`as' normally does by default on `gcc' output.
-
-
-File: as.info,  Node: v,  Next: W,  Prev: traditional-format,  Up: Invoking
-
-2.15 Announce Version: `-v'
-===========================
-
-You can find out what version of as is running by including the option
-`-v' (which you can also spell as `-version') on the command line.
-
-
-File: as.info,  Node: W,  Next: Z,  Prev: v,  Up: Invoking
-
-2.16 Control Warnings: `-W', `--warn', `--no-warn', `--fatal-warnings'
-======================================================================
-
-`as' should never give a warning or error message when assembling
-compiler output.  But programs written by people often cause `as' to
-give a warning that a particular assumption was made.  All such
-warnings are directed to the standard error file.
-
-   If you use the `-W' and `--no-warn' options, no warnings are issued.
-This only affects the warning messages: it does not change any
-particular of how `as' assembles your file.  Errors, which stop the
-assembly, are still reported.
-
-   If you use the `--fatal-warnings' option, `as' considers files that
-generate warnings to be in error.
-
-   You can switch these options off again by specifying `--warn', which
-causes warnings to be output as usual.
-
-
-File: as.info,  Node: Z,  Prev: W,  Up: Invoking
-
-2.17 Generate Object File in Spite of Errors: `-Z'
-==================================================
-
-After an error message, `as' normally produces no output.  If for some
-reason you are interested in object file output even after `as' gives
-an error message on your program, use the `-Z' option.  If there are
-any errors, `as' continues anyways, and writes an object file after a
-final warning message of the form `N errors, M warnings, generating bad
-object file.'
-
-
-File: as.info,  Node: Syntax,  Next: Sections,  Prev: Invoking,  Up: Top
-
-3 Syntax
-********
-
-This chapter describes the machine-independent syntax allowed in a
-source file.  `as' syntax is similar to what many other assemblers use;
-it is inspired by the BSD 4.2 assembler, except that `as' does not
-assemble Vax bit-fields.
-
-* Menu:
-
-* Preprocessing::              Preprocessing
-* Whitespace::                  Whitespace
-* Comments::                    Comments
-* Symbol Intro::                Symbols
-* Statements::                  Statements
-* Constants::                   Constants
-
-
-File: as.info,  Node: Preprocessing,  Next: Whitespace,  Up: Syntax
-
-3.1 Preprocessing
-=================
-
-The `as' internal preprocessor:
-   * adjusts and removes extra whitespace.  It leaves one space or tab
-     before the keywords on a line, and turns any other whitespace on
-     the line into a single space.
-
-   * removes all comments, replacing them with a single space, or an
-     appropriate number of newlines.
-
-   * converts character constants into the appropriate numeric values.
-
-   It does not do macro processing, include file handling, or anything
-else you may get from your C compiler's preprocessor.  You can do
-include file processing with the `.include' directive (*note
-`.include': Include.).  You can use the GNU C compiler driver to get
-other "CPP" style preprocessing by giving the input file a `.S' suffix.
-*Note Options Controlling the Kind of Output: (gcc.info)Overall
-Options.
-
-   Excess whitespace, comments, and character constants cannot be used
-in the portions of the input text that are not preprocessed.
-
-   If the first line of an input file is `#NO_APP' or if you use the
-`-f' option, whitespace and comments are not removed from the input
-file.  Within an input file, you can ask for whitespace and comment
-removal in specific portions of the by putting a line that says `#APP'
-before the text that may contain whitespace or comments, and putting a
-line that says `#NO_APP' after this text.  This feature is mainly
-intend to support `asm' statements in compilers whose output is
-otherwise free of comments and whitespace.
-
-
-File: as.info,  Node: Whitespace,  Next: Comments,  Prev: Preprocessing,  Up: Syntax
-
-3.2 Whitespace
-==============
-
-"Whitespace" is one or more blanks or tabs, in any order.  Whitespace
-is used to separate symbols, and to make programs neater for people to
-read.  Unless within character constants (*note Character Constants:
-Characters.), any whitespace means the same as exactly one space.
-
-
-File: as.info,  Node: Comments,  Next: Symbol Intro,  Prev: Whitespace,  Up: Syntax
-
-3.3 Comments
-============
-
-There are two ways of rendering comments to `as'.  In both cases the
-comment is equivalent to one space.
-
-   Anything from `/*' through the next `*/' is a comment.  This means
-you may not nest these comments.
-
-     /*
-       The only way to include a newline ('\n') in a comment
-       is to use this sort of comment.
-     */
-
-     /* This sort of comment does not nest. */
-
-   Anything from the "line comment" character to the next newline is
-considered a comment and is ignored.  The line comment character is `;'
-for the AMD 29K family; `;' on the ARC; `@' on the ARM; `;' for the
-H8/300 family; `!' for the H8/500 family; `;' for the HPPA; `#' on the
-i386 and x86-64; `#' on the i960; `;' for the PDP-11; `;' for picoJava;
-`#' for Motorola PowerPC; `!' for the Renesas / SuperH SH; `!' on the
-SPARC; `#' on the ip2k; `#' on the m32r; `|' on the 680x0; `#' on the
-68HC11 and 68HC12; `;' on the M880x0; `#' on the Vax; `!' for the Z8000;
-`#' on the V850; `#' for Xtensa systems; see *Note Machine
-Dependencies::.
-
-   On some machines there are two different line comment characters.
-One character only begins a comment if it is the first non-whitespace
-character on a line, while the other always begins a comment.
-
-   The V850 assembler also supports a double dash as starting a comment
-that extends to the end of the line.
-
-   `--';
-
-   To be compatible with past assemblers, lines that begin with `#'
-have a special interpretation.  Following the `#' should be an absolute
-expression (*note Expressions::): the logical line number of the _next_
-line.  Then a string (*note Strings: Strings.) is allowed: if present
-it is a new logical file name.  The rest of the line, if any, should be
-whitespace.
-
-   If the first non-whitespace characters on the line are not numeric,
-the line is ignored.  (Just like a comment.)
-
-                               # This is an ordinary comment.
-     # 42-6 "new_file_name"    # New logical file name
-                               # This is logical line # 36.
-   This feature is deprecated, and may disappear from future versions
-of `as'.
-
-
-File: as.info,  Node: Symbol Intro,  Next: Statements,  Prev: Comments,  Up: Syntax
-
-3.4 Symbols
-===========
-
-A "symbol" is one or more characters chosen from the set of all letters
-(both upper and lower case), digits and the three characters `_.$'.  On
-most machines, you can also use `$' in symbol names; exceptions are
-noted in *Note Machine Dependencies::.  No symbol may begin with a
-digit.  Case is significant.  There is no length limit: all characters
-are significant.  Symbols are delimited by characters not in that set,
-or by the beginning of a file (since the source program must end with a
-newline, the end of a file is not a possible symbol delimiter).  *Note
-Symbols::.  
-
-
-File: as.info,  Node: Statements,  Next: Constants,  Prev: Symbol Intro,  Up: Syntax
-
-3.5 Statements
-==============
-
-A "statement" ends at a newline character (`\n') or line separator
-character.  (The line separator is usually `;', unless this conflicts
-with the comment character; *note Machine Dependencies::.)  The newline
-or separator character is considered part of the preceding statement.
-Newlines and separators within character constants are an exception:
-they do not end statements.
-
-It is an error to end any statement with end-of-file:  the last
-character of any input file should be a newline.
-
-   An empty statement is allowed, and may include whitespace.  It is
-ignored.
-
-   A statement begins with zero or more labels, optionally followed by a
-key symbol which determines what kind of statement it is.  The key
-symbol determines the syntax of the rest of the statement.  If the
-symbol begins with a dot `.' then the statement is an assembler
-directive: typically valid for any computer.  If the symbol begins with
-a letter the statement is an assembly language "instruction": it
-assembles into a machine language instruction.  Different versions of
-`as' for different computers recognize different instructions.  In
-fact, the same symbol may represent a different instruction in a
-different computer's assembly language.
-
-   A label is a symbol immediately followed by a colon (`:').
-Whitespace before a label or after a colon is permitted, but you may not
-have whitespace between a label's symbol and its colon. *Note Labels::.
-
-   For HPPA targets, labels need not be immediately followed by a
-colon, but the definition of a label must begin in column zero.  This
-also implies that only one label may be defined on each line.
-
-     label:     .directive    followed by something
-     another_label:           # This is an empty statement.
-                instruction   operand_1, operand_2, ...
-
-
-File: as.info,  Node: Constants,  Prev: Statements,  Up: Syntax
-
-3.6 Constants
-=============
-
-A constant is a number, written so that its value is known by
-inspection, without knowing any context.  Like this:
-     .byte  74, 0112, 092, 0x4A, 0X4a, 'J, '\J # All the same value.
-     .ascii "Ring the bell\7"                  # A string constant.
-     .octa  0x123456789abcdef0123456789ABCDEF0 # A bignum.
-     .float 0f-314159265358979323846264338327\
-     95028841971.693993751E-40                 # - pi, a flonum.
-
-* Menu:
-
-* Characters::                  Character Constants
-* Numbers::                     Number Constants
-
-
-File: as.info,  Node: Characters,  Next: Numbers,  Up: Constants
-
-3.6.1 Character Constants
--------------------------
-
-There are two kinds of character constants.  A "character" stands for
-one character in one byte and its value may be used in numeric
-expressions.  String constants (properly called string _literals_) are
-potentially many bytes and their values may not be used in arithmetic
-expressions.
-
-* Menu:
-
-* Strings::                     Strings
-* Chars::                       Characters
-
-
-File: as.info,  Node: Strings,  Next: Chars,  Up: Characters
-
-3.6.1.1 Strings
-...............
-
-A "string" is written between double-quotes.  It may contain
-double-quotes or null characters.  The way to get special characters
-into a string is to "escape" these characters: precede them with a
-backslash `\' character.  For example `\\' represents one backslash:
-the first `\' is an escape which tells `as' to interpret the second
-character literally as a backslash (which prevents `as' from
-recognizing the second `\' as an escape character).  The complete list
-of escapes follows.
-
-`\b'
-     Mnemonic for backspace; for ASCII this is octal code 010.
-
-`\f'
-     Mnemonic for FormFeed; for ASCII this is octal code 014.
-
-`\n'
-     Mnemonic for newline; for ASCII this is octal code 012.
-
-`\r'
-     Mnemonic for carriage-Return; for ASCII this is octal code 015.
-
-`\t'
-     Mnemonic for horizontal Tab; for ASCII this is octal code 011.
-
-`\ DIGIT DIGIT DIGIT'
-     An octal character code.  The numeric code is 3 octal digits.  For
-     compatibility with other Unix systems, 8 and 9 are accepted as
-     digits: for example, `\008' has the value 010, and `\009' the
-     value 011.
-
-`\`x' HEX-DIGITS...'
-     A hex character code.  All trailing hex digits are combined.
-     Either upper or lower case `x' works.
-
-`\\'
-     Represents one `\' character.
-
-`\"'
-     Represents one `"' character.  Needed in strings to represent this
-     character, because an unescaped `"' would end the string.
-
-`\ ANYTHING-ELSE'
-     Any other character when escaped by `\' gives a warning, but
-     assembles as if the `\' was not present.  The idea is that if you
-     used an escape sequence you clearly didn't want the literal
-     interpretation of the following character.  However `as' has no
-     other interpretation, so `as' knows it is giving you the wrong
-     code and warns you of the fact.
-
-   Which characters are escapable, and what those escapes represent,
-varies widely among assemblers.  The current set is what we think the
-BSD 4.2 assembler recognizes, and is a subset of what most C compilers
-recognize.  If you are in doubt, do not use an escape sequence.
-
-
-File: as.info,  Node: Chars,  Prev: Strings,  Up: Characters
-
-3.6.1.2 Characters
-..................
-
-A single character may be written as a single quote immediately
-followed by that character.  The same escapes apply to characters as to
-strings.  So if you want to write the character backslash, you must
-write `'\\' where the first `\' escapes the second `\'.  As you can
-see, the quote is an acute accent, not a grave accent.  A newline
-immediately following an acute accent is taken as a literal character
-and does not count as the end of a statement.  The value of a character
-constant in a numeric expression is the machine's byte-wide code for
-that character.  `as' assumes your character code is ASCII: `'A' means
-65, `'B' means 66, and so on.
-
-
-File: as.info,  Node: Numbers,  Prev: Characters,  Up: Constants
-
-3.6.2 Number Constants
-----------------------
-
-`as' distinguishes three kinds of numbers according to how they are
-stored in the target machine.  _Integers_ are numbers that would fit
-into an `int' in the C language.  _Bignums_ are integers, but they are
-stored in more than 32 bits.  _Flonums_ are floating point numbers,
-described below.
-
-* Menu:
-
-* Integers::                    Integers
-* Bignums::                     Bignums
-* Flonums::                     Flonums
-
-
-File: as.info,  Node: Integers,  Next: Bignums,  Up: Numbers
-
-3.6.2.1 Integers
-................
-
-A binary integer is `0b' or `0B' followed by zero or more of the binary
-digits `01'.
-
-   An octal integer is `0' followed by zero or more of the octal digits
-(`01234567').
-
-   A decimal integer starts with a non-zero digit followed by zero or
-more digits (`0123456789').
-
-   A hexadecimal integer is `0x' or `0X' followed by one or more
-hexadecimal digits chosen from `0123456789abcdefABCDEF'.
-
-   Integers have the usual values.  To denote a negative integer, use
-the prefix operator `-' discussed under expressions (*note Prefix
-Operators: Prefix Ops.).
-
-
-File: as.info,  Node: Bignums,  Next: Flonums,  Prev: Integers,  Up: Numbers
-
-3.6.2.2 Bignums
-...............
-
-A "bignum" has the same syntax and semantics as an integer except that
-the number (or its negative) takes more than 32 bits to represent in
-binary.  The distinction is made because in some places integers are
-permitted while bignums are not.
-
-
-File: as.info,  Node: Flonums,  Prev: Bignums,  Up: Numbers
-
-3.6.2.3 Flonums
-...............
-
-A "flonum" represents a floating point number.  The translation is
-indirect: a decimal floating point number from the text is converted by
-`as' to a generic binary floating point number of more than sufficient
-precision.  This generic floating point number is converted to a
-particular computer's floating point format (or formats) by a portion
-of `as' specialized to that computer.
-
-   A flonum is written by writing (in order)
-   * The digit `0'.  (`0' is optional on the HPPA.)
-
-   * A letter, to tell `as' the rest of the number is a flonum.  `e' is
-     recommended.  Case is not important.
-
-     On the H8/300, H8/500, Renesas / SuperH SH, and AMD 29K
-     architectures, the letter must be one of the letters `DFPRSX' (in
-     upper or lower case).
-
-     On the ARC, the letter must be one of the letters `DFRS' (in upper
-     or lower case).
-
-     On the Intel 960 architecture, the letter must be one of the
-     letters `DFT' (in upper or lower case).
-
-     On the HPPA architecture, the letter must be `E' (upper case only).
-
-   * An optional sign: either `+' or `-'.
-
-   * An optional "integer part": zero or more decimal digits.
-
-   * An optional "fractional part": `.' followed by zero or more
-     decimal digits.
-
-   * An optional exponent, consisting of:
-
-        * An `E' or `e'.
-
-        * Optional sign: either `+' or `-'.
-
-        * One or more decimal digits.
-
-
-   At least one of the integer part or the fractional part must be
-present.  The floating point number has the usual base-10 value.
-
-   `as' does all processing using integers.  Flonums are computed
-independently of any floating point hardware in the computer running
-`as'.
-
-
-File: as.info,  Node: Sections,  Next: Symbols,  Prev: Syntax,  Up: Top
-
-4 Sections and Relocation
-*************************
-
-* Menu:
-
-* Secs Background::             Background
-* Ld Sections::                 Linker Sections
-* As Sections::                 Assembler Internal Sections
-* Sub-Sections::                Sub-Sections
-* bss::                         bss Section
-
-
-File: as.info,  Node: Secs Background,  Next: Ld Sections,  Up: Sections
-
-4.1 Background
-==============
-
-Roughly, a section is a range of addresses, with no gaps; all data "in"
-those addresses is treated the same for some particular purpose.  For
-example there may be a "read only" section.
-
-   The linker `ld' reads many object files (partial programs) and
-combines their contents to form a runnable program.  When `as' emits an
-object file, the partial program is assumed to start at address 0.
-`ld' assigns the final addresses for the partial program, so that
-different partial programs do not overlap.  This is actually an
-oversimplification, but it suffices to explain how `as' uses sections.
-
-   `ld' moves blocks of bytes of your program to their run-time
-addresses.  These blocks slide to their run-time addresses as rigid
-units; their length does not change and neither does the order of bytes
-within them.  Such a rigid unit is called a _section_.  Assigning
-run-time addresses to sections is called "relocation".  It includes the
-task of adjusting mentions of object-file addresses so they refer to
-the proper run-time addresses.  For the H8/300 and H8/500, and for the
-Renesas / SuperH SH, `as' pads sections if needed to ensure they end on
-a word (sixteen bit) boundary.
-
-   An object file written by `as' has at least three sections, any of
-which may be empty.  These are named "text", "data" and "bss" sections.
-
-   When it generates COFF or ELF output, `as' can also generate
-whatever other named sections you specify using the `.section'
-directive (*note `.section': Section.).  If you do not use any
-directives that place output in the `.text' or `.data' sections, these
-sections still exist, but are empty.
-
-   When `as' generates SOM or ELF output for the HPPA, `as' can also
-generate whatever other named sections you specify using the `.space'
-and `.subspace' directives.  See `HP9000 Series 800 Assembly Language
-Reference Manual' (HP 92432-90001) for details on the `.space' and
-`.subspace' assembler directives.
-
-   Additionally, `as' uses different names for the standard text, data,
-and bss sections when generating SOM output.  Program text is placed
-into the `$CODE$' section, data into `$DATA$', and BSS into `$BSS$'.
-
-   Within the object file, the text section starts at address `0', the
-data section follows, and the bss section follows the data section.
-
-   When generating either SOM or ELF output files on the HPPA, the text
-section starts at address `0', the data section at address `0x4000000',
-and the bss section follows the data section.
-
-   To let `ld' know which data changes when the sections are relocated,
-and how to change that data, `as' also writes to the object file
-details of the relocation needed.  To perform relocation `ld' must
-know, each time an address in the object file is mentioned:
-   * Where in the object file is the beginning of this reference to an
-     address?
-
-   * How long (in bytes) is this reference?
-
-   * Which section does the address refer to?  What is the numeric
-     value of
-          (ADDRESS) - (START-ADDRESS OF SECTION)?
-
-   * Is the reference to an address "Program-Counter relative"?
-
-   In fact, every address `as' ever uses is expressed as
-     (SECTION) + (OFFSET INTO SECTION)
-   Further, most expressions `as' computes have this section-relative
-nature.  (For some object formats, such as SOM for the HPPA, some
-expressions are symbol-relative instead.)
-
-   In this manual we use the notation {SECNAME N} to mean "offset N
-into section SECNAME."
-
-   Apart from text, data and bss sections you need to know about the
-"absolute" section.  When `ld' mixes partial programs, addresses in the
-absolute section remain unchanged.  For example, address `{absolute 0}'
-is "relocated" to run-time address 0 by `ld'.  Although the linker
-never arranges two partial programs' data sections with overlapping
-addresses after linking, _by definition_ their absolute sections must
-overlap.  Address `{absolute 239}' in one part of a program is always
-the same address when the program is running as address `{absolute
-239}' in any other part of the program.
-
-   The idea of sections is extended to the "undefined" section.  Any
-address whose section is unknown at assembly time is by definition
-rendered {undefined U}--where U is filled in later.  Since numbers are
-always defined, the only way to generate an undefined address is to
-mention an undefined symbol.  A reference to a named common block would
-be such a symbol: its value is unknown at assembly time so it has
-section _undefined_.
-
-   By analogy the word _section_ is used to describe groups of sections
-in the linked program.  `ld' puts all partial programs' text sections
-in contiguous addresses in the linked program.  It is customary to
-refer to the _text section_ of a program, meaning all the addresses of
-all partial programs' text sections.  Likewise for data and bss
-sections.
-
-   Some sections are manipulated by `ld'; others are invented for use
-of `as' and have no meaning except during assembly.
-
-
-File: as.info,  Node: Ld Sections,  Next: As Sections,  Prev: Secs Background,  Up: Sections
-
-4.2 Linker Sections
-===================
-
-`ld' deals with just four kinds of sections, summarized below.
-
-*named sections*
-*text section*
-*data section*
-     These sections hold your program.  `as' and `ld' treat them as
-     separate but equal sections.  Anything you can say of one section
-     is true of another.  When the program is running, however, it is
-     customary for the text section to be unalterable.  The text
-     section is often shared among processes: it contains instructions,
-     constants and the like.  The data section of a running program is
-     usually alterable: for example, C variables would be stored in the
-     data section.
-
-*bss section*
-     This section contains zeroed bytes when your program begins
-     running.  It is used to hold uninitialized variables or common
-     storage.  The length of each partial program's bss section is
-     important, but because it starts out containing zeroed bytes there
-     is no need to store explicit zero bytes in the object file.  The
-     bss section was invented to eliminate those explicit zeros from
-     object files.
-
-*absolute section*
-     Address 0 of this section is always "relocated" to runtime address
-     0.  This is useful if you want to refer to an address that `ld'
-     must not change when relocating.  In this sense we speak of
-     absolute addresses being "unrelocatable": they do not change
-     during relocation.
-
-*undefined section*
-     This "section" is a catch-all for address references to objects
-     not in the preceding sections.
-
-   An idealized example of three relocatable sections follows.  The
-example uses the traditional section names `.text' and `.data'.  Memory
-addresses are on the horizontal axis.
-
-                           +-----+----+--+
-     partial program # 1:  |ttttt|dddd|00|
-                           +-----+----+--+
-
-                           text   data bss
-                           seg.   seg. seg.
-
-                           +---+---+---+
-     partial program # 2:  |TTT|DDD|000|
-                           +---+---+---+
-
-                           +--+---+-----+--+----+---+-----+~~
-     linked program:       |  |TTT|ttttt|  |dddd|DDD|00000|
-                           +--+---+-----+--+----+---+-----+~~
-
-         addresses:        0 ...
-
-
-File: as.info,  Node: As Sections,  Next: Sub-Sections,  Prev: Ld Sections,  Up: Sections
-
-4.3 Assembler Internal Sections
-===============================
-
-These sections are meant only for the internal use of `as'.  They have
-no meaning at run-time.  You do not really need to know about these
-sections for most purposes; but they can be mentioned in `as' warning
-messages, so it might be helpful to have an idea of their meanings to
-`as'.  These sections are used to permit the value of every expression
-in your assembly language program to be a section-relative address.
-
-ASSEMBLER-INTERNAL-LOGIC-ERROR!
-     An internal assembler logic error has been found.  This means
-     there is a bug in the assembler.
-
-expr section
-     The assembler stores complex expression internally as combinations
-     of symbols.  When it needs to represent an expression as a symbol,
-     it puts it in the expr section.
-
-
-File: as.info,  Node: Sub-Sections,  Next: bss,  Prev: As Sections,  Up: Sections
-
-4.4 Sub-Sections
-================
-
-Assembled bytes conventionally fall into two sections: text and data.
-You may have separate groups of data in named sections that you want to
-end up near to each other in the object file, even though they are not
-contiguous in the assembler source.  `as' allows you to use
-"subsections" for this purpose.  Within each section, there can be
-numbered subsections with values from 0 to 8192.  Objects assembled
-into the same subsection go into the object file together with other
-objects in the same subsection.  For example, a compiler might want to
-store constants in the text section, but might not want to have them
-interspersed with the program being assembled.  In this case, the
-compiler could issue a `.text 0' before each section of code being
-output, and a `.text 1' before each group of constants being output.
-
-Subsections are optional.  If you do not use subsections, everything
-goes in subsection number zero.
-
-   Each subsection is zero-padded up to a multiple of four bytes.
-(Subsections may be padded a different amount on different flavors of
-`as'.)
-
-   Subsections appear in your object file in numeric order, lowest
-numbered to highest.  (All this to be compatible with other people's
-assemblers.)  The object file contains no representation of
-subsections; `ld' and other programs that manipulate object files see
-no trace of them.  They just see all your text subsections as a text
-section, and all your data subsections as a data section.
-
-   To specify which subsection you want subsequent statements assembled
-into, use a numeric argument to specify it, in a `.text EXPRESSION' or
-a `.data EXPRESSION' statement.  When generating COFF output, you can
-also use an extra subsection argument with arbitrary named sections:
-`.section NAME, EXPRESSION'.  When generating ELF output, you can also
-use the `.subsection' directive (*note SubSection::) to specify a
-subsection: `.subsection EXPRESSION'.  EXPRESSION should be an absolute
-expression.  (*Note Expressions::.)  If you just say `.text' then
-`.text 0' is assumed.  Likewise `.data' means `.data 0'.  Assembly
-begins in `text 0'.  For instance:
-     .text 0     # The default subsection is text 0 anyway.
-     .ascii "This lives in the first text subsection. *"
-     .text 1
-     .ascii "But this lives in the second text subsection."
-     .data 0
-     .ascii "This lives in the data section,"
-     .ascii "in the first data subsection."
-     .text 0
-     .ascii "This lives in the first text section,"
-     .ascii "immediately following the asterisk (*)."
-
-   Each section has a "location counter" incremented by one for every
-byte assembled into that section.  Because subsections are merely a
-convenience restricted to `as' there is no concept of a subsection
-location counter.  There is no way to directly manipulate a location
-counter--but the `.align' directive changes it, and any label
-definition captures its current value.  The location counter of the
-section where statements are being assembled is said to be the "active"
-location counter.
-
-
-File: as.info,  Node: bss,  Prev: Sub-Sections,  Up: Sections
-
-4.5 bss Section
-===============
-
-The bss section is used for local common variable storage.  You may
-allocate address space in the bss section, but you may not dictate data
-to load into it before your program executes.  When your program starts
-running, all the contents of the bss section are zeroed bytes.
-
-   The `.lcomm' pseudo-op defines a symbol in the bss section; see
-*Note `.lcomm': Lcomm.
-
-   The `.comm' pseudo-op may be used to declare a common symbol, which
-is another form of uninitialized symbol; see *Note `.comm': Comm.
-
-   When assembling for a target which supports multiple sections, such
-as ELF or COFF, you may switch into the `.bss' section and define
-symbols as usual; see *Note `.section': Section.  You may only assemble
-zero values into the section.  Typically the section will only contain
-symbol definitions and `.skip' directives (*note `.skip': Skip.).
-
-
-File: as.info,  Node: Symbols,  Next: Expressions,  Prev: Sections,  Up: Top
-
-5 Symbols
-*********
-
-Symbols are a central concept: the programmer uses symbols to name
-things, the linker uses symbols to link, and the debugger uses symbols
-to debug.
-
-     _Warning:_ `as' does not place symbols in the object file in the
-     same order they were declared.  This may break some debuggers.
-
-* Menu:
-
-* Labels::                      Labels
-* Setting Symbols::             Giving Symbols Other Values
-* Symbol Names::                Symbol Names
-* Dot::                         The Special Dot Symbol
-* Symbol Attributes::           Symbol Attributes
-
-
-File: as.info,  Node: Labels,  Next: Setting Symbols,  Up: Symbols
-
-5.1 Labels
-==========
-
-A "label" is written as a symbol immediately followed by a colon `:'.
-The symbol then represents the current value of the active location
-counter, and is, for example, a suitable instruction operand.  You are
-warned if you use the same symbol to represent two different locations:
-the first definition overrides any other definitions.
-
-   On the HPPA, the usual form for a label need not be immediately
-followed by a colon, but instead must start in column zero.  Only one
-label may be defined on a single line.  To work around this, the HPPA
-version of `as' also provides a special directive `.label' for defining
-labels more flexibly.
-
-
-File: as.info,  Node: Setting Symbols,  Next: Symbol Names,  Prev: Labels,  Up: Symbols
-
-5.2 Giving Symbols Other Values
-===============================
-
-A symbol can be given an arbitrary value by writing a symbol, followed
-by an equals sign `=', followed by an expression (*note Expressions::).
-This is equivalent to using the `.set' directive.  *Note `.set': Set.
-
-
-File: as.info,  Node: Symbol Names,  Next: Dot,  Prev: Setting Symbols,  Up: Symbols
-
-5.3 Symbol Names
-================
-
-Symbol names begin with a letter or with one of `._'.  On most
-machines, you can also use `$' in symbol names; exceptions are noted in
-*Note Machine Dependencies::.  That character may be followed by any
-string of digits, letters, dollar signs (unless otherwise noted in
-*Note Machine Dependencies::), and underscores.  For the AMD 29K
-family, `?' is also allowed in the body of a symbol name, though not at
-its beginning.
-
-Case of letters is significant: `foo' is a different symbol name than
-`Foo'.
-
-   Each symbol has exactly one name.  Each name in an assembly language
-program refers to exactly one symbol.  You may use that symbol name any
-number of times in a program.
-
-Local Symbol Names
-------------------
-
-Local symbols help compilers and programmers use names temporarily.
-They create symbols which are guaranteed to be unique over the entire
-scope of the input source code and which can be referred to by a simple
-notation.  To define a local symbol, write a label of the form `N:'
-(where N represents any positive integer).  To refer to the most recent
-previous definition of that symbol write `Nb', using the same number as
-when you defined the label.  To refer to the next definition of a local
-label, write `Nf'-- The `b' stands for"backwards" and the `f' stands
-for "forwards".
-
-   There is no restriction on how you can use these labels, and you can
-reuse them too.  So that it is possible to repeatedly define the same
-local label (using the same number `N'), although you can only refer to
-the most recently defined local label of that number (for a backwards
-reference) or the next definition of a specific local label for a
-forward reference.  It is also worth noting that the first 10 local
-labels (`0:'...`9:') are implemented in a slightly more efficient
-manner than the others.
-
-   Here is an example:
-
-     1:        branch 1f
-     2:        branch 1b
-     1:        branch 2f
-     2:        branch 1b
-
-   Which is the equivalent of:
-
-     label_1:  branch label_3
-     label_2:  branch label_1
-     label_3:  branch label_4
-     label_4:  branch label_3
-
-   Local symbol names are only a notational device.  They are
-immediately transformed into more conventional symbol names before the
-assembler uses them.  The symbol names stored in the symbol table,
-appearing in error messages and optionally emitted to the object file.
-The names are constructed using these parts:
-
-`L'
-     All local labels begin with `L'. Normally both `as' and `ld'
-     forget symbols that start with `L'. These labels are used for
-     symbols you are never intended to see.  If you use the `-L' option
-     then `as' retains these symbols in the object file. If you also
-     instruct `ld' to retain these symbols, you may use them in
-     debugging.
-
-`NUMBER'
-     This is the number that was used in the local label definition.
-     So if the label is written `55:' then the number is `55'.
-
-`C-B'
-     This unusual character is included so you do not accidentally
-     invent a symbol of the same name.  The character has ASCII value
-     of `\002' (control-B).
-
-`_ordinal number_'
-     This is a serial number to keep the labels distinct.  The first
-     definition of `0:' gets the number `1'.  The 15th definition of
-     `0:' gets the number `15', and so on.  Likewise the first
-     definition of `1:' gets the number `1' and its 15th defintion gets
-     `15' as well.
-
-   So for example, the first `1:' is named `L1C-B1', the 44th `3:' is
-named `L3C-B44'.
-
-Dollar Local Labels
--------------------
-
-`as' also supports an even more local form of local labels called
-dollar labels.  These labels go out of scope (ie they become undefined)
-as soon as a non-local label is defined.  Thus they remain valid for
-only a small region of the input source code.  Normal local labels, by
-contrast, remain in scope for the entire file, or until they are
-redefined by another occurrence of the same local label.
-
-   Dollar labels are defined in exactly the same way as ordinary local
-labels, except that instead of being terminated by a colon, they are
-terminated by a dollar sign.  eg `55$'.
-
-   They can also be distinguished from ordinary local labels by their
-transformed name which uses ASCII character `\001' (control-A) as the
-magic character to distinguish them from ordinary labels.  Thus the 5th
-defintion of `6$' is named `L6C-A5'.
-
-
-File: as.info,  Node: Dot,  Next: Symbol Attributes,  Prev: Symbol Names,  Up: Symbols
-
-5.4 The Special Dot Symbol
-==========================
-
-The special symbol `.' refers to the current address that `as' is
-assembling into.  Thus, the expression `melvin: .long .' defines
-`melvin' to contain its own address.  Assigning a value to `.' is
-treated the same as a `.org' directive.  Thus, the expression `.=.+4'
-is the same as saying `.space 4'.
-
-
-File: as.info,  Node: Symbol Attributes,  Prev: Dot,  Up: Symbols
-
-5.5 Symbol Attributes
-=====================
-
-Every symbol has, as well as its name, the attributes "Value" and
-"Type".  Depending on output format, symbols can also have auxiliary
-attributes.
-
-   If you use a symbol without defining it, `as' assumes zero for all
-these attributes, and probably won't warn you.  This makes the symbol
-an externally defined symbol, which is generally what you would want.
-
-* Menu:
-
-* Symbol Value::                Value
-* Symbol Type::                 Type
-
-
-* a.out Symbols::               Symbol Attributes: `a.out'
-
-* COFF Symbols::                Symbol Attributes for COFF
-
-* SOM Symbols::                Symbol Attributes for SOM
-
-
-File: as.info,  Node: Symbol Value,  Next: Symbol Type,  Up: Symbol Attributes
-
-5.5.1 Value
------------
-
-The value of a symbol is (usually) 32 bits.  For a symbol which labels a
-location in the text, data, bss or absolute sections the value is the
-number of addresses from the start of that section to the label.
-Naturally for text, data and bss sections the value of a symbol changes
-as `ld' changes section base addresses during linking.  Absolute
-symbols' values do not change during linking: that is why they are
-called absolute.
-
-   The value of an undefined symbol is treated in a special way.  If it
-is 0 then the symbol is not defined in this assembler source file, and
-`ld' tries to determine its value from other files linked into the same
-program.  You make this kind of symbol simply by mentioning a symbol
-name without defining it.  A non-zero value represents a `.comm' common
-declaration.  The value is how much common storage to reserve, in bytes
-(addresses).  The symbol refers to the first address of the allocated
-storage.
-
-
-File: as.info,  Node: Symbol Type,  Next: a.out Symbols,  Prev: Symbol Value,  Up: Symbol Attributes
-
-5.5.2 Type
-----------
-
-The type attribute of a symbol contains relocation (section)
-information, any flag settings indicating that a symbol is external, and
-(optionally), other information for linkers and debuggers.  The exact
-format depends on the object-code output format in use.
-
-
-File: as.info,  Node: a.out Symbols,  Next: COFF Symbols,  Prev: Symbol Type,  Up: Symbol Attributes
-
-5.5.3 Symbol Attributes: `a.out'
---------------------------------
-
-* Menu:
-
-* Symbol Desc::                 Descriptor
-* Symbol Other::                Other
-
-
-File: as.info,  Node: Symbol Desc,  Next: Symbol Other,  Up: a.out Symbols
-
-5.5.3.1 Descriptor
-..................
-
-This is an arbitrary 16-bit value.  You may establish a symbol's
-descriptor value by using a `.desc' statement (*note `.desc': Desc.).
-A descriptor value means nothing to `as'.
-
-
-File: as.info,  Node: Symbol Other,  Prev: Symbol Desc,  Up: a.out Symbols
-
-5.5.3.2 Other
-.............
-
-This is an arbitrary 8-bit value.  It means nothing to `as'.
-
-
-File: as.info,  Node: COFF Symbols,  Next: SOM Symbols,  Prev: a.out Symbols,  Up: Symbol Attributes
-
-5.5.4 Symbol Attributes for COFF
---------------------------------
-
-The COFF format supports a multitude of auxiliary symbol attributes;
-like the primary symbol attributes, they are set between `.def' and
-`.endef' directives.
-
-5.5.4.1 Primary Attributes
-..........................
-
-The symbol name is set with `.def'; the value and type, respectively,
-with `.val' and `.type'.
-
-5.5.4.2 Auxiliary Attributes
-............................
-
-The `as' directives `.dim', `.line', `.scl', `.size', `.tag', and
-`.weak' can generate auxiliary symbol table information for COFF.
-
-
-File: as.info,  Node: SOM Symbols,  Prev: COFF Symbols,  Up: Symbol Attributes
-
-5.5.5 Symbol Attributes for SOM
--------------------------------
-
-The SOM format for the HPPA supports a multitude of symbol attributes
-set with the `.EXPORT' and `.IMPORT' directives.
-
-   The attributes are described in `HP9000 Series 800 Assembly Language
-Reference Manual' (HP 92432-90001) under the `IMPORT' and `EXPORT'
-assembler directive documentation.
-
-
-File: as.info,  Node: Expressions,  Next: Pseudo Ops,  Prev: Symbols,  Up: Top
-
-6 Expressions
-*************
-
-An "expression" specifies an address or numeric value.  Whitespace may
-precede and/or follow an expression.
-
-   The result of an expression must be an absolute number, or else an
-offset into a particular section.  If an expression is not absolute,
-and there is not enough information when `as' sees the expression to
-know its section, a second pass over the source program might be
-necessary to interpret the expression--but the second pass is currently
-not implemented.  `as' aborts with an error message in this situation.
-
-* Menu:
-
-* Empty Exprs::                 Empty Expressions
-* Integer Exprs::               Integer Expressions
-
-
-File: as.info,  Node: Empty Exprs,  Next: Integer Exprs,  Up: Expressions
-
-6.1 Empty Expressions
-=====================
-
-An empty expression has no value: it is just whitespace or null.
-Wherever an absolute expression is required, you may omit the
-expression, and `as' assumes a value of (absolute) 0.  This is
-compatible with other assemblers.
-
-
-File: as.info,  Node: Integer Exprs,  Prev: Empty Exprs,  Up: Expressions
-
-6.2 Integer Expressions
-=======================
-
-An "integer expression" is one or more _arguments_ delimited by
-_operators_.
-
-* Menu:
-
-* Arguments::                   Arguments
-* Operators::                   Operators
-* Prefix Ops::                  Prefix Operators
-* Infix Ops::                   Infix Operators
-
-
-File: as.info,  Node: Arguments,  Next: Operators,  Up: Integer Exprs
-
-6.2.1 Arguments
----------------
-
-"Arguments" are symbols, numbers or subexpressions.  In other contexts
-arguments are sometimes called "arithmetic operands".  In this manual,
-to avoid confusing them with the "instruction operands" of the machine
-language, we use the term "argument" to refer to parts of expressions
-only, reserving the word "operand" to refer only to machine instruction
-operands.
-
-   Symbols are evaluated to yield {SECTION NNN} where SECTION is one of
-text, data, bss, absolute, or undefined.  NNN is a signed, 2's
-complement 32 bit integer.
-
-   Numbers are usually integers.
-
-   A number can be a flonum or bignum.  In this case, you are warned
-that only the low order 32 bits are used, and `as' pretends these 32
-bits are an integer.  You may write integer-manipulating instructions
-that act on exotic constants, compatible with other assemblers.
-
-   Subexpressions are a left parenthesis `(' followed by an integer
-expression, followed by a right parenthesis `)'; or a prefix operator
-followed by an argument.
-
-
-File: as.info,  Node: Operators,  Next: Prefix Ops,  Prev: Arguments,  Up: Integer Exprs
-
-6.2.2 Operators
----------------
-
-"Operators" are arithmetic functions, like `+' or `%'.  Prefix
-operators are followed by an argument.  Infix operators appear between
-their arguments.  Operators may be preceded and/or followed by
-whitespace.
-
-
-File: as.info,  Node: Prefix Ops,  Next: Infix Ops,  Prev: Operators,  Up: Integer Exprs
-
-6.2.3 Prefix Operator
----------------------
-
-`as' has the following "prefix operators".  They each take one
-argument, which must be absolute.
-
-`-'
-     "Negation".  Two's complement negation.
-
-`~'
-     "Complementation".  Bitwise not.
-
-
-File: as.info,  Node: Infix Ops,  Prev: Prefix Ops,  Up: Integer Exprs
-
-6.2.4 Infix Operators
----------------------
-
-"Infix operators" take two arguments, one on either side.  Operators
-have precedence, but operations with equal precedence are performed left
-to right.  Apart from `+' or `-', both arguments must be absolute, and
-the result is absolute.
-
-  1. Highest Precedence
-
-    `*'
-          "Multiplication".
-
-    `/'
-          "Division".  Truncation is the same as the C operator `/'
-
-    `%'
-          "Remainder".
-
-    `<'
-    `<<'
-          "Shift Left".  Same as the C operator `<<'.
-
-    `>'
-    `>>'
-          "Shift Right".  Same as the C operator `>>'.
-
-  2. Intermediate precedence
-
-    `|'
-          "Bitwise Inclusive Or".
-
-    `&'
-          "Bitwise And".
-
-    `^'
-          "Bitwise Exclusive Or".
-
-    `!'
-          "Bitwise Or Not".
-
-  3. Low Precedence
-
-    `+'
-          "Addition".  If either argument is absolute, the result has
-          the section of the other argument.  You may not add together
-          arguments from different sections.
-
-    `-'
-          "Subtraction".  If the right argument is absolute, the result
-          has the section of the left argument.  If both arguments are
-          in the same section, the result is absolute.  You may not
-          subtract arguments from different sections.
-
-    `=='
-          "Is Equal To"
-
-    `<>'
-          "Is Not Equal To"
-
-    `<'
-          "Is Less Than"
-
-    `>'
-          "Is Greater Than"
-
-    `>='
-          "Is Greater Than Or Equal To"
-
-    `<='
-          "Is Less Than Or Equal To"
-
-          The comparison operators can be used as infix operators.  A
-          true results has a value of -1 whereas a false result has a
-          value of 0.   Note, these operators perform signed
-          comparisons.
-
-  4. Lowest Precedence
-
-    `&&'
-          "Logical And".
-
-    `||'
-          "Logical Or".
-
-          These two logical operations can be used to combine the
-          results of sub expressions.  Note, unlike the comparison
-          operators a true result returns a value of 1 but a false
-          results does still return 0.  Also note that the logical or
-          operator has a slightly lower precedence than logical and.
-
-
-   In short, it's only meaningful to add or subtract the _offsets_ in an
-address; you can only have a defined section in one of the two
-arguments.
-
-
-File: as.info,  Node: Pseudo Ops,  Next: Machine Dependencies,  Prev: Expressions,  Up: Top
-
-7 Assembler Directives
-**********************
-
-All assembler directives have names that begin with a period (`.').
-The rest of the name is letters, usually in lower case.
-
-   This chapter discusses directives that are available regardless of
-the target machine configuration for the GNU assembler.  Some machine
-configurations provide additional directives.  *Note Machine
-Dependencies::.
-
-* Menu:
-
-* Abort::                       `.abort'
-
-* ABORT::                       `.ABORT'
-
-* Align::                       `.align ABS-EXPR , ABS-EXPR'
-* Altmacro::                    `.altmacro'
-* Ascii::                       `.ascii "STRING"'...
-* Asciz::                       `.asciz "STRING"'...
-* Balign::                      `.balign ABS-EXPR , ABS-EXPR'
-* Byte::                        `.byte EXPRESSIONS'
-* Comm::                        `.comm SYMBOL , LENGTH '
-
-* CFI directives::		`.cfi_startproc', `.cfi_endproc', etc.
-
-* Data::                        `.data SUBSECTION'
-
-* Def::                         `.def NAME'
-
-* Desc::                        `.desc SYMBOL, ABS-EXPRESSION'
-
-* Dim::                         `.dim'
-
-* Double::                      `.double FLONUMS'
-* Eject::                       `.eject'
-* Else::                        `.else'
-* Elseif::                      `.elseif'
-* End::				`.end'
-
-* Endef::                       `.endef'
-
-* Endfunc::                     `.endfunc'
-* Endif::                       `.endif'
-* Equ::                         `.equ SYMBOL, EXPRESSION'
-* Equiv::                       `.equiv SYMBOL, EXPRESSION'
-* Err::				`.err'
-* Error::			`.error STRING'
-* Exitm::			`.exitm'
-* Extern::                      `.extern'
-* Fail::			`.fail'
-
-* File::                        `.file STRING'
-
-* Fill::                        `.fill REPEAT , SIZE , VALUE'
-* Float::                       `.float FLONUMS'
-* Func::                        `.func'
-* Global::                      `.global SYMBOL', `.globl SYMBOL'
-
-* Hidden::                      `.hidden NAMES'
-
-* hword::                       `.hword EXPRESSIONS'
-* Ident::                       `.ident'
-* If::                          `.if ABSOLUTE EXPRESSION'
-* Incbin::                      `.incbin "FILE"[,SKIP[,COUNT]]'
-* Include::                     `.include "FILE"'
-* Int::                         `.int EXPRESSIONS'
-
-* Internal::                    `.internal NAMES'
-
-* Irp::				`.irp SYMBOL,VALUES'...
-* Irpc::			`.irpc SYMBOL,VALUES'...
-* Lcomm::                       `.lcomm SYMBOL , LENGTH'
-* Lflags::                      `.lflags'
-
-* Line::                        `.line LINE-NUMBER'
-
-* Ln::                          `.ln LINE-NUMBER'
-* Linkonce::			`.linkonce [TYPE]'
-* List::                        `.list'
-* Long::                        `.long EXPRESSIONS'
-
-* Macro::			`.macro NAME ARGS'...
-* MRI::				`.mri VAL'
-* Noaltmacro::                  `.noaltmacro'
-* Nolist::                      `.nolist'
-* Octa::                        `.octa BIGNUMS'
-* Org::                         `.org NEW-LC , FILL'
-* P2align::                     `.p2align ABS-EXPR , ABS-EXPR'
-
-* PopSection::                  `.popsection'
-* Previous::                    `.previous'
-
-* Print::			`.print STRING'
-
-* Protected::                   `.protected NAMES'
-
-* Psize::                       `.psize LINES, COLUMNS'
-* Purgem::			`.purgem NAME'
-
-* PushSection::                 `.pushsection NAME'
-
-* Quad::                        `.quad BIGNUMS'
-* Rept::			`.rept COUNT'
-* Sbttl::                       `.sbttl "SUBHEADING"'
-
-* Scl::                         `.scl CLASS'
-
-* Section::                     `.section NAME'
-
-* Set::                         `.set SYMBOL, EXPRESSION'
-* Short::                       `.short EXPRESSIONS'
-* Single::                      `.single FLONUMS'
-
-* Size::                        `.size [NAME , EXPRESSION]'
-
-* Skip::                        `.skip SIZE , FILL'
-* Sleb128::			`.sleb128 EXPRESSIONS'
-* Space::                       `.space SIZE , FILL'
-
-* Stab::                        `.stabd, .stabn, .stabs'
-
-* String::                      `.string "STR"'
-* Struct::			`.struct EXPRESSION'
-
-* SubSection::                  `.subsection'
-* Symver::                      `.symver NAME,NAME2@NODENAME'
-
-
-* Tag::                         `.tag STRUCTNAME'
-
-* Text::                        `.text SUBSECTION'
-* Title::                       `.title "HEADING"'
-
-* Type::                        `.type <INT | NAME , TYPE DESCRIPTION>'
-
-* Uleb128::                     `.uleb128 EXPRESSIONS'
-
-* Val::                         `.val ADDR'
-
-
-* Version::                     `.version "STRING"'
-* VTableEntry::                 `.vtable_entry TABLE, OFFSET'
-* VTableInherit::               `.vtable_inherit CHILD, PARENT'
-
-* Warning::			`.warning STRING'
-* Weak::                        `.weak NAMES'
-* Word::                        `.word EXPRESSIONS'
-* Deprecated::                  Deprecated Directives
-
-
-File: as.info,  Node: Abort,  Next: ABORT,  Up: Pseudo Ops
-
-7.1 `.abort'
-============
-
-This directive stops the assembly immediately.  It is for compatibility
-with other assemblers.  The original idea was that the assembly
-language source would be piped into the assembler.  If the sender of
-the source quit, it could use this directive tells `as' to quit also.
-One day `.abort' will not be supported.
-
-
-File: as.info,  Node: ABORT,  Next: Align,  Prev: Abort,  Up: Pseudo Ops
-
-7.2 `.ABORT'
-============
-
-When producing COFF output, `as' accepts this directive as a synonym
-for `.abort'.
-
-   When producing `b.out' output, `as' accepts this directive, but
-ignores it.
-
-
-File: as.info,  Node: Align,  Next: Altmacro,  Prev: ABORT,  Up: Pseudo Ops
-
-7.3 `.align ABS-EXPR, ABS-EXPR, ABS-EXPR'
-=========================================
-
-Pad the location counter (in the current subsection) to a particular
-storage boundary.  The first expression (which must be absolute) is the
-alignment required, as described below.
-
-   The second expression (also absolute) gives the fill value to be
-stored in the padding bytes.  It (and the comma) may be omitted.  If it
-is omitted, the padding bytes are normally zero.  However, on some
-systems, if the section is marked as containing code and the fill value
-is omitted, the space is filled with no-op instructions.
-
-   The third expression is also absolute, and is also optional.  If it
-is present, it is the maximum number of bytes that should be skipped by
-this alignment directive.  If doing the alignment would require
-skipping more bytes than the specified maximum, then the alignment is
-not done at all.  You can omit the fill value (the second argument)
-entirely by simply using two commas after the required alignment; this
-can be useful if you want the alignment to be filled with no-op
-instructions when appropriate.
-
-   The way the required alignment is specified varies from system to
-system.  For the a29k, arc, hppa, i386 using ELF, i860, iq2000, m68k,
-m88k, or32, s390, sparc, tic4x, tic80 and xtensa, the first expression
-is the alignment request in bytes.  For example `.align 8' advances the
-location counter until it is a multiple of 8.  If the location counter
-is already a multiple of 8, no change is needed.  For the tic54x, the
-first expression is the alignment request in words.
-
-   For other systems, including the i386 using a.out format, and the
-arm and strongarm, it is the number of low-order zero bits the location
-counter must have after advancement.  For example `.align 3' advances
-the location counter until it a multiple of 8.  If the location counter
-is already a multiple of 8, no change is needed.
-
-   This inconsistency is due to the different behaviors of the various
-native assemblers for these systems which GAS must emulate.  GAS also
-provides `.balign' and `.p2align' directives, described later, which
-have a consistent behavior across all architectures (but are specific
-to GAS).
-
-
-File: as.info,  Node: Ascii,  Next: Asciz,  Prev: Altmacro,  Up: Pseudo Ops
-
-7.4 `.ascii "STRING"'...
-========================
-
-`.ascii' expects zero or more string literals (*note Strings::)
-separated by commas.  It assembles each string (with no automatic
-trailing zero byte) into consecutive addresses.
-
-
-File: as.info,  Node: Asciz,  Next: Balign,  Prev: Ascii,  Up: Pseudo Ops
-
-7.5 `.asciz "STRING"'...
-========================
-
-`.asciz' is just like `.ascii', but each string is followed by a zero
-byte.  The "z" in `.asciz' stands for "zero".
-
-
-File: as.info,  Node: Balign,  Next: Byte,  Prev: Asciz,  Up: Pseudo Ops
-
-7.6 `.balign[wl] ABS-EXPR, ABS-EXPR, ABS-EXPR'
-==============================================
-
-Pad the location counter (in the current subsection) to a particular
-storage boundary.  The first expression (which must be absolute) is the
-alignment request in bytes.  For example `.balign 8' advances the
-location counter until it is a multiple of 8.  If the location counter
-is already a multiple of 8, no change is needed.
-
-   The second expression (also absolute) gives the fill value to be
-stored in the padding bytes.  It (and the comma) may be omitted.  If it
-is omitted, the padding bytes are normally zero.  However, on some
-systems, if the section is marked as containing code and the fill value
-is omitted, the space is filled with no-op instructions.
-
-   The third expression is also absolute, and is also optional.  If it
-is present, it is the maximum number of bytes that should be skipped by
-this alignment directive.  If doing the alignment would require
-skipping more bytes than the specified maximum, then the alignment is
-not done at all.  You can omit the fill value (the second argument)
-entirely by simply using two commas after the required alignment; this
-can be useful if you want the alignment to be filled with no-op
-instructions when appropriate.
-
-   The `.balignw' and `.balignl' directives are variants of the
-`.balign' directive.  The `.balignw' directive treats the fill pattern
-as a two byte word value.  The `.balignl' directives treats the fill
-pattern as a four byte longword value.  For example, `.balignw
-4,0x368d' will align to a multiple of 4.  If it skips two bytes, they
-will be filled in with the value 0x368d (the exact placement of the
-bytes depends upon the endianness of the processor).  If it skips 1 or
-3 bytes, the fill value is undefined.
-
-
-File: as.info,  Node: Byte,  Next: Comm,  Prev: Balign,  Up: Pseudo Ops
-
-7.7 `.byte EXPRESSIONS'
-=======================
-
-`.byte' expects zero or more expressions, separated by commas.  Each
-expression is assembled into the next byte.
-
-
-File: as.info,  Node: Comm,  Next: CFI directives,  Prev: Byte,  Up: Pseudo Ops
-
-7.8 `.comm SYMBOL , LENGTH '
-============================
-
-`.comm' declares a common symbol named SYMBOL.  When linking, a common
-symbol in one object file may be merged with a defined or common symbol
-of the same name in another object file.  If `ld' does not see a
-definition for the symbol-just one or more common symbols-then it will
-allocate LENGTH bytes of uninitialized memory.  LENGTH must be an
-absolute expression.  If `ld' sees multiple common symbols with the
-same name, and they do not all have the same size, it will allocate
-space using the largest size.
-
-   When using ELF, the `.comm' directive takes an optional third
-argument.  This is the desired alignment of the symbol, specified as a
-byte boundary (for example, an alignment of 16 means that the least
-significant 4 bits of the address should be zero).  The alignment must
-be an absolute expression, and it must be a power of two.  If `ld'
-allocates uninitialized memory for the common symbol, it will use the
-alignment when placing the symbol.  If no alignment is specified, `as'
-will set the alignment to the largest power of two less than or equal
-to the size of the symbol, up to a maximum of 16.
-
-   The syntax for `.comm' differs slightly on the HPPA.  The syntax is
-`SYMBOL .comm, LENGTH'; SYMBOL is optional.
-
-
-File: as.info,  Node: CFI directives,  Next: Data,  Prev: Comm,  Up: Pseudo Ops
-
-7.9 `.cfi_startproc'
-====================
-
-`.cfi_startproc' is used at the beginning of each function that should
-have an entry in `.eh_frame'. It initializes some internal data
-structures and emits architecture dependent initial CFI instructions.
-Don't forget to close the function by `.cfi_endproc'.
-
-7.10 `.cfi_endproc'
-===================
-
-`.cfi_endproc' is used at the end of a function where it closes its
-unwind entry previously opened by `.cfi_startproc'. and emits it to
-`.eh_frame'.
-
-7.11 `.cfi_def_cfa REGISTER, OFFSET'
-====================================
-
-`.cfi_def_cfa' defines a rule for computing CFA as: take address from
-REGISTER and add OFFSET to it.
-
-7.12 `.cfi_def_cfa_register REGISTER'
-=====================================
-
-`.cfi_def_cfa_register' modifies a rule for computing CFA. From now on
-REGISTER will be used instead of the old one. Offset remains the same.
-
-7.13 `.cfi_def_cfa_offset OFFSET'
-=================================
-
-`.cfi_def_cfa_offset' modifies a rule for computing CFA. Register
-remains the same, but OFFSET is new. Note that it is the absolute
-offset that will be added to a defined register to compute CFA address.
-
-7.14 `.cfi_adjust_cfa_offset OFFSET'
-====================================
-
-Same as `.cfi_def_cfa_offset' but OFFSET is a relative value that is
-added/substracted from the previous offset.
-
-7.15 `.cfi_offset REGISTER, OFFSET'
-===================================
-
-Previous value of REGISTER is saved at offset OFFSET from CFA.
-
-7.16 `.cfi_rel_offset REGISTER, OFFSET'
-=======================================
-
-Previous value of REGISTER is saved at offset OFFSET from the current
-CFA register.  This is transformed to `.cfi_offset' using the known
-displacement of the CFA register from the CFA.  This is often easier to
-use, because the number will match the code it's annotating.
-
-7.17 `.cfi_window_save'
-=======================
-
-SPARC register window has been saved.
-
-7.18 `.cfi_escape' EXPRESSION[, ...]
-====================================
-
-Allows the user to add arbitrary bytes to the unwind info.  One might
-use this to add OS-specific CFI opcodes, or generic CFI opcodes that
-GAS does not yet support.
-
-
-File: as.info,  Node: Data,  Next: Def,  Prev: CFI directives,  Up: Pseudo Ops
-
-7.19 `.data SUBSECTION'
-=======================
-
-`.data' tells `as' to assemble the following statements onto the end of
-the data subsection numbered SUBSECTION (which is an absolute
-expression).  If SUBSECTION is omitted, it defaults to zero.
-
-
-File: as.info,  Node: Def,  Next: Desc,  Prev: Data,  Up: Pseudo Ops
-
-7.20 `.def NAME'
-================
-
-Begin defining debugging information for a symbol NAME; the definition
-extends until the `.endef' directive is encountered.
-
-   This directive is only observed when `as' is configured for COFF
-format output; when producing `b.out', `.def' is recognized, but
-ignored.
-
-
-File: as.info,  Node: Desc,  Next: Dim,  Prev: Def,  Up: Pseudo Ops
-
-7.21 `.desc SYMBOL, ABS-EXPRESSION'
-===================================
-
-This directive sets the descriptor of the symbol (*note Symbol
-Attributes::) to the low 16 bits of an absolute expression.
-
-   The `.desc' directive is not available when `as' is configured for
-COFF output; it is only for `a.out' or `b.out' object format.  For the
-sake of compatibility, `as' accepts it, but produces no output, when
-configured for COFF.
-
-
-File: as.info,  Node: Dim,  Next: Double,  Prev: Desc,  Up: Pseudo Ops
-
-7.22 `.dim'
-===========
-
-This directive is generated by compilers to include auxiliary debugging
-information in the symbol table.  It is only permitted inside
-`.def'/`.endef' pairs.
-
-   `.dim' is only meaningful when generating COFF format output; when
-`as' is generating `b.out', it accepts this directive but ignores it.
-
-
-File: as.info,  Node: Double,  Next: Eject,  Prev: Dim,  Up: Pseudo Ops
-
-7.23 `.double FLONUMS'
-======================
-
-`.double' expects zero or more flonums, separated by commas.  It
-assembles floating point numbers.  The exact kind of floating point
-numbers emitted depends on how `as' is configured.  *Note Machine
-Dependencies::.
-
-
-File: as.info,  Node: Eject,  Next: Else,  Prev: Double,  Up: Pseudo Ops
-
-7.24 `.eject'
-=============
-
-Force a page break at this point, when generating assembly listings.
-
-
-File: as.info,  Node: Else,  Next: Elseif,  Prev: Eject,  Up: Pseudo Ops
-
-7.25 `.else'
-============
-
-`.else' is part of the `as' support for conditional assembly; *note
-`.if': If.  It marks the beginning of a section of code to be assembled
-if the condition for the preceding `.if' was false.
-
-
-File: as.info,  Node: Elseif,  Next: End,  Prev: Else,  Up: Pseudo Ops
-
-7.26 `.elseif'
-==============
-
-`.elseif' is part of the `as' support for conditional assembly; *note
-`.if': If.  It is shorthand for beginning a new `.if' block that would
-otherwise fill the entire `.else' section.
-
-
-File: as.info,  Node: End,  Next: Endef,  Prev: Elseif,  Up: Pseudo Ops
-
-7.27 `.end'
-===========
-
-`.end' marks the end of the assembly file.  `as' does not process
-anything in the file past the `.end' directive.
-
-
-File: as.info,  Node: Endef,  Next: Endfunc,  Prev: End,  Up: Pseudo Ops
-
-7.28 `.endef'
-=============
-
-This directive flags the end of a symbol definition begun with `.def'.
-
-   `.endef' is only meaningful when generating COFF format output; if
-`as' is configured to generate `b.out', it accepts this directive but
-ignores it.
-
-
-File: as.info,  Node: Endfunc,  Next: Endif,  Prev: Endef,  Up: Pseudo Ops
-
-7.29 `.endfunc'
-===============
-
-`.endfunc' marks the end of a function specified with `.func'.
-
-
-File: as.info,  Node: Endif,  Next: Equ,  Prev: Endfunc,  Up: Pseudo Ops
-
-7.30 `.endif'
-=============
-
-`.endif' is part of the `as' support for conditional assembly; it marks
-the end of a block of code that is only assembled conditionally.  *Note
-`.if': If.
-
-
-File: as.info,  Node: Equ,  Next: Equiv,  Prev: Endif,  Up: Pseudo Ops
-
-7.31 `.equ SYMBOL, EXPRESSION'
-==============================
-
-This directive sets the value of SYMBOL to EXPRESSION.  It is
-synonymous with `.set'; *note `.set': Set.
-
-   The syntax for `equ' on the HPPA is `SYMBOL .equ EXPRESSION'.
-
-
-File: as.info,  Node: Equiv,  Next: Err,  Prev: Equ,  Up: Pseudo Ops
-
-7.32 `.equiv SYMBOL, EXPRESSION'
-================================
-
-The `.equiv' directive is like `.equ' and `.set', except that the
-assembler will signal an error if SYMBOL is already defined.  Note a
-symbol which has been referenced but not actually defined is considered
-to be undefined.
-
-   Except for the contents of the error message, this is roughly
-equivalent to
-     .ifdef SYM
-     .err
-     .endif
-     .equ SYM,VAL
-
-
-File: as.info,  Node: Err,  Next: Error,  Prev: Equiv,  Up: Pseudo Ops
-
-7.33 `.err'
-===========
-
-If `as' assembles a `.err' directive, it will print an error message
-and, unless the `-Z' option was used, it will not generate an object
-file.  This can be used to signal error an conditionally compiled code.
-
-
-File: as.info,  Node: Error,  Next: Exitm,  Prev: Err,  Up: Pseudo Ops
-
-7.34 `.error "STRING"'
-======================
-
-Similarly to `.err', this directive emits an error, but you can specify
-a string that will be emitted as the error message.  If you don't
-specify the message, it defaults to `".error directive invoked in
-source file"'.  *Note Error and Warning Messages: Errors.
-
-      .error "This code has not been assembled and tested."
-
-
-File: as.info,  Node: Exitm,  Next: Extern,  Prev: Error,  Up: Pseudo Ops
-
-7.35 `.exitm'
-=============
-
-Exit early from the current macro definition.  *Note Macro::.
-
-
-File: as.info,  Node: Extern,  Next: Fail,  Prev: Exitm,  Up: Pseudo Ops
-
-7.36 `.extern'
-==============
-
-`.extern' is accepted in the source program--for compatibility with
-other assemblers--but it is ignored.  `as' treats all undefined symbols
-as external.
-
-
-File: as.info,  Node: Fail,  Next: File,  Prev: Extern,  Up: Pseudo Ops
-
-7.37 `.fail EXPRESSION'
-=======================
-
-Generates an error or a warning.  If the value of the EXPRESSION is 500
-or more, `as' will print a warning message.  If the value is less than
-500, `as' will print an error message.  The message will include the
-value of EXPRESSION.  This can occasionally be useful inside complex
-nested macros or conditional assembly.
-
-
-File: as.info,  Node: File,  Next: Fill,  Prev: Fail,  Up: Pseudo Ops
-
-7.38 `.file STRING'
-===================
-
-`.file' tells `as' that we are about to start a new logical file.
-STRING is the new file name.  In general, the filename is recognized
-whether or not it is surrounded by quotes `"'; but if you wish to
-specify an empty file name, you must give the quotes-`""'.  This
-statement may go away in future: it is only recognized to be compatible
-with old `as' programs.  In some configurations of `as', `.file' has
-already been removed to avoid conflicts with other assemblers.  *Note
-Machine Dependencies::.
-
-
-File: as.info,  Node: Fill,  Next: Float,  Prev: File,  Up: Pseudo Ops
-
-7.39 `.fill REPEAT , SIZE , VALUE'
-==================================
-
-REPEAT, SIZE and VALUE are absolute expressions.  This emits REPEAT
-copies of SIZE bytes.  REPEAT may be zero or more.  SIZE may be zero or
-more, but if it is more than 8, then it is deemed to have the value 8,
-compatible with other people's assemblers.  The contents of each REPEAT
-bytes is taken from an 8-byte number.  The highest order 4 bytes are
-zero.  The lowest order 4 bytes are VALUE rendered in the byte-order of
-an integer on the computer `as' is assembling for.  Each SIZE bytes in
-a repetition is taken from the lowest order SIZE bytes of this number.
-Again, this bizarre behavior is compatible with other people's
-assemblers.
-
-   SIZE and VALUE are optional.  If the second comma and VALUE are
-absent, VALUE is assumed zero.  If the first comma and following tokens
-are absent, SIZE is assumed to be 1.
-
-
-File: as.info,  Node: Float,  Next: Func,  Prev: Fill,  Up: Pseudo Ops
-
-7.40 `.float FLONUMS'
-=====================
-
-This directive assembles zero or more flonums, separated by commas.  It
-has the same effect as `.single'.  The exact kind of floating point
-numbers emitted depends on how `as' is configured.  *Note Machine
-Dependencies::.
-
-
-File: as.info,  Node: Func,  Next: Global,  Prev: Float,  Up: Pseudo Ops
-
-7.41 `.func NAME[,LABEL]'
-=========================
-
-`.func' emits debugging information to denote function NAME, and is
-ignored unless the file is assembled with debugging enabled.  Only
-`--gstabs[+]' is currently supported.  LABEL is the entry point of the
-function and if omitted NAME prepended with the `leading char' is used.
-`leading char' is usually `_' or nothing, depending on the target.  All
-functions are currently defined to have `void' return type.  The
-function must be terminated with `.endfunc'.
-
-
-File: as.info,  Node: Global,  Next: Hidden,  Prev: Func,  Up: Pseudo Ops
-
-7.42 `.global SYMBOL', `.globl SYMBOL'
-======================================
-
-`.global' makes the symbol visible to `ld'.  If you define SYMBOL in
-your partial program, its value is made available to other partial
-programs that are linked with it.  Otherwise, SYMBOL takes its
-attributes from a symbol of the same name from another file linked into
-the same program.
-
-   Both spellings (`.globl' and `.global') are accepted, for
-compatibility with other assemblers.
-
-   On the HPPA, `.global' is not always enough to make it accessible to
-other partial programs.  You may need the HPPA-only `.EXPORT' directive
-as well.  *Note HPPA Assembler Directives: HPPA Directives.
-
-
-File: as.info,  Node: Hidden,  Next: hword,  Prev: Global,  Up: Pseudo Ops
-
-7.43 `.hidden NAMES'
-====================
-
-This is one of the ELF visibility directives.  The other two are
-`.internal' (*note `.internal': Internal.) and `.protected' (*note
-`.protected': Protected.).
-
-   This directive overrides the named symbols default visibility (which
-is set by their binding: local, global or weak).  The directive sets
-the visibility to `hidden' which means that the symbols are not visible
-to other components.  Such symbols are always considered to be
-`protected' as well.
-
-
-File: as.info,  Node: hword,  Next: Ident,  Prev: Hidden,  Up: Pseudo Ops
-
-7.44 `.hword EXPRESSIONS'
-=========================
-
-This expects zero or more EXPRESSIONS, and emits a 16 bit number for
-each.
-
-   This directive is a synonym for `.short'; depending on the target
-architecture, it may also be a synonym for `.word'.
-
-
-File: as.info,  Node: Ident,  Next: If,  Prev: hword,  Up: Pseudo Ops
-
-7.45 `.ident'
-=============
-
-This directive is used by some assemblers to place tags in object files.
-`as' simply accepts the directive for source-file compatibility with
-such assemblers, but does not actually emit anything for it.
-
-
-File: as.info,  Node: If,  Next: Incbin,  Prev: Ident,  Up: Pseudo Ops
-
-7.46 `.if ABSOLUTE EXPRESSION'
-==============================
-
-`.if' marks the beginning of a section of code which is only considered
-part of the source program being assembled if the argument (which must
-be an ABSOLUTE EXPRESSION) is non-zero.  The end of the conditional
-section of code must be marked by `.endif' (*note `.endif': Endif.);
-optionally, you may include code for the alternative condition, flagged
-by `.else' (*note `.else': Else.).  If you have several conditions to
-check, `.elseif' may be used to avoid nesting blocks if/else within
-each subsequent `.else' block.
-
-   The following variants of `.if' are also supported:
-`.ifdef SYMBOL'
-     Assembles the following section of code if the specified SYMBOL
-     has been defined.  Note a symbol which has been referenced but not
-     yet defined is considered to be undefined.
-
-`.ifc STRING1,STRING2'
-     Assembles the following section of code if the two strings are the
-     same.  The strings may be optionally quoted with single quotes.
-     If they are not quoted, the first string stops at the first comma,
-     and the second string stops at the end of the line.  Strings which
-     contain whitespace should be quoted.  The string comparison is
-     case sensitive.
-
-`.ifeq ABSOLUTE EXPRESSION'
-     Assembles the following section of code if the argument is zero.
-
-`.ifeqs STRING1,STRING2'
-     Another form of `.ifc'.  The strings must be quoted using double
-     quotes.
-
-`.ifge ABSOLUTE EXPRESSION'
-     Assembles the following section of code if the argument is greater
-     than or equal to zero.
-
-`.ifgt ABSOLUTE EXPRESSION'
-     Assembles the following section of code if the argument is greater
-     than zero.
-
-`.ifle ABSOLUTE EXPRESSION'
-     Assembles the following section of code if the argument is less
-     than or equal to zero.
-
-`.iflt ABSOLUTE EXPRESSION'
-     Assembles the following section of code if the argument is less
-     than zero.
-
-`.ifnc STRING1,STRING2.'
-     Like `.ifc', but the sense of the test is reversed: this assembles
-     the following section of code if the two strings are not the same.
-
-`.ifndef SYMBOL'
-`.ifnotdef SYMBOL'
-     Assembles the following section of code if the specified SYMBOL
-     has not been defined.  Both spelling variants are equivalent.
-     Note a symbol which has been referenced but not yet defined is
-     considered to be undefined.
-
-`.ifne ABSOLUTE EXPRESSION'
-     Assembles the following section of code if the argument is not
-     equal to zero (in other words, this is equivalent to `.if').
-
-`.ifnes STRING1,STRING2'
-     Like `.ifeqs', but the sense of the test is reversed: this
-     assembles the following section of code if the two strings are not
-     the same.
-
-
-File: as.info,  Node: Incbin,  Next: Include,  Prev: If,  Up: Pseudo Ops
-
-7.47 `.incbin "FILE"[,SKIP[,COUNT]]'
-====================================
-
-The `incbin' directive includes FILE verbatim at the current location.
-You can control the search paths used with the `-I' command-line option
-(*note Command-Line Options: Invoking.).  Quotation marks are required
-around FILE.
-
-   The SKIP argument skips a number of bytes from the start of the
-FILE.  The COUNT argument indicates the maximum number of bytes to
-read.  Note that the data is not aligned in any way, so it is the user's
-responsibility to make sure that proper alignment is provided both
-before and after the `incbin' directive.
-
-
-File: as.info,  Node: Include,  Next: Int,  Prev: Incbin,  Up: Pseudo Ops
-
-7.48 `.include "FILE"'
-======================
-
-This directive provides a way to include supporting files at specified
-points in your source program.  The code from FILE is assembled as if
-it followed the point of the `.include'; when the end of the included
-file is reached, assembly of the original file continues.  You can
-control the search paths used with the `-I' command-line option (*note
-Command-Line Options: Invoking.).  Quotation marks are required around
-FILE.
-
-
-File: as.info,  Node: Int,  Next: Internal,  Prev: Include,  Up: Pseudo Ops
-
-7.49 `.int EXPRESSIONS'
-=======================
-
-Expect zero or more EXPRESSIONS, of any section, separated by commas.
-For each expression, emit a number that, at run time, is the value of
-that expression.  The byte order and bit size of the number depends on
-what kind of target the assembly is for.
-
-
-File: as.info,  Node: Internal,  Next: Irp,  Prev: Int,  Up: Pseudo Ops
-
-7.50 `.internal NAMES'
-======================
-
-This is one of the ELF visibility directives.  The other two are
-`.hidden' (*note `.hidden': Hidden.) and `.protected' (*note
-`.protected': Protected.).
-
-   This directive overrides the named symbols default visibility (which
-is set by their binding: local, global or weak).  The directive sets
-the visibility to `internal' which means that the symbols are
-considered to be `hidden' (i.e., not visible to other components), and
-that some extra, processor specific processing must also be performed
-upon the  symbols as well.
-
-
-File: as.info,  Node: Irp,  Next: Irpc,  Prev: Internal,  Up: Pseudo Ops
-
-7.51 `.irp SYMBOL,VALUES'...
-============================
-
-Evaluate a sequence of statements assigning different values to SYMBOL.
-The sequence of statements starts at the `.irp' directive, and is
-terminated by an `.endr' directive.  For each VALUE, SYMBOL is set to
-VALUE, and the sequence of statements is assembled.  If no VALUE is
-listed, the sequence of statements is assembled once, with SYMBOL set
-to the null string.  To refer to SYMBOL within the sequence of
-statements, use \SYMBOL.
-
-   For example, assembling
-
-             .irp    param,1,2,3
-             move    d\param,sp@-
-             .endr
-
-   is equivalent to assembling
-
-             move    d1,sp@-
-             move    d2,sp@-
-             move    d3,sp@-
-
-
-File: as.info,  Node: Irpc,  Next: Lcomm,  Prev: Irp,  Up: Pseudo Ops
-
-7.52 `.irpc SYMBOL,VALUES'...
-=============================
-
-Evaluate a sequence of statements assigning different values to SYMBOL.
-The sequence of statements starts at the `.irpc' directive, and is
-terminated by an `.endr' directive.  For each character in VALUE,
-SYMBOL is set to the character, and the sequence of statements is
-assembled.  If no VALUE is listed, the sequence of statements is
-assembled once, with SYMBOL set to the null string.  To refer to SYMBOL
-within the sequence of statements, use \SYMBOL.
-
-   For example, assembling
-
-             .irpc    param,123
-             move    d\param,sp@-
-             .endr
-
-   is equivalent to assembling
-
-             move    d1,sp@-
-             move    d2,sp@-
-             move    d3,sp@-
-
-
-File: as.info,  Node: Lcomm,  Next: Lflags,  Prev: Irpc,  Up: Pseudo Ops
-
-7.53 `.lcomm SYMBOL , LENGTH'
-=============================
-
-Reserve LENGTH (an absolute expression) bytes for a local common
-denoted by SYMBOL.  The section and value of SYMBOL are those of the
-new local common.  The addresses are allocated in the bss section, so
-that at run-time the bytes start off zeroed.  SYMBOL is not declared
-global (*note `.global': Global.), so is normally not visible to `ld'.
-
-   Some targets permit a third argument to be used with `.lcomm'.  This
-argument specifies the desired alignment of the symbol in the bss
-section.
-
-   The syntax for `.lcomm' differs slightly on the HPPA.  The syntax is
-`SYMBOL .lcomm, LENGTH'; SYMBOL is optional.
-
-
-File: as.info,  Node: Lflags,  Next: Line,  Prev: Lcomm,  Up: Pseudo Ops
-
-7.54 `.lflags'
-==============
-
-`as' accepts this directive, for compatibility with other assemblers,
-but ignores it.
-
-
-File: as.info,  Node: Line,  Next: Ln,  Prev: Lflags,  Up: Pseudo Ops
-
-7.55 `.line LINE-NUMBER'
-========================
-
-   Change the logical line number.  LINE-NUMBER must be an absolute
-expression.  The next line has that logical line number.  Therefore any
-other statements on the current line (after a statement separator
-character) are reported as on logical line number LINE-NUMBER - 1.  One
-day `as' will no longer support this directive: it is recognized only
-for compatibility with existing assembler programs.
-
-   _Warning:_ In the AMD29K configuration of as, this command is not
-available; use the synonym `.ln' in that context.
-
-   Even though this is a directive associated with the `a.out' or
-`b.out' object-code formats, `as' still recognizes it when producing
-COFF output, and treats `.line' as though it were the COFF `.ln' _if_
-it is found outside a `.def'/`.endef' pair.
-
-   Inside a `.def', `.line' is, instead, one of the directives used by
-compilers to generate auxiliary symbol information for debugging.
-
-
-File: as.info,  Node: Linkonce,  Next: List,  Prev: Ln,  Up: Pseudo Ops
-
-7.56 `.linkonce [TYPE]'
-=======================
-
-Mark the current section so that the linker only includes a single copy
-of it.  This may be used to include the same section in several
-different object files, but ensure that the linker will only include it
-once in the final output file.  The `.linkonce' pseudo-op must be used
-for each instance of the section.  Duplicate sections are detected
-based on the section name, so it should be unique.
-
-   This directive is only supported by a few object file formats; as of
-this writing, the only object file format which supports it is the
-Portable Executable format used on Windows NT.
-
-   The TYPE argument is optional.  If specified, it must be one of the
-following strings.  For example:
-     .linkonce same_size
-   Not all types may be supported on all object file formats.
-
-`discard'
-     Silently discard duplicate sections.  This is the default.
-
-`one_only'
-     Warn if there are duplicate sections, but still keep only one copy.
-
-`same_size'
-     Warn if any of the duplicates have different sizes.
-
-`same_contents'
-     Warn if any of the duplicates do not have exactly the same
-     contents.
-
-
-File: as.info,  Node: Ln,  Next: Linkonce,  Prev: Line,  Up: Pseudo Ops
-
-7.57 `.ln LINE-NUMBER'
-======================
-
-`.ln' is a synonym for `.line'.
-
-
-File: as.info,  Node: MRI,  Next: Noaltmacro,  Prev: Macro,  Up: Pseudo Ops
-
-7.58 `.mri VAL'
-===============
-
-If VAL is non-zero, this tells `as' to enter MRI mode.  If VAL is zero,
-this tells `as' to exit MRI mode.  This change affects code assembled
-until the next `.mri' directive, or until the end of the file.  *Note
-MRI mode: M.
-
-
-File: as.info,  Node: List,  Next: Long,  Prev: Linkonce,  Up: Pseudo Ops
-
-7.59 `.list'
-============
-
-Control (in conjunction with the `.nolist' directive) whether or not
-assembly listings are generated.  These two directives maintain an
-internal counter (which is zero initially).   `.list' increments the
-counter, and `.nolist' decrements it.  Assembly listings are generated
-whenever the counter is greater than zero.
-
-   By default, listings are disabled.  When you enable them (with the
-`-a' command line option; *note Command-Line Options: Invoking.), the
-initial value of the listing counter is one.
-
-
-File: as.info,  Node: Long,  Next: Macro,  Prev: List,  Up: Pseudo Ops
-
-7.60 `.long EXPRESSIONS'
-========================
-
-`.long' is the same as `.int', *note `.int': Int.
-
-
-File: as.info,  Node: Macro,  Next: MRI,  Prev: Long,  Up: Pseudo Ops
-
-7.61 `.macro'
-=============
-
-The commands `.macro' and `.endm' allow you to define macros that
-generate assembly output.  For example, this definition specifies a
-macro `sum' that puts a sequence of numbers into memory:
-
-             .macro  sum from=0, to=5
-             .long   \from
-             .if     \to-\from
-             sum     "(\from+1)",\to
-             .endif
-             .endm
-
-With that definition, `SUM 0,5' is equivalent to this assembly input:
-
-             .long   0
-             .long   1
-             .long   2
-             .long   3
-             .long   4
-             .long   5
-
-`.macro MACNAME'
-`.macro MACNAME MACARGS ...'
-     Begin the definition of a macro called MACNAME.  If your macro
-     definition requires arguments, specify their names after the macro
-     name, separated by commas or spaces.  You can supply a default
-     value for any macro argument by following the name with `=DEFLT'.
-     You cannot define two macros with the same MACNAME unless it has
-     been subject to the `.purgem' directive (*Note Purgem::.) between
-     the two definitions.  For example, these are all valid `.macro'
-     statements:
-
-    `.macro comm'
-          Begin the definition of a macro called `comm', which takes no
-          arguments.
-
-    `.macro plus1 p, p1'
-    `.macro plus1 p p1'
-          Either statement begins the definition of a macro called
-          `plus1', which takes two arguments; within the macro
-          definition, write `\p' or `\p1' to evaluate the arguments.
-
-    `.macro reserve_str p1=0 p2'
-          Begin the definition of a macro called `reserve_str', with two
-          arguments.  The first argument has a default value, but not
-          the second.  After the definition is complete, you can call
-          the macro either as `reserve_str A,B' (with `\p1' evaluating
-          to A and `\p2' evaluating to B), or as `reserve_str ,B' (with
-          `\p1' evaluating as the default, in this case `0', and `\p2'
-          evaluating to B).
-
-     When you call a macro, you can specify the argument values either
-     by position, or by keyword.  For example, `sum 9,17' is equivalent
-     to `sum to=17, from=9'.
-
-`.endm'
-     Mark the end of a macro definition.
-
-`.exitm'
-     Exit early from the current macro definition.
-
-`\@'
-     `as' maintains a counter of how many macros it has executed in
-     this pseudo-variable; you can copy that number to your output with
-     `\@', but _only within a macro definition_.
-
-`LOCAL NAME [ , ... ]'
-     _Warning: `LOCAL' is only available if you select "alternate macro
-     syntax" with `--alternate' or `.altmacro'._ *Note `.altmacro':
-     Altmacro.
-
-
-File: as.info,  Node: Altmacro,  Next: Ascii,  Prev: Align,  Up: Pseudo Ops
-
-7.62 `.altmacro'
-================
-
-Enable alternate macro mode, enabling:
-
-`LOCAL NAME [ , ... ]'
-     One additional directive, `LOCAL', is available.  It is used to
-     generate a string replacement for each of the NAME arguments, and
-     replace any instances of NAME in each macro expansion.  The
-     replacement string is unique in the assembly, and different for
-     each separate macro expansion.  `LOCAL' allows you to write macros
-     that define symbols, without fear of conflict between separate
-     macro expansions.
-
-`String delimiters'
-     You can write strings delimited in these other ways besides
-     `"STRING"':
-
-    `'STRING''
-          You can delimit strings with single-quote charaters.
-
-    `<STRING>'
-          You can delimit strings with matching angle brackets.
-
-`single-character string escape'
-     To include any single character literally in a string (even if the
-     character would otherwise have some special meaning), you can
-     prefix the character with `!' (an exclamation mark).  For example,
-     you can write `<4.3 !> 5.4!!>' to get the literal text `4.3 >
-     5.4!'.
-
-`Expression results as strings'
-     You can write `%EXPR' to evaluate the expression EXPR and use the
-     result as a string.
-
-
-File: as.info,  Node: Noaltmacro,  Next: Nolist,  Prev: MRI,  Up: Pseudo Ops
-
-7.63 `.noaltmacro'
-==================
-
-Disable alternate macro mode.  *Note Altmacro::
-
-
-File: as.info,  Node: Nolist,  Next: Octa,  Prev: Noaltmacro,  Up: Pseudo Ops
-
-7.64 `.nolist'
-==============
-
-Control (in conjunction with the `.list' directive) whether or not
-assembly listings are generated.  These two directives maintain an
-internal counter (which is zero initially).   `.list' increments the
-counter, and `.nolist' decrements it.  Assembly listings are generated
-whenever the counter is greater than zero.
-
-
-File: as.info,  Node: Octa,  Next: Org,  Prev: Nolist,  Up: Pseudo Ops
-
-7.65 `.octa BIGNUMS'
-====================
-
-This directive expects zero or more bignums, separated by commas.  For
-each bignum, it emits a 16-byte integer.
-
-   The term "octa" comes from contexts in which a "word" is two bytes;
-hence _octa_-word for 16 bytes.
-
-
-File: as.info,  Node: Org,  Next: P2align,  Prev: Octa,  Up: Pseudo Ops
-
-7.66 `.org NEW-LC , FILL'
-=========================
-
-Advance the location counter of the current section to NEW-LC.  NEW-LC
-is either an absolute expression or an expression with the same section
-as the current subsection.  That is, you can't use `.org' to cross
-sections: if NEW-LC has the wrong section, the `.org' directive is
-ignored.  To be compatible with former assemblers, if the section of
-NEW-LC is absolute, `as' issues a warning, then pretends the section of
-NEW-LC is the same as the current subsection.
-
-   `.org' may only increase the location counter, or leave it
-unchanged; you cannot use `.org' to move the location counter backwards.
-
-   Because `as' tries to assemble programs in one pass, NEW-LC may not
-be undefined.  If you really detest this restriction we eagerly await a
-chance to share your improved assembler.
-
-   Beware that the origin is relative to the start of the section, not
-to the start of the subsection.  This is compatible with other people's
-assemblers.
-
-   When the location counter (of the current subsection) is advanced,
-the intervening bytes are filled with FILL which should be an absolute
-expression.  If the comma and FILL are omitted, FILL defaults to zero.
-
-
-File: as.info,  Node: P2align,  Next: PopSection,  Prev: Org,  Up: Pseudo Ops
-
-7.67 `.p2align[wl] ABS-EXPR, ABS-EXPR, ABS-EXPR'
-================================================
-
-Pad the location counter (in the current subsection) to a particular
-storage boundary.  The first expression (which must be absolute) is the
-number of low-order zero bits the location counter must have after
-advancement.  For example `.p2align 3' advances the location counter
-until it a multiple of 8.  If the location counter is already a
-multiple of 8, no change is needed.
-
-   The second expression (also absolute) gives the fill value to be
-stored in the padding bytes.  It (and the comma) may be omitted.  If it
-is omitted, the padding bytes are normally zero.  However, on some
-systems, if the section is marked as containing code and the fill value
-is omitted, the space is filled with no-op instructions.
-
-   The third expression is also absolute, and is also optional.  If it
-is present, it is the maximum number of bytes that should be skipped by
-this alignment directive.  If doing the alignment would require
-skipping more bytes than the specified maximum, then the alignment is
-not done at all.  You can omit the fill value (the second argument)
-entirely by simply using two commas after the required alignment; this
-can be useful if you want the alignment to be filled with no-op
-instructions when appropriate.
-
-   The `.p2alignw' and `.p2alignl' directives are variants of the
-`.p2align' directive.  The `.p2alignw' directive treats the fill
-pattern as a two byte word value.  The `.p2alignl' directives treats the
-fill pattern as a four byte longword value.  For example, `.p2alignw
-2,0x368d' will align to a multiple of 4.  If it skips two bytes, they
-will be filled in with the value 0x368d (the exact placement of the
-bytes depends upon the endianness of the processor).  If it skips 1 or
-3 bytes, the fill value is undefined.
-
-
-File: as.info,  Node: Previous,  Next: Print,  Prev: PopSection,  Up: Pseudo Ops
-
-7.68 `.previous'
-================
-
-This is one of the ELF section stack manipulation directives.  The
-others are `.section' (*note Section::), `.subsection' (*note
-SubSection::), `.pushsection' (*note PushSection::), and `.popsection'
-(*note PopSection::).
-
-   This directive swaps the current section (and subsection) with most
-recently referenced section (and subsection) prior to this one.
-Multiple `.previous' directives in a row will flip between two sections
-(and their subsections).
-
-   In terms of the section stack, this directive swaps the current
-section with the top section on the section stack.
-
-
-File: as.info,  Node: PopSection,  Next: Previous,  Prev: P2align,  Up: Pseudo Ops
-
-7.69 `.popsection'
-==================
-
-This is one of the ELF section stack manipulation directives.  The
-others are `.section' (*note Section::), `.subsection' (*note
-SubSection::), `.pushsection' (*note PushSection::), and `.previous'
-(*note Previous::).
-
-   This directive replaces the current section (and subsection) with
-the top section (and subsection) on the section stack.  This section is
-popped off the stack.
-
-
-File: as.info,  Node: Print,  Next: Protected,  Prev: Previous,  Up: Pseudo Ops
-
-7.70 `.print STRING'
-====================
-
-`as' will print STRING on the standard output during assembly.  You
-must put STRING in double quotes.
-
-
-File: as.info,  Node: Protected,  Next: Psize,  Prev: Print,  Up: Pseudo Ops
-
-7.71 `.protected NAMES'
-=======================
-
-This is one of the ELF visibility directives.  The other two are
-`.hidden' (*note Hidden::) and `.internal' (*note Internal::).
-
-   This directive overrides the named symbols default visibility (which
-is set by their binding: local, global or weak).  The directive sets
-the visibility to `protected' which means that any references to the
-symbols from within the components that defines them must be resolved
-to the definition in that component, even if a definition in another
-component would normally preempt this.
-
-
-File: as.info,  Node: Psize,  Next: Purgem,  Prev: Protected,  Up: Pseudo Ops
-
-7.72 `.psize LINES , COLUMNS'
-=============================
-
-Use this directive to declare the number of lines--and, optionally, the
-number of columns--to use for each page, when generating listings.
-
-   If you do not use `.psize', listings use a default line-count of 60.
-You may omit the comma and COLUMNS specification; the default width is
-200 columns.
-
-   `as' generates formfeeds whenever the specified number of lines is
-exceeded (or whenever you explicitly request one, using `.eject').
-
-   If you specify LINES as `0', no formfeeds are generated save those
-explicitly specified with `.eject'.
-
-
-File: as.info,  Node: Purgem,  Next: PushSection,  Prev: Psize,  Up: Pseudo Ops
-
-7.73 `.purgem NAME'
-===================
-
-Undefine the macro NAME, so that later uses of the string will not be
-expanded.  *Note Macro::.
-
-
-File: as.info,  Node: PushSection,  Next: Quad,  Prev: Purgem,  Up: Pseudo Ops
-
-7.74 `.pushsection NAME , SUBSECTION'
-=====================================
-
-This is one of the ELF section stack manipulation directives.  The
-others are `.section' (*note Section::), `.subsection' (*note
-SubSection::), `.popsection' (*note PopSection::), and `.previous'
-(*note Previous::).
-
-   This directive pushes the current section (and subsection) onto the
-top of the section stack, and then replaces the current section and
-subsection with `name' and `subsection'.
-
-
-File: as.info,  Node: Quad,  Next: Rept,  Prev: PushSection,  Up: Pseudo Ops
-
-7.75 `.quad BIGNUMS'
-====================
-
-`.quad' expects zero or more bignums, separated by commas.  For each
-bignum, it emits an 8-byte integer.  If the bignum won't fit in 8
-bytes, it prints a warning message; and just takes the lowest order 8
-bytes of the bignum.  
-
-   The term "quad" comes from contexts in which a "word" is two bytes;
-hence _quad_-word for 8 bytes.
-
-
-File: as.info,  Node: Rept,  Next: Sbttl,  Prev: Quad,  Up: Pseudo Ops
-
-7.76 `.rept COUNT'
-==================
-
-Repeat the sequence of lines between the `.rept' directive and the next
-`.endr' directive COUNT times.
-
-   For example, assembling
-
-             .rept   3
-             .long   0
-             .endr
-
-   is equivalent to assembling
-
-             .long   0
-             .long   0
-             .long   0
-
-
-File: as.info,  Node: Sbttl,  Next: Scl,  Prev: Rept,  Up: Pseudo Ops
-
-7.77 `.sbttl "SUBHEADING"'
-==========================
-
-Use SUBHEADING as the title (third line, immediately after the title
-line) when generating assembly listings.
-
-   This directive affects subsequent pages, as well as the current page
-if it appears within ten lines of the top of a page.
-
-
-File: as.info,  Node: Scl,  Next: Section,  Prev: Sbttl,  Up: Pseudo Ops
-
-7.78 `.scl CLASS'
-=================
-
-Set the storage-class value for a symbol.  This directive may only be
-used inside a `.def'/`.endef' pair.  Storage class may flag whether a
-symbol is static or external, or it may record further symbolic
-debugging information.
-
-   The `.scl' directive is primarily associated with COFF output; when
-configured to generate `b.out' output format, `as' accepts this
-directive but ignores it.
-
-
-File: as.info,  Node: Section,  Next: Set,  Prev: Scl,  Up: Pseudo Ops
-
-7.79 `.section NAME'
-====================
-
-Use the `.section' directive to assemble the following code into a
-section named NAME.
-
-   This directive is only supported for targets that actually support
-arbitrarily named sections; on `a.out' targets, for example, it is not
-accepted, even with a standard `a.out' section name.
-
-COFF Version
-------------
-
-   For COFF targets, the `.section' directive is used in one of the
-following ways:
-
-     .section NAME[, "FLAGS"]
-     .section NAME[, SUBSEGMENT]
-
-   If the optional argument is quoted, it is taken as flags to use for
-the section.  Each flag is a single character.  The following flags are
-recognized:
-`b'
-     bss section (uninitialized data)
-
-`n'
-     section is not loaded
-
-`w'
-     writable section
-
-`d'
-     data section
-
-`r'
-     read-only section
-
-`x'
-     executable section
-
-`s'
-     shared section (meaningful for PE targets)
-
-`a'
-     ignored.  (For compatibility with the ELF version)
-
-   If no flags are specified, the default flags depend upon the section
-name.  If the section name is not recognized, the default will be for
-the section to be loaded and writable.  Note the `n' and `w' flags
-remove attributes from the section, rather than adding them, so if they
-are used on their own it will be as if no flags had been specified at
-all.
-
-   If the optional argument to the `.section' directive is not quoted,
-it is taken as a subsegment number (*note Sub-Sections::).
-
-ELF Version
------------
-
-   This is one of the ELF section stack manipulation directives.  The
-others are `.subsection' (*note SubSection::), `.pushsection' (*note
-PushSection::), `.popsection' (*note PopSection::), and `.previous'
-(*note Previous::).
-
-   For ELF targets, the `.section' directive is used like this:
-
-     .section NAME [, "FLAGS"[, @TYPE[,FLAG_SPECIFIC_ARGUMENTS]]
-
-   The optional FLAGS argument is a quoted string which may contain any
-combination of the following characters:
-`a'
-     section is allocatable
-
-`w'
-     section is writable
-
-`x'
-     section is executable
-
-`M'
-     section is mergeable
-
-`S'
-     section contains zero terminated strings
-
-`G'
-     section is a member of a section group
-
-`T'
-     section is used for thread-local-storage
-
-   The optional TYPE argument may contain one of the following
-constants:
-`@progbits'
-     section contains data
-
-`@nobits'
-     section does not contain data (i.e., section only occupies space)
-
-`@note'
-     section contains data which is used by things other than the
-     program
-
-`@init_array'
-     section contains an array of pointers to init functions
-
-`@fini_array'
-     section contains an array of pointers to finish functions
-
-`@preinit_array'
-     section contains an array of pointers to pre-init functions
-
-   Many targets only support the first three section types.
-
-   Note on targets where the `@' character is the start of a comment (eg
-ARM) then another character is used instead.  For example the ARM port
-uses the `%' character.
-
-   If FLAGS contains the `M' symbol then the TYPE argument must be
-specified as well as an extra argument - ENTSIZE - like this:
-
-     .section NAME , "FLAGS"M, @TYPE, ENTSIZE
-
-   Sections with the `M' flag but not `S' flag must contain fixed size
-constants, each ENTSIZE octets long. Sections with both `M' and `S'
-must contain zero terminated strings where each character is ENTSIZE
-bytes long. The linker may remove duplicates within sections with the
-same name, same entity size and same flags.  ENTSIZE must be an
-absolute expression.
-
-   If FLAGS contains the `G' symbol then the TYPE argument must be
-present along with an additional field like this:
-
-     .section NAME , "FLAGS"G, @TYPE, GROUPNAME[, LINKAGE]
-
-   The GROUPNAME field specifies the name of the section group to which
-this particular section belongs.  The optional linkage field can
-contain:
-`comdat'
-     indicates that only one copy of this section should be retained
-
-`.gnu.linkonce'
-     an alias for comdat
-
-   Note - if both the M and G flags are present then the fields for the
-Merge flag should come first, like this:
-
-     .section NAME , "FLAGS"MG, @TYPE, ENTSIZE, GROUPNAME[, LINKAGE]
-
-   If no flags are specified, the default flags depend upon the section
-name.  If the section name is not recognized, the default will be for
-the section to have none of the above flags: it will not be allocated
-in memory, nor writable, nor executable.  The section will contain data.
-
-   For ELF targets, the assembler supports another type of `.section'
-directive for compatibility with the Solaris assembler:
-
-     .section "NAME"[, FLAGS...]
-
-   Note that the section name is quoted.  There may be a sequence of
-comma separated flags:
-`#alloc'
-     section is allocatable
-
-`#write'
-     section is writable
-
-`#execinstr'
-     section is executable
-
-`#tls'
-     section is used for thread local storage
-
-   This directive replaces the current section and subsection.  See the
-contents of the gas testsuite directory `gas/testsuite/gas/elf' for
-some examples of how this directive and the other section stack
-directives work.
-
-
-File: as.info,  Node: Set,  Next: Short,  Prev: Section,  Up: Pseudo Ops
-
-7.80 `.set SYMBOL, EXPRESSION'
-==============================
-
-Set the value of SYMBOL to EXPRESSION.  This changes SYMBOL's value and
-type to conform to EXPRESSION.  If SYMBOL was flagged as external, it
-remains flagged (*note Symbol Attributes::).
-
-   You may `.set' a symbol many times in the same assembly.
-
-   If you `.set' a global symbol, the value stored in the object file
-is the last value stored into it.
-
-   The syntax for `set' on the HPPA is `SYMBOL .set EXPRESSION'.
-
-
-File: as.info,  Node: Short,  Next: Single,  Prev: Set,  Up: Pseudo Ops
-
-7.81 `.short EXPRESSIONS'
-=========================
-
-`.short' is normally the same as `.word'.  *Note `.word': Word.
-
-   In some configurations, however, `.short' and `.word' generate
-numbers of different lengths; *note Machine Dependencies::.
-
-
-File: as.info,  Node: Single,  Next: Size,  Prev: Short,  Up: Pseudo Ops
-
-7.82 `.single FLONUMS'
-======================
-
-This directive assembles zero or more flonums, separated by commas.  It
-has the same effect as `.float'.  The exact kind of floating point
-numbers emitted depends on how `as' is configured.  *Note Machine
-Dependencies::.
-
-
-File: as.info,  Node: Size,  Next: Skip,  Prev: Single,  Up: Pseudo Ops
-
-7.83 `.size'
-============
-
-This directive is used to set the size associated with a symbol.
-
-COFF Version
-------------
-
-   For COFF targets, the `.size' directive is only permitted inside
-`.def'/`.endef' pairs.  It is used like this:
-
-     .size EXPRESSION
-
-   `.size' is only meaningful when generating COFF format output; when
-`as' is generating `b.out', it accepts this directive but ignores it.
-
-ELF Version
------------
-
-   For ELF targets, the `.size' directive is used like this:
-
-     .size NAME , EXPRESSION
-
-   This directive sets the size associated with a symbol NAME.  The
-size in bytes is computed from EXPRESSION which can make use of label
-arithmetic.  This directive is typically used to set the size of
-function symbols.
-
-
-File: as.info,  Node: Sleb128,  Next: Space,  Prev: Skip,  Up: Pseudo Ops
-
-7.84 `.sleb128 EXPRESSIONS'
-===========================
-
-SLEB128 stands for "signed little endian base 128."  This is a compact,
-variable length representation of numbers used by the DWARF symbolic
-debugging format.  *Note `.uleb128': Uleb128.
-
-
-File: as.info,  Node: Skip,  Next: Sleb128,  Prev: Size,  Up: Pseudo Ops
-
-7.85 `.skip SIZE , FILL'
-========================
-
-This directive emits SIZE bytes, each of value FILL.  Both SIZE and
-FILL are absolute expressions.  If the comma and FILL are omitted, FILL
-is assumed to be zero.  This is the same as `.space'.
-
-
-File: as.info,  Node: Space,  Next: Stab,  Prev: Sleb128,  Up: Pseudo Ops
-
-7.86 `.space SIZE , FILL'
-=========================
-
-This directive emits SIZE bytes, each of value FILL.  Both SIZE and
-FILL are absolute expressions.  If the comma and FILL are omitted, FILL
-is assumed to be zero.  This is the same as `.skip'.
-
-     _Warning:_ `.space' has a completely different meaning for HPPA
-     targets; use `.block' as a substitute.  See `HP9000 Series 800
-     Assembly Language Reference Manual' (HP 92432-90001) for the
-     meaning of the `.space' directive.  *Note HPPA Assembler
-     Directives: HPPA Directives, for a summary.
-
-   On the AMD 29K, this directive is ignored; it is accepted for
-compatibility with other AMD 29K assemblers.
-
-     _Warning:_ In most versions of the GNU assembler, the directive
-     `.space' has the effect of `.block'  *Note Machine Dependencies::.
-
-
-File: as.info,  Node: Stab,  Next: String,  Prev: Space,  Up: Pseudo Ops
-
-7.87 `.stabd, .stabn, .stabs'
-=============================
-
-There are three directives that begin `.stab'.  All emit symbols (*note
-Symbols::), for use by symbolic debuggers.  The symbols are not entered
-in the `as' hash table: they cannot be referenced elsewhere in the
-source file.  Up to five fields are required:
-
-STRING
-     This is the symbol's name.  It may contain any character except
-     `\000', so is more general than ordinary symbol names.  Some
-     debuggers used to code arbitrarily complex structures into symbol
-     names using this field.
-
-TYPE
-     An absolute expression.  The symbol's type is set to the low 8
-     bits of this expression.  Any bit pattern is permitted, but `ld'
-     and debuggers choke on silly bit patterns.
-
-OTHER
-     An absolute expression.  The symbol's "other" attribute is set to
-     the low 8 bits of this expression.
-
-DESC
-     An absolute expression.  The symbol's descriptor is set to the low
-     16 bits of this expression.
-
-VALUE
-     An absolute expression which becomes the symbol's value.
-
-   If a warning is detected while reading a `.stabd', `.stabn', or
-`.stabs' statement, the symbol has probably already been created; you
-get a half-formed symbol in your object file.  This is compatible with
-earlier assemblers!
-
-`.stabd TYPE , OTHER , DESC'
-     The "name" of the symbol generated is not even an empty string.
-     It is a null pointer, for compatibility.  Older assemblers used a
-     null pointer so they didn't waste space in object files with empty
-     strings.
-
-     The symbol's value is set to the location counter, relocatably.
-     When your program is linked, the value of this symbol is the
-     address of the location counter when the `.stabd' was assembled.
-
-`.stabn TYPE , OTHER , DESC , VALUE'
-     The name of the symbol is set to the empty string `""'.
-
-`.stabs STRING ,  TYPE , OTHER , DESC , VALUE'
-     All five fields are specified.
-
-
-File: as.info,  Node: String,  Next: Struct,  Prev: Stab,  Up: Pseudo Ops
-
-7.88 `.string' "STR"
-====================
-
-Copy the characters in STR to the object file.  You may specify more
-than one string to copy, separated by commas.  Unless otherwise
-specified for a particular machine, the assembler marks the end of each
-string with a 0 byte.  You can use any of the escape sequences
-described in *Note Strings: Strings.
-
-
-File: as.info,  Node: Struct,  Next: SubSection,  Prev: String,  Up: Pseudo Ops
-
-7.89 `.struct EXPRESSION'
-=========================
-
-Switch to the absolute section, and set the section offset to
-EXPRESSION, which must be an absolute expression.  You might use this
-as follows:
-             .struct 0
-     field1:
-             .struct field1 + 4
-     field2:
-             .struct field2 + 4
-     field3:
-   This would define the symbol `field1' to have the value 0, the symbol
-`field2' to have the value 4, and the symbol `field3' to have the value
-8.  Assembly would be left in the absolute section, and you would need
-to use a `.section' directive of some sort to change to some other
-section before further assembly.
-
-
-File: as.info,  Node: SubSection,  Next: Symver,  Prev: Struct,  Up: Pseudo Ops
-
-7.90 `.subsection NAME'
-=======================
-
-This is one of the ELF section stack manipulation directives.  The
-others are `.section' (*note Section::), `.pushsection' (*note
-PushSection::), `.popsection' (*note PopSection::), and `.previous'
-(*note Previous::).
-
-   This directive replaces the current subsection with `name'.  The
-current section is not changed.  The replaced subsection is put onto
-the section stack in place of the then current top of stack subsection.
-
-
-File: as.info,  Node: Symver,  Next: Tag,  Prev: SubSection,  Up: Pseudo Ops
-
-7.91 `.symver'
-==============
-
-Use the `.symver' directive to bind symbols to specific version nodes
-within a source file.  This is only supported on ELF platforms, and is
-typically used when assembling files to be linked into a shared library.
-There are cases where it may make sense to use this in objects to be
-bound into an application itself so as to override a versioned symbol
-from a shared library.
-
-   For ELF targets, the `.symver' directive can be used like this:
-     .symver NAME, NAME2@NODENAME
-   If the symbol NAME is defined within the file being assembled, the
-`.symver' directive effectively creates a symbol alias with the name
-NAME2@NODENAME, and in fact the main reason that we just don't try and
-create a regular alias is that the @ character isn't permitted in
-symbol names.  The NAME2 part of the name is the actual name of the
-symbol by which it will be externally referenced.  The name NAME itself
-is merely a name of convenience that is used so that it is possible to
-have definitions for multiple versions of a function within a single
-source file, and so that the compiler can unambiguously know which
-version of a function is being mentioned.  The NODENAME portion of the
-alias should be the name of a node specified in the version script
-supplied to the linker when building a shared library.  If you are
-attempting to override a versioned symbol from a shared library, then
-NODENAME should correspond to the nodename of the symbol you are trying
-to override.
-
-   If the symbol NAME is not defined within the file being assembled,
-all references to NAME will be changed to NAME2@NODENAME.  If no
-reference to NAME is made, NAME2@NODENAME will be removed from the
-symbol table.
-
-   Another usage of the `.symver' directive is:
-     .symver NAME, NAME2@@NODENAME
-   In this case, the symbol NAME must exist and be defined within the
-file being assembled. It is similar to NAME2@NODENAME. The difference
-is NAME2@@NODENAME will also be used to resolve references to NAME2 by
-the linker.
-
-   The third usage of the `.symver' directive is:
-     .symver NAME, NAME2@@@NODENAME
-   When NAME is not defined within the file being assembled, it is
-treated as NAME2@NODENAME. When NAME is defined within the file being
-assembled, the symbol name, NAME, will be changed to NAME2@@NODENAME.
-
-
-File: as.info,  Node: Tag,  Next: Text,  Prev: Symver,  Up: Pseudo Ops
-
-7.92 `.tag STRUCTNAME'
-======================
-
-This directive is generated by compilers to include auxiliary debugging
-information in the symbol table.  It is only permitted inside
-`.def'/`.endef' pairs.  Tags are used to link structure definitions in
-the symbol table with instances of those structures.
-
-   `.tag' is only used when generating COFF format output; when `as' is
-generating `b.out', it accepts this directive but ignores it.
-
-
-File: as.info,  Node: Text,  Next: Title,  Prev: Tag,  Up: Pseudo Ops
-
-7.93 `.text SUBSECTION'
-=======================
-
-Tells `as' to assemble the following statements onto the end of the
-text subsection numbered SUBSECTION, which is an absolute expression.
-If SUBSECTION is omitted, subsection number zero is used.
-
-
-File: as.info,  Node: Title,  Next: Type,  Prev: Text,  Up: Pseudo Ops
-
-7.94 `.title "HEADING"'
-=======================
-
-Use HEADING as the title (second line, immediately after the source
-file name and pagenumber) when generating assembly listings.
-
-   This directive affects subsequent pages, as well as the current page
-if it appears within ten lines of the top of a page.
-
-
-File: as.info,  Node: Type,  Next: Uleb128,  Prev: Title,  Up: Pseudo Ops
-
-7.95 `.type'
-============
-
-This directive is used to set the type of a symbol.
-
-COFF Version
-------------
-
-   For COFF targets, this directive is permitted only within
-`.def'/`.endef' pairs.  It is used like this:
-
-     .type INT
-
-   This records the integer INT as the type attribute of a symbol table
-entry.
-
-   `.type' is associated only with COFF format output; when `as' is
-configured for `b.out' output, it accepts this directive but ignores it.
-
-ELF Version
------------
-
-   For ELF targets, the `.type' directive is used like this:
-
-     .type NAME , TYPE DESCRIPTION
-
-   This sets the type of symbol NAME to be either a function symbol or
-an object symbol.  There are five different syntaxes supported for the
-TYPE DESCRIPTION field, in order to provide compatibility with various
-other assemblers.  The syntaxes supported are:
-
-       .type <name>,#function
-       .type <name>,#object
-
-       .type <name>,@function
-       .type <name>,@object
-
-       .type <name>,%function
-       .type <name>,%object
-
-       .type <name>,"function"
-       .type <name>,"object"
-
-       .type <name> STT_FUNCTION
-       .type <name> STT_OBJECT
-
-
-File: as.info,  Node: Uleb128,  Next: Val,  Prev: Type,  Up: Pseudo Ops
-
-7.96 `.uleb128 EXPRESSIONS'
-===========================
-
-ULEB128 stands for "unsigned little endian base 128."  This is a
-compact, variable length representation of numbers used by the DWARF
-symbolic debugging format.  *Note `.sleb128': Sleb128.
-
-
-File: as.info,  Node: Val,  Next: Version,  Prev: Uleb128,  Up: Pseudo Ops
-
-7.97 `.val ADDR'
-================
-
-This directive, permitted only within `.def'/`.endef' pairs, records
-the address ADDR as the value attribute of a symbol table entry.
-
-   `.val' is used only for COFF output; when `as' is configured for
-`b.out', it accepts this directive but ignores it.
-
-
-File: as.info,  Node: Version,  Next: VTableEntry,  Prev: Val,  Up: Pseudo Ops
-
-7.98 `.version "STRING"'
-========================
-
-This directive creates a `.note' section and places into it an ELF
-formatted note of type NT_VERSION.  The note's name is set to `string'.
-
-
-File: as.info,  Node: VTableEntry,  Next: VTableInherit,  Prev: Version,  Up: Pseudo Ops
-
-7.99 `.vtable_entry TABLE, OFFSET'
-==================================
-
-This directive finds or creates a symbol `table' and creates a
-`VTABLE_ENTRY' relocation for it with an addend of `offset'.
-
-
-File: as.info,  Node: VTableInherit,  Next: Warning,  Prev: VTableEntry,  Up: Pseudo Ops
-
-7.100 `.vtable_inherit CHILD, PARENT'
-=====================================
-
-This directive finds the symbol `child' and finds or creates the symbol
-`parent' and then creates a `VTABLE_INHERIT' relocation for the parent
-whose addend is the value of the child symbol.  As a special case the
-parent name of `0' is treated as refering the `*ABS*' section.
-
-
-File: as.info,  Node: Warning,  Next: Weak,  Prev: VTableInherit,  Up: Pseudo Ops
-
-7.101 `.warning "STRING"'
-=========================
-
-Similar to the directive `.error' (*note `.error "STRING"': Error.),
-but just emits a warning.
-
-
-File: as.info,  Node: Weak,  Next: Word,  Prev: Warning,  Up: Pseudo Ops
-
-7.102 `.weak NAMES'
-===================
-
-This directive sets the weak attribute on the comma separated list of
-symbol `names'.  If the symbols do not already exist, they will be
-created.
-
-   On COFF targets other than PE, weak symbols are a GNU extension.
-This directive sets the weak attribute on the comma separated list of
-symbol `names'.  If the symbols do not already exist, they will be
-created.
-
-   On the PE target, weak symbols are supported natively as weak
-aliases.  When a weak symbol is created that is not an alias, GAS
-creates an alternate symbol to hold the default value.
-
-
-File: as.info,  Node: Word,  Next: Deprecated,  Prev: Weak,  Up: Pseudo Ops
-
-7.103 `.word EXPRESSIONS'
-=========================
-
-This directive expects zero or more EXPRESSIONS, of any section,
-separated by commas.
-
-   The size of the number emitted, and its byte order, depend on what
-target computer the assembly is for.
-
-     _Warning: Special Treatment to support Compilers_
-
-   Machines with a 32-bit address space, but that do less than 32-bit
-addressing, require the following special treatment.  If the machine of
-interest to you does 32-bit addressing (or doesn't require it; *note
-Machine Dependencies::), you can ignore this issue.
-
-   In order to assemble compiler output into something that works, `as'
-occasionally does strange things to `.word' directives.  Directives of
-the form `.word sym1-sym2' are often emitted by compilers as part of
-jump tables.  Therefore, when `as' assembles a directive of the form
-`.word sym1-sym2', and the difference between `sym1' and `sym2' does
-not fit in 16 bits, `as' creates a "secondary jump table", immediately
-before the next label.  This secondary jump table is preceded by a
-short-jump to the first byte after the secondary table.  This
-short-jump prevents the flow of control from accidentally falling into
-the new table.  Inside the table is a long-jump to `sym2'.  The
-original `.word' contains `sym1' minus the address of the long-jump to
-`sym2'.
-
-   If there were several occurrences of `.word sym1-sym2' before the
-secondary jump table, all of them are adjusted.  If there was a `.word
-sym3-sym4', that also did not fit in sixteen bits, a long-jump to
-`sym4' is included in the secondary jump table, and the `.word'
-directives are adjusted to contain `sym3' minus the address of the
-long-jump to `sym4'; and so on, for as many entries in the original
-jump table as necessary.
-
-
-File: as.info,  Node: Deprecated,  Prev: Word,  Up: Pseudo Ops
-
-7.104 Deprecated Directives
-===========================
-
-One day these directives won't work.  They are included for
-compatibility with older assemblers.
-.abort
-
-.line
-
-
-File: as.info,  Node: Machine Dependencies,  Next: Reporting Bugs,  Prev: Pseudo Ops,  Up: Top
-
-8 Machine Dependent Features
-****************************
-
-The machine instruction sets are (almost by definition) different on
-each machine where `as' runs.  Floating point representations vary as
-well, and `as' often supports a few additional directives or
-command-line options for compatibility with other assemblers on a
-particular platform.  Finally, some versions of `as' support special
-pseudo-instructions for branch optimization.
-
-   This chapter discusses most of these differences, though it does not
-include details on any machine's instruction set.  For details on that
-subject, see the hardware manufacturer's manual.
-
-* Menu:
-
-
-* AMD29K-Dependent::            AMD 29K Dependent Features
-
-* Alpha-Dependent::		Alpha Dependent Features
-
-* ARC-Dependent::               ARC Dependent Features
-
-* ARM-Dependent::               ARM Dependent Features
-
-* CRIS-Dependent::              CRIS Dependent Features
-
-* D10V-Dependent::              D10V Dependent Features
-
-* D30V-Dependent::              D30V Dependent Features
-
-* H8/300-Dependent::            Renesas H8/300 Dependent Features
-
-* H8/500-Dependent::            Renesas H8/500 Dependent Features
-
-* HPPA-Dependent::              HPPA Dependent Features
-
-* ESA/390-Dependent::           IBM ESA/390 Dependent Features
-
-* i386-Dependent::              Intel 80386 and AMD x86-64 Dependent Features
-
-* i860-Dependent::              Intel 80860 Dependent Features
-
-* i960-Dependent::              Intel 80960 Dependent Features
-
-* IA-64-Dependent::             Intel IA-64 Dependent Features
-
-* IP2K-Dependent::              IP2K Dependent Features
-
-* M32R-Dependent::              M32R Dependent Features
-
-* M68K-Dependent::              M680x0 Dependent Features
-
-* M68HC11-Dependent::           M68HC11 and 68HC12 Dependent Features
-
-* M88K-Dependent::		M880x0 Dependent Features
-
-* MIPS-Dependent::              MIPS Dependent Features
-
-* MMIX-Dependent::              MMIX Dependent Features
-
-* MSP430-Dependent::		MSP430 Dependent Features
-
-* SH-Dependent::                Renesas / SuperH SH Dependent Features
-* SH64-Dependent::              SuperH SH64 Dependent Features
-
-* PDP-11-Dependent::            PDP-11 Dependent Features
-
-* PJ-Dependent::                picoJava Dependent Features
-
-* PPC-Dependent::               PowerPC Dependent Features
-
-* Sparc-Dependent::             SPARC Dependent Features
-
-* TIC54X-Dependent::            TI TMS320C54x Dependent Features
-
-* V850-Dependent::              V850 Dependent Features
-
-* Xtensa-Dependent::            Xtensa Dependent Features
-
-* Z8000-Dependent::             Z8000 Dependent Features
-
-* Vax-Dependent::               VAX Dependent Features
-
-
-File: as.info,  Node: AMD29K-Dependent,  Next: Alpha-Dependent,  Up: Machine Dependencies
-
-8.1 AMD 29K Dependent Features
-==============================
-
-* Menu:
-
-* AMD29K Options::              Options
-* AMD29K Syntax::               Syntax
-* AMD29K Floating Point::       Floating Point
-* AMD29K Directives::           AMD 29K Machine Directives
-* AMD29K Opcodes::              Opcodes
-
-
-File: as.info,  Node: AMD29K Options,  Next: AMD29K Syntax,  Up: AMD29K-Dependent
-
-8.1.1 Options
--------------
-
-`as' has no additional command-line options for the AMD 29K family.
-
-
-File: as.info,  Node: AMD29K Syntax,  Next: AMD29K Floating Point,  Prev: AMD29K Options,  Up: AMD29K-Dependent
-
-8.1.2 Syntax
-------------
-
-* Menu:
-
-* AMD29K-Macros::		Macros
-* AMD29K-Chars::                Special Characters
-* AMD29K-Regs::                 Register Names
-
-
-File: as.info,  Node: AMD29K-Macros,  Next: AMD29K-Chars,  Up: AMD29K Syntax
-
-8.1.2.1 Macros
-..............
-
-The macro syntax used on the AMD 29K is like that described in the AMD
-29K Family Macro Assembler Specification.  Normal `as' macros should
-still work.
-
-
-File: as.info,  Node: AMD29K-Chars,  Next: AMD29K-Regs,  Prev: AMD29K-Macros,  Up: AMD29K Syntax
-
-8.1.2.2 Special Characters
-..........................
-
-`;' is the line comment character.
-
-   The character `?' is permitted in identifiers (but may not begin an
-identifier).
-
-
-File: as.info,  Node: AMD29K-Regs,  Prev: AMD29K-Chars,  Up: AMD29K Syntax
-
-8.1.2.3 Register Names
-......................
-
-General-purpose registers are represented by predefined symbols of the
-form `GRNNN' (for global registers) or `LRNNN' (for local registers),
-where NNN represents a number between `0' and `127', written with no
-leading zeros.  The leading letters may be in either upper or lower
-case; for example, `gr13' and `LR7' are both valid register names.
-
-   You may also refer to general-purpose registers by specifying the
-register number as the result of an expression (prefixed with `%%' to
-flag the expression as a register number):
-     %%EXPRESSION
-   --where EXPRESSION must be an absolute expression evaluating to a
-number between `0' and `255'.  The range [0, 127] refers to global
-registers, and the range [128, 255] to local registers.
-
-   In addition, `as' understands the following protected
-special-purpose register names for the AMD 29K family:
-
-       vab    chd    pc0
-       ops    chc    pc1
-       cps    rbp    pc2
-       cfg    tmc    mmu
-       cha    tmr    lru
-
-   These unprotected special-purpose register names are also recognized:
-       ipc    alu    fpe
-       ipa    bp     inte
-       ipb    fc     fps
-       q      cr     exop
-
-
-File: as.info,  Node: AMD29K Floating Point,  Next: AMD29K Directives,  Prev: AMD29K Syntax,  Up: AMD29K-Dependent
-
-8.1.3 Floating Point
---------------------
-
-The AMD 29K family uses IEEE floating-point numbers.
-
-
-File: as.info,  Node: AMD29K Directives,  Next: AMD29K Opcodes,  Prev: AMD29K Floating Point,  Up: AMD29K-Dependent
-
-8.1.4 AMD 29K Machine Directives
---------------------------------
-
-`.block SIZE , FILL'
-     This directive emits SIZE bytes, each of value FILL.  Both SIZE
-     and FILL are absolute expressions.  If the comma and FILL are
-     omitted, FILL is assumed to be zero.
-
-     In other versions of the GNU assembler, this directive is called
-     `.space'.
-
-`.cputype'
-     This directive is ignored; it is accepted for compatibility with
-     other AMD 29K assemblers.
-
-`.file'
-     This directive is ignored; it is accepted for compatibility with
-     other AMD 29K assemblers.
-
-          _Warning:_ in other versions of the GNU assembler, `.file' is
-          used for the directive called `.app-file' in the AMD 29K
-          support.
-
-`.line'
-     This directive is ignored; it is accepted for compatibility with
-     other AMD 29K assemblers.
-
-`.sect'
-     This directive is ignored; it is accepted for compatibility with
-     other AMD 29K assemblers.
-
-`.use SECTION NAME'
-     Establishes the section and subsection for the following code;
-     SECTION NAME may be one of `.text', `.data', `.data1', or `.lit'.
-     With one of the first three SECTION NAME options, `.use' is
-     equivalent to the machine directive SECTION NAME; the remaining
-     case, `.use .lit', is the same as `.data 200'.
-
-
-File: as.info,  Node: AMD29K Opcodes,  Prev: AMD29K Directives,  Up: AMD29K-Dependent
-
-8.1.5 Opcodes
--------------
-
-`as' implements all the standard AMD 29K opcodes.  No additional
-pseudo-instructions are needed on this family.
-
-   For information on the 29K machine instruction set, see `Am29000
-User's Manual', Advanced Micro Devices, Inc.
-
-
-File: as.info,  Node: Alpha-Dependent,  Next: ARC-Dependent,  Prev: AMD29K-Dependent,  Up: Machine Dependencies
-
-8.2 Alpha Dependent Features
-============================
-
-* Menu:
-
-* Alpha Notes::                Notes
-* Alpha Options::              Options
-* Alpha Syntax::               Syntax
-* Alpha Floating Point::       Floating Point
-* Alpha Directives::           Alpha Machine Directives
-* Alpha Opcodes::              Opcodes
-
-
-File: as.info,  Node: Alpha Notes,  Next: Alpha Options,  Up: Alpha-Dependent
-
-8.2.1 Notes
------------
-
-The documentation here is primarily for the ELF object format.  `as'
-also supports the ECOFF and EVAX formats, but features specific to
-these formats are not yet documented.
-
-
-File: as.info,  Node: Alpha Options,  Next: Alpha Syntax,  Prev: Alpha Notes,  Up: Alpha-Dependent
-
-8.2.2 Options
--------------
-
-`-mCPU'
-     This option specifies the target processor.  If an attempt is made
-     to assemble an instruction which will not execute on the target
-     processor, the assembler may either expand the instruction as a
-     macro or issue an error message.  This option is equivalent to the
-     `.arch' directive.
-
-     The following processor names are recognized: `21064', `21064a',
-     `21066', `21068', `21164', `21164a', `21164pc', `21264', `21264a',
-     `21264b', `ev4', `ev5', `lca45', `ev5', `ev56', `pca56', `ev6',
-     `ev67', `ev68'.  The special name `all' may be used to allow the
-     assembler to accept instructions valid for any Alpha processor.
-
-     In order to support existing practice in OSF/1 with respect to
-     `.arch', and existing practice within `MILO' (the Linux ARC
-     bootloader), the numbered processor names (e.g. 21064) enable the
-     processor-specific PALcode instructions, while the
-     "electro-vlasic" names (e.g. `ev4') do not.
-
-`-mdebug'
-`-no-mdebug'
-     Enables or disables the generation of `.mdebug' encapsulation for
-     stabs directives and procedure descriptors.  The default is to
-     automatically enable `.mdebug' when the first stabs directive is
-     seen.
-
-`-relax'
-     This option forces all relocations to be put into the object file,
-     instead of saving space and resolving some relocations at assembly
-     time.  Note that this option does not propagate all symbol
-     arithmetic into the object file, because not all symbol arithmetic
-     can be represented.  However, the option can still be useful in
-     specific applications.
-
-`-g'
-     This option is used when the compiler generates debug information.
-     When `gcc' is using `mips-tfile' to generate debug information
-     for ECOFF, local labels must be passed through to the object file.
-     Otherwise this option has no effect.
-
-`-GSIZE'
-     A local common symbol larger than SIZE is placed in `.bss', while
-     smaller symbols are placed in `.sbss'.
-
-`-F'
-`-32addr'
-     These options are ignored for backward compatibility.
-
-
-File: as.info,  Node: Alpha Syntax,  Next: Alpha Floating Point,  Prev: Alpha Options,  Up: Alpha-Dependent
-
-8.2.3 Syntax
-------------
-
-The assembler syntax closely follow the Alpha Reference Manual;
-assembler directives and general syntax closely follow the OSF/1 and
-OpenVMS syntax, with a few differences for ELF.
-
-* Menu:
-
-* Alpha-Chars::                Special Characters
-* Alpha-Regs::                 Register Names
-* Alpha-Relocs::               Relocations
-
-
-File: as.info,  Node: Alpha-Chars,  Next: Alpha-Regs,  Up: Alpha Syntax
-
-8.2.3.1 Special Characters
-..........................
-
-`#' is the line comment character.
-
-   `;' can be used instead of a newline to separate statements.
-
-
-File: as.info,  Node: Alpha-Regs,  Next: Alpha-Relocs,  Prev: Alpha-Chars,  Up: Alpha Syntax
-
-8.2.3.2 Register Names
-......................
-
-The 32 integer registers are referred to as `$N' or `$rN'.  In
-addition, registers 15, 28, 29, and 30 may be referred to by the
-symbols `$fp', `$at', `$gp', and `$sp' respectively.
-
-   The 32 floating-point registers are referred to as `$fN'.
-
-
-File: as.info,  Node: Alpha-Relocs,  Prev: Alpha-Regs,  Up: Alpha Syntax
-
-8.2.3.3 Relocations
-...................
-
-Some of these relocations are available for ECOFF, but mostly only for
-ELF.  They are modeled after the relocation format introduced in
-Digital Unix 4.0, but there are additions.
-
-   The format is `!TAG' or `!TAG!NUMBER' where TAG is the name of the
-relocation.  In some cases NUMBER is used to relate specific
-instructions.
-
-   The relocation is placed at the end of the instruction like so:
-
-     ldah  $0,a($29)    !gprelhigh
-     lda   $0,a($0)     !gprellow
-     ldq   $1,b($29)    !literal!100
-     ldl   $2,0($1)     !lituse_base!100
-
-`!literal'
-`!literal!N'
-     Used with an `ldq' instruction to load the address of a symbol
-     from the GOT.
-
-     A sequence number N is optional, and if present is used to pair
-     `lituse' relocations with this `literal' relocation.  The `lituse'
-     relocations are used by the linker to optimize the code based on
-     the final location of the symbol.
-
-     Note that these optimizations are dependent on the data flow of the
-     program.  Therefore, if _any_ `lituse' is paired with a `literal'
-     relocation, then _all_ uses of the register set by the `literal'
-     instruction must also be marked with `lituse' relocations.  This
-     is because the original `literal' instruction may be deleted or
-     transformed into another instruction.
-
-     Also note that there may be a one-to-many relationship between
-     `literal' and `lituse', but not a many-to-one.  That is, if there
-     are two code paths that load up the same address and feed the
-     value to a single use, then the use may not use a `lituse'
-     relocation.
-
-`!lituse_base!N'
-     Used with any memory format instruction (e.g. `ldl') to indicate
-     that the literal is used for an address load.  The offset field of
-     the instruction must be zero.  During relaxation, the code may be
-     altered to use a gp-relative load.
-
-`!lituse_jsr!N'
-     Used with a register branch format instruction (e.g. `jsr') to
-     indicate that the literal is used for a call.  During relaxation,
-     the code may be altered to use a direct branch (e.g. `bsr').
-
-`!lituse_bytoff!N'
-     Used with a byte mask instruction (e.g. `extbl') to indicate that
-     only the low 3 bits of the address are relevant.  During
-     relaxation, the code may be altered to use an immediate instead of
-     a register shift.
-
-`!lituse_addr!N'
-     Used with any other instruction to indicate that the original
-     address is in fact used, and the original `ldq' instruction may
-     not be altered or deleted.  This is useful in conjunction with
-     `lituse_jsr' to test whether a weak symbol is defined.
-
-          ldq  $27,foo($29)   !literal!1
-          beq  $27,is_undef   !lituse_addr!1
-          jsr  $26,($27),foo  !lituse_jsr!1
-
-`!lituse_tlsgd!N'
-     Used with a register branch format instruction to indicate that the
-     literal is the call to `__tls_get_addr' used to compute the
-     address of the thread-local storage variable whose descriptor was
-     loaded with `!tlsgd!N'.
-
-`!lituse_tlsldm!N'
-     Used with a register branch format instruction to indicate that the
-     literal is the call to `__tls_get_addr' used to compute the
-     address of the base of the thread-local storage block for the
-     current module.  The descriptor for the module must have been
-     loaded with `!tlsldm!N'.
-
-`!gpdisp!N'
-     Used with `ldah' and `lda' to load the GP from the current
-     address, a-la the `ldgp' macro.  The source register for the
-     `ldah' instruction must contain the address of the `ldah'
-     instruction.  There must be exactly one `lda' instruction paired
-     with the `ldah' instruction, though it may appear anywhere in the
-     instruction stream.  The immediate operands must be zero.
-
-          bsr  $26,foo
-          ldah $29,0($26)     !gpdisp!1
-          lda  $29,0($29)     !gpdisp!1
-
-`!gprelhigh'
-     Used with an `ldah' instruction to add the high 16 bits of a
-     32-bit displacement from the GP.
-
-`!gprellow'
-     Used with any memory format instruction to add the low 16 bits of a
-     32-bit displacement from the GP.
-
-`!gprel'
-     Used with any memory format instruction to add a 16-bit
-     displacement from the GP.
-
-`!samegp'
-     Used with any branch format instruction to skip the GP load at the
-     target address.  The referenced symbol must have the same GP as the
-     source object file, and it must be declared to either not use `$27'
-     or perform a standard GP load in the first two instructions via the
-     `.prologue' directive.
-
-`!tlsgd'
-`!tlsgd!N'
-     Used with an `lda' instruction to load the address of a TLS
-     descriptor for a symbol in the GOT.
-
-     The sequence number N is optional, and if present it used to pair
-     the descriptor load with both the `literal' loading the address of
-     the `__tls_get_addr' function and the `lituse_tlsgd' marking the
-     call to that function.
-
-     For proper relaxation, both the `tlsgd', `literal' and `lituse'
-     relocations must be in the same extended basic block.  That is,
-     the relocation with the lowest address must be executed first at
-     runtime.
-
-`!tlsldm'
-`!tlsldm!N'
-     Used with an `lda' instruction to load the address of a TLS
-     descriptor for the current module in the GOT.
-
-     Similar in other respects to `tlsgd'.
-
-`!gotdtprel'
-     Used with an `ldq' instruction to load the offset of the TLS
-     symbol within its module's thread-local storage block.  Also known
-     as the dynamic thread pointer offset or dtp-relative offset.
-
-`!dtprelhi'
-`!dtprello'
-`!dtprel'
-     Like `gprel' relocations except they compute dtp-relative offsets.
-
-`!gottprel'
-     Used with an `ldq' instruction to load the offset of the TLS
-     symbol from the thread pointer.  Also known as the tp-relative
-     offset.
-
-`!tprelhi'
-`!tprello'
-`!tprel'
-     Like `gprel' relocations except they compute tp-relative offsets.
-
-
-File: as.info,  Node: Alpha Floating Point,  Next: Alpha Directives,  Prev: Alpha Syntax,  Up: Alpha-Dependent
-
-8.2.4 Floating Point
---------------------
-
-The Alpha family uses both IEEE and VAX floating-point numbers.
-
-
-File: as.info,  Node: Alpha Directives,  Next: Alpha Opcodes,  Prev: Alpha Floating Point,  Up: Alpha-Dependent
-
-8.2.5 Alpha Assembler Directives
---------------------------------
-
-`as' for the Alpha supports many additional directives for
-compatibility with the native assembler.  This section describes them
-only briefly.
-
-   These are the additional directives in `as' for the Alpha:
-
-`.arch CPU'
-     Specifies the target processor.  This is equivalent to the `-mCPU'
-     command-line option.  *Note Options: Alpha Options, for a list of
-     values for CPU.
-
-`.ent FUNCTION[, N]'
-     Mark the beginning of FUNCTION.  An optional number may follow for
-     compatibility with the OSF/1 assembler, but is ignored.  When
-     generating `.mdebug' information, this will create a procedure
-     descriptor for the function.  In ELF, it will mark the symbol as a
-     function a-la the generic `.type' directive.
-
-`.end FUNCTION'
-     Mark the end of FUNCTION.  In ELF, it will set the size of the
-     symbol a-la the generic `.size' directive.
-
-`.mask MASK, OFFSET'
-     Indicate which of the integer registers are saved in the current
-     function's stack frame.  MASK is interpreted a bit mask in which
-     bit N set indicates that register N is saved.  The registers are
-     saved in a block located OFFSET bytes from the "canonical frame
-     address" (CFA) which is the value of the stack pointer on entry to
-     the function.  The registers are saved sequentially, except that
-     the return address register (normally `$26') is saved first.
-
-     This and the other directives that describe the stack frame are
-     currently only used when generating `.mdebug' information.  They
-     may in the future be used to generate DWARF2 `.debug_frame' unwind
-     information for hand written assembly.
-
-`.fmask MASK, OFFSET'
-     Indicate which of the floating-point registers are saved in the
-     current stack frame.  The MASK and OFFSET parameters are
-     interpreted as with `.mask'.
-
-`.frame FRAMEREG, FRAMEOFFSET, RETREG[, ARGOFFSET]'
-     Describes the shape of the stack frame.  The frame pointer in use
-     is FRAMEREG; normally this is either `$fp' or `$sp'.  The frame
-     pointer is FRAMEOFFSET bytes below the CFA.  The return address is
-     initially located in RETREG until it is saved as indicated in
-     `.mask'.  For compatibility with OSF/1 an optional ARGOFFSET
-     parameter is accepted and ignored.  It is believed to indicate the
-     offset from the CFA to the saved argument registers.
-
-`.prologue N'
-     Indicate that the stack frame is set up and all registers have been
-     spilled.  The argument N indicates whether and how the function
-     uses the incoming "procedure vector" (the address of the called
-     function) in `$27'.  0 indicates that `$27' is not used; 1
-     indicates that the first two instructions of the function use `$27'
-     to perform a load of the GP register; 2 indicates that `$27' is
-     used in some non-standard way and so the linker cannot elide the
-     load of the procedure vector during relaxation.
-
-`.usepv FUNCTION, WHICH'
-     Used to indicate the use of the `$27' register, similar to
-     `.prologue', but without the other semantics of needing to be
-     inside an open `.ent'/`.end' block.
-
-     The WHICH argument should be either `no', indicating that `$27' is
-     not used, or `std', indicating that the first two instructions of
-     the function perform a GP load.
-
-     One might use this directive instead of `.prologue' if you are
-     also using dwarf2 CFI directives.
-
-`.gprel32 EXPRESSION'
-     Computes the difference between the address in EXPRESSION and the
-     GP for the current object file, and stores it in 4 bytes.  In
-     addition to being smaller than a full 8 byte address, this also
-     does not require a dynamic relocation when used in a shared
-     library.
-
-`.t_floating EXPRESSION'
-     Stores EXPRESSION as an IEEE double precision value.
-
-`.s_floating EXPRESSION'
-     Stores EXPRESSION as an IEEE single precision value.
-
-`.f_floating EXPRESSION'
-     Stores EXPRESSION as a VAX F format value.
-
-`.g_floating EXPRESSION'
-     Stores EXPRESSION as a VAX G format value.
-
-`.d_floating EXPRESSION'
-     Stores EXPRESSION as a VAX D format value.
-
-`.set FEATURE'
-     Enables or disables various assembler features.  Using the positive
-     name of the feature enables while using `noFEATURE' disables.
-
-    `at'
-          Indicates that macro expansions may clobber the "assembler
-          temporary" (`$at' or `$28') register.  Some macros may not be
-          expanded without this and will generate an error message if
-          `noat' is in effect.  When `at' is in effect, a warning will
-          be generated if `$at' is used by the programmer.
-
-    `macro'
-          Enables the expansion of macro instructions.  Note that
-          variants of real instructions, such as `br label' vs `br
-          $31,label' are considered alternate forms and not macros.
-
-    `move'
-    `reorder'
-    `volatile'
-          These control whether and how the assembler may re-order
-          instructions.  Accepted for compatibility with the OSF/1
-          assembler, but `as' does not do instruction scheduling, so
-          these features are ignored.
-
-   The following directives are recognized for compatibility with the
-OSF/1 assembler but are ignored.
-
-     .proc           .aproc
-     .reguse         .livereg
-     .option         .aent
-     .ugen           .eflag
-     .alias          .noalias
-
-
-File: as.info,  Node: Alpha Opcodes,  Prev: Alpha Directives,  Up: Alpha-Dependent
-
-8.2.6 Opcodes
--------------
-
-For detailed information on the Alpha machine instruction set, see the
-Alpha Architecture Handbook
-(ftp://ftp.digital.com/pub/Digital/info/semiconductor/literature/alphaahb.pdf).
-
-
-File: as.info,  Node: ARC-Dependent,  Next: ARM-Dependent,  Prev: Alpha-Dependent,  Up: Machine Dependencies
-
-8.3 ARC Dependent Features
-==========================
-
-* Menu:
-
-* ARC Options::              Options
-* ARC Syntax::               Syntax
-* ARC Floating Point::       Floating Point
-* ARC Directives::           ARC Machine Directives
-* ARC Opcodes::              Opcodes
-
-
-File: as.info,  Node: ARC Options,  Next: ARC Syntax,  Up: ARC-Dependent
-
-8.3.1 Options
--------------
-
-`-marc[5|6|7|8]'
-     This option selects the core processor variant.  Using `-marc' is
-     the same as `-marc6', which is also the default.
-
-    `arc5'
-          Base instruction set.
-
-    `arc6'
-          Jump-and-link (jl) instruction.  No requirement of an
-          instruction between setting flags and conditional jump.  For
-          example:
-
-                 mov.f r0,r1
-                 beq   foo
-
-    `arc7'
-          Break (brk) and sleep (sleep) instructions.
-
-    `arc8'
-          Software interrupt (swi) instruction.
-
-
-     Note: the `.option' directive can to be used to select a core
-     variant from within assembly code.
-
-`-EB'
-     This option specifies that the output generated by the assembler
-     should be marked as being encoded for a big-endian processor.
-
-`-EL'
-     This option specifies that the output generated by the assembler
-     should be marked as being encoded for a little-endian processor -
-     this is the default.
-
-
-
-File: as.info,  Node: ARC Syntax,  Next: ARC Floating Point,  Prev: ARC Options,  Up: ARC-Dependent
-
-8.3.2 Syntax
-------------
-
-* Menu:
-
-* ARC-Chars::                Special Characters
-* ARC-Regs::                 Register Names
-
-
-File: as.info,  Node: ARC-Chars,  Next: ARC-Regs,  Up: ARC Syntax
-
-8.3.2.1 Special Characters
-..........................
-
-*TODO*
-
-
-File: as.info,  Node: ARC-Regs,  Prev: ARC-Chars,  Up: ARC Syntax
-
-8.3.2.2 Register Names
-......................
-
-*TODO*
-
-
-File: as.info,  Node: ARC Floating Point,  Next: ARC Directives,  Prev: ARC Syntax,  Up: ARC-Dependent
-
-8.3.3 Floating Point
---------------------
-
-The ARC core does not currently have hardware floating point support.
-Software floating point support is provided by `GCC' and uses IEEE
-floating-point numbers.
-
-
-File: as.info,  Node: ARC Directives,  Next: ARC Opcodes,  Prev: ARC Floating Point,  Up: ARC-Dependent
-
-8.3.4 ARC Machine Directives
-----------------------------
-
-The ARC version of `as' supports the following additional machine
-directives:
-
-`.2byte EXPRESSIONS'
-     *TODO*
-
-`.3byte EXPRESSIONS'
-     *TODO*
-
-`.4byte EXPRESSIONS'
-     *TODO*
-
-`.extAuxRegister NAME,ADDRESS,MODE'
-     The ARCtangent A4 has extensible auxiliary register space.  The
-     auxiliary registers can be defined in the assembler source code by
-     using this directive.  The first parameter is the NAME of the new
-     auxiallry register.  The second parameter is the ADDRESS of the
-     register in the auxiliary register memory map for the variant of
-     the ARC.  The third parameter specifies the MODE in which the
-     register can be operated is and it can be one of:
-
-    `r          (readonly)'
-
-    `w          (write only)'
-
-    `r|w        (read or write)'
-
-     For example:
-
-            .extAuxRegister mulhi,0x12,w
-
-     This specifies an extension auxiliary register called _mulhi_
-     which is at address 0x12 in the memory space and which is only
-     writable.
-
-`.extCondCode SUFFIX,VALUE'
-     The condition codes on the ARCtangent A4 are extensible and can be
-     specified by means of this assembler directive.  They are specified
-     by the suffix and the value for the condition code.  They can be
-     used to specify extra condition codes with any values.  For
-     example:
-
-            .extCondCode is_busy,0x14
-
-             add.is_busy  r1,r2,r3
-             bis_busy     _main
-
-`.extCoreRegister NAME,REGNUM,MODE,SHORTCUT'
-     Specifies an extension core register NAME for the application.
-     This allows a register NAME with a valid REGNUM between 0 and 60,
-     with the following as valid values for MODE
-
-    `_r_   (readonly)'
-
-    `_w_   (write only)'
-
-    `_r|w_ (read or write)'
-
-     The other parameter gives a description of the register having a
-     SHORTCUT in the pipeline.  The valid values are:
-
-    `can_shortcut'
-
-    `cannot_shortcut'
-
-     For example:
-
-            .extCoreRegister mlo,57,r,can_shortcut
-
-     This defines an extension core register mlo with the value 57 which
-     can shortcut the pipeline.
-
-`.extInstruction NAME,OPCODE,SUBOPCODE,SUFFIXCLASS,SYNTAXCLASS'
-     The ARCtangent A4 allows the user to specify extension
-     instructions.  The extension instructions are not macros.  The
-     assembler creates encodings for use of these instructions
-     according to the specification by the user.  The parameters are:
-
-    *NAME
-          Name of the extension instruction
-
-    *OPCODE
-          Opcode to be used. (Bits 27:31 in the encoding).  Valid values
-          0x10-0x1f or 0x03
-
-    *SUBOPCODE
-          Subopcode to be used.  Valid values are from 0x09-0x3f.
-          However the correct value also depends on SYNTAXCLASS
-
-    *SUFFIXCLASS
-          Determines the kinds of suffixes to be allowed.  Valid values
-          are `SUFFIX_NONE', `SUFFIX_COND', `SUFFIX_FLAG' which
-          indicates the absence or presence of conditional suffixes and
-          flag setting by the extension instruction.  It is also
-          possible to specify that an instruction sets the flags and is
-          conditional by using `SUFFIX_CODE' | `SUFFIX_FLAG'.
-
-    *SYNTAXCLASS
-          Determines the syntax class for the instruction.  It can have
-          the following values:
-
-         ``SYNTAX_2OP':'
-               2 Operand Instruction
-
-         ``SYNTAX_3OP':'
-               3 Operand Instruction
-
-          In addition there could be modifiers for the syntax class as
-          described below:
-
-               Syntax Class Modifiers are:
-
-             - `OP1_MUST_BE_IMM': Modifies syntax class SYNTAX_3OP,
-               specifying that the first operand of a three-operand
-               instruction must be an immediate (i.e. the result is
-               discarded).  OP1_MUST_BE_IMM is used by bitwise ORing it
-               with SYNTAX_3OP as given in the example below.  This
-               could usually be used to set the flags using specific
-               instructions and not retain results.
-
-             - `OP1_IMM_IMPLIED': Modifies syntax class SYNTAX_20P, it
-               specifies that there is an implied immediate destination
-               operand which does not appear in the syntax.  For
-               example, if the source code contains an instruction like:
-
-                    inst r1,r2
-
-               it really means that the first argument is an implied
-               immediate (that is, the result is discarded).  This is
-               the same as though the source code were: inst 0,r1,r2.
-               You use OP1_IMM_IMPLIED by bitwise ORing it with
-               SYNTAX_20P.
-
-
-     For example, defining 64-bit multiplier with immediate operands:
-
-          .extInstruction mp64,0x14,0x0,SUFFIX_COND | SUFFIX_FLAG ,
-                          SYNTAX_3OP|OP1_MUST_BE_IMM
-
-     The above specifies an extension instruction called mp64 which has
-     3 operands, sets the flags, can be used with a condition code, for
-     which the first operand is an immediate.  (Equivalent to
-     discarding the result of the operation).
-
-           .extInstruction mul64,0x14,0x00,SUFFIX_COND, SYNTAX_2OP|OP1_IMM_IMPLIED
-
-     This describes a 2 operand instruction with an implicit first
-     immediate operand.  The result of this operation would be
-     discarded.
-
-`.half EXPRESSIONS'
-     *TODO*
-
-`.long EXPRESSIONS'
-     *TODO*
-
-`.option ARC|ARC5|ARC6|ARC7|ARC8'
-     The `.option' directive must be followed by the desired core
-     version. Again `arc' is an alias for `arc6'.
-
-     Note: the `.option' directive overrides the command line option
-     `-marc'; a warning is emitted when the version is not consistent
-     between the two - even for the implicit default core version
-     (arc6).
-
-`.short EXPRESSIONS'
-     *TODO*
-
-`.word EXPRESSIONS'
-     *TODO*
-
-
-
-File: as.info,  Node: ARC Opcodes,  Prev: ARC Directives,  Up: ARC-Dependent
-
-8.3.5 Opcodes
--------------
-
-For information on the ARC instruction set, see `ARC Programmers
-Reference Manual', ARC International (www.arc.com)
-
-
-File: as.info,  Node: ARM-Dependent,  Next: CRIS-Dependent,  Prev: ARC-Dependent,  Up: Machine Dependencies
-
-8.4 ARM Dependent Features
-==========================
-
-* Menu:
-
-* ARM Options::              Options
-* ARM Syntax::               Syntax
-* ARM Floating Point::       Floating Point
-* ARM Directives::           ARM Machine Directives
-* ARM Opcodes::              Opcodes
-* ARM Mapping Symbols::      Mapping Symbols
-
-
-File: as.info,  Node: ARM Options,  Next: ARM Syntax,  Up: ARM-Dependent
-
-8.4.1 Options
--------------
-
-`-mcpu=PROCESSOR[+EXTENSION...]'
-     This option specifies the target processor.  The assembler will
-     issue an error message if an attempt is made to assemble an
-     instruction which will not execute on the target processor.  The
-     following processor names are recognized: `arm1', `arm2', `arm250',
-     `arm3', `arm6', `arm60', `arm600', `arm610', `arm620', `arm7',
-     `arm7m', `arm7d', `arm7dm', `arm7di', `arm7dmi', `arm70', `arm700',
-     `arm700i', `arm710', `arm710t', `arm720', `arm720t', `arm740t',
-     `arm710c', `arm7100', `arm7500', `arm7500fe', `arm7t', `arm7tdmi',
-     `arm7tdmi-s', `arm8', `arm810', `strongarm', `strongarm1',
-     `strongarm110', `strongarm1100', `strongarm1110', `arm9', `arm920',
-     `arm920t', `arm922t', `arm940t', `arm9tdmi', `arm9e', `arm926e',
-     `arm926ej-s', `arm946e-r0', `arm946e', `arm966e-r0', `arm966e',
-     `arm10t', `arm10e', `arm1020', `arm1020t', `arm1020e',
-     `arm1026ej-s', `arm1136j-s', `arm1136jf-s', `arm1176jz-s',
-     `arm1176jzf-s', `mpcore', `mpcorenovfp', `ep9312' (ARM920 with
-     Cirrus Maverick coprocessor), `i80200' (Intel XScale processor)
-     `iwmmxt' (Intel(r) XScale processor with Wireless MMX(tm)
-     technology coprocessor) and `xscale'.  The special name `all' may
-     be used to allow the assembler to accept instructions valid for
-     any ARM processor.
-
-     In addition to the basic instruction set, the assembler can be
-     told to accept various extension mnemonics that extend the
-     processor using the co-processor instruction space.  For example,
-     `-mcpu=arm920+maverick' is equivalent to specifying
-     `-mcpu=ep9312'.  The following extensions are currently supported:
-     `+maverick' `+iwmmxt' and `+xscale'.
-
-`-march=ARCHITECTURE[+EXTENSION...]'
-     This option specifies the target architecture.  The assembler will
-     issue an error message if an attempt is made to assemble an
-     instruction which will not execute on the target architecture.
-     The following architecture names are recognized: `armv1', `armv2',
-     `armv2a', `armv2s', `armv3', `armv3m', `armv4', `armv4xm',
-     `armv4t', `armv4txm', `armv5', `armv5t', `armv5txm', `armv5te',
-     `armv5texp', `armv6', `armv6j', `armv6k', `armv6z', `armv6zk',
-     `iwmmxt' and `xscale'.  If both `-mcpu' and `-march' are
-     specified, the assembler will use the setting for `-mcpu'.
-
-     The architecture option can be extended with the same instruction
-     set extension options as the `-mcpu' option.
-
-`-mfpu=FLOATING-POINT-FORMAT'
-     This option specifies the floating point format to assemble for.
-     The assembler will issue an error message if an attempt is made to
-     assemble an instruction which will not execute on the target
-     floating point unit.  The following format options are recognized:
-     `softfpa', `fpe', `fpe2', `fpe3', `fpa', `fpa10', `fpa11',
-     `arm7500fe', `softvfp', `softvfp+vfp', `vfp', `vfp10', `vfp10-r0',
-     `vfp9', `vfpxd', `arm1020t', `arm1020e', `arm1136jf-s' and
-     `maverick'.
-
-     In addition to determining which instructions are assembled, this
-     option also affects the way in which the `.double' assembler
-     directive behaves when assembling little-endian code.
-
-     The default is dependent on the processor selected.  For
-     Architecture 5 or later, the default is to assembler for VFP
-     instructions; for earlier architectures the default is to assemble
-     for FPA instructions.
-
-`-mthumb'
-     This option specifies that the assembler should start assembling
-     Thumb instructions; that is, it should behave as though the file
-     starts with a `.code 16' directive.
-
-`-mthumb-interwork'
-     This option specifies that the output generated by the assembler
-     should be marked as supporting interworking.
-
-`-mapcs `[26|32]''
-     This option specifies that the output generated by the assembler
-     should be marked as supporting the indicated version of the Arm
-     Procedure.  Calling Standard.
-
-`-matpcs'
-     This option specifies that the output generated by the assembler
-     should be marked as supporting the Arm/Thumb Procedure Calling
-     Standard.  If enabled this option will cause the assembler to
-     create an empty debugging section in the object file called
-     .arm.atpcs.  Debuggers can use this to determine the ABI being
-     used by.
-
-`-mapcs-float'
-     This indicates the floating point variant of the APCS should be
-     used.  In this variant floating point arguments are passed in FP
-     registers rather than integer registers.
-
-`-mapcs-reentrant'
-     This indicates that the reentrant variant of the APCS should be
-     used.  This variant supports position independent code.
-
-`-mfloat-abi=ABI'
-     This option specifies that the output generated by the assembler
-     should be marked as using specified floating point ABI.  The
-     following values are recognized: `soft', `softfp' and `hard'.
-
-`-meabi=VER'
-     This option specifies which EABI version the produced object files
-     should conform to.  The following values are recognised: `gnu' and
-     `4'.
-
-`-EB'
-     This option specifies that the output generated by the assembler
-     should be marked as being encoded for a big-endian processor.
-
-`-EL'
-     This option specifies that the output generated by the assembler
-     should be marked as being encoded for a little-endian processor.
-
-`-k'
-     This option specifies that the output of the assembler should be
-     marked as position-independent code (PIC).
-
-
-
-File: as.info,  Node: ARM Syntax,  Next: ARM Floating Point,  Prev: ARM Options,  Up: ARM-Dependent
-
-8.4.2 Syntax
-------------
-
-* Menu:
-
-* ARM-Chars::                Special Characters
-* ARM-Regs::                 Register Names
-
-
-File: as.info,  Node: ARM-Chars,  Next: ARM-Regs,  Up: ARM Syntax
-
-8.4.2.1 Special Characters
-..........................
-
-The presence of a `@' on a line indicates the start of a comment that
-extends to the end of the current line.  If a `#' appears as the first
-character of a line, the whole line is treated as a comment.
-
-   The `;' character can be used instead of a newline to separate
-statements.
-
-   Either `#' or `$' can be used to indicate immediate operands.
-
-   *TODO* Explain about /data modifier on symbols.
-
-
-File: as.info,  Node: ARM-Regs,  Prev: ARM-Chars,  Up: ARM Syntax
-
-8.4.2.2 Register Names
-......................
-
-*TODO* Explain about ARM register naming, and the predefined names.
-
-
-File: as.info,  Node: ARM Floating Point,  Next: ARM Directives,  Prev: ARM Syntax,  Up: ARM-Dependent
-
-8.4.3 Floating Point
---------------------
-
-The ARM family uses IEEE floating-point numbers.
-
-
-File: as.info,  Node: ARM Directives,  Next: ARM Opcodes,  Prev: ARM Floating Point,  Up: ARM-Dependent
-
-8.4.4 ARM Machine Directives
-----------------------------
-
-`.align EXPRESSION [, EXPRESSION]'
-     This is the generic .ALIGN directive.  For the ARM however if the
-     first argument is zero (ie no alignment is needed) the assembler
-     will behave as if the argument had been 2 (ie pad to the next four
-     byte boundary).  This is for compatibility with ARM's own
-     assembler.
-
-`NAME .req REGISTER NAME'
-     This creates an alias for REGISTER NAME called NAME.  For example:
-
-                  foo .req r0
-
-`.unreq ALIAS-NAME'
-     This undefines a register alias which was previously defined using
-     the `req' directive.  For example:
-
-                  foo .req r0
-                  .unreq foo
-
-     An error occurs if the name is undefined.  Note - this pseudo op
-     can be used to delete builtin in register name aliases (eg 'r0').
-     This should only be done if it is really necessary.
-
-`.code `[16|32]''
-     This directive selects the instruction set being generated. The
-     value 16 selects Thumb, with the value 32 selecting ARM.
-
-`.thumb'
-     This performs the same action as .CODE 16.
-
-`.arm'
-     This performs the same action as .CODE 32.
-
-`.force_thumb'
-     This directive forces the selection of Thumb instructions, even if
-     the target processor does not support those instructions
-
-`.thumb_func'
-     This directive specifies that the following symbol is the name of a
-     Thumb encoded function.  This information is necessary in order to
-     allow the assembler and linker to generate correct code for
-     interworking between Arm and Thumb instructions and should be used
-     even if interworking is not going to be performed.  The presence
-     of this directive also implies `.thumb'
-
-`.thumb_set'
-     This performs the equivalent of a `.set' directive in that it
-     creates a symbol which is an alias for another symbol (possibly
-     not yet defined).  This directive also has the added property in
-     that it marks the aliased symbol as being a thumb function entry
-     point, in the same way that the `.thumb_func' directive does.
-
-`.ltorg'
-     This directive causes the current contents of the literal pool to
-     be dumped into the current section (which is assumed to be the
-     .text section) at the current location (aligned to a word
-     boundary).  `GAS' maintains a separate literal pool for each
-     section and each sub-section.  The `.ltorg' directive will only
-     affect the literal pool of the current section and sub-section.
-     At the end of assembly all remaining, un-empty literal pools will
-     automatically be dumped.
-
-     Note - older versions of `GAS' would dump the current literal pool
-     any time a section change occurred.  This is no longer done, since
-     it prevents accurate control of the placement of literal pools.
-
-`.pool'
-     This is a synonym for .ltorg.
-
-`.unwind_fnstart'
-     Marks the start of a function with an unwind table entry.
-
-`.unwind_fnend'
-     Marks the end of a function with an unwind table entry.  The
-     unwind index table entry is created when this directive is
-     processed.
-
-     If no personality routine has been specified then standard
-     personality routine 0 or 1 will be used, depending on the number
-     of unwind opcodes required.
-
-`.cantunwind'
-     Prevents unwinding through the current function.  No personality
-     routine or exception table data is required or permitted.
-
-`.personality NAME'
-     Sets the personality routine for the current function to NAME.
-
-`.personalityindex INDEX'
-     Sets the personality routine for the current function to the EABI
-     standard routine number INDEX
-
-`.handlerdata'
-     Marks the end of the current function, and the start of the
-     exception table entry for that function.  Anything between this
-     directive and the `.fnend' directive will be added to the
-     exception table entry.
-
-     Must be preceded by a `.personality' or `.personalityindex'
-     directive.
-
-`.save REGLIST'
-     Generate unwinder annotations to restore the registers in REGLIST.
-     The format of REGLIST is the same as the corresponding
-     store-multiple instruction.
-
-     _core registers_
-            .save {r4, r5, r6, lr}
-            stmfd sp!, {r4, r5, r6, lr}
-     _FPA registers_
-            .save f4, 2
-            sfmfd f4, 2, [sp]!
-     _VFP registers_
-            .save {d8, d9, d10}
-            fstmdf sp!, {d8, d9, d10}
-     _iWMMXt registers_
-            .save {wr10, wr11}
-            wstrd wr11, [sp, #-8]!
-            wstrd wr10, [sp, #-8]!
-          or
-            .save wr11
-            wstrd wr11, [sp, #-8]!
-            .save wr10
-            wstrd wr10, [sp, #-8]!
-
-`.pad #COUNT'
-     Generate unwinder annotations for a stack adjustment of COUNT
-     bytes.  A positive value indicates the function prologue allocated
-     stack space by decrementing the stack pointer.
-
-`.movsp REG'
-     Tell the unwinder that REG contains the current stack pointer.
-
-`.setfp FPREG, SPREG [, #OFFSET]'
-     Make all unwinder annotations relaive to a frame pointer.  Without
-     this the unwinder will use offsets from the stack pointer.
-
-     The syntax of this directive is the same as the `sub' or `mov'
-     instruction used to set the frame pointer.  SPREG must be either
-     `sp' or mentioned in a previous `.movsp' directive.
-
-          .movsp ip
-          mov ip, sp
-          ...
-          .setfp fp, ip, #4
-          sub fp, ip, #4
-
-`.raw OFFSET, BYTE1, ...'
-     Insert one of more arbitary unwind opcode bytes, which are known
-     to adjust the stack pointer by OFFSET bytes.
-
-     For example `.unwind_raw 4, 0xb1, 0x01' is equivalent to `.save
-     {r0}'
-
-
-
-File: as.info,  Node: ARM Opcodes,  Next: ARM Mapping Symbols,  Prev: ARM Directives,  Up: ARM-Dependent
-
-8.4.5 Opcodes
--------------
-
-`as' implements all the standard ARM opcodes.  It also implements
-several pseudo opcodes, including several synthetic load instructions.
-
-`NOP'
-            nop
-
-     This pseudo op will always evaluate to a legal ARM instruction
-     that does nothing.  Currently it will evaluate to MOV r0, r0.
-
-`LDR'
-            ldr <register> , = <expression>
-
-     If expression evaluates to a numeric constant then a MOV or MVN
-     instruction will be used in place of the LDR instruction, if the
-     constant can be generated by either of these instructions.
-     Otherwise the constant will be placed into the nearest literal
-     pool (if it not already there) and a PC relative LDR instruction
-     will be generated.
-
-`ADR'
-            adr <register> <label>
-
-     This instruction will load the address of LABEL into the indicated
-     register.  The instruction will evaluate to a PC relative ADD or
-     SUB instruction depending upon where the label is located.  If the
-     label is out of range, or if it is not defined in the same file
-     (and section) as the ADR instruction, then an error will be
-     generated.  This instruction will not make use of the literal pool.
-
-`ADRL'
-            adrl <register> <label>
-
-     This instruction will load the address of LABEL into the indicated
-     register.  The instruction will evaluate to one or two PC relative
-     ADD or SUB instructions depending upon where the label is located.
-     If a second instruction is not needed a NOP instruction will be
-     generated in its place, so that this instruction is always 8 bytes
-     long.
-
-     If the label is out of range, or if it is not defined in the same
-     file (and section) as the ADRL instruction, then an error will be
-     generated.  This instruction will not make use of the literal pool.
-
-
-   For information on the ARM or Thumb instruction sets, see `ARM
-Software Development Toolkit Reference Manual', Advanced RISC Machines
-Ltd.
-
-
-File: as.info,  Node: ARM Mapping Symbols,  Prev: ARM Opcodes,  Up: ARM-Dependent
-
-8.4.6 Mapping Symbols
----------------------
-
-The ARM ELF specification requires that special symbols be inserted
-into object files to mark certain features:
-
-`$a'
-     At the start of a region of code containing ARM instructions.
-
-`$t'
-     At the start of a region of code containing THUMB instructions.
-
-`$d'
-     At the start of a region of data.
-
-
-   The assembler will automatically insert these symbols for you - there
-is no need to code them yourself.  Support for tagging symbols ($b, $f,
-$p and $m) which is also mentioned in the current ARM ELF specification
-is not implemented.  This is because they have been dropped from the
-new EABI and so tools cannot rely upon their presence.
-
-
-File: as.info,  Node: CRIS-Dependent,  Next: D10V-Dependent,  Prev: ARM-Dependent,  Up: Machine Dependencies
-
-8.5 CRIS Dependent Features
-===========================
-
-* Menu:
-
-* CRIS-Opts::              Command-line Options
-* CRIS-Expand::            Instruction expansion
-* CRIS-Symbols::           Symbols
-* CRIS-Syntax::            Syntax
-
-
-File: as.info,  Node: CRIS-Opts,  Next: CRIS-Expand,  Up: CRIS-Dependent
-
-8.5.1 Command-line Options
---------------------------
-
-The CRIS version of `as' has these machine-dependent command-line
-options.
-
-   The format of the generated object files can be either ELF or a.out,
-specified by the command-line options `--emulation=crisaout' and
-`--emulation=criself'.  The default is ELF (criself), unless `as' has
-been configured specifically for a.out by using the configuration name
-`cris-axis-aout'.
-
-   There are two different link-incompatible ELF object file variants
-for CRIS, for use in environments where symbols are expected to be
-prefixed by a leading `_' character and for environments without such a
-symbol prefix.  The variant used for GNU/Linux port has no symbol
-prefix.  Which variant to produce is specified by either of the options
-`--underscore' and `--no-underscore'.  The default is `--underscore'.
-Since symbols in CRIS a.out objects are expected to have a `_' prefix,
-specifying `--no-underscore' when generating a.out objects is an error.
-Besides the object format difference, the effect of this option is to
-parse register names differently (*note crisnous::).  The
-`--no-underscore' option makes a `$' register prefix mandatory.
-
-   The option `--pic' must be passed to `as' in order to recognize the
-symbol syntax used for ELF (SVR4 PIC) position-independent-code (*note
-crispic::).  This will also affect expansion of instructions.  The
-expansion with `--pic' will use PC-relative rather than (slightly
-faster) absolute addresses in those expansions.
-
-   The option `--march=ARCHITECTURE' specifies the recognized
-instruction set and recognized register names.  It also controls the
-architecture type of the object file.  Valid values for ARCHITECTURE
-are:
-`v0_v10'
-     All instructions and register names for any architecture variant
-     in the set v0...v10 are recognized.  This is the default if the
-     target is configured as cris-*.
-
-`v10'
-     Only instructions and register names for CRIS v10 (as found in
-     ETRAX 100 LX) are recognized.  This is the default if the target
-     is configured as crisv10-*.
-
-`v32'
-     Only instructions and register names for CRIS v32 (code name
-     Guinness) are recognized.  This is the default if the target is
-     configured as crisv32-*.  This value implies `--no-mul-bug-abort'.
-     (A subsequent `--mul-bug-abort' will turn it back on.)
-
-`common_v10_v32'
-     Only instructions with register names and addressing modes with
-     opcodes common to the v10 and v32 are recognized.
-
-   When `-N' is specified, `as' will emit a warning when a 16-bit
-branch instruction is expanded into a 32-bit multiple-instruction
-construct (*note CRIS-Expand::).
-
-   Some versions of the CRIS v10, for example in the Etrax 100 LX,
-contain a bug that causes destabilizing memory accesses when a multiply
-instruction is executed with certain values in the first operand just
-before a cache-miss.  When the `--mul-bug-abort' command line option is
-active (the default value), `as' will refuse to assemble a file
-containing a multiply instruction at a dangerous offset, one that could
-be the last on a cache-line, or is in a section with insufficient
-alignment.  This placement checking does not catch any case where the
-multiply instruction is dangerously placed because it is located in a
-delay-slot.  The `--mul-bug-abort' command line option turns off the
-checking.
-
-
-File: as.info,  Node: CRIS-Expand,  Next: CRIS-Symbols,  Prev: CRIS-Opts,  Up: CRIS-Dependent
-
-8.5.2 Instruction expansion
----------------------------
-
-`as' will silently choose an instruction that fits the operand size for
-`[register+constant]' operands.  For example, the offset `127' in
-`move.d [r3+127],r4' fits in an instruction using a signed-byte offset.
-Similarly, `move.d [r2+32767],r1' will generate an instruction using a
-16-bit offset.  For symbolic expressions and constants that do not fit
-in 16 bits including the sign bit, a 32-bit offset is generated.
-
-   For branches, `as' will expand from a 16-bit branch instruction into
-a sequence of instructions that can reach a full 32-bit address.  Since
-this does not correspond to a single instruction, such expansions can
-optionally be warned about.  *Note CRIS-Opts::.
-
-   If the operand is found to fit the range, a `lapc' mnemonic will
-translate to a `lapcq' instruction.  Use `lapc.d' to force the 32-bit
-`lapc' instruction.
-
-   Similarly, the `addo' mnemonic will translate to the shortest
-fitting instruction of `addoq', `addo.w' and `addo.d', when used with a
-operand that is a constant known at assembly time.
-
-
-File: as.info,  Node: CRIS-Symbols,  Next: CRIS-Syntax,  Prev: CRIS-Expand,  Up: CRIS-Dependent
-
-8.5.3 Symbols
--------------
-
-Some symbols are defined by the assembler.  They're intended to be used
-in conditional assembly, for example:
-      .if ..asm.arch.cris.v32
-      CODE FOR CRIS V32
-      .elseif ..asm.arch.cris.common_v10_v32
-      CODE COMMON TO CRIS V32 AND CRIS V10
-      .elseif ..asm.arch.cris.v10 | ..asm.arch.cris.any_v0_v10
-      CODE FOR V10
-      .else
-      .error "Code needs to be added here."
-      .endif
-
-   These symbols are defined in the assembler, reflecting command-line
-options, either when specified or the default.  They are always
-defined, to 0 or 1.
-`..asm.arch.cris.any_v0_v10'
-     This symbol is non-zero when `--march=v0_v10' is specified or the
-     default.
-
-`..asm.arch.cris.common_v10_v32'
-     Set according to the option `--march=common_v10_v32'.
-
-`..asm.arch.cris.v10'
-     Reflects the option `--march=v10'.
-
-`..asm.arch.cris.v32'
-     Corresponds to `--march=v10'.
-
-   Speaking of symbols, when a symbol is used in code, it can have a
-suffix modifying its value for use in position-independent code. *Note
-CRIS-Pic::.
-
-
-File: as.info,  Node: CRIS-Syntax,  Prev: CRIS-Symbols,  Up: CRIS-Dependent
-
-8.5.4 Syntax
-------------
-
-There are different aspects of the CRIS assembly syntax.
-
-* Menu:
-
-* CRIS-Chars::		        Special Characters
-* CRIS-Pic::			Position-Independent Code Symbols
-* CRIS-Regs::			Register Names
-* CRIS-Pseudos::		Assembler Directives
-
-
-File: as.info,  Node: CRIS-Chars,  Next: CRIS-Pic,  Up: CRIS-Syntax
-
-8.5.4.1 Special Characters
-..........................
-
-The character `#' is a line comment character.  It starts a comment if
-and only if it is placed at the beginning of a line.
-
-   A `;' character starts a comment anywhere on the line, causing all
-characters up to the end of the line to be ignored.
-
-   A `@' character is handled as a line separator equivalent to a
-logical new-line character (except in a comment), so separate
-instructions can be specified on a single line.
-
-
-File: as.info,  Node: CRIS-Pic,  Next: CRIS-Regs,  Prev: CRIS-Chars,  Up: CRIS-Syntax
-
-8.5.4.2 Symbols in position-independent code
-............................................
-
-When generating position-independent code (SVR4 PIC) for use in
-cris-axis-linux-gnu or crisv32-axis-linux-gnu shared libraries, symbol
-suffixes are used to specify what kind of run-time symbol lookup will
-be used, expressed in the object as different _relocation types_.
-Usually, all absolute symbol values must be located in a table, the
-_global offset table_, leaving the code position-independent;
-independent of values of global symbols and independent of the address
-of the code.  The suffix modifies the value of the symbol, into for
-example an index into the global offset table where the real symbol
-value is entered, or a PC-relative value, or a value relative to the
-start of the global offset table.  All symbol suffixes start with the
-character `:' (omitted in the list below).  Every symbol use in code or
-a read-only section must therefore have a PIC suffix to enable a useful
-shared library to be created.  Usually, these constructs must not be
-used with an additive constant offset as is usually allowed, i.e. no 4
-as in `symbol + 4' is allowed.  This restriction is checked at
-link-time, not at assembly-time.
-
-`GOT'
-     Attaching this suffix to a symbol in an instruction causes the
-     symbol to be entered into the global offset table.  The value is a
-     32-bit index for that symbol into the global offset table.  The
-     name of the corresponding relocation is `R_CRIS_32_GOT'.  Example:
-     `move.d [$r0+extsym:GOT],$r9'
-
-`GOT16'
-     Same as for `GOT', but the value is a 16-bit index into the global
-     offset table.  The corresponding relocation is `R_CRIS_16_GOT'.
-     Example: `move.d [$r0+asymbol:GOT16],$r10'
-
-`PLT'
-     This suffix is used for function symbols.  It causes a _procedure
-     linkage table_, an array of code stubs, to be created at the time
-     the shared object is created or linked against, together with a
-     global offset table entry.  The value is a pc-relative offset to
-     the corresponding stub code in the procedure linkage table.  This
-     arrangement causes the run-time symbol resolver to be called to
-     look up and set the value of the symbol the first time the
-     function is called (at latest; depending environment variables).
-     It is only safe to leave the symbol unresolved this way if all
-     references are function calls.  The name of the relocation is
-     `R_CRIS_32_PLT_PCREL'.  Example: `add.d fnname:PLT,$pc'
-
-`PLTG'
-     Like PLT, but the value is relative to the beginning of the global
-     offset table.  The relocation is `R_CRIS_32_PLT_GOTREL'.  Example:
-     `move.d fnname:PLTG,$r3'
-
-`GOTPLT'
-     Similar to `PLT', but the value of the symbol is a 32-bit index
-     into the global offset table.  This is somewhat of a mix between
-     the effect of the `GOT' and the `PLT' suffix; the difference to
-     `GOT' is that there will be a procedure linkage table entry
-     created, and that the symbol is assumed to be a function entry and
-     will be resolved by the run-time resolver as with `PLT'.  The
-     relocation is `R_CRIS_32_GOTPLT'.  Example: `jsr
-     [$r0+fnname:GOTPLT]'
-
-`GOTPLT16'
-     A variant of `GOTPLT' giving a 16-bit value.  Its relocation name
-     is `R_CRIS_16_GOTPLT'.  Example: `jsr [$r0+fnname:GOTPLT16]'
-
-`GOTOFF'
-     This suffix must only be attached to a local symbol, but may be
-     used in an expression adding an offset.  The value is the address
-     of the symbol relative to the start of the global offset table.
-     The relocation name is `R_CRIS_32_GOTREL'.  Example: `move.d
-     [$r0+localsym:GOTOFF],r3'
-
-
-File: as.info,  Node: CRIS-Regs,  Next: CRIS-Pseudos,  Prev: CRIS-Pic,  Up: CRIS-Syntax
-
-8.5.4.3 Register names
-......................
-
-A `$' character may always prefix a general or special register name in
-an instruction operand but is mandatory when the option
-`--no-underscore' is specified or when the `.syntax register_prefix'
-directive is in effect (*note crisnous::).  Register names are
-case-insensitive.
-
-
-File: as.info,  Node: CRIS-Pseudos,  Prev: CRIS-Regs,  Up: CRIS-Syntax
-
-8.5.4.4 Assembler Directives
-............................
-
-There are a few CRIS-specific pseudo-directives in addition to the
-generic ones.  *Note Pseudo Ops::.  Constants emitted by
-pseudo-directives are in little-endian order for CRIS.  There is no
-support for floating-point-specific directives for CRIS.
-
-`.dword EXPRESSIONS'
-     The `.dword' directive is a synonym for `.int', expecting zero or
-     more EXPRESSIONS, separated by commas.  For each expression, a
-     32-bit little-endian constant is emitted.
-
-`.syntax ARGUMENT'
-     The `.syntax' directive takes as ARGUMENT one of the following
-     case-sensitive choices.
-
-    `no_register_prefix'
-          The `.syntax no_register_prefix' directive makes a `$'
-          character prefix on all registers optional.  It overrides a
-          previous setting, including the corresponding effect of the
-          option `--no-underscore'.  If this directive is used when
-          ordinary symbols do not have a `_' character prefix, care
-          must be taken to avoid ambiguities whether an operand is a
-          register or a symbol; using symbols with names the same as
-          general or special registers then invoke undefined behavior.
-
-    `register_prefix'
-          This directive makes a `$' character prefix on all registers
-          mandatory.  It overrides a previous setting, including the
-          corresponding effect of the option `--underscore'.
-
-    `leading_underscore'
-          This is an assertion directive, emitting an error if the
-          `--no-underscore' option is in effect.
-
-    `no_leading_underscore'
-          This is the opposite of the `.syntax leading_underscore'
-          directive and emits an error if the option `--underscore' is
-          in effect.
-
-`.arch ARGUMENT'
-     This is an assertion directive, giving an error if the specified
-     ARGUMENT is not the same as the specified or default value for the
-     `--march=ARCHITECTURE' option (*note march-option::).
-
-
-
-File: as.info,  Node: D10V-Dependent,  Next: D30V-Dependent,  Prev: CRIS-Dependent,  Up: Machine Dependencies
-
-8.6 D10V Dependent Features
-===========================
-
-* Menu:
-
-* D10V-Opts::                   D10V Options
-* D10V-Syntax::                 Syntax
-* D10V-Float::                  Floating Point
-* D10V-Opcodes::                Opcodes
-
-
-File: as.info,  Node: D10V-Opts,  Next: D10V-Syntax,  Up: D10V-Dependent
-
-8.6.1 D10V Options
-------------------
-
-The Mitsubishi D10V version of `as' has a few machine dependent options.
-
-`-O'
-     The D10V can often execute two sub-instructions in parallel. When
-     this option is used, `as' will attempt to optimize its output by
-     detecting when instructions can be executed in parallel.
-
-`--nowarnswap'
-     To optimize execution performance, `as' will sometimes swap the
-     order of instructions. Normally this generates a warning. When
-     this option is used, no warning will be generated when
-     instructions are swapped.
-
-`--gstabs-packing'
-
-`--no-gstabs-packing'
-     `as' packs adjacent short instructions into a single packed
-     instruction. `--no-gstabs-packing' turns instruction packing off if
-     `--gstabs' is specified as well; `--gstabs-packing' (the default)
-     turns instruction packing on even when `--gstabs' is specified.
-
-
-File: as.info,  Node: D10V-Syntax,  Next: D10V-Float,  Prev: D10V-Opts,  Up: D10V-Dependent
-
-8.6.2 Syntax
-------------
-
-The D10V syntax is based on the syntax in Mitsubishi's D10V
-architecture manual.  The differences are detailed below.
-
-* Menu:
-
-* D10V-Size::                 Size Modifiers
-* D10V-Subs::                 Sub-Instructions
-* D10V-Chars::                Special Characters
-* D10V-Regs::                 Register Names
-* D10V-Addressing::           Addressing Modes
-* D10V-Word::                 @WORD Modifier
-
-
-File: as.info,  Node: D10V-Size,  Next: D10V-Subs,  Up: D10V-Syntax
-
-8.6.2.1 Size Modifiers
-......................
-
-The D10V version of `as' uses the instruction names in the D10V
-Architecture Manual.  However, the names in the manual are sometimes
-ambiguous.  There are instruction names that can assemble to a short or
-long form opcode.  How does the assembler pick the correct form?  `as'
-will always pick the smallest form if it can.  When dealing with a
-symbol that is not defined yet when a line is being assembled, it will
-always use the long form.  If you need to force the assembler to use
-either the short or long form of the instruction, you can append either
-`.s' (short) or `.l' (long) to it.  For example, if you are writing an
-assembly program and you want to do a branch to a symbol that is
-defined later in your program, you can write `bra.s   foo'.  Objdump
-and GDB will always append `.s' or `.l' to instructions which have both
-short and long forms.
-
-
-File: as.info,  Node: D10V-Subs,  Next: D10V-Chars,  Prev: D10V-Size,  Up: D10V-Syntax
-
-8.6.2.2 Sub-Instructions
-........................
-
-The D10V assembler takes as input a series of instructions, either
-one-per-line, or in the special two-per-line format described in the
-next section.  Some of these instructions will be short-form or
-sub-instructions.  These sub-instructions can be packed into a single
-instruction.  The assembler will do this automatically.  It will also
-detect when it should not pack instructions.  For example, when a label
-is defined, the next instruction will never be packaged with the
-previous one.  Whenever a branch and link instruction is called, it
-will not be packaged with the next instruction so the return address
-will be valid.  Nops are automatically inserted when necessary.
-
-   If you do not want the assembler automatically making these
-decisions, you can control the packaging and execution type (parallel
-or sequential) with the special execution symbols described in the next
-section.
-
-
-File: as.info,  Node: D10V-Chars,  Next: D10V-Regs,  Prev: D10V-Subs,  Up: D10V-Syntax
-
-8.6.2.3 Special Characters
-..........................
-
-`;' and `#' are the line comment characters.  Sub-instructions may be
-executed in order, in reverse-order, or in parallel.  Instructions
-listed in the standard one-per-line format will be executed
-sequentially.  To specify the executing order, use the following
-symbols:
-`->'
-     Sequential with instruction on the left first.
-
-`<-'
-     Sequential with instruction on the right first.
-
-`||'
-     Parallel
-   The D10V syntax allows either one instruction per line, one
-instruction per line with the execution symbol, or two instructions per
-line.  For example
-`abs       a1      ->      abs     r0'
-     Execute these sequentially.  The instruction on the right is in
-     the right container and is executed second.
-
-`abs       r0      <-      abs     a1'
-     Execute these reverse-sequentially.  The instruction on the right
-     is in the right container, and is executed first.
-
-`ld2w    r2,@r8+         ||      mac     a0,r0,r7'
-     Execute these in parallel.
-
-`ld2w    r2,@r8+         ||'
-`mac     a0,r0,r7'
-     Two-line format. Execute these in parallel.
-
-`ld2w    r2,@r8+'
-`mac     a0,r0,r7'
-     Two-line format. Execute these sequentially.  Assembler will put
-     them in the proper containers.
-
-`ld2w    r2,@r8+         ->'
-`mac     a0,r0,r7'
-     Two-line format. Execute these sequentially.  Same as above but
-     second instruction will always go into right container.
-   Since `$' has no special meaning, you may use it in symbol names.
-
-
-File: as.info,  Node: D10V-Regs,  Next: D10V-Addressing,  Prev: D10V-Chars,  Up: D10V-Syntax
-
-8.6.2.4 Register Names
-......................
-
-You can use the predefined symbols `r0' through `r15' to refer to the
-D10V registers.  You can also use `sp' as an alias for `r15'.  The
-accumulators are `a0' and `a1'.  There are special register-pair names
-that may optionally be used in opcodes that require even-numbered
-registers. Register names are not case sensitive.
-
-   Register Pairs
-`r0-r1'
-
-`r2-r3'
-
-`r4-r5'
-
-`r6-r7'
-
-`r8-r9'
-
-`r10-r11'
-
-`r12-r13'
-
-`r14-r15'
-
-   The D10V also has predefined symbols for these control registers and
-status bits:
-`psw'
-     Processor Status Word
-
-`bpsw'
-     Backup Processor Status Word
-
-`pc'
-     Program Counter
-
-`bpc'
-     Backup Program Counter
-
-`rpt_c'
-     Repeat Count
-
-`rpt_s'
-     Repeat Start address
-
-`rpt_e'
-     Repeat End address
-
-`mod_s'
-     Modulo Start address
-
-`mod_e'
-     Modulo End address
-
-`iba'
-     Instruction Break Address
-
-`f0'
-     Flag 0
-
-`f1'
-     Flag 1
-
-`c'
-     Carry flag
-
-
-File: as.info,  Node: D10V-Addressing,  Next: D10V-Word,  Prev: D10V-Regs,  Up: D10V-Syntax
-
-8.6.2.5 Addressing Modes
-........................
-
-`as' understands the following addressing modes for the D10V.  `RN' in
-the following refers to any of the numbered registers, but _not_ the
-control registers.
-`RN'
-     Register direct
-
-`@RN'
-     Register indirect
-
-`@RN+'
-     Register indirect with post-increment
-
-`@RN-'
-     Register indirect with post-decrement
-
-`@-SP'
-     Register indirect with pre-decrement
-
-`@(DISP, RN)'
-     Register indirect with displacement
-
-`ADDR'
-     PC relative address (for branch or rep).
-
-`#IMM'
-     Immediate data (the `#' is optional and ignored)
-
-
-File: as.info,  Node: D10V-Word,  Prev: D10V-Addressing,  Up: D10V-Syntax
-
-8.6.2.6 @WORD Modifier
-......................
-
-Any symbol followed by `@word' will be replaced by the symbol's value
-shifted right by 2.  This is used in situations such as loading a
-register with the address of a function (or any other code fragment).
-For example, if you want to load a register with the location of the
-function `main' then jump to that function, you could do it as follows:
-     ldi     r2, main@word
-     jmp     r2
-
-
-File: as.info,  Node: D10V-Float,  Next: D10V-Opcodes,  Prev: D10V-Syntax,  Up: D10V-Dependent
-
-8.6.3 Floating Point
---------------------
-
-The D10V has no hardware floating point, but the `.float' and `.double'
-directives generates IEEE floating-point numbers for compatibility with
-other development tools.
-
-
-File: as.info,  Node: D10V-Opcodes,  Prev: D10V-Float,  Up: D10V-Dependent
-
-8.6.4 Opcodes
--------------
-
-For detailed information on the D10V machine instruction set, see `D10V
-Architecture: A VLIW Microprocessor for Multimedia Applications'
-(Mitsubishi Electric Corp.).  `as' implements all the standard D10V
-opcodes.  The only changes are those described in the section on size
-modifiers
-
-
-File: as.info,  Node: D30V-Dependent,  Next: H8/300-Dependent,  Prev: D10V-Dependent,  Up: Machine Dependencies
-
-8.7 D30V Dependent Features
-===========================
-
-* Menu:
-
-* D30V-Opts::                   D30V Options
-* D30V-Syntax::                 Syntax
-* D30V-Float::                  Floating Point
-* D30V-Opcodes::                Opcodes
-
-
-File: as.info,  Node: D30V-Opts,  Next: D30V-Syntax,  Up: D30V-Dependent
-
-8.7.1 D30V Options
-------------------
-
-The Mitsubishi D30V version of `as' has a few machine dependent options.
-
-`-O'
-     The D30V can often execute two sub-instructions in parallel. When
-     this option is used, `as' will attempt to optimize its output by
-     detecting when instructions can be executed in parallel.
-
-`-n'
-     When this option is used, `as' will issue a warning every time it
-     adds a nop instruction.
-
-`-N'
-     When this option is used, `as' will issue a warning if it needs to
-     insert a nop after a 32-bit multiply before a load or 16-bit
-     multiply instruction.
-
-
-File: as.info,  Node: D30V-Syntax,  Next: D30V-Float,  Prev: D30V-Opts,  Up: D30V-Dependent
-
-8.7.2 Syntax
-------------
-
-The D30V syntax is based on the syntax in Mitsubishi's D30V
-architecture manual.  The differences are detailed below.
-
-* Menu:
-
-* D30V-Size::                 Size Modifiers
-* D30V-Subs::                 Sub-Instructions
-* D30V-Chars::                Special Characters
-* D30V-Guarded::              Guarded Execution
-* D30V-Regs::                 Register Names
-* D30V-Addressing::           Addressing Modes
-
-
-File: as.info,  Node: D30V-Size,  Next: D30V-Subs,  Up: D30V-Syntax
-
-8.7.2.1 Size Modifiers
-......................
-
-The D30V version of `as' uses the instruction names in the D30V
-Architecture Manual.  However, the names in the manual are sometimes
-ambiguous.  There are instruction names that can assemble to a short or
-long form opcode.  How does the assembler pick the correct form?  `as'
-will always pick the smallest form if it can.  When dealing with a
-symbol that is not defined yet when a line is being assembled, it will
-always use the long form.  If you need to force the assembler to use
-either the short or long form of the instruction, you can append either
-`.s' (short) or `.l' (long) to it.  For example, if you are writing an
-assembly program and you want to do a branch to a symbol that is
-defined later in your program, you can write `bra.s foo'.  Objdump and
-GDB will always append `.s' or `.l' to instructions which have both
-short and long forms.
-
-
-File: as.info,  Node: D30V-Subs,  Next: D30V-Chars,  Prev: D30V-Size,  Up: D30V-Syntax
-
-8.7.2.2 Sub-Instructions
-........................
-
-The D30V assembler takes as input a series of instructions, either
-one-per-line, or in the special two-per-line format described in the
-next section.  Some of these instructions will be short-form or
-sub-instructions.  These sub-instructions can be packed into a single
-instruction.  The assembler will do this automatically.  It will also
-detect when it should not pack instructions.  For example, when a label
-is defined, the next instruction will never be packaged with the
-previous one.  Whenever a branch and link instruction is called, it
-will not be packaged with the next instruction so the return address
-will be valid.  Nops are automatically inserted when necessary.
-
-   If you do not want the assembler automatically making these
-decisions, you can control the packaging and execution type (parallel
-or sequential) with the special execution symbols described in the next
-section.
-
-
-File: as.info,  Node: D30V-Chars,  Next: D30V-Guarded,  Prev: D30V-Subs,  Up: D30V-Syntax
-
-8.7.2.3 Special Characters
-..........................
-
-`;' and `#' are the line comment characters.  Sub-instructions may be
-executed in order, in reverse-order, or in parallel.  Instructions
-listed in the standard one-per-line format will be executed
-sequentially unless you use the `-O' option.
-
-   To specify the executing order, use the following symbols:
-`->'
-     Sequential with instruction on the left first.
-
-`<-'
-     Sequential with instruction on the right first.
-
-`||'
-     Parallel
-
-   The D30V syntax allows either one instruction per line, one
-instruction per line with the execution symbol, or two instructions per
-line.  For example
-`abs r2,r3 -> abs r4,r5'
-     Execute these sequentially.  The instruction on the right is in
-     the right container and is executed second.
-
-`abs r2,r3 <- abs r4,r5'
-     Execute these reverse-sequentially.  The instruction on the right
-     is in the right container, and is executed first.
-
-`abs r2,r3 || abs r4,r5'
-     Execute these in parallel.
-
-`ldw r2,@(r3,r4) ||'
-`mulx r6,r8,r9'
-     Two-line format. Execute these in parallel.
-
-`mulx a0,r8,r9'
-`stw r2,@(r3,r4)'
-     Two-line format. Execute these sequentially unless `-O' option is
-     used.  If the `-O' option is used, the assembler will determine if
-     the instructions could be done in parallel (the above two
-     instructions can be done in parallel), and if so, emit them as
-     parallel instructions.  The assembler will put them in the proper
-     containers.  In the above example, the assembler will put the
-     `stw' instruction in left container and the `mulx' instruction in
-     the right container.
-
-`stw r2,@(r3,r4) ->'
-`mulx a0,r8,r9'
-     Two-line format.  Execute the `stw' instruction followed by the
-     `mulx' instruction sequentially.  The first instruction goes in the
-     left container and the second instruction goes into right
-     container.  The assembler will give an error if the machine
-     ordering constraints are violated.
-
-`stw r2,@(r3,r4) <-'
-`mulx a0,r8,r9'
-     Same as previous example, except that the `mulx' instruction is
-     executed before the `stw' instruction.
-
-   Since `$' has no special meaning, you may use it in symbol names.
-
-
-File: as.info,  Node: D30V-Guarded,  Next: D30V-Regs,  Prev: D30V-Chars,  Up: D30V-Syntax
-
-8.7.2.4 Guarded Execution
-.........................
-
-`as' supports the full range of guarded execution directives for each
-instruction.  Just append the directive after the instruction proper.
-The directives are:
-
-`/tx'
-     Execute the instruction if flag f0 is true.
-
-`/fx'
-     Execute the instruction if flag f0 is false.
-
-`/xt'
-     Execute the instruction if flag f1 is true.
-
-`/xf'
-     Execute the instruction if flag f1 is false.
-
-`/tt'
-     Execute the instruction if both flags f0 and f1 are true.
-
-`/tf'
-     Execute the instruction if flag f0 is true and flag f1 is false.
-
-
-File: as.info,  Node: D30V-Regs,  Next: D30V-Addressing,  Prev: D30V-Guarded,  Up: D30V-Syntax
-
-8.7.2.5 Register Names
-......................
-
-You can use the predefined symbols `r0' through `r63' to refer to the
-D30V registers.  You can also use `sp' as an alias for `r63' and `link'
-as an alias for `r62'.  The accumulators are `a0' and `a1'.
-
-   The D30V also has predefined symbols for these control registers and
-status bits:
-`psw'
-     Processor Status Word
-
-`bpsw'
-     Backup Processor Status Word
-
-`pc'
-     Program Counter
-
-`bpc'
-     Backup Program Counter
-
-`rpt_c'
-     Repeat Count
-
-`rpt_s'
-     Repeat Start address
-
-`rpt_e'
-     Repeat End address
-
-`mod_s'
-     Modulo Start address
-
-`mod_e'
-     Modulo End address
-
-`iba'
-     Instruction Break Address
-
-`f0'
-     Flag 0
-
-`f1'
-     Flag 1
-
-`f2'
-     Flag 2
-
-`f3'
-     Flag 3
-
-`f4'
-     Flag 4
-
-`f5'
-     Flag 5
-
-`f6'
-     Flag 6
-
-`f7'
-     Flag 7
-
-`s'
-     Same as flag 4 (saturation flag)
-
-`v'
-     Same as flag 5 (overflow flag)
-
-`va'
-     Same as flag 6 (sticky overflow flag)
-
-`c'
-     Same as flag 7 (carry/borrow flag)
-
-`b'
-     Same as flag 7 (carry/borrow flag)
-
-
-File: as.info,  Node: D30V-Addressing,  Prev: D30V-Regs,  Up: D30V-Syntax
-
-8.7.2.6 Addressing Modes
-........................
-
-`as' understands the following addressing modes for the D30V.  `RN' in
-the following refers to any of the numbered registers, but _not_ the
-control registers.
-`RN'
-     Register direct
-
-`@RN'
-     Register indirect
-
-`@RN+'
-     Register indirect with post-increment
-
-`@RN-'
-     Register indirect with post-decrement
-
-`@-SP'
-     Register indirect with pre-decrement
-
-`@(DISP, RN)'
-     Register indirect with displacement
-
-`ADDR'
-     PC relative address (for branch or rep).
-
-`#IMM'
-     Immediate data (the `#' is optional and ignored)
-
-
-File: as.info,  Node: D30V-Float,  Next: D30V-Opcodes,  Prev: D30V-Syntax,  Up: D30V-Dependent
-
-8.7.3 Floating Point
---------------------
-
-The D30V has no hardware floating point, but the `.float' and `.double'
-directives generates IEEE floating-point numbers for compatibility with
-other development tools.
-
-
-File: as.info,  Node: D30V-Opcodes,  Prev: D30V-Float,  Up: D30V-Dependent
-
-8.7.4 Opcodes
--------------
-
-For detailed information on the D30V machine instruction set, see `D30V
-Architecture: A VLIW Microprocessor for Multimedia Applications'
-(Mitsubishi Electric Corp.).  `as' implements all the standard D30V
-opcodes.  The only changes are those described in the section on size
-modifiers
-
-
-File: as.info,  Node: H8/300-Dependent,  Next: H8/500-Dependent,  Prev: D30V-Dependent,  Up: Machine Dependencies
-
-8.8 H8/300 Dependent Features
-=============================
-
-* Menu:
-
-* H8/300 Options::              Options
-* H8/300 Syntax::               Syntax
-* H8/300 Floating Point::       Floating Point
-* H8/300 Directives::           H8/300 Machine Directives
-* H8/300 Opcodes::              Opcodes
-
-
-File: as.info,  Node: H8/300 Options,  Next: H8/300 Syntax,  Up: H8/300-Dependent
-
-8.8.1 Options
--------------
-
-`as' has no additional command-line options for the Renesas (formerly
-Hitachi) H8/300 family.
-
-
-File: as.info,  Node: H8/300 Syntax,  Next: H8/300 Floating Point,  Prev: H8/300 Options,  Up: H8/300-Dependent
-
-8.8.2 Syntax
-------------
-
-* Menu:
-
-* H8/300-Chars::                Special Characters
-* H8/300-Regs::                 Register Names
-* H8/300-Addressing::           Addressing Modes
-
-
-File: as.info,  Node: H8/300-Chars,  Next: H8/300-Regs,  Up: H8/300 Syntax
-
-8.8.2.1 Special Characters
-..........................
-
-`;' is the line comment character.
-
-   `$' can be used instead of a newline to separate statements.
-Therefore _you may not use `$' in symbol names_ on the H8/300.
-
-
-File: as.info,  Node: H8/300-Regs,  Next: H8/300-Addressing,  Prev: H8/300-Chars,  Up: H8/300 Syntax
-
-8.8.2.2 Register Names
-......................
-
-You can use predefined symbols of the form `rNh' and `rNl' to refer to
-the H8/300 registers as sixteen 8-bit general-purpose registers.  N is
-a digit from `0' to `7'); for instance, both `r0h' and `r7l' are valid
-register names.
-
-   You can also use the eight predefined symbols `rN' to refer to the
-H8/300 registers as 16-bit registers (you must use this form for
-addressing).
-
-   On the H8/300H, you can also use the eight predefined symbols `erN'
-(`er0' ... `er7') to refer to the 32-bit general purpose registers.
-
-   The two control registers are called `pc' (program counter; a 16-bit
-register, except on the H8/300H where it is 24 bits) and `ccr'
-(condition code register; an 8-bit register).  `r7' is used as the
-stack pointer, and can also be called `sp'.
-
-
-File: as.info,  Node: H8/300-Addressing,  Prev: H8/300-Regs,  Up: H8/300 Syntax
-
-8.8.2.3 Addressing Modes
-........................
-
-as understands the following addressing modes for the H8/300:
-`rN'
-     Register direct
-
-`@rN'
-     Register indirect
-
-`@(D, rN)'
-`@(D:16, rN)'
-`@(D:24, rN)'
-     Register indirect: 16-bit or 24-bit displacement D from register
-     N.  (24-bit displacements are only meaningful on the H8/300H.)
-
-`@rN+'
-     Register indirect with post-increment
-
-`@-rN'
-     Register indirect with pre-decrement
-
-``@'AA'
-``@'AA:8'
-``@'AA:16'
-``@'AA:24'
-     Absolute address `aa'.  (The address size `:24' only makes sense
-     on the H8/300H.)
-
-`#XX'
-`#XX:8'
-`#XX:16'
-`#XX:32'
-     Immediate data XX.  You may specify the `:8', `:16', or `:32' for
-     clarity, if you wish; but `as' neither requires this nor uses
-     it--the data size required is taken from context.
-
-``@'`@'AA'
-``@'`@'AA:8'
-     Memory indirect.  You may specify the `:8' for clarity, if you
-     wish; but `as' neither requires this nor uses it.
-
-
-File: as.info,  Node: H8/300 Floating Point,  Next: H8/300 Directives,  Prev: H8/300 Syntax,  Up: H8/300-Dependent
-
-8.8.3 Floating Point
---------------------
-
-The H8/300 family has no hardware floating point, but the `.float'
-directive generates IEEE floating-point numbers for compatibility with
-other development tools.
-
-
-File: as.info,  Node: H8/300 Directives,  Next: H8/300 Opcodes,  Prev: H8/300 Floating Point,  Up: H8/300-Dependent
-
-8.8.4 H8/300 Machine Directives
--------------------------------
-
-`as' has the following machine-dependent directives for the H8/300:
-
-`.h8300h'
-     Recognize and emit additional instructions for the H8/300H
-     variant, and also make `.int' emit 32-bit numbers rather than the
-     usual (16-bit) for the H8/300 family.
-
-`.h8300s'
-     Recognize and emit additional instructions for the H8S variant, and
-     also make `.int' emit 32-bit numbers rather than the usual (16-bit)
-     for the H8/300 family.
-
-`.h8300hn'
-     Recognize and emit additional instructions for the H8/300H variant
-     in normal mode, and also make `.int' emit 32-bit numbers rather
-     than the usual (16-bit) for the H8/300 family.
-
-`.h8300sn'
-     Recognize and emit additional instructions for the H8S variant in
-     normal mode, and also make `.int' emit 32-bit numbers rather than
-     the usual (16-bit) for the H8/300 family.
-
-   On the H8/300 family (including the H8/300H) `.word' directives
-generate 16-bit numbers.
-
-
-File: as.info,  Node: H8/300 Opcodes,  Prev: H8/300 Directives,  Up: H8/300-Dependent
-
-8.8.5 Opcodes
--------------
-
-For detailed information on the H8/300 machine instruction set, see
-`H8/300 Series Programming Manual'.  For information specific to the
-H8/300H, see `H8/300H Series Programming Manual' (Renesas).
-
-   `as' implements all the standard H8/300 opcodes.  No additional
-pseudo-instructions are needed on this family.
-
-   The following table summarizes the H8/300 opcodes, and their
-arguments.  Entries marked `*' are opcodes used only on the H8/300H.
-
-              Legend:
-                 Rs   source register
-                 Rd   destination register
-                 abs  absolute address
-                 imm  immediate data
-              disp:N  N-bit displacement from a register
-             pcrel:N  N-bit displacement relative to program counter
-
-        add.b #imm,rd              *  andc #imm,ccr
-        add.b rs,rd                   band #imm,rd
-        add.w rs,rd                   band #imm,@rd
-     *  add.w #imm,rd                 band #imm,@abs:8
-     *  add.l rs,rd                   bra  pcrel:8
-     *  add.l #imm,rd              *  bra  pcrel:16
-        adds #imm,rd                  bt   pcrel:8
-        addx #imm,rd               *  bt   pcrel:16
-        addx rs,rd                    brn  pcrel:8
-        and.b #imm,rd              *  brn  pcrel:16
-        and.b rs,rd                   bf   pcrel:8
-     *  and.w rs,rd                *  bf   pcrel:16
-     *  and.w #imm,rd                 bhi  pcrel:8
-     *  and.l #imm,rd              *  bhi  pcrel:16
-     *  and.l rs,rd                   bls  pcrel:8
-
-     *  bls  pcrel:16                 bld  #imm,rd
-        bcc  pcrel:8                  bld  #imm,@rd
-     *  bcc  pcrel:16                 bld  #imm,@abs:8
-        bhs  pcrel:8                  bnot #imm,rd
-     *  bhs  pcrel:16                 bnot #imm,@rd
-        bcs  pcrel:8                  bnot #imm,@abs:8
-     *  bcs  pcrel:16                 bnot rs,rd
-        blo  pcrel:8                  bnot rs,@rd
-     *  blo  pcrel:16                 bnot rs,@abs:8
-        bne  pcrel:8                  bor  #imm,rd
-     *  bne  pcrel:16                 bor  #imm,@rd
-        beq  pcrel:8                  bor  #imm,@abs:8
-     *  beq  pcrel:16                 bset #imm,rd
-        bvc  pcrel:8                  bset #imm,@rd
-     *  bvc  pcrel:16                 bset #imm,@abs:8
-        bvs  pcrel:8                  bset rs,rd
-     *  bvs  pcrel:16                 bset rs,@rd
-        bpl  pcrel:8                  bset rs,@abs:8
-     *  bpl  pcrel:16                 bsr  pcrel:8
-        bmi  pcrel:8                  bsr  pcrel:16
-     *  bmi  pcrel:16                 bst  #imm,rd
-        bge  pcrel:8                  bst  #imm,@rd
-     *  bge  pcrel:16                 bst  #imm,@abs:8
-        blt  pcrel:8                  btst #imm,rd
-     *  blt  pcrel:16                 btst #imm,@rd
-        bgt  pcrel:8                  btst #imm,@abs:8
-     *  bgt  pcrel:16                 btst rs,rd
-        ble  pcrel:8                  btst rs,@rd
-     *  ble  pcrel:16                 btst rs,@abs:8
-        bclr #imm,rd                  bxor #imm,rd
-        bclr #imm,@rd                 bxor #imm,@rd
-        bclr #imm,@abs:8              bxor #imm,@abs:8
-        bclr rs,rd                    cmp.b #imm,rd
-        bclr rs,@rd                   cmp.b rs,rd
-        bclr rs,@abs:8                cmp.w rs,rd
-        biand #imm,rd                 cmp.w rs,rd
-        biand #imm,@rd             *  cmp.w #imm,rd
-        biand #imm,@abs:8          *  cmp.l #imm,rd
-        bild #imm,rd               *  cmp.l rs,rd
-        bild #imm,@rd                 daa  rs
-        bild #imm,@abs:8              das  rs
-        bior #imm,rd                  dec.b rs
-        bior #imm,@rd              *  dec.w #imm,rd
-        bior #imm,@abs:8           *  dec.l #imm,rd
-        bist #imm,rd                  divxu.b rs,rd
-        bist #imm,@rd              *  divxu.w rs,rd
-        bist #imm,@abs:8           *  divxs.b rs,rd
-        bixor #imm,rd              *  divxs.w rs,rd
-        bixor #imm,@rd                eepmov
-        bixor #imm,@abs:8          *  eepmovw
-
-     *  exts.w rd                     mov.w rs,@abs:16
-     *  exts.l rd                  *  mov.l #imm,rd
-     *  extu.w rd                  *  mov.l rs,rd
-     *  extu.l rd                  *  mov.l @rs,rd
-        inc  rs                    *  mov.l @(disp:16,rs),rd
-     *  inc.w #imm,rd              *  mov.l @(disp:24,rs),rd
-     *  inc.l #imm,rd              *  mov.l @rs+,rd
-        jmp  @rs                   *  mov.l @abs:16,rd
-        jmp  abs                   *  mov.l @abs:24,rd
-        jmp  @@abs:8               *  mov.l rs,@rd
-        jsr  @rs                   *  mov.l rs,@(disp:16,rd)
-        jsr  abs                   *  mov.l rs,@(disp:24,rd)
-        jsr  @@abs:8               *  mov.l rs,@-rd
-        ldc  #imm,ccr              *  mov.l rs,@abs:16
-        ldc  rs,ccr                *  mov.l rs,@abs:24
-     *  ldc  @abs:16,ccr              movfpe @abs:16,rd
-     *  ldc  @abs:24,ccr              movtpe rs,@abs:16
-     *  ldc  @(disp:16,rs),ccr        mulxu.b rs,rd
-     *  ldc  @(disp:24,rs),ccr     *  mulxu.w rs,rd
-     *  ldc  @rs+,ccr              *  mulxs.b rs,rd
-     *  ldc  @rs,ccr               *  mulxs.w rs,rd
-     *  mov.b @(disp:24,rs),rd        neg.b rs
-     *  mov.b rs,@(disp:24,rd)     *  neg.w rs
-        mov.b @abs:16,rd           *  neg.l rs
-        mov.b rs,rd                   nop
-        mov.b @abs:8,rd               not.b rs
-        mov.b rs,@abs:8            *  not.w rs
-        mov.b rs,rd                *  not.l rs
-        mov.b #imm,rd                 or.b #imm,rd
-        mov.b @rs,rd                  or.b rs,rd
-        mov.b @(disp:16,rs),rd     *  or.w #imm,rd
-        mov.b @rs+,rd              *  or.w rs,rd
-        mov.b @abs:8,rd            *  or.l #imm,rd
-        mov.b rs,@rd               *  or.l rs,rd
-        mov.b rs,@(disp:16,rd)        orc  #imm,ccr
-        mov.b rs,@-rd                 pop.w rs
-        mov.b rs,@abs:8            *  pop.l rs
-        mov.w rs,@rd                  push.w rs
-     *  mov.w @(disp:24,rs),rd     *  push.l rs
-     *  mov.w rs,@(disp:24,rd)        rotl.b rs
-     *  mov.w @abs:24,rd           *  rotl.w rs
-     *  mov.w rs,@abs:24           *  rotl.l rs
-        mov.w rs,rd                   rotr.b rs
-        mov.w #imm,rd              *  rotr.w rs
-        mov.w @rs,rd               *  rotr.l rs
-        mov.w @(disp:16,rs),rd        rotxl.b rs
-        mov.w @rs+,rd              *  rotxl.w rs
-        mov.w @abs:16,rd           *  rotxl.l rs
-        mov.w rs,@(disp:16,rd)        rotxr.b rs
-        mov.w rs,@-rd              *  rotxr.w rs
-
-     *  rotxr.l rs                 *  stc  ccr,@(disp:24,rd)
-        bpt                        *  stc  ccr,@-rd
-        rte                        *  stc  ccr,@abs:16
-        rts                        *  stc  ccr,@abs:24
-        shal.b rs                     sub.b rs,rd
-     *  shal.w rs                     sub.w rs,rd
-     *  shal.l rs                  *  sub.w #imm,rd
-        shar.b rs                  *  sub.l rs,rd
-     *  shar.w rs                  *  sub.l #imm,rd
-     *  shar.l rs                     subs #imm,rd
-        shll.b rs                     subx #imm,rd
-     *  shll.w rs                     subx rs,rd
-     *  shll.l rs                  *  trapa #imm
-        shlr.b rs                     xor  #imm,rd
-     *  shlr.w rs                     xor  rs,rd
-     *  shlr.l rs                  *  xor.w #imm,rd
-        sleep                      *  xor.w rs,rd
-        stc  ccr,rd                *  xor.l #imm,rd
-     *  stc  ccr,@rs               *  xor.l rs,rd
-     *  stc  ccr,@(disp:16,rd)        xorc #imm,ccr
-
-   Four H8/300 instructions (`add', `cmp', `mov', `sub') are defined
-with variants using the suffixes `.b', `.w', and `.l' to specify the
-size of a memory operand.  `as' supports these suffixes, but does not
-require them; since one of the operands is always a register, `as' can
-deduce the correct size.
-
-   For example, since `r0' refers to a 16-bit register,
-     mov    r0,@foo
-is equivalent to
-     mov.w  r0,@foo
-
-   If you use the size suffixes, `as' issues a warning when the suffix
-and the register size do not match.
-
-
-File: as.info,  Node: H8/500-Dependent,  Next: HPPA-Dependent,  Prev: H8/300-Dependent,  Up: Machine Dependencies
-
-8.9 H8/500 Dependent Features
-=============================
-
-* Menu:
-
-* H8/500 Options::              Options
-* H8/500 Syntax::               Syntax
-* H8/500 Floating Point::       Floating Point
-* H8/500 Directives::           H8/500 Machine Directives
-* H8/500 Opcodes::              Opcodes
-
-
-File: as.info,  Node: H8/500 Options,  Next: H8/500 Syntax,  Up: H8/500-Dependent
-
-8.9.1 Options
--------------
-
-`as' has no additional command-line options for the Renesas (formerly
-Hitachi) H8/500 family.
-
-
-File: as.info,  Node: H8/500 Syntax,  Next: H8/500 Floating Point,  Prev: H8/500 Options,  Up: H8/500-Dependent
-
-8.9.2 Syntax
-------------
-
-* Menu:
-
-* H8/500-Chars::                Special Characters
-* H8/500-Regs::                 Register Names
-* H8/500-Addressing::           Addressing Modes
-
-
-File: as.info,  Node: H8/500-Chars,  Next: H8/500-Regs,  Up: H8/500 Syntax
-
-8.9.2.1 Special Characters
-..........................
-
-`!' is the line comment character.
-
-   `;' can be used instead of a newline to separate statements.
-
-   Since `$' has no special meaning, you may use it in symbol names.
-
-
-File: as.info,  Node: H8/500-Regs,  Next: H8/500-Addressing,  Prev: H8/500-Chars,  Up: H8/500 Syntax
-
-8.9.2.2 Register Names
-......................
-
-You can use the predefined symbols `r0', `r1', `r2', `r3', `r4', `r5',
-`r6', and `r7' to refer to the H8/500 registers.
-
-   The H8/500 also has these control registers:
-
-`cp'
-     code pointer
-
-`dp'
-     data pointer
-
-`bp'
-     base pointer
-
-`tp'
-     stack top pointer
-
-`ep'
-     extra pointer
-
-`sr'
-     status register
-
-`ccr'
-     condition code register
-
-   All registers are 16 bits long.  To represent 32 bit numbers, use two
-adjacent registers; for distant memory addresses, use one of the segment
-pointers (`cp' for the program counter; `dp' for `r0'-`r3'; `ep' for
-`r4' and `r5'; and `tp' for `r6' and `r7'.
-
-
-File: as.info,  Node: H8/500-Addressing,  Prev: H8/500-Regs,  Up: H8/500 Syntax
-
-8.9.2.3 Addressing Modes
-........................
-
-as understands the following addressing modes for the H8/500:
-`RN'
-     Register direct
-
-`@RN'
-     Register indirect
-
-`@(d:8, RN)'
-     Register indirect with 8 bit signed displacement
-
-`@(d:16, RN)'
-     Register indirect with 16 bit signed displacement
-
-`@-RN'
-     Register indirect with pre-decrement
-
-`@RN+'
-     Register indirect with post-increment
-
-`@AA:8'
-     8 bit absolute address
-
-`@AA:16'
-     16 bit absolute address
-
-`#XX:8'
-     8 bit immediate
-
-`#XX:16'
-     16 bit immediate
-
-
-File: as.info,  Node: H8/500 Floating Point,  Next: H8/500 Directives,  Prev: H8/500 Syntax,  Up: H8/500-Dependent
-
-8.9.3 Floating Point
---------------------
-
-The H8/500 family has no hardware floating point, but the `.float'
-directive generates IEEE floating-point numbers for compatibility with
-other development tools.
-
-
-File: as.info,  Node: H8/500 Directives,  Next: H8/500 Opcodes,  Prev: H8/500 Floating Point,  Up: H8/500-Dependent
-
-8.9.4 H8/500 Machine Directives
--------------------------------
-
-`as' has no machine-dependent directives for the H8/500.  However, on
-this platform the `.int' and `.word' directives generate 16-bit numbers.
-
-
-File: as.info,  Node: H8/500 Opcodes,  Prev: H8/500 Directives,  Up: H8/500-Dependent
-
-8.9.5 Opcodes
--------------
-
-For detailed information on the H8/500 machine instruction set, see
-`H8/500 Series Programming Manual' (Renesas M21T001).
-
-   `as' implements all the standard H8/500 opcodes.  No additional
-pseudo-instructions are needed on this family.
-
-   The following table summarizes H8/500 opcodes and their operands:
-
-     Legend:
-     abs8      8-bit absolute address
-     abs16     16-bit absolute address
-     abs24     24-bit absolute address
-     crb       `ccr', `br', `ep', `dp', `tp', `dp'
-     disp8     8-bit displacement
-     ea        `rn', `@rn', `@(d:8, rn)', `@(d:16, rn)',
-               `@-rn', `@rn+', `@aa:8', `@aa:16',
-               `#xx:8', `#xx:16'
-     ea_mem    `@rn', `@(d:8, rn)', `@(d:16, rn)',
-               `@-rn', `@rn+', `@aa:8', `@aa:16'
-     ea_noimm  `rn', `@rn', `@(d:8, rn)', `@(d:16, rn)',
-               `@-rn', `@rn+', `@aa:8', `@aa:16'
-     fp        r6
-     imm4      4-bit immediate data
-     imm8      8-bit immediate data
-     imm16     16-bit immediate data
-     pcrel8    8-bit offset from program counter
-     pcrel16   16-bit offset from program counter
-     qim       `-2', `-1', `1', `2'
-     rd        any register
-     rs        a register distinct from rd
-     rlist     comma-separated list of registers in parentheses;
-               register ranges `rd-rs' are allowed
-     sp        stack pointer (`r7')
-     sr        status register
-     sz        size; `.b' or `.w'.  If omitted, default `.w'
-
-     ldc[.b] ea,crb                 bcc[.w] pcrel16
-     ldc[.w] ea,sr                  bcc[.b] pcrel8
-     add[:q] sz qim,ea_noimm        bhs[.w] pcrel16
-     add[:g] sz ea,rd               bhs[.b] pcrel8
-     adds sz ea,rd                  bcs[.w] pcrel16
-     addx sz ea,rd                  bcs[.b] pcrel8
-     and sz ea,rd                   blo[.w] pcrel16
-     andc[.b] imm8,crb              blo[.b] pcrel8
-     andc[.w] imm16,sr              bne[.w] pcrel16
-     bpt                            bne[.b] pcrel8
-     bra[.w] pcrel16                beq[.w] pcrel16
-     bra[.b] pcrel8                 beq[.b] pcrel8
-     bt[.w] pcrel16                 bvc[.w] pcrel16
-     bt[.b] pcrel8                  bvc[.b] pcrel8
-     brn[.w] pcrel16                bvs[.w] pcrel16
-     brn[.b] pcrel8                 bvs[.b] pcrel8
-     bf[.w] pcrel16                 bpl[.w] pcrel16
-     bf[.b] pcrel8                  bpl[.b] pcrel8
-     bhi[.w] pcrel16                bmi[.w] pcrel16
-     bhi[.b] pcrel8                 bmi[.b] pcrel8
-     bls[.w] pcrel16                bge[.w] pcrel16
-     bls[.b] pcrel8                 bge[.b] pcrel8
-
-     blt[.w] pcrel16                mov[:g][.b] imm8,ea_mem
-     blt[.b] pcrel8                 mov[:g][.w] imm16,ea_mem
-     bgt[.w] pcrel16                movfpe[.b] ea,rd
-     bgt[.b] pcrel8                 movtpe[.b] rs,ea_noimm
-     ble[.w] pcrel16                mulxu sz ea,rd
-     ble[.b] pcrel8                 neg sz ea
-     bclr sz imm4,ea_noimm          nop
-     bclr sz rs,ea_noimm            not sz ea
-     bnot sz imm4,ea_noimm          or sz ea,rd
-     bnot sz rs,ea_noimm            orc[.b] imm8,crb
-     bset sz imm4,ea_noimm          orc[.w] imm16,sr
-     bset sz rs,ea_noimm            pjmp abs24
-     bsr[.b] pcrel8                 pjmp @rd
-     bsr[.w] pcrel16                pjsr abs24
-     btst sz imm4,ea_noimm          pjsr @rd
-     btst sz rs,ea_noimm            prtd imm8
-     clr sz ea                      prtd imm16
-     cmp[:e][.b] imm8,rd            prts
-     cmp[:i][.w] imm16,rd           rotl sz ea
-     cmp[:g].b imm8,ea_noimm        rotr sz ea
-     cmp[:g][.w] imm16,ea_noimm     rotxl sz ea
-     Cmp[:g] sz ea,rd               rotxr sz ea
-     dadd rs,rd                     rtd imm8
-     divxu sz ea,rd                 rtd imm16
-     dsub rs,rd                     rts
-     exts[.b] rd                    scb/f rs,pcrel8
-     extu[.b] rd                    scb/ne rs,pcrel8
-     jmp @rd                        scb/eq rs,pcrel8
-     jmp @(imm8,rd)                 shal sz ea
-     jmp @(imm16,rd)                shar sz ea
-     jmp abs16                      shll sz ea
-     jsr @rd                        shlr sz ea
-     jsr @(imm8,rd)                 sleep
-     jsr @(imm16,rd)                stc[.b] crb,ea_noimm
-     jsr abs16                      stc[.w] sr,ea_noimm
-     ldm @sp+,(rlist)               stm (rlist),@-sp
-     link fp,imm8                   sub sz ea,rd
-     link fp,imm16                  subs sz ea,rd
-     mov[:e][.b] imm8,rd            subx sz ea,rd
-     mov[:i][.w] imm16,rd           swap[.b] rd
-     mov[:l][.w] abs8,rd            tas[.b] ea
-     mov[:l].b abs8,rd              trapa imm4
-     mov[:s][.w] rs,abs8            trap/vs
-     mov[:s].b rs,abs8              tst sz ea
-     mov[:f][.w] @(disp8,fp),rd     unlk fp
-     mov[:f][.w] rs,@(disp8,fp)     xch[.w] rs,rd
-     mov[:f].b @(disp8,fp),rd       xor sz ea,rd
-     mov[:f].b rs,@(disp8,fp)       xorc.b imm8,crb
-     mov[:g] sz rs,ea_mem           xorc.w imm16,sr
-     mov[:g] sz ea,rd
-
-
-File: as.info,  Node: HPPA-Dependent,  Next: ESA/390-Dependent,  Prev: H8/500-Dependent,  Up: Machine Dependencies
-
-8.10 HPPA Dependent Features
-============================
-
-* Menu:
-
-* HPPA Notes::                Notes
-* HPPA Options::              Options
-* HPPA Syntax::               Syntax
-* HPPA Floating Point::       Floating Point
-* HPPA Directives::           HPPA Machine Directives
-* HPPA Opcodes::              Opcodes
-
-
-File: as.info,  Node: HPPA Notes,  Next: HPPA Options,  Up: HPPA-Dependent
-
-8.10.1 Notes
-------------
-
-As a back end for GNU CC `as' has been throughly tested and should work
-extremely well.  We have tested it only minimally on hand written
-assembly code and no one has tested it much on the assembly output from
-the HP compilers.
-
-   The format of the debugging sections has changed since the original
-`as' port (version 1.3X) was released; therefore, you must rebuild all
-HPPA objects and libraries with the new assembler so that you can debug
-the final executable.
-
-   The HPPA `as' port generates a small subset of the relocations
-available in the SOM and ELF object file formats.  Additional relocation
-support will be added as it becomes necessary.
-
-
-File: as.info,  Node: HPPA Options,  Next: HPPA Syntax,  Prev: HPPA Notes,  Up: HPPA-Dependent
-
-8.10.2 Options
---------------
-
-`as' has no machine-dependent command-line options for the HPPA.
-
-
-File: as.info,  Node: HPPA Syntax,  Next: HPPA Floating Point,  Prev: HPPA Options,  Up: HPPA-Dependent
-
-8.10.3 Syntax
--------------
-
-The assembler syntax closely follows the HPPA instruction set reference
-manual; assembler directives and general syntax closely follow the HPPA
-assembly language reference manual, with a few noteworthy differences.
-
-   First, a colon may immediately follow a label definition.  This is
-simply for compatibility with how most assembly language programmers
-write code.
-
-   Some obscure expression parsing problems may affect hand written
-code which uses the `spop' instructions, or code which makes significant
-use of the `!' line separator.
-
-   `as' is much less forgiving about missing arguments and other
-similar oversights than the HP assembler.  `as' notifies you of missing
-arguments as syntax errors; this is regarded as a feature, not a bug.
-
-   Finally, `as' allows you to use an external symbol without
-explicitly importing the symbol.  _Warning:_ in the future this will be
-an error for HPPA targets.
-
-   Special characters for HPPA targets include:
-
-   `;' is the line comment character.
-
-   `!' can be used instead of a newline to separate statements.
-
-   Since `$' has no special meaning, you may use it in symbol names.
-
-
-File: as.info,  Node: HPPA Floating Point,  Next: HPPA Directives,  Prev: HPPA Syntax,  Up: HPPA-Dependent
-
-8.10.4 Floating Point
----------------------
-
-The HPPA family uses IEEE floating-point numbers.
-
-
-File: as.info,  Node: HPPA Directives,  Next: HPPA Opcodes,  Prev: HPPA Floating Point,  Up: HPPA-Dependent
-
-8.10.5 HPPA Assembler Directives
---------------------------------
-
-`as' for the HPPA supports many additional directives for compatibility
-with the native assembler.  This section describes them only briefly.
-For detailed information on HPPA-specific assembler directives, see
-`HP9000 Series 800 Assembly Language Reference Manual' (HP 92432-90001).
-
-   `as' does _not_ support the following assembler directives described
-in the HP manual:
-
-     .endm           .liston
-     .enter          .locct
-     .leave          .macro
-     .listoff
-
-   Beyond those implemented for compatibility, `as' supports one
-additional assembler directive for the HPPA: `.param'.  It conveys
-register argument locations for static functions.  Its syntax closely
-follows the `.export' directive.
-
-   These are the additional directives in `as' for the HPPA:
-
-`.block N'
-`.blockz N'
-     Reserve N bytes of storage, and initialize them to zero.
-
-`.call'
-     Mark the beginning of a procedure call.  Only the special case
-     with _no arguments_ is allowed.
-
-`.callinfo [ PARAM=VALUE, ... ]  [ FLAG, ... ]'
-     Specify a number of parameters and flags that define the
-     environment for a procedure.
-
-     PARAM may be any of `frame' (frame size), `entry_gr' (end of
-     general register range), `entry_fr' (end of float register range),
-     `entry_sr' (end of space register range).
-
-     The values for FLAG are `calls' or `caller' (proc has
-     subroutines), `no_calls' (proc does not call subroutines),
-     `save_rp' (preserve return pointer), `save_sp' (proc preserves
-     stack pointer), `no_unwind' (do not unwind this proc), `hpux_int'
-     (proc is interrupt routine).
-
-`.code'
-     Assemble into the standard section called `$TEXT$', subsection
-     `$CODE$'.
-
-`.copyright "STRING"'
-     In the SOM object format, insert STRING into the object code,
-     marked as a copyright string.
-
-`.copyright "STRING"'
-     In the ELF object format, insert STRING into the object code,
-     marked as a version string.
-
-`.enter'
-     Not yet supported; the assembler rejects programs containing this
-     directive.
-
-`.entry'
-     Mark the beginning of a procedure.
-
-`.exit'
-     Mark the end of a procedure.
-
-`.export NAME [ ,TYP ]  [ ,PARAM=R ]'
-     Make a procedure NAME available to callers.  TYP, if present, must
-     be one of `absolute', `code' (ELF only, not SOM), `data', `entry',
-     `data', `entry', `millicode', `plabel', `pri_prog', or `sec_prog'.
-
-     PARAM, if present, provides either relocation information for the
-     procedure arguments and result, or a privilege level.  PARAM may be
-     `argwN' (where N ranges from `0' to `3', and indicates one of four
-     one-word arguments); `rtnval' (the procedure's result); or
-     `priv_lev' (privilege level).  For arguments or the result, R
-     specifies how to relocate, and must be one of `no' (not
-     relocatable), `gr' (argument is in general register), `fr' (in
-     floating point register), or `fu' (upper half of float register).
-     For `priv_lev', R is an integer.
-
-`.half N'
-     Define a two-byte integer constant N; synonym for the portable
-     `as' directive `.short'.
-
-`.import NAME [ ,TYP ]'
-     Converse of `.export'; make a procedure available to call.  The
-     arguments use the same conventions as the first two arguments for
-     `.export'.
-
-`.label NAME'
-     Define NAME as a label for the current assembly location.
-
-`.leave'
-     Not yet supported; the assembler rejects programs containing this
-     directive.
-
-`.origin LC'
-     Advance location counter to LC. Synonym for the `as' portable
-     directive `.org'.
-
-`.param NAME [ ,TYP ]  [ ,PARAM=R ]'
-     Similar to `.export', but used for static procedures.
-
-`.proc'
-     Use preceding the first statement of a procedure.
-
-`.procend'
-     Use following the last statement of a procedure.
-
-`LABEL .reg EXPR'
-     Synonym for `.equ'; define LABEL with the absolute expression EXPR
-     as its value.
-
-`.space SECNAME [ ,PARAMS ]'
-     Switch to section SECNAME, creating a new section by that name if
-     necessary.  You may only use PARAMS when creating a new section,
-     not when switching to an existing one.  SECNAME may identify a
-     section by number rather than by name.
-
-     If specified, the list PARAMS declares attributes of the section,
-     identified by keywords.  The keywords recognized are `spnum=EXP'
-     (identify this section by the number EXP, an absolute expression),
-     `sort=EXP' (order sections according to this sort key when linking;
-     EXP is an absolute expression), `unloadable' (section contains no
-     loadable data), `notdefined' (this section defined elsewhere), and
-     `private' (data in this section not available to other programs).
-
-`.spnum SECNAM'
-     Allocate four bytes of storage, and initialize them with the
-     section number of the section named SECNAM.  (You can define the
-     section number with the HPPA `.space' directive.)
-
-`.string "STR"'
-     Copy the characters in the string STR to the object file.  *Note
-     Strings: Strings, for information on escape sequences you can use
-     in `as' strings.
-
-     _Warning!_ The HPPA version of `.string' differs from the usual
-     `as' definition: it does _not_ write a zero byte after copying STR.
-
-`.stringz "STR"'
-     Like `.string', but appends a zero byte after copying STR to object
-     file.
-
-`.subspa NAME [ ,PARAMS ]'
-`.nsubspa NAME [ ,PARAMS ]'
-     Similar to `.space', but selects a subsection NAME within the
-     current section.  You may only specify PARAMS when you create a
-     subsection (in the first instance of `.subspa' for this NAME).
-
-     If specified, the list PARAMS declares attributes of the
-     subsection, identified by keywords.  The keywords recognized are
-     `quad=EXPR' ("quadrant" for this subsection), `align=EXPR'
-     (alignment for beginning of this subsection; a power of two),
-     `access=EXPR' (value for "access rights" field), `sort=EXPR'
-     (sorting order for this subspace in link), `code_only' (subsection
-     contains only code), `unloadable' (subsection cannot be loaded
-     into memory), `comdat' (subsection is comdat), `common'
-     (subsection is common block), `dup_comm' (subsection may have
-     duplicate names), or `zero' (subsection is all zeros, do not write
-     in object file).
-
-     `.nsubspa' always creates a new subspace with the given name, even
-     if one with the same name already exists.
-
-     `comdat', `common' and `dup_comm' can be used to implement various
-     flavors of one-only support when using the SOM linker.  The SOM
-     linker only supports specific combinations of these flags.  The
-     details are not documented.  A brief description is provided here.
-
-     `comdat' provides a form of linkonce support.  It is useful for
-     both code and data subspaces.  A `comdat' subspace has a key symbol
-     marked by the `is_comdat' flag or `ST_COMDAT'.  Only the first
-     subspace for any given key is selected.  The key symbol becomes
-     universal in shared links.  This is similar to the behavior of
-     `secondary_def' symbols.
-
-     `common' provides Fortran named common support.  It is only useful
-     for data subspaces.  Symbols with the flag `is_common' retain this
-     flag in shared links.  Referencing a `is_common' symbol in a shared
-     library from outside the library doesn't work.  Thus, `is_common'
-     symbols must be output whenever they are needed.
-
-     `common' and `dup_comm' together provide Cobol common support.
-     The subspaces in this case must all be the same length.
-     Otherwise, this support is similar to the Fortran common support.
-
-     `dup_comm' by itself provides a type of one-only support for code.
-     Only the first `dup_comm' subspace is selected.  There is a rather
-     complex algorithm to compare subspaces.  Code symbols marked with
-     the `dup_common' flag are hidden.  This support was intended for
-     "C++ duplicate inlines".
-
-     A simplified technique is used to mark the flags of symbols based
-     on the flags of their subspace.  A symbol with the scope
-     SS_UNIVERSAL and type ST_ENTRY, ST_CODE or ST_DATA is marked with
-     the corresponding settings of `comdat', `common' and `dup_comm'
-     from the subspace, respectively.  This avoids having to introduce
-     additional directives to mark these symbols.  The HP assembler
-     sets `is_common' from `common'.  However, it doesn't set the
-     `dup_common' from `dup_comm'.  It doesn't have `comdat' support.
-
-`.version "STR"'
-     Write STR as version identifier in object code.
-
-
-File: as.info,  Node: HPPA Opcodes,  Prev: HPPA Directives,  Up: HPPA-Dependent
-
-8.10.6 Opcodes
---------------
-
-For detailed information on the HPPA machine instruction set, see
-`PA-RISC Architecture and Instruction Set Reference Manual' (HP
-09740-90039).
-
-
-File: as.info,  Node: ESA/390-Dependent,  Next: i386-Dependent,  Prev: HPPA-Dependent,  Up: Machine Dependencies
-
-8.11 ESA/390 Dependent Features
-===============================
-
-* Menu:
-
-* ESA/390 Notes::                Notes
-* ESA/390 Options::              Options
-* ESA/390 Syntax::               Syntax
-* ESA/390 Floating Point::       Floating Point
-* ESA/390 Directives::           ESA/390 Machine Directives
-* ESA/390 Opcodes::              Opcodes
-
-
-File: as.info,  Node: ESA/390 Notes,  Next: ESA/390 Options,  Up: ESA/390-Dependent
-
-8.11.1 Notes
-------------
-
-The ESA/390 `as' port is currently intended to be a back-end for the
-GNU CC compiler.  It is not HLASM compatible, although it does support
-a subset of some of the HLASM directives.  The only supported binary
-file format is ELF; none of the usual MVS/VM/OE/USS object file
-formats, such as ESD or XSD, are supported.
-
-   When used with the GNU CC compiler, the ESA/390 `as' will produce
-correct, fully relocated, functional binaries, and has been used to
-compile and execute large projects.  However, many aspects should still
-be considered experimental; these include shared library support,
-dynamically loadable objects, and any relocation other than the 31-bit
-relocation.
-
-
-File: as.info,  Node: ESA/390 Options,  Next: ESA/390 Syntax,  Prev: ESA/390 Notes,  Up: ESA/390-Dependent
-
-8.11.2 Options
---------------
-
-`as' has no machine-dependent command-line options for the ESA/390.
-
-
-File: as.info,  Node: ESA/390 Syntax,  Next: ESA/390 Floating Point,  Prev: ESA/390 Options,  Up: ESA/390-Dependent
-
-8.11.3 Syntax
--------------
-
-The opcode/operand syntax follows the ESA/390 Principles of Operation
-manual; assembler directives and general syntax are loosely based on the
-prevailing AT&T/SVR4/ELF/Solaris style notation.  HLASM-style directives
-are _not_ supported for the most part, with the exception of those
-described herein.
-
-   A leading dot in front of directives is optional, and the case of
-directives is ignored; thus for example, .using and USING have the same
-effect.
-
-   A colon may immediately follow a label definition.  This is simply
-for compatibility with how most assembly language programmers write
-code.
-
-   `#' is the line comment character.
-
-   `;' can be used instead of a newline to separate statements.
-
-   Since `$' has no special meaning, you may use it in symbol names.
-
-   Registers can be given the symbolic names r0..r15, fp0, fp2, fp4,
-fp6.  By using thesse symbolic names, `as' can detect simple syntax
-errors. The name rarg or r.arg is a synonym for r11, rtca or r.tca for
-r12, sp, r.sp, dsa r.dsa for r13, lr or r.lr for r14, rbase or r.base
-for r3 and rpgt or r.pgt for r4.
-
-   `*' is the current location counter.  Unlike `.' it is always
-relative to the last USING directive.  Note that this means that
-expressions cannot use multiplication, as any occurrence of `*' will be
-interpreted as a location counter.
-
-   All labels are relative to the last USING.  Thus, branches to a label
-always imply the use of base+displacement.
-
-   Many of the usual forms of address constants / address literals are
-supported.  Thus,
-     	.using	*,r3
-     	L	r15,=A(some_routine)
-     	LM	r6,r7,=V(some_longlong_extern)
-     	A	r1,=F'12'
-     	AH	r0,=H'42'
-     	ME	r6,=E'3.1416'
-     	MD	r6,=D'3.14159265358979'
-     	O	r6,=XL4'cacad0d0'
-     	.ltorg
-   should all behave as expected: that is, an entry in the literal pool
-will be created (or reused if it already exists), and the instruction
-operands will be the displacement into the literal pool using the
-current base register (as last declared with the `.using' directive).
-
-
-File: as.info,  Node: ESA/390 Floating Point,  Next: ESA/390 Directives,  Prev: ESA/390 Syntax,  Up: ESA/390-Dependent
-
-8.11.4 Floating Point
----------------------
-
-The assembler generates only IEEE floating-point numbers.  The older
-floating point formats are not supported.
-
-
-File: as.info,  Node: ESA/390 Directives,  Next: ESA/390 Opcodes,  Prev: ESA/390 Floating Point,  Up: ESA/390-Dependent
-
-8.11.5 ESA/390 Assembler Directives
------------------------------------
-
-`as' for the ESA/390 supports all of the standard ELF/SVR4 assembler
-directives that are documented in the main part of this documentation.
-Several additional directives are supported in order to implement the
-ESA/390 addressing model.  The most important of these are `.using' and
-`.ltorg'
-
-   These are the additional directives in `as' for the ESA/390:
-
-`.dc'
-     A small subset of the usual DC directive is supported.
-
-`.drop REGNO'
-     Stop using REGNO as the base register.  The REGNO must have been
-     previously declared with a `.using' directive in the same section
-     as the current section.
-
-`.ebcdic STRING'
-     Emit the EBCDIC equivalent of the indicated string.  The emitted
-     string will be null terminated.  Note that the directives
-     `.string' etc. emit ascii strings by default.
-
-`EQU'
-     The standard HLASM-style EQU directive is not supported; however,
-     the standard `as' directive .equ can be used to the same effect.
-
-`.ltorg'
-     Dump the literal pool accumulated so far; begin a new literal pool.
-     The literal pool will be written in the current section; in order
-     to generate correct assembly, a `.using' must have been previously
-     specified in the same section.
-
-`.using EXPR,REGNO'
-     Use REGNO as the base register for all subsequent RX, RS, and SS
-     form instructions. The EXPR will be evaluated to obtain the base
-     address; usually, EXPR will merely be `*'.
-
-     This assembler allows two `.using' directives to be simultaneously
-     outstanding, one in the `.text' section, and one in another section
-     (typically, the `.data' section).  This feature allows dynamically
-     loaded objects to be implemented in a relatively straightforward
-     way.  A `.using' directive must always be specified in the `.text'
-     section; this will specify the base register that will be used for
-     branches in the `.text' section.  A second `.using' may be
-     specified in another section; this will specify the base register
-     that is used for non-label address literals.  When a second
-     `.using' is specified, then the subsequent `.ltorg' must be put in
-     the same section; otherwise an error will result.
-
-     Thus, for example, the following code uses `r3' to address branch
-     targets and `r4' to address the literal pool, which has been
-     written to the `.data' section.  The is, the constants
-     `=A(some_routine)', `=H'42'' and `=E'3.1416'' will all appear in
-     the `.data' section.
-
-          .data
-          	.using  LITPOOL,r4
-          .text
-          	BASR	r3,0
-          	.using	*,r3
-                  B       START
-          	.long	LITPOOL
-          START:
-          	L	r4,4(,r3)
-          	L	r15,=A(some_routine)
-          	LTR	r15,r15
-          	BNE	LABEL
-          	AH	r0,=H'42'
-          LABEL:
-          	ME	r6,=E'3.1416'
-          .data
-          LITPOOL:
-          	.ltorg
-
-     Note that this dual-`.using' directive semantics extends and is
-     not compatible with HLASM semantics.  Note that this assembler
-     directive does not support the full range of HLASM semantics.
-
-
-
-File: as.info,  Node: ESA/390 Opcodes,  Prev: ESA/390 Directives,  Up: ESA/390-Dependent
-
-8.11.6 Opcodes
---------------
-
-For detailed information on the ESA/390 machine instruction set, see
-`ESA/390 Principles of Operation' (IBM Publication Number DZ9AR004).
-
-
-File: as.info,  Node: i386-Dependent,  Next: i860-Dependent,  Prev: ESA/390-Dependent,  Up: Machine Dependencies
-
-8.12 80386 Dependent Features
-=============================
-
-   The i386 version `as' supports both the original Intel 386
-architecture in both 16 and 32-bit mode as well as AMD x86-64
-architecture extending the Intel architecture to 64-bits.
-
-* Menu:
-
-* i386-Options::                Options
-* i386-Syntax::                 AT&T Syntax versus Intel Syntax
-* i386-Mnemonics::              Instruction Naming
-* i386-Regs::                   Register Naming
-* i386-Prefixes::               Instruction Prefixes
-* i386-Memory::                 Memory References
-* i386-Jumps::                  Handling of Jump Instructions
-* i386-Float::                  Floating Point
-* i386-SIMD::                   Intel's MMX and AMD's 3DNow! SIMD Operations
-* i386-16bit::                  Writing 16-bit Code
-* i386-Arch::                   Specifying an x86 CPU architecture
-* i386-Bugs::                   AT&T Syntax bugs
-* i386-Notes::                  Notes
-
-
-File: as.info,  Node: i386-Options,  Next: i386-Syntax,  Up: i386-Dependent
-
-8.12.1 Options
---------------
-
-The i386 version of `as' has a few machine dependent options:
-
-`--32 | --64'
-     Select the word size, either 32 bits or 64 bits. Selecting 32-bit
-     implies Intel i386 architecture, while 64-bit implies AMD x86-64
-     architecture.
-
-     These options are only available with the ELF object file format,
-     and require that the necessary BFD support has been included (on a
-     32-bit platform you have to add -enable-64-bit-bfd to configure
-     enable 64-bit usage and use x86-64 as target platform).
-
-`-n'
-     By default, x86 GAS replaces multiple nop instructions used for
-     alignment within code sections with multi-byte nop instructions
-     such as leal 0(%esi,1),%esi.  This switch disables the
-     optimization.
-
-
-File: as.info,  Node: i386-Syntax,  Next: i386-Mnemonics,  Prev: i386-Options,  Up: i386-Dependent
-
-8.12.2 AT&T Syntax versus Intel Syntax
---------------------------------------
-
-`as' now supports assembly using Intel assembler syntax.
-`.intel_syntax' selects Intel mode, and `.att_syntax' switches back to
-the usual AT&T mode for compatibility with the output of `gcc'.  Either
-of these directives may have an optional argument, `prefix', or
-`noprefix' specifying whether registers require a `%' prefix.  AT&T
-System V/386 assembler syntax is quite different from Intel syntax.  We
-mention these differences because almost all 80386 documents use Intel
-syntax.  Notable differences between the two syntaxes are:
-
-   * AT&T immediate operands are preceded by `$'; Intel immediate
-     operands are undelimited (Intel `push 4' is AT&T `pushl $4').
-     AT&T register operands are preceded by `%'; Intel register operands
-     are undelimited.  AT&T absolute (as opposed to PC relative)
-     jump/call operands are prefixed by `*'; they are undelimited in
-     Intel syntax.
-
-   * AT&T and Intel syntax use the opposite order for source and
-     destination operands.  Intel `add eax, 4' is `addl $4, %eax'.  The
-     `source, dest' convention is maintained for compatibility with
-     previous Unix assemblers.  Note that instructions with more than
-     one source operand, such as the `enter' instruction, do _not_ have
-     reversed order.  *Note i386-Bugs::.
-
-   * In AT&T syntax the size of memory operands is determined from the
-     last character of the instruction mnemonic.  Mnemonic suffixes of
-     `b', `w', `l' and `q' specify byte (8-bit), word (16-bit), long
-     (32-bit) and quadruple word (64-bit) memory references.  Intel
-     syntax accomplishes this by prefixing memory operands (_not_ the
-     instruction mnemonics) with `byte ptr', `word ptr', `dword ptr'
-     and `qword ptr'.  Thus, Intel `mov al, byte ptr FOO' is `movb FOO,
-     %al' in AT&T syntax.
-
-   * Immediate form long jumps and calls are `lcall/ljmp $SECTION,
-     $OFFSET' in AT&T syntax; the Intel syntax is `call/jmp far
-     SECTION:OFFSET'.  Also, the far return instruction is `lret
-     $STACK-ADJUST' in AT&T syntax; Intel syntax is `ret far
-     STACK-ADJUST'.
-
-   * The AT&T assembler does not provide support for multiple section
-     programs.  Unix style systems expect all programs to be single
-     sections.
-
-
-File: as.info,  Node: i386-Mnemonics,  Next: i386-Regs,  Prev: i386-Syntax,  Up: i386-Dependent
-
-8.12.3 Instruction Naming
--------------------------
-
-Instruction mnemonics are suffixed with one character modifiers which
-specify the size of operands.  The letters `b', `w', `l' and `q'
-specify byte, word, long and quadruple word operands.  If no suffix is
-specified by an instruction then `as' tries to fill in the missing
-suffix based on the destination register operand (the last one by
-convention).  Thus, `mov %ax, %bx' is equivalent to `movw %ax, %bx';
-also, `mov $1, %bx' is equivalent to `movw $1, bx'.  Note that this is
-incompatible with the AT&T Unix assembler which assumes that a missing
-mnemonic suffix implies long operand size.  (This incompatibility does
-not affect compiler output since compilers always explicitly specify
-the mnemonic suffix.)
-
-   Almost all instructions have the same names in AT&T and Intel format.
-There are a few exceptions.  The sign extend and zero extend
-instructions need two sizes to specify them.  They need a size to
-sign/zero extend _from_ and a size to zero extend _to_.  This is
-accomplished by using two instruction mnemonic suffixes in AT&T syntax.
-Base names for sign extend and zero extend are `movs...' and `movz...'
-in AT&T syntax (`movsx' and `movzx' in Intel syntax).  The instruction
-mnemonic suffixes are tacked on to this base name, the _from_ suffix
-before the _to_ suffix.  Thus, `movsbl %al, %edx' is AT&T syntax for
-"move sign extend _from_ %al _to_ %edx."  Possible suffixes, thus, are
-`bl' (from byte to long), `bw' (from byte to word), `wl' (from word to
-long), `bq' (from byte to quadruple word), `wq' (from word to quadruple
-word), and `lq' (from long to quadruple word).
-
-   The Intel-syntax conversion instructions
-
-   * `cbw' -- sign-extend byte in `%al' to word in `%ax',
-
-   * `cwde' -- sign-extend word in `%ax' to long in `%eax',
-
-   * `cwd' -- sign-extend word in `%ax' to long in `%dx:%ax',
-
-   * `cdq' -- sign-extend dword in `%eax' to quad in `%edx:%eax',
-
-   * `cdqe' -- sign-extend dword in `%eax' to quad in `%rax' (x86-64
-     only),
-
-   * `cqo' -- sign-extend quad in `%rax' to octuple in `%rdx:%rax'
-     (x86-64 only),
-
-are called `cbtw', `cwtl', `cwtd', `cltd', `cltq', and `cqto' in AT&T
-naming.  `as' accepts either naming for these instructions.
-
-   Far call/jump instructions are `lcall' and `ljmp' in AT&T syntax,
-but are `call far' and `jump far' in Intel convention.
-
-
-File: as.info,  Node: i386-Regs,  Next: i386-Prefixes,  Prev: i386-Mnemonics,  Up: i386-Dependent
-
-8.12.4 Register Naming
-----------------------
-
-Register operands are always prefixed with `%'.  The 80386 registers
-consist of
-
-   * the 8 32-bit registers `%eax' (the accumulator), `%ebx', `%ecx',
-     `%edx', `%edi', `%esi', `%ebp' (the frame pointer), and `%esp'
-     (the stack pointer).
-
-   * the 8 16-bit low-ends of these: `%ax', `%bx', `%cx', `%dx', `%di',
-     `%si', `%bp', and `%sp'.
-
-   * the 8 8-bit registers: `%ah', `%al', `%bh', `%bl', `%ch', `%cl',
-     `%dh', and `%dl' (These are the high-bytes and low-bytes of `%ax',
-     `%bx', `%cx', and `%dx')
-
-   * the 6 section registers `%cs' (code section), `%ds' (data
-     section), `%ss' (stack section), `%es', `%fs', and `%gs'.
-
-   * the 3 processor control registers `%cr0', `%cr2', and `%cr3'.
-
-   * the 6 debug registers `%db0', `%db1', `%db2', `%db3', `%db6', and
-     `%db7'.
-
-   * the 2 test registers `%tr6' and `%tr7'.
-
-   * the 8 floating point register stack `%st' or equivalently
-     `%st(0)', `%st(1)', `%st(2)', `%st(3)', `%st(4)', `%st(5)',
-     `%st(6)', and `%st(7)'.  These registers are overloaded by 8 MMX
-     registers `%mm0', `%mm1', `%mm2', `%mm3', `%mm4', `%mm5', `%mm6'
-     and `%mm7'.
-
-   * the 8 SSE registers registers `%xmm0', `%xmm1', `%xmm2', `%xmm3',
-     `%xmm4', `%xmm5', `%xmm6' and `%xmm7'.
-
-   The AMD x86-64 architecture extends the register set by:
-
-   * enhancing the 8 32-bit registers to 64-bit: `%rax' (the
-     accumulator), `%rbx', `%rcx', `%rdx', `%rdi', `%rsi', `%rbp' (the
-     frame pointer), `%rsp' (the stack pointer)
-
-   * the 8 extended registers `%r8'-`%r15'.
-
-   * the 8 32-bit low ends of the extended registers: `%r8d'-`%r15d'
-
-   * the 8 16-bit low ends of the extended registers: `%r8w'-`%r15w'
-
-   * the 8 8-bit low ends of the extended registers: `%r8b'-`%r15b'
-
-   * the 4 8-bit registers: `%sil', `%dil', `%bpl', `%spl'.
-
-   * the 8 debug registers: `%db8'-`%db15'.
-
-   * the 8 SSE registers: `%xmm8'-`%xmm15'.
-
-
-File: as.info,  Node: i386-Prefixes,  Next: i386-Memory,  Prev: i386-Regs,  Up: i386-Dependent
-
-8.12.5 Instruction Prefixes
----------------------------
-
-Instruction prefixes are used to modify the following instruction.  They
-are used to repeat string instructions, to provide section overrides, to
-perform bus lock operations, and to change operand and address sizes.
-(Most instructions that normally operate on 32-bit operands will use
-16-bit operands if the instruction has an "operand size" prefix.)
-Instruction prefixes are best written on the same line as the
-instruction they act upon. For example, the `scas' (scan string)
-instruction is repeated with:
-
-             repne scas %es:(%edi),%al
-
-   You may also place prefixes on the lines immediately preceding the
-instruction, but this circumvents checks that `as' does with prefixes,
-and will not work with all prefixes.
-
-   Here is a list of instruction prefixes:
-
-   * Section override prefixes `cs', `ds', `ss', `es', `fs', `gs'.
-     These are automatically added by specifying using the
-     SECTION:MEMORY-OPERAND form for memory references.
-
-   * Operand/Address size prefixes `data16' and `addr16' change 32-bit
-     operands/addresses into 16-bit operands/addresses, while `data32'
-     and `addr32' change 16-bit ones (in a `.code16' section) into
-     32-bit operands/addresses.  These prefixes _must_ appear on the
-     same line of code as the instruction they modify. For example, in
-     a 16-bit `.code16' section, you might write:
-
-                  addr32 jmpl *(%ebx)
-
-   * The bus lock prefix `lock' inhibits interrupts during execution of
-     the instruction it precedes.  (This is only valid with certain
-     instructions; see a 80386 manual for details).
-
-   * The wait for coprocessor prefix `wait' waits for the coprocessor to
-     complete the current instruction.  This should never be needed for
-     the 80386/80387 combination.
-
-   * The `rep', `repe', and `repne' prefixes are added to string
-     instructions to make them repeat `%ecx' times (`%cx' times if the
-     current address size is 16-bits).  
-
-   * The `rex' family of prefixes is used by x86-64 to encode
-     extensions to i386 instruction set.  The `rex' prefix has four
-     bits -- an operand size overwrite (`64') used to change operand
-     size from 32-bit to 64-bit and X, Y and Z extensions bits used to
-     extend the register set.
-
-     You may write the `rex' prefixes directly. The `rex64xyz'
-     instruction emits `rex' prefix with all the bits set.  By omitting
-     the `64', `x', `y' or `z' you may write other prefixes as well.
-     Normally, there is no need to write the prefixes explicitly, since
-     gas will automatically generate them based on the instruction
-     operands.
-
-
-File: as.info,  Node: i386-Memory,  Next: i386-Jumps,  Prev: i386-Prefixes,  Up: i386-Dependent
-
-8.12.6 Memory References
-------------------------
-
-An Intel syntax indirect memory reference of the form
-
-     SECTION:[BASE + INDEX*SCALE + DISP]
-
-is translated into the AT&T syntax
-
-     SECTION:DISP(BASE, INDEX, SCALE)
-
-where BASE and INDEX are the optional 32-bit base and index registers,
-DISP is the optional displacement, and SCALE, taking the values 1, 2,
-4, and 8, multiplies INDEX to calculate the address of the operand.  If
-no SCALE is specified, SCALE is taken to be 1.  SECTION specifies the
-optional section register for the memory operand, and may override the
-default section register (see a 80386 manual for section register
-defaults). Note that section overrides in AT&T syntax _must_ be
-preceded by a `%'.  If you specify a section override which coincides
-with the default section register, `as' does _not_ output any section
-register override prefixes to assemble the given instruction.  Thus,
-section overrides can be specified to emphasize which section register
-is used for a given memory operand.
-
-   Here are some examples of Intel and AT&T style memory references:
-
-AT&T: `-4(%ebp)', Intel:  `[ebp - 4]'
-     BASE is `%ebp'; DISP is `-4'. SECTION is missing, and the default
-     section is used (`%ss' for addressing with `%ebp' as the base
-     register).  INDEX, SCALE are both missing.
-
-AT&T: `foo(,%eax,4)', Intel: `[foo + eax*4]'
-     INDEX is `%eax' (scaled by a SCALE 4); DISP is `foo'.  All other
-     fields are missing.  The section register here defaults to `%ds'.
-
-AT&T: `foo(,1)'; Intel `[foo]'
-     This uses the value pointed to by `foo' as a memory operand.  Note
-     that BASE and INDEX are both missing, but there is only _one_ `,'.
-     This is a syntactic exception.
-
-AT&T: `%gs:foo'; Intel `gs:foo'
-     This selects the contents of the variable `foo' with section
-     register SECTION being `%gs'.
-
-   Absolute (as opposed to PC relative) call and jump operands must be
-prefixed with `*'.  If no `*' is specified, `as' always chooses PC
-relative addressing for jump/call labels.
-
-   Any instruction that has a memory operand, but no register operand,
-_must_ specify its size (byte, word, long, or quadruple) with an
-instruction mnemonic suffix (`b', `w', `l' or `q', respectively).
-
-   The x86-64 architecture adds an RIP (instruction pointer relative)
-addressing.  This addressing mode is specified by using `rip' as a base
-register.  Only constant offsets are valid. For example:
-
-AT&T: `1234(%rip)', Intel: `[rip + 1234]'
-     Points to the address 1234 bytes past the end of the current
-     instruction.
-
-AT&T: `symbol(%rip)', Intel: `[rip + symbol]'
-     Points to the `symbol' in RIP relative way, this is shorter than
-     the default absolute addressing.
-
-   Other addressing modes remain unchanged in x86-64 architecture,
-except registers used are 64-bit instead of 32-bit.
-
-
-File: as.info,  Node: i386-Jumps,  Next: i386-Float,  Prev: i386-Memory,  Up: i386-Dependent
-
-8.12.7 Handling of Jump Instructions
-------------------------------------
-
-Jump instructions are always optimized to use the smallest possible
-displacements.  This is accomplished by using byte (8-bit) displacement
-jumps whenever the target is sufficiently close.  If a byte displacement
-is insufficient a long displacement is used.  We do not support word
-(16-bit) displacement jumps in 32-bit mode (i.e. prefixing the jump
-instruction with the `data16' instruction prefix), since the 80386
-insists upon masking `%eip' to 16 bits after the word displacement is
-added. (See also *note i386-Arch::)
-
-   Note that the `jcxz', `jecxz', `loop', `loopz', `loope', `loopnz'
-and `loopne' instructions only come in byte displacements, so that if
-you use these instructions (`gcc' does not use them) you may get an
-error message (and incorrect code).  The AT&T 80386 assembler tries to
-get around this problem by expanding `jcxz foo' to
-
-              jcxz cx_zero
-              jmp cx_nonzero
-     cx_zero: jmp foo
-     cx_nonzero:
-
diff -urN binutils-2.16.1/gas/doc/as.info-2 binutils-2.16.1-STEP/gas/doc/as.info-2
--- binutils-2.16.1/gas/doc/as.info-2	2005-06-13 07:02:26.000000000 +1200
+++ binutils-2.16.1-STEP/gas/doc/as.info-2	1970-01-01 12:00:00.000000000 +1200
@@ -1,7239 +0,0 @@
-This is ../.././gas/doc/as.info, produced by makeinfo version 4.7 from
-../.././gas/doc/as.texinfo.
-
-START-INFO-DIR-ENTRY
-* As: (as).                     The GNU assembler.
-* Gas: (as).                    The GNU assembler.
-END-INFO-DIR-ENTRY
-
-   This file documents the GNU Assembler "as".
-
-   Copyright (C) 1991, 92, 93, 94, 95, 96, 97, 98, 99, 2000, 2001, 2002
-Free Software Foundation, Inc.
-
-   Permission is granted to copy, distribute and/or modify this document
-under the terms of the GNU Free Documentation License, Version 1.1 or
-any later version published by the Free Software Foundation; with no
-Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
-Texts.  A copy of the license is included in the section entitled "GNU
-Free Documentation License".
-
-
-File: as.info,  Node: i386-Float,  Next: i386-SIMD,  Prev: i386-Jumps,  Up: i386-Dependent
-
-8.12.8 Floating Point
----------------------
-
-All 80387 floating point types except packed BCD are supported.  (BCD
-support may be added without much difficulty).  These data types are
-16-, 32-, and 64- bit integers, and single (32-bit), double (64-bit),
-and extended (80-bit) precision floating point.  Each supported type
-has an instruction mnemonic suffix and a constructor associated with
-it.  Instruction mnemonic suffixes specify the operand's data type.
-Constructors build these data types into memory.
-
-   * Floating point constructors are `.float' or `.single', `.double',
-     and `.tfloat' for 32-, 64-, and 80-bit formats.  These correspond
-     to instruction mnemonic suffixes `s', `l', and `t'. `t' stands for
-     80-bit (ten byte) real.  The 80387 only supports this format via
-     the `fldt' (load 80-bit real to stack top) and `fstpt' (store
-     80-bit real and pop stack) instructions.
-
-   * Integer constructors are `.word', `.long' or `.int', and `.quad'
-     for the 16-, 32-, and 64-bit integer formats.  The corresponding
-     instruction mnemonic suffixes are `s' (single), `l' (long), and
-     `q' (quad).  As with the 80-bit real format, the 64-bit `q' format
-     is only present in the `fildq' (load quad integer to stack top)
-     and `fistpq' (store quad integer and pop stack) instructions.
-
-   Register to register operations should not use instruction mnemonic
-suffixes.  `fstl %st, %st(1)' will give a warning, and be assembled as
-if you wrote `fst %st, %st(1)', since all register to register
-operations use 80-bit floating point operands. (Contrast this with
-`fstl %st, mem', which converts `%st' from 80-bit to 64-bit floating
-point format, then stores the result in the 4 byte location `mem')
-
-
-File: as.info,  Node: i386-SIMD,  Next: i386-16bit,  Prev: i386-Float,  Up: i386-Dependent
-
-8.12.9 Intel's MMX and AMD's 3DNow! SIMD Operations
----------------------------------------------------
-
-`as' supports Intel's MMX instruction set (SIMD instructions for
-integer data), available on Intel's Pentium MMX processors and Pentium
-II processors, AMD's K6 and K6-2 processors, Cyrix' M2 processor, and
-probably others.  It also supports AMD's 3DNow!  instruction set (SIMD
-instructions for 32-bit floating point data) available on AMD's K6-2
-processor and possibly others in the future.
-
-   Currently, `as' does not support Intel's floating point SIMD, Katmai
-(KNI).
-
-   The eight 64-bit MMX operands, also used by 3DNow!, are called
-`%mm0', `%mm1', ... `%mm7'.  They contain eight 8-bit integers, four
-16-bit integers, two 32-bit integers, one 64-bit integer, or two 32-bit
-floating point values.  The MMX registers cannot be used at the same
-time as the floating point stack.
-
-   See Intel and AMD documentation, keeping in mind that the operand
-order in instructions is reversed from the Intel syntax.
-
-
-File: as.info,  Node: i386-16bit,  Next: i386-Arch,  Prev: i386-SIMD,  Up: i386-Dependent
-
-8.12.10 Writing 16-bit Code
----------------------------
-
-While `as' normally writes only "pure" 32-bit i386 code or 64-bit
-x86-64 code depending on the default configuration, it also supports
-writing code to run in real mode or in 16-bit protected mode code
-segments.  To do this, put a `.code16' or `.code16gcc' directive before
-the assembly language instructions to be run in 16-bit mode.  You can
-switch `as' back to writing normal 32-bit code with the `.code32'
-directive.
-
-   `.code16gcc' provides experimental support for generating 16-bit
-code from gcc, and differs from `.code16' in that `call', `ret',
-`enter', `leave', `push', `pop', `pusha', `popa', `pushf', and `popf'
-instructions default to 32-bit size.  This is so that the stack pointer
-is manipulated in the same way over function calls, allowing access to
-function parameters at the same stack offsets as in 32-bit mode.
-`.code16gcc' also automatically adds address size prefixes where
-necessary to use the 32-bit addressing modes that gcc generates.
-
-   The code which `as' generates in 16-bit mode will not necessarily
-run on a 16-bit pre-80386 processor.  To write code that runs on such a
-processor, you must refrain from using _any_ 32-bit constructs which
-require `as' to output address or operand size prefixes.
-
-   Note that writing 16-bit code instructions by explicitly specifying a
-prefix or an instruction mnemonic suffix within a 32-bit code section
-generates different machine instructions than those generated for a
-16-bit code segment.  In a 32-bit code section, the following code
-generates the machine opcode bytes `66 6a 04', which pushes the value
-`4' onto the stack, decrementing `%esp' by 2.
-
-             pushw $4
-
-   The same code in a 16-bit code section would generate the machine
-opcode bytes `6a 04' (ie. without the operand size prefix), which is
-correct since the processor default operand size is assumed to be 16
-bits in a 16-bit code section.
-
-
-File: as.info,  Node: i386-Bugs,  Next: i386-Notes,  Prev: i386-Arch,  Up: i386-Dependent
-
-8.12.11 AT&T Syntax bugs
-------------------------
-
-The UnixWare assembler, and probably other AT&T derived ix86 Unix
-assemblers, generate floating point instructions with reversed source
-and destination registers in certain cases.  Unfortunately, gcc and
-possibly many other programs use this reversed syntax, so we're stuck
-with it.
-
-   For example
-
-             fsub %st,%st(3)
-   results in `%st(3)' being updated to `%st - %st(3)' rather than the
-expected `%st(3) - %st'.  This happens with all the non-commutative
-arithmetic floating point operations with two register operands where
-the source register is `%st' and the destination register is `%st(i)'.
-
-
-File: as.info,  Node: i386-Arch,  Next: i386-Bugs,  Prev: i386-16bit,  Up: i386-Dependent
-
-8.12.12 Specifying CPU Architecture
------------------------------------
-
-`as' may be told to assemble for a particular CPU (sub-)architecture
-with the `.arch CPU_TYPE' directive.  This directive enables a warning
-when gas detects an instruction that is not supported on the CPU
-specified.  The choices for CPU_TYPE are:
-
-`i8086'        `i186'         `i286'         `i386'
-`i486'         `i586'         `i686'         `pentium'
-`pentiumpro'   `pentiumii'    `pentiumiii'   `pentium4'
-`k6'           `athlon'                      
-               `sledgehammer'                
-`.mmx' `.sse'                                
-`.sse2'                                      
-`.3dnow'                                     
-
-   Apart from the warning, there are only two other effects on `as'
-operation;  Firstly, if you specify a CPU other than `i486', then shift
-by one instructions such as `sarl $1, %eax' will automatically use a
-two byte opcode sequence.  The larger three byte opcode sequence is
-used on the 486 (and when no architecture is specified) because it
-executes faster on the 486.  Note that you can explicitly request the
-two byte opcode by writing `sarl %eax'.  Secondly, if you specify
-`i8086', `i186', or `i286', _and_ `.code16' or `.code16gcc' then byte
-offset conditional jumps will be promoted when necessary to a two
-instruction sequence consisting of a conditional jump of the opposite
-sense around an unconditional jump to the target.
-
-   Following the CPU architecture (but not a sub-architecture, which
-are those starting with a dot), you may specify `jumps' or `nojumps' to
-control automatic promotion of conditional jumps. `jumps' is the
-default, and enables jump promotion;  All external jumps will be of the
-long variety, and file-local jumps will be promoted as necessary.
-(*note i386-Jumps::)  `nojumps' leaves external conditional jumps as
-byte offset jumps, and warns about file-local conditional jumps that
-`as' promotes.  Unconditional jumps are treated as for `jumps'.
-
-   For example
-
-      .arch i8086,nojumps
-
-
-File: as.info,  Node: i386-Notes,  Prev: i386-Bugs,  Up: i386-Dependent
-
-8.12.13 Notes
--------------
-
-There is some trickery concerning the `mul' and `imul' instructions
-that deserves mention.  The 16-, 32-, 64- and 128-bit expanding
-multiplies (base opcode `0xf6'; extension 4 for `mul' and 5 for `imul')
-can be output only in the one operand form.  Thus, `imul %ebx, %eax'
-does _not_ select the expanding multiply; the expanding multiply would
-clobber the `%edx' register, and this would confuse `gcc' output.  Use
-`imul %ebx' to get the 64-bit product in `%edx:%eax'.
-
-   We have added a two operand form of `imul' when the first operand is
-an immediate mode expression and the second operand is a register.
-This is just a shorthand, so that, multiplying `%eax' by 69, for
-example, can be done with `imul $69, %eax' rather than `imul $69, %eax,
-%eax'.
-
-
-File: as.info,  Node: i860-Dependent,  Next: i960-Dependent,  Prev: i386-Dependent,  Up: Machine Dependencies
-
-8.13 Intel i860 Dependent Features
-==================================
-
-* Menu:
-
-* Notes-i860::                  i860 Notes
-* Options-i860::                i860 Command-line Options
-* Directives-i860::             i860 Machine Directives
-* Opcodes for i860::            i860 Opcodes
-
-
-File: as.info,  Node: Notes-i860,  Next: Options-i860,  Up: i860-Dependent
-
-8.13.1 i860 Notes
------------------
-
-This is a fairly complete i860 assembler which is compatible with the
-UNIX System V/860 Release 4 assembler. However, it does not currently
-support SVR4 PIC (i.e., `@GOT, @GOTOFF, @PLT').
-
-   Like the SVR4/860 assembler, the output object format is ELF32.
-Currently, this is the only supported object format. If there is
-sufficient interest, other formats such as COFF may be implemented.
-
-   Both the Intel and AT&T/SVR4 syntaxes are supported, with the latter
-being the default.  One difference is that AT&T syntax requires the '%'
-prefix on register names while Intel syntax does not.  Another
-difference is in the specification of relocatable expressions.  The
-Intel syntax is `ha%expression' whereas the SVR4 syntax is
-`[expression]@ha' (and similarly for the "l" and "h" selectors).
-
-
-File: as.info,  Node: Options-i860,  Next: Directives-i860,  Prev: Notes-i860,  Up: i860-Dependent
-
-8.13.2 i860 Command-line Options
---------------------------------
-
-8.13.2.1 SVR4 compatibility options
-...................................
-
-`-V'
-     Print assembler version.
-
-`-Qy'
-     Ignored.
-
-`-Qn'
-     Ignored.
-
-8.13.2.2 Other options
-......................
-
-`-EL'
-     Select little endian output (this is the default).
-
-`-EB'
-     Select big endian output. Note that the i860 always reads
-     instructions as little endian data, so this option only effects
-     data and not instructions.
-
-`-mwarn-expand'
-     Emit a warning message if any pseudo-instruction expansions
-     occurred.  For example, a `or' instruction with an immediate
-     larger than 16-bits will be expanded into two instructions. This
-     is a very undesirable feature to rely on, so this flag can help
-     detect any code where it happens. One use of it, for instance, has
-     been to find and eliminate any place where `gcc' may emit these
-     pseudo-instructions.
-
-`-mxp'
-     Enable support for the i860XP instructions and control registers.
-     By default, this option is disabled so that only the base
-     instruction set (i.e., i860XR) is supported.
-
-`-mintel-syntax'
-     The i860 assembler defaults to AT&T/SVR4 syntax.  This option
-     enables the Intel syntax.
-
-
-File: as.info,  Node: Directives-i860,  Next: Opcodes for i860,  Prev: Options-i860,  Up: i860-Dependent
-
-8.13.3 i860 Machine Directives
-------------------------------
-
-`.dual'
-     Enter dual instruction mode. While this directive is supported, the
-     preferred way to use dual instruction mode is to explicitly code
-     the dual bit with the `d.' prefix.
-
-`.enddual'
-     Exit dual instruction mode. While this directive is supported, the
-     preferred way to use dual instruction mode is to explicitly code
-     the dual bit with the `d.' prefix.
-
-`.atmp'
-     Change the temporary register used when expanding pseudo
-     operations. The default register is `r31'.
-
-   The `.dual', `.enddual', and `.atmp' directives are available only
-in the Intel syntax mode.
-
-   Both syntaxes allow for the standard `.align' directive.  However,
-the Intel syntax additionally allows keywords for the alignment
-parameter: "`.align type'", where `type' is one of `.short', `.long',
-`.quad', `.single', `.double' representing alignments of 2, 4, 16, 4,
-and 8, respectively.
-
-
-File: as.info,  Node: Opcodes for i860,  Prev: Directives-i860,  Up: i860-Dependent
-
-8.13.4 i860 Opcodes
--------------------
-
-All of the Intel i860XR and i860XP machine instructions are supported.
-Please see either _i860 Microprocessor Programmer's Reference Manual_
-or _i860 Microprocessor Architecture_ for more information.
-
-8.13.4.1 Other instruction support (pseudo-instructions)
-........................................................
-
-For compatibility with some other i860 assemblers, a number of
-pseudo-instructions are supported. While these are supported, they are
-a very undesirable feature that should be avoided - in particular, when
-they result in an expansion to multiple actual i860 instructions. Below
-are the pseudo-instructions that result in expansions.
-   * Load large immediate into general register:
-
-     The pseudo-instruction `mov imm,%rn' (where the immediate does not
-     fit within a signed 16-bit field) will be expanded into:
-          orh large_imm@h,%r0,%rn
-          or large_imm@l,%rn,%rn
-
-   * Load/store with relocatable address expression:
-
-     For example, the pseudo-instruction `ld.b addr_exp(%rx),%rn' will
-     be expanded into:
-          orh addr_exp@ha,%rx,%r31
-          ld.l addr_exp@l(%r31),%rn
-
-     The analogous expansions apply to `ld.x, st.x, fld.x, pfld.x,
-     fst.x', and `pst.x' as well.
-
-   * Signed large immediate with add/subtract:
-
-     If any of the arithmetic operations `adds, addu, subs, subu' are
-     used with an immediate larger than 16-bits (signed), then they
-     will be expanded.  For instance, the pseudo-instruction `adds
-     large_imm,%rx,%rn' expands to:
-          orh large_imm@h,%r0,%r31
-          or large_imm@l,%r31,%r31
-          adds %r31,%rx,%rn
-
-   * Unsigned large immediate with logical operations:
-
-     Logical operations (`or, andnot, or, xor') also result in
-     expansions.  The pseudo-instruction `or large_imm,%rx,%rn' results
-     in:
-          orh large_imm@h,%rx,%r31
-          or large_imm@l,%r31,%rn
-
-     Similarly for the others, except for `and' which expands to:
-          andnot (-1 - large_imm)@h,%rx,%r31
-          andnot (-1 - large_imm)@l,%r31,%rn
-
-
-File: as.info,  Node: i960-Dependent,  Next: IA-64-Dependent,  Prev: i860-Dependent,  Up: Machine Dependencies
-
-8.14 Intel 80960 Dependent Features
-===================================
-
-* Menu:
-
-* Options-i960::                i960 Command-line Options
-* Floating Point-i960::         Floating Point
-* Directives-i960::             i960 Machine Directives
-* Opcodes for i960::            i960 Opcodes
-
-
-File: as.info,  Node: Options-i960,  Next: Floating Point-i960,  Up: i960-Dependent
-
-8.14.1 i960 Command-line Options
---------------------------------
-
-`-ACA | -ACA_A | -ACB | -ACC | -AKA | -AKB | -AKC | -AMC'
-     Select the 80960 architecture.  Instructions or features not
-     supported by the selected architecture cause fatal errors.
-
-     `-ACA' is equivalent to `-ACA_A'; `-AKC' is equivalent to `-AMC'.
-     Synonyms are provided for compatibility with other tools.
-
-     If you do not specify any of these options, `as' generates code
-     for any instruction or feature that is supported by _some_ version
-     of the 960 (even if this means mixing architectures!).  In
-     principle, `as' attempts to deduce the minimal sufficient
-     processor type if none is specified; depending on the object code
-     format, the processor type may be recorded in the object file.  If
-     it is critical that the `as' output match a specific architecture,
-     specify that architecture explicitly.
-
-`-b'
-     Add code to collect information about conditional branches taken,
-     for later optimization using branch prediction bits.  (The
-     conditional branch instructions have branch prediction bits in the
-     CA, CB, and CC architectures.)  If BR represents a conditional
-     branch instruction, the following represents the code generated by
-     the assembler when `-b' is specified:
-
-                  call    INCREMENT ROUTINE
-                  .word   0       # pre-counter
-          Label:  BR
-                  call    INCREMENT ROUTINE
-                  .word   0       # post-counter
-
-     The counter following a branch records the number of times that
-     branch was _not_ taken; the differenc between the two counters is
-     the number of times the branch _was_ taken.
-
-     A table of every such `Label' is also generated, so that the
-     external postprocessor `gbr960' (supplied by Intel) can locate all
-     the counters.  This table is always labeled `__BRANCH_TABLE__';
-     this is a local symbol to permit collecting statistics for many
-     separate object files.  The table is word aligned, and begins with
-     a two-word header.  The first word, initialized to 0, is used in
-     maintaining linked lists of branch tables.  The second word is a
-     count of the number of entries in the table, which follow
-     immediately: each is a word, pointing to one of the labels
-     illustrated above.
-
-           +------------+------------+------------+ ... +------------+
-           |            |            |            |     |            |
-           |  *NEXT     |  COUNT: N  | *BRLAB 1   |     | *BRLAB N   |
-           |            |            |            |     |            |
-           +------------+------------+------------+ ... +------------+
-
-                         __BRANCH_TABLE__ layout
-
-     The first word of the header is used to locate multiple branch
-     tables, since each object file may contain one. Normally the links
-     are maintained with a call to an initialization routine, placed at
-     the beginning of each function in the file.  The GNU C compiler
-     generates these calls automatically when you give it a `-b' option.
-     For further details, see the documentation of `gbr960'.
-
-`-no-relax'
-     Normally, Compare-and-Branch instructions with targets that require
-     displacements greater than 13 bits (or that have external targets)
-     are replaced with the corresponding compare (or `chkbit') and
-     branch instructions.  You can use the `-no-relax' option to
-     specify that `as' should generate errors instead, if the target
-     displacement is larger than 13 bits.
-
-     This option does not affect the Compare-and-Jump instructions; the
-     code emitted for them is _always_ adjusted when necessary
-     (depending on displacement size), regardless of whether you use
-     `-no-relax'.
-
-
-File: as.info,  Node: Floating Point-i960,  Next: Directives-i960,  Prev: Options-i960,  Up: i960-Dependent
-
-8.14.2 Floating Point
----------------------
-
-`as' generates IEEE floating-point numbers for the directives `.float',
-`.double', `.extended', and `.single'.
-
-
-File: as.info,  Node: Directives-i960,  Next: Opcodes for i960,  Prev: Floating Point-i960,  Up: i960-Dependent
-
-8.14.3 i960 Machine Directives
-------------------------------
-
-`.bss SYMBOL, LENGTH, ALIGN'
-     Reserve LENGTH bytes in the bss section for a local SYMBOL,
-     aligned to the power of two specified by ALIGN.  LENGTH and ALIGN
-     must be positive absolute expressions.  This directive differs
-     from `.lcomm' only in that it permits you to specify an alignment.
-     *Note `.lcomm': Lcomm.
-
-`.extended FLONUMS'
-     `.extended' expects zero or more flonums, separated by commas; for
-     each flonum, `.extended' emits an IEEE extended-format (80-bit)
-     floating-point number.
-
-`.leafproc CALL-LAB, BAL-LAB'
-     You can use the `.leafproc' directive in conjunction with the
-     optimized `callj' instruction to enable faster calls of leaf
-     procedures.  If a procedure is known to call no other procedures,
-     you may define an entry point that skips procedure prolog code
-     (and that does not depend on system-supplied saved context), and
-     declare it as the BAL-LAB using `.leafproc'.  If the procedure
-     also has an entry point that goes through the normal prolog, you
-     can specify that entry point as CALL-LAB.
-
-     A `.leafproc' declaration is meant for use in conjunction with the
-     optimized call instruction `callj'; the directive records the data
-     needed later to choose between converting the `callj' into a `bal'
-     or a `call'.
-
-     CALL-LAB is optional; if only one argument is present, or if the
-     two arguments are identical, the single argument is assumed to be
-     the `bal' entry point.
-
-`.sysproc NAME, INDEX'
-     The `.sysproc' directive defines a name for a system procedure.
-     After you define it using `.sysproc', you can use NAME to refer to
-     the system procedure identified by INDEX when calling procedures
-     with the optimized call instruction `callj'.
-
-     Both arguments are required; INDEX must be between 0 and 31
-     (inclusive).
-
-
-File: as.info,  Node: Opcodes for i960,  Prev: Directives-i960,  Up: i960-Dependent
-
-8.14.4 i960 Opcodes
--------------------
-
-All Intel 960 machine instructions are supported; *note i960
-Command-line Options: Options-i960. for a discussion of selecting the
-instruction subset for a particular 960 architecture.
-
-   Some opcodes are processed beyond simply emitting a single
-corresponding instruction: `callj', and Compare-and-Branch or
-Compare-and-Jump instructions with target displacements larger than 13
-bits.
-
-* Menu:
-
-* callj-i960::                  `callj'
-* Compare-and-branch-i960::     Compare-and-Branch
-
-
-File: as.info,  Node: callj-i960,  Next: Compare-and-branch-i960,  Up: Opcodes for i960
-
-8.14.4.1 `callj'
-................
-
-You can write `callj' to have the assembler or the linker determine the
-most appropriate form of subroutine call: `call', `bal', or `calls'.
-If the assembly source contains enough information--a `.leafproc' or
-`.sysproc' directive defining the operand--then `as' translates the
-`callj'; if not, it simply emits the `callj', leaving it for the linker
-to resolve.
-
-
-File: as.info,  Node: Compare-and-branch-i960,  Prev: callj-i960,  Up: Opcodes for i960
-
-8.14.4.2 Compare-and-Branch
-...........................
-
-The 960 architectures provide combined Compare-and-Branch instructions
-that permit you to store the branch target in the lower 13 bits of the
-instruction word itself.  However, if you specify a branch target far
-enough away that its address won't fit in 13 bits, the assembler can
-either issue an error, or convert your Compare-and-Branch instruction
-into separate instructions to do the compare and the branch.
-
-   Whether `as' gives an error or expands the instruction depends on
-two choices you can make: whether you use the `-no-relax' option, and
-whether you use a "Compare and Branch" instruction or a "Compare and
-Jump" instruction.  The "Jump" instructions are _always_ expanded if
-necessary; the "Branch" instructions are expanded when necessary
-_unless_ you specify `-no-relax'--in which case `as' gives an error
-instead.
-
-   These are the Compare-and-Branch instructions, their "Jump" variants,
-and the instruction pairs they may expand into:
-
-             Compare and
-          Branch      Jump       Expanded to
-          ------    ------       ------------
-             bbc                 chkbit; bno
-             bbs                 chkbit; bo
-          cmpibe    cmpije       cmpi; be
-          cmpibg    cmpijg       cmpi; bg
-         cmpibge   cmpijge       cmpi; bge
-          cmpibl    cmpijl       cmpi; bl
-         cmpible   cmpijle       cmpi; ble
-         cmpibno   cmpijno       cmpi; bno
-         cmpibne   cmpijne       cmpi; bne
-          cmpibo    cmpijo       cmpi; bo
-          cmpobe    cmpoje       cmpo; be
-          cmpobg    cmpojg       cmpo; bg
-         cmpobge   cmpojge       cmpo; bge
-          cmpobl    cmpojl       cmpo; bl
-         cmpoble   cmpojle       cmpo; ble
-         cmpobne   cmpojne       cmpo; bne
-
-
-File: as.info,  Node: IA-64-Dependent,  Next: IP2K-Dependent,  Prev: i960-Dependent,  Up: Machine Dependencies
-
-8.15 IA-64 Dependent Features
-=============================
-
-* Menu:
-
-* IA-64 Options::              Options
-* IA-64 Syntax::               Syntax
-* IA-64 Opcodes::              Opcodes
-
-
-File: as.info,  Node: IA-64 Options,  Next: IA-64 Syntax,  Up: IA-64-Dependent
-
-8.15.1 Options
---------------
-
-`-mconstant-gp'
-     This option instructs the assembler to mark the resulting object
-     file as using the "constant GP" model.  With this model, it is
-     assumed that the entire program uses a single global pointer (GP)
-     value.  Note that this option does not in any fashion affect the
-     machine code emitted by the assembler.  All it does is turn on the
-     EF_IA_64_CONS_GP flag in the ELF file header.
-
-`-mauto-pic'
-     This option instructs the assembler to mark the resulting object
-     file as using the "constant GP without function descriptor" data
-     model.  This model is like the "constant GP" model, except that it
-     additionally does away with function descriptors.  What this means
-     is that the address of a function refers directly to the
-     function's code entry-point.  Normally, such an address would
-     refer to a function descriptor, which contains both the code
-     entry-point and the GP-value needed by the function.  Note that
-     this option does not in any fashion affect the machine code
-     emitted by the assembler.  All it does is turn on the
-     EF_IA_64_NOFUNCDESC_CONS_GP flag in the ELF file header.
-
-`-milp32'
-
-`-milp64'
-
-`-mlp64'
-
-`-mp64'
-     These options select the data model.  The assembler defaults to
-     `-mlp64' (LP64 data model).
-
-`-mle'
-
-`-mbe'
-     These options select the byte order.  The `-mle' option selects
-     little-endian byte order (default) and `-mbe' selects big-endian
-     byte order.  Note that IA-64 machine code always uses
-     little-endian byte order.
-
-`-munwind-check=warning'
-
-`-munwind-check=error'
-     These options control what the assembler will do when performing
-     consistency checks on unwind directives.  `-munwind-check=warning'
-     will make the assembler issue a warning when an unwind directive
-     check fails.  This is the default.  `-munwind-check=error' will
-     make the assembler issue an error when an unwind directive check
-     fails.
-
-`-mhint.b=ok'
-
-`-mhint.b=warning'
-
-`-mhint.b=error'
-     These options control what the assembler will do when the `hint.b'
-     instruction is used.  `-mhint.b=ok' will make the assembler accept
-     `hint.b'.  `-mint.b=warning' will make the assembler issue a
-     warning when `hint.b' is used.  `-mhint.b=error' will make the
-     assembler treat `hint.b' as an error, which is the default.
-
-`-x'
-
-`-xexplicit'
-     These options turn on dependency violation checking.
-
-`-xauto'
-     This option instructs the assembler to automatically insert stop
-     bits where necessary to remove dependency violations.  This is the
-     default mode.
-
-`-xnone'
-     This option turns off dependency violation checking.
-
-`-xdebug'
-     This turns on debug output intended to help tracking down bugs in
-     the dependency violation checker.
-
-`-xdebugn'
-     This is a shortcut for -xnone -xdebug.
-
-`-xdebugx'
-     This is a shortcut for -xexplicit -xdebug.
-
-
-
-File: as.info,  Node: IA-64 Syntax,  Next: IA-64 Opcodes,  Prev: IA-64 Options,  Up: IA-64-Dependent
-
-8.15.2 Syntax
--------------
-
-The assembler syntax closely follows the IA-64 Assembly Language
-Reference Guide.
-
-* Menu:
-
-* IA-64-Chars::                Special Characters
-* IA-64-Regs::                 Register Names
-* IA-64-Bits::                 Bit Names
-
-
-File: as.info,  Node: IA-64-Chars,  Next: IA-64-Regs,  Up: IA-64 Syntax
-
-8.15.2.1 Special Characters
-...........................
-
-`//' is the line comment token.
-
-   `;' can be used instead of a newline to separate statements.
-
-
-File: as.info,  Node: IA-64-Regs,  Next: IA-64-Bits,  Prev: IA-64-Chars,  Up: IA-64 Syntax
-
-8.15.2.2 Register Names
-.......................
-
-The 128 integer registers are referred to as `rN'.  The 128
-floating-point registers are referred to as `fN'.  The 128 application
-registers are referred to as `arN'.  The 128 control registers are
-referred to as `crN'.  The 64 one-bit predicate registers are referred
-to as `pN'.  The 8 branch registers are referred to as `bN'.  In
-addition, the assembler defines a number of aliases: `gp' (`r1'), `sp'
-(`r12'), `rp' (`b0'), `ret0' (`r8'), `ret1' (`r9'), `ret2' (`r10'),
-`ret3' (`r9'), `fargN' (`f8+N'), and `fretN' (`f8+N').
-
-   For convenience, the assembler also defines aliases for all named
-application and control registers.  For example, `ar.bsp' refers to the
-register backing store pointer (`ar17').  Similarly, `cr.eoi' refers to
-the end-of-interrupt register (`cr67').
-
-
-File: as.info,  Node: IA-64-Bits,  Prev: IA-64-Regs,  Up: IA-64 Syntax
-
-8.15.2.3 IA-64 Processor-Status-Register (PSR) Bit Names
-........................................................
-
-The assembler defines bit masks for each of the bits in the IA-64
-processor status register.  For example, `psr.ic' corresponds to a
-value of 0x2000.  These masks are primarily intended for use with the
-`ssm'/`sum' and `rsm'/`rum' instructions, but they can be used anywhere
-else where an integer constant is expected.
-
-
-File: as.info,  Node: IA-64 Opcodes,  Prev: IA-64 Syntax,  Up: IA-64-Dependent
-
-8.15.3 Opcodes
---------------
-
-For detailed information on the IA-64 machine instruction set, see the
-IA-64 Architecture Handbook
-(http://developer.intel.com/design/itanium/arch_spec.htm).
-
-
-File: as.info,  Node: IP2K-Dependent,  Next: M32R-Dependent,  Prev: IA-64-Dependent,  Up: Machine Dependencies
-
-8.16 IP2K Dependent Features
-============================
-
-* Menu:
-
-* IP2K-Opts::                   IP2K Options
-
-
-File: as.info,  Node: IP2K-Opts,  Up: IP2K-Dependent
-
-8.16.1 IP2K Options
--------------------
-
-The Ubicom IP2K version of `as' has a few machine dependent options:
-
-`-mip2022ext'
-     `as' can assemble the extended IP2022 instructions, but it will
-     only do so if this is specifically allowed via this command line
-     option.
-
-`-mip2022'
-     This option restores the assembler's default behaviour of not
-     permitting the extended IP2022 instructions to be assembled.
-
-
-
-File: as.info,  Node: M32R-Dependent,  Next: M68K-Dependent,  Prev: IP2K-Dependent,  Up: Machine Dependencies
-
-8.17 M32R Dependent Features
-============================
-
-* Menu:
-
-* M32R-Opts::                   M32R Options
-* M32R-Directives::             M32R Directives
-* M32R-Warnings::               M32R Warnings
-
-
-File: as.info,  Node: M32R-Opts,  Next: M32R-Directives,  Up: M32R-Dependent
-
-8.17.1 M32R Options
--------------------
-
-The Renease M32R version of `as' has a few machine dependent options:
-
-`-m32rx'
-     `as' can assemble code for several different members of the
-     Renesas M32R family.  Normally the default is to assemble code for
-     the M32R microprocessor.  This option may be used to change the
-     default to the M32RX microprocessor, which adds some more
-     instructions to the basic M32R instruction set, and some
-     additional parameters to some of the original instructions.
-
-`-m32r2'
-     This option changes the target processor to the the M32R2
-     microprocessor.
-
-`-m32r'
-     This option can be used to restore the assembler's default
-     behaviour of assembling for the M32R microprocessor.  This can be
-     useful if the default has been changed by a previous command line
-     option.
-
-`-little'
-     This option tells the assembler to produce little-endian code and
-     data.  The default is dependent upon how the toolchain was
-     configured.
-
-`-EL'
-     This is a synonum for _-little_.
-
-`-big'
-     This option tells the assembler to produce big-endian code and
-     data.
-
-`-EB'
-     This is a synonum for _-big_.
-
-`-KPIC'
-     This option specifies that the output of the assembler should be
-     marked as position-independent code (PIC).
-
-`-parallel'
-     This option tells the assembler to attempts to combine two
-     sequential instructions into a single, parallel instruction, where
-     it is legal to do so.
-
-`-no-parallel'
-     This option disables a previously enabled _-parallel_ option.
-
-`-no-bitinst'
-     This option disables the support for the extended bit-field
-     instructions provided by the M32R2.  If this support needs to be
-     re-enabled the _-bitinst_ switch can be used to restore it.
-
-`-O'
-     This option tells the assembler to attempt to optimize the
-     instructions that it produces.  This includes filling delay slots
-     and converting sequential instructions into parallel ones.  This
-     option implies _-parallel_.
-
-`-warn-explicit-parallel-conflicts'
-     Instructs `as' to produce warning messages when questionable
-     parallel instructions are encountered.  This option is enabled by
-     default, but `gcc' disables it when it invokes `as' directly.
-     Questionable instructions are those whoes behaviour would be
-     different if they were executed sequentially.  For example the
-     code fragment `mv r1, r2 || mv r3, r1' produces a different result
-     from `mv r1, r2 \n mv r3, r1' since the former moves r1 into r3
-     and then r2 into r1, whereas the later moves r2 into r1 and r3.
-
-`-Wp'
-     This is a shorter synonym for the
-     _-warn-explicit-parallel-conflicts_ option.
-
-`-no-warn-explicit-parallel-conflicts'
-     Instructs `as' not to produce warning messages when questionable
-     parallel instructions are encountered.
-
-`-Wnp'
-     This is a shorter synonym for the
-     _-no-warn-explicit-parallel-conflicts_ option.
-
-`-ignore-parallel-conflicts'
-     This option tells the assembler's to stop checking parallel
-     instructions for contraint violations.  This ability is provided
-     for hardware vendors testing chip designs and should not be used
-     under normal circumstances.
-
-`-no-ignore-parallel-conflicts'
-     This option restores the assembler's default behaviour of checking
-     parallel instructions to detect constraint violations.
-
-`-Ip'
-     This is a shorter synonym for the _-ignore-parallel-conflicts_
-     option.
-
-`-nIp'
-     This is a shorter synonym for the _-no-ignore-parallel-conflicts_
-     option.
-
-`-warn-unmatched-high'
-     This option tells the assembler to produce a warning message if a
-     `.high' pseudo op is encountered without a mathcing `.low' pseudo
-     op.  The presence of such an unmatches pseudo op usually indicates
-     a programming error.
-
-`-no-warn-unmatched-high'
-     Disables a previously enabled _-warn-unmatched-high_ option.
-
-`-Wuh'
-     This is a shorter synonym for the _-warn-unmatched-high_ option.
-
-`-Wnuh'
-     This is a shorter synonym for the _-no-warn-unmatched-high_ option.
-
-
-
-File: as.info,  Node: M32R-Directives,  Next: M32R-Warnings,  Prev: M32R-Opts,  Up: M32R-Dependent
-
-8.17.2 M32R Directives
-----------------------
-
-The Renease M32R version of `as' has a few architecture specific
-directives:
-
-`low EXPRESSION'
-     The `low' directive computes the value of its expression and
-     places the lower 16-bits of the result into the immediate-field of
-     the instruction.  For example:
-
-             or3   r0, r0, #low(0x12345678) ; compute r0 = r0 | 0x5678
-             add3, r0, r0, #low(fred)   ; compute r0 = r0 + low 16-bits of address of fred
-
-`high EXPRESSION'
-     The `high' directive computes the value of its expression and
-     places the upper 16-bits of the result into the immediate-field of
-     the instruction.  For example:
-
-             seth  r0, #high(0x12345678) ; compute r0 = 0x12340000
-             seth, r0, #high(fred)       ; compute r0 = upper 16-bits of address of fred
-
-`shigh EXPRESSION'
-     The `shigh' directive is very similar to the `high' directive.  It
-     also computes the value of its expression and places the upper
-     16-bits of the result into the immediate-field of the instruction.
-     The difference is that `shigh' also checks to see if the lower
-     16-bits could be interpreted as a signed number, and if so it
-     assumes that a borrow will occur from the upper-16 bits.  To
-     compensate for this the `shigh' directive pre-biases the upper 16
-     bit value by adding one to it.  For example:
-
-     For example:
-
-             seth  r0, #shigh(0x12345678) ; compute r0 = 0x12340000
-             seth  r0, #shigh(0x00008000) ; compute r0 = 0x00010000
-
-     In the second example the lower 16-bits are 0x8000.  If these are
-     treated as a signed value and sign extended to 32-bits then the
-     value becomes 0xffff8000.  If this value is then added to
-     0x00010000 then the result is 0x00008000.
-
-     This behaviour is to allow for the different semantics of the
-     `or3' and `add3' instructions.  The `or3' instruction treats its
-     16-bit immediate argument as unsigned whereas the `add3' treats
-     its 16-bit immediate as a signed value.  So for example:
-
-             seth  r0, #shigh(0x00008000)
-             add3  r0, r0, #low(0x00008000)
-
-     Produces the correct result in r0, whereas:
-
-             seth  r0, #shigh(0x00008000)
-             or3   r0, r0, #low(0x00008000)
-
-     Stores 0xffff8000 into r0.
-
-     Note - the `shigh' directive does not know where in the assembly
-     source code the lower 16-bits of the value are going set, so it
-     cannot check to make sure that an `or3' instruction is being used
-     rather than an `add3' instruction.  It is up to the programmer to
-     make sure that correct directives are used.
-
-`.m32r'
-     The directive performs a similar thing as the _-m32r_ command line
-     option.  It tells the assembler to only accept M32R instructions
-     from now on.  An instructions from later M32R architectures are
-     refused.
-
-`.m32rx'
-     The directive performs a similar thing as the _-m32rx_ command
-     line option.  It tells the assembler to start accepting the extra
-     instructions in the M32RX ISA as well as the ordinary M32R ISA.
-
-`.m32r2'
-     The directive performs a similar thing as the _-m32r2_ command
-     line option.  It tells the assembler to start accepting the extra
-     instructions in the M32R2 ISA as well as the ordinary M32R ISA.
-
-`.little'
-     The directive performs a similar thing as the _-little_ command
-     line option.  It tells the assembler to start producing
-     little-endian code and data.  This option should be used with care
-     as producing mixed-endian binary files is frought with danger.
-
-`.big'
-     The directive performs a similar thing as the _-big_ command line
-     option.  It tells the assembler to start producing big-endian code
-     and data.  This option should be used with care as producing
-     mixed-endian binary files is frought with danger.
-
-
-
-File: as.info,  Node: M32R-Warnings,  Prev: M32R-Directives,  Up: M32R-Dependent
-
-8.17.3 M32R Warnings
---------------------
-
-There are several warning and error messages that can be produced by
-`as' which are specific to the M32R:
-
-`output of 1st instruction is the same as an input to 2nd instruction - is this intentional ?'
-     This message is only produced if warnings for explicit parallel
-     conflicts have been enabled.  It indicates that the assembler has
-     encountered a parallel instruction in which the destination
-     register of the left hand instruction is used as an input register
-     in the right hand instruction.  For example in this code fragment
-     `mv r1, r2 || neg r3, r1' register r1 is the destination of the
-     move instruction and the input to the neg instruction.
-
-`output of 2nd instruction is the same as an input to 1st instruction - is this intentional ?'
-     This message is only produced if warnings for explicit parallel
-     conflicts have been enabled.  It indicates that the assembler has
-     encountered a parallel instruction in which the destination
-     register of the right hand instruction is used as an input
-     register in the left hand instruction.  For example in this code
-     fragment `mv r1, r2 || neg r2, r3' register r2 is the destination
-     of the neg instruction and the input to the move instruction.
-
-`instruction `...' is for the M32RX only'
-     This message is produced when the assembler encounters an
-     instruction which is only supported by the M32Rx processor, and
-     the `-m32rx' command line flag has not been specified to allow
-     assembly of such instructions.
-
-`unknown instruction `...''
-     This message is produced when the assembler encounters an
-     instruction which it does not recognise.
-
-`only the NOP instruction can be issued in parallel on the m32r'
-     This message is produced when the assembler encounters a parallel
-     instruction which does not involve a NOP instruction and the
-     `-m32rx' command line flag has not been specified.  Only the M32Rx
-     processor is able to execute two instructions in parallel.
-
-`instruction `...' cannot be executed in parallel.'
-     This message is produced when the assembler encounters a parallel
-     instruction which is made up of one or two instructions which
-     cannot be executed in parallel.
-
-`Instructions share the same execution pipeline'
-     This message is produced when the assembler encounters a parallel
-     instruction whoes components both use the same execution pipeline.
-
-`Instructions write to the same destination register.'
-     This message is produced when the assembler encounters a parallel
-     instruction where both components attempt to modify the same
-     register.  For example these code fragments will produce this
-     message: `mv r1, r2 || neg r1, r3' `jl r0 || mv r14, r1' `st r2,
-     @-r1 || mv r1, r3' `mv r1, r2 || ld r0, @r1+' `cmp r1, r2 || addx
-     r3, r4' (Both write to the condition bit)
-
-
-
-File: as.info,  Node: M68K-Dependent,  Next: M68HC11-Dependent,  Prev: M32R-Dependent,  Up: Machine Dependencies
-
-8.18 M680x0 Dependent Features
-==============================
-
-* Menu:
-
-* M68K-Opts::                   M680x0 Options
-* M68K-Syntax::                 Syntax
-* M68K-Moto-Syntax::            Motorola Syntax
-* M68K-Float::                  Floating Point
-* M68K-Directives::             680x0 Machine Directives
-* M68K-opcodes::                Opcodes
-
-
-File: as.info,  Node: M68K-Opts,  Next: M68K-Syntax,  Up: M68K-Dependent
-
-8.18.1 M680x0 Options
----------------------
-
-The Motorola 680x0 version of `as' has a few machine dependent options:
-
-`-l'
-     You can use the `-l' option to shorten the size of references to
-     undefined symbols.  If you do not use the `-l' option, references
-     to undefined symbols are wide enough for a full `long' (32 bits).
-     (Since `as' cannot know where these symbols end up, `as' can only
-     allocate space for the linker to fill in later.  Since `as' does
-     not know how far away these symbols are, it allocates as much
-     space as it can.)  If you use this option, the references are only
-     one word wide (16 bits).  This may be useful if you want the
-     object file to be as small as possible, and you know that the
-     relevant symbols are always less than 17 bits away.
-
-`--register-prefix-optional'
-     For some configurations, especially those where the compiler
-     normally does not prepend an underscore to the names of user
-     variables, the assembler requires a `%' before any use of a
-     register name.  This is intended to let the assembler distinguish
-     between C variables and functions named `a0' through `a7', and so
-     on.  The `%' is always accepted, but is not required for certain
-     configurations, notably `sun3'.  The `--register-prefix-optional'
-     option may be used to permit omitting the `%' even for
-     configurations for which it is normally required.  If this is
-     done, it will generally be impossible to refer to C variables and
-     functions with the same names as register names.
-
-`--bitwise-or'
-     Normally the character `|' is treated as a comment character, which
-     means that it can not be used in expressions.  The `--bitwise-or'
-     option turns `|' into a normal character.  In this mode, you must
-     either use C style comments, or start comments with a `#' character
-     at the beginning of a line.
-
-`--base-size-default-16  --base-size-default-32'
-     If you use an addressing mode with a base register without
-     specifying the size, `as' will normally use the full 32 bit value.
-     For example, the addressing mode `%a0@(%d0)' is equivalent to
-     `%a0@(%d0:l)'.  You may use the `--base-size-default-16' option to
-     tell `as' to default to using the 16 bit value.  In this case,
-     `%a0@(%d0)' is equivalent to `%a0@(%d0:w)'.  You may use the
-     `--base-size-default-32' option to restore the default behaviour.
-
-`--disp-size-default-16  --disp-size-default-32'
-     If you use an addressing mode with a displacement, and the value
-     of the displacement is not known, `as' will normally assume that
-     the value is 32 bits.  For example, if the symbol `disp' has not
-     been defined, `as' will assemble the addressing mode
-     `%a0@(disp,%d0)' as though `disp' is a 32 bit value.  You may use
-     the `--disp-size-default-16' option to tell `as' to instead assume
-     that the displacement is 16 bits.  In this case, `as' will
-     assemble `%a0@(disp,%d0)' as though `disp' is a 16 bit value.  You
-     may use the `--disp-size-default-32' option to restore the default
-     behaviour.
-
-`--pcrel'
-     Always keep branches PC-relative.  In the M680x0 architecture all
-     branches are defined as PC-relative.  However, on some processors
-     they are limited to word displacements maximum.  When `as' needs a
-     long branch that is not available, it normally emits an absolute
-     jump instead.  This option disables this substitution.  When this
-     option is given and no long branches are available, only word
-     branches will be emitted.  An error message will be generated if a
-     word branch cannot reach its target.  This option has no effect on
-     68020 and other processors that have long branches.  *note Branch
-     Improvement: M68K-Branch.
-
-`-m68000'
-     `as' can assemble code for several different members of the
-     Motorola 680x0 family.  The default depends upon how `as' was
-     configured when it was built; normally, the default is to assemble
-     code for the 68020 microprocessor.  The following options may be
-     used to change the default.  These options control which
-     instructions and addressing modes are permitted.  The members of
-     the 680x0 family are very similar.  For detailed information about
-     the differences, see the Motorola manuals.
-
-    `-m68000'
-    `-m68ec000'
-    `-m68hc000'
-    `-m68hc001'
-    `-m68008'
-    `-m68302'
-    `-m68306'
-    `-m68307'
-    `-m68322'
-    `-m68356'
-          Assemble for the 68000. `-m68008', `-m68302', and so on are
-          synonyms for `-m68000', since the chips are the same from the
-          point of view of the assembler.
-
-    `-m68010'
-          Assemble for the 68010.
-
-    `-m68020'
-    `-m68ec020'
-          Assemble for the 68020.  This is normally the default.
-
-    `-m68030'
-    `-m68ec030'
-          Assemble for the 68030.
-
-    `-m68040'
-    `-m68ec040'
-          Assemble for the 68040.
-
-    `-m68060'
-    `-m68ec060'
-          Assemble for the 68060.
-
-    `-mcpu32'
-    `-m68330'
-    `-m68331'
-    `-m68332'
-    `-m68333'
-    `-m68334'
-    `-m68336'
-    `-m68340'
-    `-m68341'
-    `-m68349'
-    `-m68360'
-          Assemble for the CPU32 family of chips.
-
-    `-m5200'
-
-    `-m5202'
-
-    `-m5204'
-
-    `-m5206'
-
-    `-m5206e'
-
-    `-m521x'
-
-    `-m5249'
-
-    `-m528x'
-
-    `-m5307'
-
-    `-m5407'
-
-    `-m547x'
-
-    `-m548x'
-
-    `-mcfv4'
-
-    `-mcfv4e'
-          Assemble for the ColdFire family of chips.
-
-    `-m68881'
-    `-m68882'
-          Assemble 68881 floating point instructions.  This is the
-          default for the 68020, 68030, and the CPU32.  The 68040 and
-          68060 always support floating point instructions.
-
-    `-mno-68881'
-          Do not assemble 68881 floating point instructions.  This is
-          the default for 68000 and the 68010.  The 68040 and 68060
-          always support floating point instructions, even if this
-          option is used.
-
-    `-m68851'
-          Assemble 68851 MMU instructions.  This is the default for the
-          68020, 68030, and 68060.  The 68040 accepts a somewhat
-          different set of MMU instructions; `-m68851' and `-m68040'
-          should not be used together.
-
-    `-mno-68851'
-          Do not assemble 68851 MMU instructions.  This is the default
-          for the 68000, 68010, and the CPU32.  The 68040 accepts a
-          somewhat different set of MMU instructions.
-
-
-File: as.info,  Node: M68K-Syntax,  Next: M68K-Moto-Syntax,  Prev: M68K-Opts,  Up: M68K-Dependent
-
-8.18.2 Syntax
--------------
-
-This syntax for the Motorola 680x0 was developed at MIT.
-
-   The 680x0 version of `as' uses instructions names and syntax
-compatible with the Sun assembler.  Intervening periods are ignored;
-for example, `movl' is equivalent to `mov.l'.
-
-   In the following table APC stands for any of the address registers
-(`%a0' through `%a7'), the program counter (`%pc'), the zero-address
-relative to the program counter (`%zpc'), a suppressed address register
-(`%za0' through `%za7'), or it may be omitted entirely.  The use of
-SIZE means one of `w' or `l', and it may be omitted, along with the
-leading colon, unless a scale is also specified.  The use of SCALE
-means one of `1', `2', `4', or `8', and it may always be omitted along
-with the leading colon.
-
-   The following addressing modes are understood:
-"Immediate"
-     `#NUMBER'
-
-"Data Register"
-     `%d0' through `%d7'
-
-"Address Register"
-     `%a0' through `%a7'
-     `%a7' is also known as `%sp', i.e. the Stack Pointer.  `%a6' is
-     also known as `%fp', the Frame Pointer.
-
-"Address Register Indirect"
-     `%a0@' through `%a7@'
-
-"Address Register Postincrement"
-     `%a0@+' through `%a7@+'
-
-"Address Register Predecrement"
-     `%a0@-' through `%a7@-'
-
-"Indirect Plus Offset"
-     `APC@(NUMBER)'
-
-"Index"
-     `APC@(NUMBER,REGISTER:SIZE:SCALE)'
-
-     The NUMBER may be omitted.
-
-"Postindex"
-     `APC@(NUMBER)@(ONUMBER,REGISTER:SIZE:SCALE)'
-
-     The ONUMBER or the REGISTER, but not both, may be omitted.
-
-"Preindex"
-     `APC@(NUMBER,REGISTER:SIZE:SCALE)@(ONUMBER)'
-
-     The NUMBER may be omitted.  Omitting the REGISTER produces the
-     Postindex addressing mode.
-
-"Absolute"
-     `SYMBOL', or `DIGITS', optionally followed by `:b', `:w', or `:l'.
-
-
-File: as.info,  Node: M68K-Moto-Syntax,  Next: M68K-Float,  Prev: M68K-Syntax,  Up: M68K-Dependent
-
-8.18.3 Motorola Syntax
-----------------------
-
-The standard Motorola syntax for this chip differs from the syntax
-already discussed (*note Syntax: M68K-Syntax.).  `as' can accept
-Motorola syntax for operands, even if MIT syntax is used for other
-operands in the same instruction.  The two kinds of syntax are fully
-compatible.
-
-   In the following table APC stands for any of the address registers
-(`%a0' through `%a7'), the program counter (`%pc'), the zero-address
-relative to the program counter (`%zpc'), or a suppressed address
-register (`%za0' through `%za7').  The use of SIZE means one of `w' or
-`l', and it may always be omitted along with the leading dot.  The use
-of SCALE means one of `1', `2', `4', or `8', and it may always be
-omitted along with the leading asterisk.
-
-   The following additional addressing modes are understood:
-
-"Address Register Indirect"
-     `(%a0)' through `(%a7)'
-     `%a7' is also known as `%sp', i.e. the Stack Pointer.  `%a6' is
-     also known as `%fp', the Frame Pointer.
-
-"Address Register Postincrement"
-     `(%a0)+' through `(%a7)+'
-
-"Address Register Predecrement"
-     `-(%a0)' through `-(%a7)'
-
-"Indirect Plus Offset"
-     `NUMBER(%A0)' through `NUMBER(%A7)', or `NUMBER(%PC)'.
-
-     The NUMBER may also appear within the parentheses, as in
-     `(NUMBER,%A0)'.  When used with the PC, the NUMBER may be omitted
-     (with an address register, omitting the NUMBER produces Address
-     Register Indirect mode).
-
-"Index"
-     `NUMBER(APC,REGISTER.SIZE*SCALE)'
-
-     The NUMBER may be omitted, or it may appear within the
-     parentheses.  The APC may be omitted.  The REGISTER and the APC
-     may appear in either order.  If both APC and REGISTER are address
-     registers, and the SIZE and SCALE are omitted, then the first
-     register is taken as the base register, and the second as the
-     index register.
-
-"Postindex"
-     `([NUMBER,APC],REGISTER.SIZE*SCALE,ONUMBER)'
-
-     The ONUMBER, or the REGISTER, or both, may be omitted.  Either the
-     NUMBER or the APC may be omitted, but not both.
-
-"Preindex"
-     `([NUMBER,APC,REGISTER.SIZE*SCALE],ONUMBER)'
-
-     The NUMBER, or the APC, or the REGISTER, or any two of them, may
-     be omitted.  The ONUMBER may be omitted.  The REGISTER and the APC
-     may appear in either order.  If both APC and REGISTER are address
-     registers, and the SIZE and SCALE are omitted, then the first
-     register is taken as the base register, and the second as the
-     index register.
-
-
-File: as.info,  Node: M68K-Float,  Next: M68K-Directives,  Prev: M68K-Moto-Syntax,  Up: M68K-Dependent
-
-8.18.4 Floating Point
----------------------
-
-Packed decimal (P) format floating literals are not supported.  Feel
-free to add the code!
-
-   The floating point formats generated by directives are these.
-
-`.float'
-     `Single' precision floating point constants.
-
-`.double'
-     `Double' precision floating point constants.
-
-`.extend'
-`.ldouble'
-     `Extended' precision (`long double') floating point constants.
-
-
-File: as.info,  Node: M68K-Directives,  Next: M68K-opcodes,  Prev: M68K-Float,  Up: M68K-Dependent
-
-8.18.5 680x0 Machine Directives
--------------------------------
-
-In order to be compatible with the Sun assembler the 680x0 assembler
-understands the following directives.
-
-`.data1'
-     This directive is identical to a `.data 1' directive.
-
-`.data2'
-     This directive is identical to a `.data 2' directive.
-
-`.even'
-     This directive is a special case of the `.align' directive; it
-     aligns the output to an even byte boundary.
-
-`.skip'
-     This directive is identical to a `.space' directive.
-
-
-File: as.info,  Node: M68K-opcodes,  Prev: M68K-Directives,  Up: M68K-Dependent
-
-8.18.6 Opcodes
---------------
-
-* Menu:
-
-* M68K-Branch::                 Branch Improvement
-* M68K-Chars::                  Special Characters
-
-
-File: as.info,  Node: M68K-Branch,  Next: M68K-Chars,  Up: M68K-opcodes
-
-8.18.6.1 Branch Improvement
-...........................
-
-Certain pseudo opcodes are permitted for branch instructions.  They
-expand to the shortest branch instruction that reach the target.
-Generally these mnemonics are made by substituting `j' for `b' at the
-start of a Motorola mnemonic.
-
-   The following table summarizes the pseudo-operations.  A `*' flags
-cases that are more fully described after the table:
-
-               Displacement
-               +------------------------------------------------------------
-               |                68020           68000/10, not PC-relative OK
-     Pseudo-Op |BYTE    WORD    LONG            ABSOLUTE LONG JUMP    **
-               +------------------------------------------------------------
-          jbsr |bsrs    bsrw    bsrl            jsr
-           jra |bras    braw    bral            jmp
-     *     jXX |bXXs    bXXw    bXXl            bNXs;jmp
-     *    dbXX | N/A    dbXXw   dbXX;bras;bral  dbXX;bras;jmp
-          fjXX | N/A    fbXXw   fbXXl            N/A
-
-     XX: condition
-     NX: negative of condition XX
-                       `*'--see full description below
-         `**'--this expansion mode is disallowed by `--pcrel'
-
-`jbsr'
-`jra'
-     These are the simplest jump pseudo-operations; they always map to
-     one particular machine instruction, depending on the displacement
-     to the branch target.  This instruction will be a byte or word
-     branch is that is sufficient.  Otherwise, a long branch will be
-     emitted if available.  If no long branches are available and the
-     `--pcrel' option is not given, an absolute long jump will be
-     emitted instead.  If no long branches are available, the `--pcrel'
-     option is given, and a word branch cannot reach the target, an
-     error message is generated.
-
-     In addition to standard branch operands, `as' allows these
-     pseudo-operations to have all operands that are allowed for jsr
-     and jmp, substituting these instructions if the operand given is
-     not valid for a branch instruction.
-
-`jXX'
-     Here, `jXX' stands for an entire family of pseudo-operations,
-     where XX is a conditional branch or condition-code test.  The full
-     list of pseudo-ops in this family is:
-           jhi   jls   jcc   jcs   jne   jeq   jvc
-           jvs   jpl   jmi   jge   jlt   jgt   jle
-
-     Usually, each of these pseudo-operations expands to a single branch
-     instruction.  However, if a word branch is not sufficient, no long
-     branches are available, and the `--pcrel' option is not given, `as'
-     issues a longer code fragment in terms of NX, the opposite
-     condition to XX.  For example, under these conditions:
-              jXX foo
-     gives
-               bNXs oof
-               jmp foo
-           oof:
-
-`dbXX'
-     The full family of pseudo-operations covered here is
-           dbhi   dbls   dbcc   dbcs   dbne   dbeq   dbvc
-           dbvs   dbpl   dbmi   dbge   dblt   dbgt   dble
-           dbf    dbra   dbt
-
-     Motorola `dbXX' instructions allow word displacements only.  When
-     a word displacement is sufficient, each of these pseudo-operations
-     expands to the corresponding Motorola instruction.  When a word
-     displacement is not sufficient and long branches are available,
-     when the source reads `dbXX foo', `as' emits
-               dbXX oo1
-               bras oo2
-           oo1:bral foo
-           oo2:
-
-     If, however, long branches are not available and the `--pcrel'
-     option is not given, `as' emits
-               dbXX oo1
-               bras oo2
-           oo1:jmp foo
-           oo2:
-
-`fjXX'
-     This family includes
-           fjne   fjeq   fjge   fjlt   fjgt   fjle   fjf
-           fjt    fjgl   fjgle  fjnge  fjngl  fjngle fjngt
-           fjnle  fjnlt  fjoge  fjogl  fjogt  fjole  fjolt
-           fjor   fjseq  fjsf   fjsne  fjst   fjueq  fjuge
-           fjugt  fjule  fjult  fjun
-
-     Each of these pseudo-operations always expands to a single Motorola
-     coprocessor branch instruction, word or long.  All Motorola
-     coprocessor branch instructions allow both word and long
-     displacements.
-
-
-
-File: as.info,  Node: M68K-Chars,  Prev: M68K-Branch,  Up: M68K-opcodes
-
-8.18.6.2 Special Characters
-...........................
-
-The immediate character is `#' for Sun compatibility.  The line-comment
-character is `|' (unless the `--bitwise-or' option is used).  If a `#'
-appears at the beginning of a line, it is treated as a comment unless
-it looks like `# line file', in which case it is treated normally.
-
-
-File: as.info,  Node: M68HC11-Dependent,  Next: M88K-Dependent,  Prev: M68K-Dependent,  Up: Machine Dependencies
-
-8.19 M68HC11 and M68HC12 Dependent Features
-===========================================
-
-* Menu:
-
-* M68HC11-Opts::                   M68HC11 and M68HC12 Options
-* M68HC11-Syntax::                 Syntax
-* M68HC11-Modifiers::              Symbolic Operand Modifiers
-* M68HC11-Directives::             Assembler Directives
-* M68HC11-Float::                  Floating Point
-* M68HC11-opcodes::                Opcodes
-
-
-File: as.info,  Node: M68HC11-Opts,  Next: M68HC11-Syntax,  Up: M68HC11-Dependent
-
-8.19.1 M68HC11 and M68HC12 Options
-----------------------------------
-
-The Motorola 68HC11 and 68HC12 version of `as' have a few machine
-dependent options.
-
-`-m68hc11'
-     This option switches the assembler in the M68HC11 mode. In this
-     mode, the assembler only accepts 68HC11 operands and mnemonics. It
-     produces code for the 68HC11.
-
-`-m68hc12'
-     This option switches the assembler in the M68HC12 mode. In this
-     mode, the assembler also accepts 68HC12 operands and mnemonics. It
-     produces code for the 68HC12. A few 68HC11 instructions are
-     replaced by some 68HC12 instructions as recommended by Motorola
-     specifications.
-
-`-m68hcs12'
-     This option switches the assembler in the M68HCS12 mode.  This
-     mode is similar to `-m68hc12' but specifies to assemble for the
-     68HCS12 series.  The only difference is on the assembling of the
-     `movb' and `movw' instruction when a PC-relative operand is used.
-
-`-mshort'
-     This option controls the ABI and indicates to use a 16-bit integer
-     ABI.  It has no effect on the assembled instructions.  This is the
-     default.
-
-`-mlong'
-     This option controls the ABI and indicates to use a 32-bit integer
-     ABI.
-
-`-mshort-double'
-     This option controls the ABI and indicates to use a 32-bit float
-     ABI.  This is the default.
-
-`-mlong-double'
-     This option controls the ABI and indicates to use a 64-bit float
-     ABI.
-
-`--strict-direct-mode'
-     You can use the `--strict-direct-mode' option to disable the
-     automatic translation of direct page mode addressing into extended
-     mode when the instruction does not support direct mode.  For
-     example, the `clr' instruction does not support direct page mode
-     addressing. When it is used with the direct page mode, `as' will
-     ignore it and generate an absolute addressing.  This option
-     prevents `as' from doing this, and the wrong usage of the direct
-     page mode will raise an error.
-
-`--short-branchs'
-     The `--short-branchs' option turns off the translation of relative
-     branches into absolute branches when the branch offset is out of
-     range. By default `as' transforms the relative branch (`bsr',
-     `bgt', `bge', `beq', `bne', `ble', `blt', `bhi', `bcc', `bls',
-     `bcs', `bmi', `bvs', `bvs', `bra') into an absolute branch when
-     the offset is out of the -128 .. 127 range.  In that case, the
-     `bsr' instruction is translated into a `jsr', the `bra'
-     instruction is translated into a `jmp' and the conditional branchs
-     instructions are inverted and followed by a `jmp'. This option
-     disables these translations and `as' will generate an error if a
-     relative branch is out of range. This option does not affect the
-     optimization associated to the `jbra', `jbsr' and `jbXX' pseudo
-     opcodes.
-
-`--force-long-branchs'
-     The `--force-long-branchs' option forces the translation of
-     relative branches into absolute branches. This option does not
-     affect the optimization associated to the `jbra', `jbsr' and
-     `jbXX' pseudo opcodes.
-
-`--print-insn-syntax'
-     You can use the `--print-insn-syntax' option to obtain the syntax
-     description of the instruction when an error is detected.
-
-`--print-opcodes'
-     The `--print-opcodes' option prints the list of all the
-     instructions with their syntax. The first item of each line
-     represents the instruction name and the rest of the line indicates
-     the possible operands for that instruction. The list is printed in
-     alphabetical order. Once the list is printed `as' exits.
-
-`--generate-example'
-     The `--generate-example' option is similar to `--print-opcodes'
-     but it generates an example for each instruction instead.
-
-
-File: as.info,  Node: M68HC11-Syntax,  Next: M68HC11-Modifiers,  Prev: M68HC11-Opts,  Up: M68HC11-Dependent
-
-8.19.2 Syntax
--------------
-
-In the M68HC11 syntax, the instruction name comes first and it may be
-followed by one or several operands (up to three). Operands are
-separated by comma (`,'). In the normal mode, `as' will complain if too
-many operands are specified for a given instruction. In the MRI mode
-(turned on with `-M' option), it will treat them as comments. Example:
-
-     inx
-     lda  #23
-     bset 2,x #4
-     brclr *bot #8 foo
-
-   The following addressing modes are understood for 68HC11 and 68HC12:
-"Immediate"
-     `#NUMBER'
-
-"Address Register"
-     `NUMBER,X', `NUMBER,Y'
-
-     The NUMBER may be omitted in which case 0 is assumed.
-
-"Direct Addressing mode"
-     `*SYMBOL', or `*DIGITS'
-
-"Absolute"
-     `SYMBOL', or `DIGITS'
-
-   The M68HC12 has other more complex addressing modes. All of them are
-supported and they are represented below:
-
-"Constant Offset Indexed Addressing Mode"
-     `NUMBER,REG'
-
-     The NUMBER may be omitted in which case 0 is assumed.  The
-     register can be either `X', `Y', `SP' or `PC'.  The assembler will
-     use the smaller post-byte definition according to the constant
-     value (5-bit constant offset, 9-bit constant offset or 16-bit
-     constant offset).  If the constant is not known by the assembler
-     it will use the 16-bit constant offset post-byte and the value
-     will be resolved at link time.
-
-"Offset Indexed Indirect"
-     `[NUMBER,REG]'
-
-     The register can be either `X', `Y', `SP' or `PC'.
-
-"Auto Pre-Increment/Pre-Decrement/Post-Increment/Post-Decrement"
-     `NUMBER,-REG' `NUMBER,+REG' `NUMBER,REG-' `NUMBER,REG+'
-
-     The number must be in the range `-8'..`+8' and must not be 0.  The
-     register can be either `X', `Y', `SP' or `PC'.
-
-"Accumulator Offset"
-     `ACC,REG'
-
-     The accumulator register can be either `A', `B' or `D'.  The
-     register can be either `X', `Y', `SP' or `PC'.
-
-"Accumulator D offset indexed-indirect"
-     `[D,REG]'
-
-     The register can be either `X', `Y', `SP' or `PC'.
-
-
-   For example:
-
-     ldab 1024,sp
-     ldd [10,x]
-     orab 3,+x
-     stab -2,y-
-     ldx a,pc
-     sty [d,sp]
-
-
-File: as.info,  Node: M68HC11-Modifiers,  Next: M68HC11-Directives,  Prev: M68HC11-Syntax,  Up: M68HC11-Dependent
-
-8.19.3 Symbolic Operand Modifiers
----------------------------------
-
-The assembler supports several modifiers when using symbol addresses in
-68HC11 and 68HC12 instruction operands.  The general syntax is the
-following:
-
-     %modifier(symbol)
-
-`%addr'
-     This modifier indicates to the assembler and linker to use the
-     16-bit physical address corresponding to the symbol.  This is
-     intended to be used on memory window systems to map a symbol in
-     the memory bank window.  If the symbol is in a memory expansion
-     part, the physical address corresponds to the symbol address
-     within the memory bank window.  If the symbol is not in a memory
-     expansion part, this is the symbol address (using or not using the
-     %addr modifier has no effect in that case).
-
-`%page'
-     This modifier indicates to use the memory page number corresponding
-     to the symbol.  If the symbol is in a memory expansion part, its
-     page number is computed by the linker as a number used to map the
-     page containing the symbol in the memory bank window.  If the
-     symbol is not in a memory expansion part, the page number is 0.
-
-`%hi'
-     This modifier indicates to use the 8-bit high part of the physical
-     address of the symbol.
-
-`%lo'
-     This modifier indicates to use the 8-bit low part of the physical
-     address of the symbol.
-
-
-   For example a 68HC12 call to a function `foo_example' stored in
-memory expansion part could be written as follows:
-
-     call %addr(foo_example),%page(foo_example)
-
-   and this is equivalent to
-
-     call foo_example
-
-   And for 68HC11 it could be written as follows:
-
-     ldab #%page(foo_example)
-     stab _page_switch
-     jsr  %addr(foo_example)
-
-
-File: as.info,  Node: M68HC11-Directives,  Next: M68HC11-Float,  Prev: M68HC11-Modifiers,  Up: M68HC11-Dependent
-
-8.19.4 Assembler Directives
----------------------------
-
-The 68HC11 and 68HC12 version of `as' have the following specific
-assembler directives:
-
-`.relax'
-     The relax directive is used by the `GNU Compiler' to emit a
-     specific relocation to mark a group of instructions for linker
-     relaxation.  The sequence of instructions within the group must be
-     known to the linker so that relaxation can be performed.
-
-`.mode [mshort|mlong|mshort-double|mlong-double]'
-     This directive specifies the ABI.  It overrides the `-mshort',
-     `-mlong', `-mshort-double' and `-mlong-double' options.
-
-`.far SYMBOL'
-     This directive marks the symbol as a `far' symbol meaning that it
-     uses a `call/rtc' calling convention as opposed to `jsr/rts'.
-     During a final link, the linker will identify references to the
-     `far' symbol and will verify the proper calling convention.
-
-`.interrupt SYMBOL'
-     This directive marks the symbol as an interrupt entry point.  This
-     information is then used by the debugger to correctly unwind the
-     frame across interrupts.
-
-`.xrefb SYMBOL'
-     This directive is defined for compatibility with the
-     `Specification for Motorola 8 and 16-Bit Assembly Language Input
-     Standard' and is ignored.
-
-
-
-File: as.info,  Node: M68HC11-Float,  Next: M68HC11-opcodes,  Prev: M68HC11-Directives,  Up: M68HC11-Dependent
-
-8.19.5 Floating Point
----------------------
-
-Packed decimal (P) format floating literals are not supported.  Feel
-free to add the code!
-
-   The floating point formats generated by directives are these.
-
-`.float'
-     `Single' precision floating point constants.
-
-`.double'
-     `Double' precision floating point constants.
-
-`.extend'
-`.ldouble'
-     `Extended' precision (`long double') floating point constants.
-
-
-File: as.info,  Node: M68HC11-opcodes,  Prev: M68HC11-Float,  Up: M68HC11-Dependent
-
-8.19.6 Opcodes
---------------
-
-* Menu:
-
-* M68HC11-Branch::                 Branch Improvement
-
-
-File: as.info,  Node: M68HC11-Branch,  Up: M68HC11-opcodes
-
-8.19.6.1 Branch Improvement
-...........................
-
-Certain pseudo opcodes are permitted for branch instructions.  They
-expand to the shortest branch instruction that reach the target.
-Generally these mnemonics are made by prepending `j' to the start of
-Motorola mnemonic. These pseudo opcodes are not affected by the
-`--short-branchs' or `--force-long-branchs' options.
-
-   The following table summarizes the pseudo-operations.
-
-                             Displacement Width
-          +-------------------------------------------------------------+
-          |                     Options                                 |
-          |    --short-branchs            --force-long-branchs          |
-          +--------------------------+----------------------------------+
-       Op |BYTE             WORD     | BYTE          WORD               |
-          +--------------------------+----------------------------------+
-      bsr | bsr <pc-rel>    <error>  |               jsr <abs>          |
-      bra | bra <pc-rel>    <error>  |               jmp <abs>          |
-     jbsr | bsr <pc-rel>   jsr <abs> | bsr <pc-rel>  jsr <abs>          |
-     jbra | bra <pc-rel>   jmp <abs> | bra <pc-rel>  jmp <abs>          |
-      bXX | bXX <pc-rel>    <error>  |               bNX +3; jmp <abs>  |
-     jbXX | bXX <pc-rel>   bNX +3;   | bXX <pc-rel>  bNX +3; jmp <abs>  |
-          |                jmp <abs> |                                  |
-          +--------------------------+----------------------------------+
-     XX: condition
-     NX: negative of condition XX
-
-`jbsr'
-`jbra'
-     These are the simplest jump pseudo-operations; they always map to
-     one particular machine instruction, depending on the displacement
-     to the branch target.
-
-`jbXX'
-     Here, `jbXX' stands for an entire family of pseudo-operations,
-     where XX is a conditional branch or condition-code test.  The full
-     list of pseudo-ops in this family is:
-           jbcc   jbeq   jbge   jbgt   jbhi   jbvs   jbpl  jblo
-           jbcs   jbne   jblt   jble   jbls   jbvc   jbmi
-
-     For the cases of non-PC relative displacements and long
-     displacements, `as' issues a longer code fragment in terms of NX,
-     the opposite condition to XX.  For example, for the non-PC
-     relative case:
-              jbXX foo
-     gives
-               bNXs oof
-               jmp foo
-           oof:
-
-
-
-File: as.info,  Node: M88K-Dependent,  Next: MIPS-Dependent,  Prev: M68HC11-Dependent,  Up: Machine Dependencies
-
-8.20 Motorola M88K Dependent Features
-=====================================
-
-* Menu:
-
-* M88K Directives::     M88K Machine Directives
-
-
-File: as.info,  Node: M88K Directives,  Up: M88K-Dependent
-
-8.20.1 M88K Machine Directives
-------------------------------
-
-The M88K version of the assembler supports the following machine
-directives:
-
-`.align'
-     This directive aligns the section program counter on the next
-     4-byte boundary.
-
-`.dfloat EXPR'
-     This assembles a double precision (64-bit) floating point constant.
-
-`.ffloat EXPR'
-     This assembles a single precision (32-bit) floating point constant.
-
-`.half EXPR'
-     This directive assembles a half-word (16-bit) constant.
-
-`.word EXPR'
-     This assembles a word (32-bit) constant.
-
-`.string "STR"'
-     This directive behaves like the standard `.ascii' directive for
-     copying STR into the object file.  The string is not terminated
-     with a null byte.
-
-`.set SYMBOL, VALUE'
-     This directive creates a symbol named SYMBOL which is an alias for
-     another symbol (possibly not yet defined).  This should not be
-     confused with the mnemonic `set', which is a legitimate M88K
-     instruction.
-
-`.def SYMBOL, VALUE'
-     This directive is synonymous with `.set' and is presumably provided
-     for compatibility with other M88K assemblers.
-
-`.bss SYMBOL, LENGTH, ALIGN'
-     Reserve LENGTH bytes in the bss section for a local SYMBOL,
-     aligned to the power of two specified by ALIGN.  LENGTH and ALIGN
-     must be positive absolute expressions.  This directive differs
-     from `.lcomm' only in that it permits you to specify an alignment.
-     *Note `.lcomm': Lcomm.
-
-
-
-File: as.info,  Node: MIPS-Dependent,  Next: MMIX-Dependent,  Prev: M88K-Dependent,  Up: Machine Dependencies
-
-8.21 MIPS Dependent Features
-============================
-
-   GNU `as' for MIPS architectures supports several different MIPS
-processors, and MIPS ISA levels I through V, MIPS32, and MIPS64.  For
-information about the MIPS instruction set, see `MIPS RISC
-Architecture', by Kane and Heindrich (Prentice-Hall).  For an overview
-of MIPS assembly conventions, see "Appendix D: Assembly Language
-Programming" in the same work.
-
-* Menu:
-
-* MIPS Opts::   	Assembler options
-* MIPS Object:: 	ECOFF object code
-* MIPS Stabs::  	Directives for debugging information
-* MIPS ISA::    	Directives to override the ISA level
-* MIPS symbol sizes::   Directives to override the size of symbols
-* MIPS autoextend::	Directives for extending MIPS 16 bit instructions
-* MIPS insn::		Directive to mark data as an instruction
-* MIPS option stack::	Directives to save and restore options
-* MIPS ASE instruction generation overrides:: Directives to control
-  			generation of MIPS ASE instructions
-
-
-File: as.info,  Node: MIPS Opts,  Next: MIPS Object,  Up: MIPS-Dependent
-
-8.21.1 Assembler options
-------------------------
-
-The MIPS configurations of GNU `as' support these special options:
-
-`-G NUM'
-     This option sets the largest size of an object that can be
-     referenced implicitly with the `gp' register.  It is only accepted
-     for targets that use ECOFF format.  The default value is 8.
-
-`-EB'
-`-EL'
-     Any MIPS configuration of `as' can select big-endian or
-     little-endian output at run time (unlike the other GNU development
-     tools, which must be configured for one or the other).  Use `-EB'
-     to select big-endian output, and `-EL' for little-endian.
-
-`-mips1'
-`-mips2'
-`-mips3'
-`-mips4'
-`-mips5'
-`-mips32'
-`-mips32r2'
-`-mips64'
-`-mips64r2'
-     Generate code for a particular MIPS Instruction Set Architecture
-     level.  `-mips1' corresponds to the R2000 and R3000 processors,
-     `-mips2' to the R6000 processor, `-mips3' to the R4000 processor,
-     and `-mips4' to the R8000 and R10000 processors.  `-mips5',
-     `-mips32', `-mips32r2', `-mips64', and `-mips64r2' correspond to
-     generic MIPS V, MIPS32, MIPS32 RELEASE 2, MIPS64, and MIPS64
-     RELEASE 2 ISA processors, respectively.  You can also switch
-     instruction sets during the assembly; see *Note Directives to
-     override the ISA level: MIPS ISA.
-
-`-mgp32'
-`-mfp32'
-     Some macros have different expansions for 32-bit and 64-bit
-     registers.  The register sizes are normally inferred from the ISA
-     and ABI, but these flags force a certain group of registers to be
-     treated as 32 bits wide at all times.  `-mgp32' controls the size
-     of general-purpose registers and `-mfp32' controls the size of
-     floating-point registers.
-
-     On some MIPS variants there is a 32-bit mode flag; when this flag
-     is set, 64-bit instructions generate a trap.  Also, some 32-bit
-     OSes only save the 32-bit registers on a context switch, so it is
-     essential never to use the 64-bit registers.
-
-`-mgp64'
-     Assume that 64-bit general purpose registers are available.  This
-     is provided in the interests of symmetry with -gp32.
-
-`-mips16'
-`-no-mips16'
-     Generate code for the MIPS 16 processor.  This is equivalent to
-     putting `.set mips16' at the start of the assembly file.
-     `-no-mips16' turns off this option.
-
-`-mips3d'
-`-no-mips3d'
-     Generate code for the MIPS-3D Application Specific Extension.
-     This tells the assembler to accept MIPS-3D instructions.
-     `-no-mips3d' turns off this option.
-
-`-mdmx'
-`-no-mdmx'
-     Generate code for the MDMX Application Specific Extension.  This
-     tells the assembler to accept MDMX instructions.  `-no-mdmx' turns
-     off this option.
-
-`-mfix7000'
-`-mno-fix7000'
-     Cause nops to be inserted if the read of the destination register
-     of an mfhi or mflo instruction occurs in the following two
-     instructions.
-
-`-mfix-vr4120'
-`-no-mfix-vr4120'
-     Insert nops to work around certain VR4120 errata.  This option is
-     intended to be used on GCC-generated code: it is not designed to
-     catch all problems in hand-written assembler code.
-
-`-mfix-vr4130'
-`-no-mfix-vr4130'
-     Insert nops to work around the VR4130 `mflo'/`mfhi' errata.
-
-`-m4010'
-`-no-m4010'
-     Generate code for the LSI R4010 chip.  This tells the assembler to
-     accept the R4010 specific instructions (`addciu', `ffc', etc.),
-     and to not schedule `nop' instructions around accesses to the `HI'
-     and `LO' registers.  `-no-m4010' turns off this option.
-
-`-m4650'
-`-no-m4650'
-     Generate code for the MIPS R4650 chip.  This tells the assembler
-     to accept the `mad' and `madu' instruction, and to not schedule
-     `nop' instructions around accesses to the `HI' and `LO' registers.
-     `-no-m4650' turns off this option.
-
-`-m3900'
-`-no-m3900'
-`-m4100'
-`-no-m4100'
-     For each option `-mNNNN', generate code for the MIPS RNNNN chip.
-     This tells the assembler to accept instructions specific to that
-     chip, and to schedule for that chip's hazards.
-
-`-march=CPU'
-     Generate code for a particular MIPS cpu.  It is exactly equivalent
-     to `-mCPU', except that there are more value of CPU understood.
-     Valid CPU value are:
-
-          2000, 3000, 3900, 4000, 4010, 4100, 4111, vr4120, vr4130,
-          vr4181, 4300, 4400, 4600, 4650, 5000, rm5200, rm5230, rm5231,
-          rm5261, rm5721, vr5400, vr5500, 6000, rm7000, 8000, rm9000,
-          10000, 12000, mips32-4k, sb1
-
-`-mtune=CPU'
-     Schedule and tune for a particular MIPS cpu.  Valid CPU values are
-     identical to `-march=CPU'.
-
-`-mabi=ABI'
-     Record which ABI the source code uses.  The recognized arguments
-     are: `32', `n32', `o64', `64' and `eabi'.
-
-`-msym32'
-`-mno-sym32'
-     Equivalent to adding `.set sym32' or `.set nosym32' to the
-     beginning of the assembler input.  *Note MIPS symbol sizes::.
-
-`-nocpp'
-     This option is ignored.  It is accepted for command-line
-     compatibility with other assemblers, which use it to turn off C
-     style preprocessing.  With GNU `as', there is no need for
-     `-nocpp', because the GNU assembler itself never runs the C
-     preprocessor.
-
-`--construct-floats'
-`--no-construct-floats'
-     The `--no-construct-floats' option disables the construction of
-     double width floating point constants by loading the two halves of
-     the value into the two single width floating point registers that
-     make up the double width register.  This feature is useful if the
-     processor support the FR bit in its status  register, and this bit
-     is known (by the programmer) to be set.  This bit prevents the
-     aliasing of the double width register by the single width
-     registers.
-
-     By default `--construct-floats' is selected, allowing construction
-     of these floating point constants.
-
-`--trap'
-`--no-break'
-     `as' automatically macro expands certain division and
-     multiplication instructions to check for overflow and division by
-     zero.  This option causes `as' to generate code to take a trap
-     exception rather than a break exception when an error is detected.
-     The trap instructions are only supported at Instruction Set
-     Architecture level 2 and higher.
-
-`--break'
-`--no-trap'
-     Generate code to take a break exception rather than a trap
-     exception when an error is detected.  This is the default.
-
-`-mpdr'
-`-mno-pdr'
-     Control generation of `.pdr' sections.  Off by default on IRIX, on
-     elsewhere.
-
-`-mshared'
-`-mno-shared'
-     When generating code using the Unix calling conventions (selected
-     by `-KPIC' or `-mcall_shared'), gas will normally generate code
-     which can go into a shared library.  The `-mno-shared' option
-     tells gas to generate code which uses the calling convention, but
-     can not go into a shared library.  The resulting code is slightly
-     more efficient.  This option only affects the handling of the
-     `.cpload' and `.cpsetup' pseudo-ops.
-
-
-File: as.info,  Node: MIPS Object,  Next: MIPS Stabs,  Prev: MIPS Opts,  Up: MIPS-Dependent
-
-8.21.2 MIPS ECOFF object code
------------------------------
-
-Assembling for a MIPS ECOFF target supports some additional sections
-besides the usual `.text', `.data' and `.bss'.  The additional sections
-are `.rdata', used for read-only data, `.sdata', used for small data,
-and `.sbss', used for small common objects.
-
-   When assembling for ECOFF, the assembler uses the `$gp' (`$28')
-register to form the address of a "small object".  Any object in the
-`.sdata' or `.sbss' sections is considered "small" in this sense.  For
-external objects, or for objects in the `.bss' section, you can use the
-`gcc' `-G' option to control the size of objects addressed via `$gp';
-the default value is 8, meaning that a reference to any object eight
-bytes or smaller uses `$gp'.  Passing `-G 0' to `as' prevents it from
-using the `$gp' register on the basis of object size (but the assembler
-uses `$gp' for objects in `.sdata' or `sbss' in any case).  The size of
-an object in the `.bss' section is set by the `.comm' or `.lcomm'
-directive that defines it.  The size of an external object may be set
-with the `.extern' directive.  For example, `.extern sym,4' declares
-that the object at `sym' is 4 bytes in length, whie leaving `sym'
-otherwise undefined.
-
-   Using small ECOFF objects requires linker support, and assumes that
-the `$gp' register is correctly initialized (normally done
-automatically by the startup code).  MIPS ECOFF assembly code must not
-modify the `$gp' register.
-
-
-File: as.info,  Node: MIPS Stabs,  Next: MIPS ISA,  Prev: MIPS Object,  Up: MIPS-Dependent
-
-8.21.3 Directives for debugging information
--------------------------------------------
-
-MIPS ECOFF `as' supports several directives used for generating
-debugging information which are not support by traditional MIPS
-assemblers.  These are `.def', `.endef', `.dim', `.file', `.scl',
-`.size', `.tag', `.type', `.val', `.stabd', `.stabn', and `.stabs'.
-The debugging information generated by the three `.stab' directives can
-only be read by GDB, not by traditional MIPS debuggers (this
-enhancement is required to fully support C++ debugging).  These
-directives are primarily used by compilers, not assembly language
-programmers!
-
-
-File: as.info,  Node: MIPS symbol sizes,  Next: MIPS autoextend,  Prev: MIPS ISA,  Up: MIPS-Dependent
-
-8.21.4 Directives to override the size of symbols
--------------------------------------------------
-
-The n64 ABI allows symbols to have any 64-bit value.  Although this
-provides a great deal of flexibility, it means that some macros have
-much longer expansions than their 32-bit counterparts.  For example,
-the non-PIC expansion of `dla $4,sym' is usually:
-
-     lui     $4,%highest(sym)
-     lui     $1,%hi(sym)
-     daddiu  $4,$4,%higher(sym)
-     daddiu  $1,$1,%lo(sym)
-     dsll32  $4,$4,0
-     daddu   $4,$4,$1
-
-   whereas the 32-bit expansion is simply:
-
-     lui     $4,%hi(sym)
-     daddiu  $4,$4,%lo(sym)
-
-   n64 code is sometimes constructed in such a way that all symbolic
-constants are known to have 32-bit values, and in such cases, it's
-preferable to use the 32-bit expansion instead of the 64-bit expansion.
-
-   You can use the `.set sym32' directive to tell the assembler that,
-from this point on, all expressions of the form `SYMBOL' or `SYMBOL +
-OFFSET' have 32-bit values.  For example:
-
-     .set sym32
-     dla     $4,sym
-     lw      $4,sym+16
-     sw      $4,sym+0x8000($4)
-
-   will cause the assembler to treat `sym', `sym+16' and `sym+0x8000'
-as 32-bit values.  The handling of non-symbolic addresses is not
-affected.
-
-   The directive `.set nosym32' ends a `.set sym32' block and reverts
-to the normal behavior.  It is also possible to change the symbol size
-using the command-line options `-msym32' and `-mno-sym32'.
-
-   These options and directives are always accepted, but at present,
-they have no effect for anything other than n64.
-
-
-File: as.info,  Node: MIPS ISA,  Next: MIPS symbol sizes,  Prev: MIPS Stabs,  Up: MIPS-Dependent
-
-8.21.5 Directives to override the ISA level
--------------------------------------------
-
-GNU `as' supports an additional directive to change the MIPS
-Instruction Set Architecture level on the fly: `.set mipsN'.  N should
-be a number from 0 to 5, or 32, 32r2, 64 or 64r2.  The values other
-than 0 make the assembler accept instructions for the corresponding ISA
-level, from that point on in the assembly.  `.set mipsN' affects not
-only which instructions are permitted, but also how certain macros are
-expanded.  `.set mips0' restores the ISA level to its original level:
-either the level you selected with command line options, or the default
-for your configuration.  You can use this feature to permit specific
-R4000 instructions while assembling in 32 bit mode.  Use this directive
-with care!
-
-   The directive `.set mips16' puts the assembler into MIPS 16 mode, in
-which it will assemble instructions for the MIPS 16 processor.  Use
-`.set nomips16' to return to normal 32 bit mode.
-
-   Traditional MIPS assemblers do not support this directive.
-
-
-File: as.info,  Node: MIPS autoextend,  Next: MIPS insn,  Prev: MIPS symbol sizes,  Up: MIPS-Dependent
-
-8.21.6 Directives for extending MIPS 16 bit instructions
---------------------------------------------------------
-
-By default, MIPS 16 instructions are automatically extended to 32 bits
-when necessary.  The directive `.set noautoextend' will turn this off.
-When `.set noautoextend' is in effect, any 32 bit instruction must be
-explicitly extended with the `.e' modifier (e.g., `li.e $4,1000').  The
-directive `.set autoextend' may be used to once again automatically
-extend instructions when necessary.
-
-   This directive is only meaningful when in MIPS 16 mode.  Traditional
-MIPS assemblers do not support this directive.
-
-
-File: as.info,  Node: MIPS insn,  Next: MIPS option stack,  Prev: MIPS autoextend,  Up: MIPS-Dependent
-
-8.21.7 Directive to mark data as an instruction
------------------------------------------------
-
-The `.insn' directive tells `as' that the following data is actually
-instructions.  This makes a difference in MIPS 16 mode: when loading
-the address of a label which precedes instructions, `as' automatically
-adds 1 to the value, so that jumping to the loaded address will do the
-right thing.
-
-
-File: as.info,  Node: MIPS option stack,  Next: MIPS ASE instruction generation overrides,  Prev: MIPS insn,  Up: MIPS-Dependent
-
-8.21.8 Directives to save and restore options
----------------------------------------------
-
-The directives `.set push' and `.set pop' may be used to save and
-restore the current settings for all the options which are controlled
-by `.set'.  The `.set push' directive saves the current settings on a
-stack.  The `.set pop' directive pops the stack and restores the
-settings.
-
-   These directives can be useful inside an macro which must change an
-option such as the ISA level or instruction reordering but does not want
-to change the state of the code which invoked the macro.
-
-   Traditional MIPS assemblers do not support these directives.
-
-
-File: as.info,  Node: MIPS ASE instruction generation overrides,  Prev: MIPS option stack,  Up: MIPS-Dependent
-
-8.21.9 Directives to control generation of MIPS ASE instructions
-----------------------------------------------------------------
-
-The directive `.set mips3d' makes the assembler accept instructions
-from the MIPS-3D Application Specific Extension from that point on in
-the assembly.  The `.set nomips3d' directive prevents MIPS-3D
-instructions from being accepted.
-
-   The directive `.set mdmx' makes the assembler accept instructions
-from the MDMX Application Specific Extension from that point on in the
-assembly.  The `.set nomdmx' directive prevents MDMX instructions from
-being accepted.
-
-   Traditional MIPS assemblers do not support these directives.
-
-
-File: as.info,  Node: MMIX-Dependent,  Next: MSP430-Dependent,  Prev: MIPS-Dependent,  Up: Machine Dependencies
-
-8.22 MMIX Dependent Features
-============================
-
-* Menu:
-
-* MMIX-Opts::              Command-line Options
-* MMIX-Expand::            Instruction expansion
-* MMIX-Syntax::            Syntax
-* MMIX-mmixal::		   Differences to `mmixal' syntax and semantics
-
-
-File: as.info,  Node: MMIX-Opts,  Next: MMIX-Expand,  Up: MMIX-Dependent
-
-8.22.1 Command-line Options
----------------------------
-
-The MMIX version of `as' has some machine-dependent options.
-
-   When `--fixed-special-register-names' is specified, only the register
-names specified in *Note MMIX-Regs:: are recognized in the instructions
-`PUT' and `GET'.
-
-   You can use the `--globalize-symbols' to make all symbols global.
-This option is useful when splitting up a `mmixal' program into several
-files.
-
-   The `--gnu-syntax' turns off most syntax compatibility with
-`mmixal'.  Its usability is currently doubtful.
-
-   The `--relax' option is not fully supported, but will eventually make
-the object file prepared for linker relaxation.
-
-   If you want to avoid inadvertently calling a predefined symbol and
-would rather get an error, for example when using `as' with a compiler
-or other machine-generated code, specify `--no-predefined-syms'.  This
-turns off built-in predefined definitions of all such symbols,
-including rounding-mode symbols, segment symbols, `BIT' symbols, and
-`TRAP' symbols used in `mmix' "system calls".  It also turns off
-predefined special-register names, except when used in `PUT' and `GET'
-instructions.
-
-   By default, some instructions are expanded to fit the size of the
-operand or an external symbol (*note MMIX-Expand::).  By passing
-`--no-expand', no such expansion will be done, instead causing errors
-at link time if the operand does not fit.
-
-   The `mmixal' documentation (*note mmixsite::) specifies that global
-registers allocated with the `GREG' directive (*note MMIX-greg::) and
-initialized to the same non-zero value, will refer to the same global
-register.  This isn't strictly enforceable in `as' since the final
-addresses aren't known until link-time, but it will do an effort unless
-the `--no-merge-gregs' option is specified.  (Register merging isn't
-yet implemented in `ld'.)
-
-   `as' will warn every time it expands an instruction to fit an
-operand unless the option `-x' is specified.  It is believed that this
-behaviour is more useful than just mimicking `mmixal''s behaviour, in
-which instructions are only expanded if the `-x' option is specified,
-and assembly fails otherwise, when an instruction needs to be expanded.
-It needs to be kept in mind that `mmixal' is both an assembler and
-linker, while `as' will expand instructions that at link stage can be
-contracted.  (Though linker relaxation isn't yet implemented in `ld'.)
-The option `-x' also imples `--linker-allocated-gregs'.
-
-   If instruction expansion is enabled, `as' can expand a `PUSHJ'
-instruction into a series of instructions.  The shortest expansion is
-to not expand it, but just mark the call as redirectable to a stub,
-which `ld' creates at link-time, but only if the original `PUSHJ'
-instruction is found not to reach the target.  The stub consists of the
-necessary instructions to form a jump to the target.  This happens if
-`as' can assert that the `PUSHJ' instruction can reach such a stub.
-The option `--no-pushj-stubs' disables this shorter expansion, and the
-longer series of instructions is then created at assembly-time.  The
-option `--no-stubs' is a synonym, intended for compatibility with
-future releases, where generation of stubs for other instructions may
-be implemented.
-
-   Usually a two-operand-expression (*note GREG-base::) without a
-matching `GREG' directive is treated as an error by `as'.  When the
-option `--linker-allocated-gregs' is in effect, they are instead passed
-through to the linker, which will allocate as many global registers as
-is needed.
-
-
-File: as.info,  Node: MMIX-Expand,  Next: MMIX-Syntax,  Prev: MMIX-Opts,  Up: MMIX-Dependent
-
-8.22.2 Instruction expansion
-----------------------------
-
-When `as' encounters an instruction with an operand that is either not
-known or does not fit the operand size of the instruction, `as' (and
-`ld') will expand the instruction into a sequence of instructions
-semantically equivalent to the operand fitting the instruction.
-Expansion will take place for the following instructions:
-
-`GETA'
-     Expands to a sequence of four instructions: `SETL', `INCML',
-     `INCMH' and `INCH'.  The operand must be a multiple of four.
-
-Conditional branches
-     A branch instruction is turned into a branch with the complemented
-     condition and prediction bit over five instructions; four
-     instructions setting `$255' to the operand value, which like with
-     `GETA' must be a multiple of four, and a final `GO $255,$255,0'.
-
-`PUSHJ'
-     Similar to expansion for conditional branches; four instructions
-     set `$255' to the operand value, followed by a `PUSHGO
-     $255,$255,0'.
-
-`JMP'
-     Similar to conditional branches and `PUSHJ'.  The final instruction
-     is `GO $255,$255,0'.
-
-   The linker `ld' is expected to shrink these expansions for code
-assembled with `--relax' (though not currently implemented).
-
-
-File: as.info,  Node: MMIX-Syntax,  Next: MMIX-mmixal,  Prev: MMIX-Expand,  Up: MMIX-Dependent
-
-8.22.3 Syntax
--------------
-
-The assembly syntax is supposed to be upward compatible with that
-described in Sections 1.3 and 1.4 of `The Art of Computer Programming,
-Volume 1'.  Draft versions of those chapters as well as other MMIX
-information is located at
-`http://www-cs-faculty.stanford.edu/~knuth/mmix-news.html'.  Most code
-examples from the mmixal package located there should work unmodified
-when assembled and linked as single files, with a few noteworthy
-exceptions (*note MMIX-mmixal::).
-
-   Before an instruction is emitted, the current location is aligned to
-the next four-byte boundary.  If a label is defined at the beginning of
-the line, its value will be the aligned value.
-
-   In addition to the traditional hex-prefix `0x', a hexadecimal number
-can also be specified by the prefix character `#'.
-
-   After all operands to an MMIX instruction or directive have been
-specified, the rest of the line is ignored, treated as a comment.
-
-* Menu:
-
-* MMIX-Chars::		        Special Characters
-* MMIX-Symbols::		Symbols
-* MMIX-Regs::			Register Names
-* MMIX-Pseudos::		Assembler Directives
-
-
-File: as.info,  Node: MMIX-Chars,  Next: MMIX-Symbols,  Up: MMIX-Syntax
-
-8.22.3.1 Special Characters
-...........................
-
-The characters `*' and `#' are line comment characters; each start a
-comment at the beginning of a line, but only at the beginning of a
-line.  A `#' prefixes a hexadecimal number if found elsewhere on a line.
-
-   Two other characters, `%' and `!', each start a comment anywhere on
-the line.  Thus you can't use the `modulus' and `not' operators in
-expressions normally associated with these two characters.
-
-   A `;' is a line separator, treated as a new-line, so separate
-instructions can be specified on a single line.
-
-
-File: as.info,  Node: MMIX-Symbols,  Next: MMIX-Regs,  Prev: MMIX-Chars,  Up: MMIX-Syntax
-
-8.22.3.2 Symbols
-................
-
-The character `:' is permitted in identifiers.  There are two
-exceptions to it being treated as any other symbol character: if a
-symbol begins with `:', it means that the symbol is in the global
-namespace and that the current prefix should not be prepended to that
-symbol (*note MMIX-prefix::).  The `:' is then not considered part of
-the symbol.  For a symbol in the label position (first on a line), a `:'
-at the end of a symbol is silently stripped off.  A label is permitted,
-but not required, to be followed by a `:', as with many other assembly
-formats.
-
-   The character `@' in an expression, is a synonym for `.', the
-current location.
-
-   In addition to the common forward and backward local symbol formats
-(*note Symbol Names::), they can be specified with upper-case `B' and
-`F', as in `8B' and `9F'.  A local label defined for the current
-position is written with a `H' appended to the number:
-     3H LDB $0,$1,2
-   This and traditional local-label formats cannot be mixed: a label
-must be defined and referred to using the same format.
-
-   There's a minor caveat: just as for the ordinary local symbols, the
-local symbols are translated into ordinary symbols using control
-characters are to hide the ordinal number of the symbol.
-Unfortunately, these symbols are not translated back in error messages.
-Thus you may see confusing error messages when local symbols are used.
-Control characters `\003' (control-C) and `\004' (control-D) are used
-for the MMIX-specific local-symbol syntax.
-
-   The symbol `Main' is handled specially; it is always global.
-
-   By defining the symbols `__.MMIX.start..text' and
-`__.MMIX.start..data', the address of respectively the `.text' and
-`.data' segments of the final program can be defined, though when
-linking more than one object file, the code or data in the object file
-containing the symbol is not guaranteed to be start at that position;
-just the final executable.  *Note MMIX-loc::.
-
-
-File: as.info,  Node: MMIX-Regs,  Next: MMIX-Pseudos,  Prev: MMIX-Symbols,  Up: MMIX-Syntax
-
-8.22.3.3 Register names
-.......................
-
-Local and global registers are specified as `$0' to `$255'.  The
-recognized special register names are `rJ', `rA', `rB', `rC', `rD',
-`rE', `rF', `rG', `rH', `rI', `rK', `rL', `rM', `rN', `rO', `rP', `rQ',
-`rR', `rS', `rT', `rU', `rV', `rW', `rX', `rY', `rZ', `rBB', `rTT',
-`rWW', `rXX', `rYY' and `rZZ'.  A leading `:' is optional for special
-register names.
-
-   Local and global symbols can be equated to register names and used in
-place of ordinary registers.
-
-   Similarly for special registers, local and global symbols can be
-used.  Also, symbols equated from numbers and constant expressions are
-allowed in place of a special register, except when either of the
-options `--no-predefined-syms' and `--fixed-special-register-names' are
-specified.  Then only the special register names above are allowed for
-the instructions having a special register operand; `GET' and `PUT'.
-
-
-File: as.info,  Node: MMIX-Pseudos,  Prev: MMIX-Regs,  Up: MMIX-Syntax
-
-8.22.3.4 Assembler Directives
-.............................
-
-`LOC'
-     The `LOC' directive sets the current location to the value of the
-     operand field, which may include changing sections.  If the
-     operand is a constant, the section is set to either `.data' if the
-     value is `0x2000000000000000' or larger, else it is set to `.text'.
-     Within a section, the current location may only be changed to
-     monotonically higher addresses.  A LOC expression must be a
-     previously defined symbol or a "pure" constant.
-
-     An example, which sets the label PREV to the current location, and
-     updates the current location to eight bytes forward:
-          prev LOC @+8
-
-     When a LOC has a constant as its operand, a symbol
-     `__.MMIX.start..text' or `__.MMIX.start..data' is defined
-     depending on the address as mentioned above.  Each such symbol is
-     interpreted as special by the linker, locating the section at that
-     address.  Note that if multiple files are linked, the first object
-     file with that section will be mapped to that address (not
-     necessarily the file with the LOC definition).
-
-`LOCAL'
-     Example:
-           LOCAL external_symbol
-           LOCAL 42
-           .local asymbol
-
-     This directive-operation generates a link-time assertion that the
-     operand does not correspond to a global register.  The operand is
-     an expression that at link-time resolves to a register symbol or a
-     number.  A number is treated as the register having that number.
-     There is one restriction on the use of this directive: the
-     pseudo-directive must be placed in a section with contents, code
-     or data.
-
-`IS'
-     The `IS' directive:
-          asymbol IS an_expression
-     sets the symbol `asymbol' to `an_expression'.  A symbol may not be
-     set more than once using this directive.  Local labels may be set
-     using this directive, for example:
-          5H IS @+4
-
-`GREG'
-     This directive reserves a global register, gives it an initial
-     value and optionally gives it a symbolic name.  Some examples:
-
-          areg GREG
-          breg GREG data_value
-               GREG data_buffer
-               .greg creg, another_data_value
-
-     The symbolic register name can be used in place of a (non-special)
-     register.  If a value isn't provided, it defaults to zero.  Unless
-     the option `--no-merge-gregs' is specified, non-zero registers
-     allocated with this directive may be eliminated by `as'; another
-     register with the same value used in its place.  Any of the
-     instructions `CSWAP', `GO', `LDA', `LDBU', `LDB', `LDHT', `LDOU',
-     `LDO', `LDSF', `LDTU', `LDT', `LDUNC', `LDVTS', `LDWU', `LDW',
-     `PREGO', `PRELD', `PREST', `PUSHGO', `STBU', `STB', `STCO', `STHT',
-     `STOU', `STSF', `STTU', `STT', `STUNC', `SYNCD', `SYNCID', can
-     have a value nearby an initial value in place of its second and
-     third operands.  Here, "nearby" is defined as within the range
-     0...255 from the initial value of such an allocated register.
-
-          buffer1 BYTE 0,0,0,0,0
-          buffer2 BYTE 0,0,0,0,0
-           ...
-           GREG buffer1
-           LDOU $42,buffer2
-     In the example above, the `Y' field of the `LDOUI' instruction
-     (LDOU with a constant Z) will be replaced with the global register
-     allocated for `buffer1', and the `Z' field will have the value 5,
-     the offset from `buffer1' to `buffer2'.  The result is equivalent
-     to this code:
-          buffer1 BYTE 0,0,0,0,0
-          buffer2 BYTE 0,0,0,0,0
-           ...
-          tmpreg GREG buffer1
-           LDOU $42,tmpreg,(buffer2-buffer1)
-
-     Global registers allocated with this directive are allocated in
-     order higher-to-lower within a file.  Other than that, the exact
-     order of register allocation and elimination is undefined.  For
-     example, the order is undefined when more than one file with such
-     directives are linked together.  With the options `-x' and
-     `--linker-allocated-gregs', `GREG' directives for two-operand
-     cases like the one mentioned above can be omitted.  Sufficient
-     global registers will then be allocated by the linker.
-
-`BYTE'
-     The `BYTE' directive takes a series of operands separated by a
-     comma.  If an operand is a string (*note Strings::), each
-     character of that string is emitted as a byte.  Other operands
-     must be constant expressions without forward references, in the
-     range 0...255.  If you need operands having expressions with
-     forward references, use `.byte' (*note Byte::).  An operand can be
-     omitted, defaulting to a zero value.
-
-`WYDE'
-`TETRA'
-`OCTA'
-     The directives `WYDE', `TETRA' and `OCTA' emit constants of two,
-     four and eight bytes size respectively.  Before anything else
-     happens for the directive, the current location is aligned to the
-     respective constant-size boundary.  If a label is defined at the
-     beginning of the line, its value will be that after the alignment.
-     A single operand can be omitted, defaulting to a zero value
-     emitted for the directive.  Operands can be expressed as strings
-     (*note Strings::), in which case each character in the string is
-     emitted as a separate constant of the size indicated by the
-     directive.
-
-`PREFIX'
-     The `PREFIX' directive sets a symbol name prefix to be prepended to
-     all symbols (except local symbols, *note MMIX-Symbols::), that are
-     not prefixed with `:', until the next `PREFIX' directive.  Such
-     prefixes accumulate.  For example,
-           PREFIX a
-           PREFIX b
-          c IS 0
-     defines a symbol `abc' with the value 0.
-
-`BSPEC'
-`ESPEC'
-     A pair of `BSPEC' and `ESPEC' directives delimit a section of
-     special contents (without specified semantics).  Example:
-           BSPEC 42
-           TETRA 1,2,3
-           ESPEC
-     The single operand to `BSPEC' must be number in the range 0...255.
-     The `BSPEC' number 80 is used by the GNU binutils implementation.
-
-
-File: as.info,  Node: MMIX-mmixal,  Prev: MMIX-Syntax,  Up: MMIX-Dependent
-
-8.22.4 Differences to `mmixal'
-------------------------------
-
-The binutils `as' and `ld' combination has a few differences in
-function compared to `mmixal' (*note mmixsite::).
-
-   The replacement of a symbol with a GREG-allocated register (*note
-GREG-base::) is not handled the exactly same way in `as' as in
-`mmixal'.  This is apparent in the `mmixal' example file `inout.mms',
-where different registers with different offsets, eventually yielding
-the same address, are used in the first instruction.  This type of
-difference should however not affect the function of any program unless
-it has specific assumptions about the allocated register number.
-
-   Line numbers (in the `mmo' object format) are currently not
-supported.
-
-   Expression operator precedence is not that of mmixal: operator
-precedence is that of the C programming language.  It's recommended to
-use parentheses to explicitly specify wanted operator precedence
-whenever more than one type of operators are used.
-
-   The serialize unary operator `&', the fractional division operator
-`//', the logical not operator `!' and the modulus operator `%' are not
-available.
-
-   Symbols are not global by default, unless the option
-`--globalize-symbols' is passed.  Use the `.global' directive to
-globalize symbols (*note Global::).
-
-   Operand syntax is a bit stricter with `as' than `mmixal'.  For
-example, you can't say `addu 1,2,3', instead you must write `addu
-$1,$2,3'.
-
-   You can't LOC to a lower address than those already visited (i.e.
-"backwards").
-
-   A LOC directive must come before any emitted code.
-
-   Predefined symbols are visible as file-local symbols after use.  (In
-the ELF file, that is--the linked mmo file has no notion of a file-local
-symbol.)
-
-   Some mapping of constant expressions to sections in LOC expressions
-is attempted, but that functionality is easily confused and should be
-avoided unless compatibility with `mmixal' is required.  A LOC
-expression to `0x2000000000000000' or higher, maps to the `.data'
-section and lower addresses map to the `.text' section (*note
-MMIX-loc::).
-
-   The code and data areas are each contiguous.  Sparse programs with
-far-away LOC directives will take up the same amount of space as a
-contiguous program with zeros filled in the gaps between the LOC
-directives.  If you need sparse programs, you might try and get the
-wanted effect with a linker script and splitting up the code parts into
-sections (*note Section::).  Assembly code for this, to be compatible
-with `mmixal', would look something like:
-      .if 0
-      LOC away_expression
-      .else
-      .section away,"ax"
-      .fi
-   `as' will not execute the LOC directive and `mmixal' ignores the
-lines with `.'.  This construct can be used generally to help
-compatibility.
-
-   Symbols can't be defined twice-not even to the same value.
-
-   Instruction mnemonics are recognized case-insensitive, though the
-`IS' and `GREG' pseudo-operations must be specified in upper-case
-characters.
-
-   There's no unicode support.
-
-   The following is a list of programs in `mmix.tar.gz', available at
-`http://www-cs-faculty.stanford.edu/~knuth/mmix-news.html', last
-checked with the version dated 2001-08-25 (md5sum
-c393470cfc86fac040487d22d2bf0172) that assemble with `mmixal' but do
-not assemble with `as':
-
-`silly.mms'
-     LOC to a previous address.
-
-`sim.mms'
-     Redefines symbol `Done'.
-
-`test.mms'
-     Uses the serial operator `&'.
-
-
-File: as.info,  Node: MSP430-Dependent,  Next: SH-Dependent,  Prev: MMIX-Dependent,  Up: Machine Dependencies
-
-8.23 MSP 430 Dependent Features
-===============================
-
-* Menu:
-
-* MSP430 Options::              Options
-* MSP430 Syntax::               Syntax
-* MSP430 Floating Point::       Floating Point
-* MSP430 Directives::           MSP 430 Machine Directives
-* MSP430 Opcodes::              Opcodes
-* MSP430 Profiling Capability::	Profiling Capability
-
-
-File: as.info,  Node: MSP430 Options,  Next: MSP430 Syntax,  Up: MSP430-Dependent
-
-8.23.1 Options
---------------
-
-`as' has only -m flag which selects the mpu arch. Currently has no
-effect.
-
-
-File: as.info,  Node: MSP430 Syntax,  Next: MSP430 Floating Point,  Prev: MSP430 Options,  Up: MSP430-Dependent
-
-8.23.2 Syntax
--------------
-
-* Menu:
-
-* MSP430-Macros::		Macros
-* MSP430-Chars::                Special Characters
-* MSP430-Regs::                 Register Names
-* MSP430-Ext::			Assembler Extensions
-
-
-File: as.info,  Node: MSP430-Macros,  Next: MSP430-Chars,  Up: MSP430 Syntax
-
-8.23.2.1 Macros
-...............
-
-The macro syntax used on the MSP 430 is like that described in the MSP
-430 Family Assembler Specification.  Normal `as' macros should still
-work.
-
-   Additional built-in macros are:
-
-`llo(exp)'
-     Extracts least significant word from 32-bit expression 'exp'.
-
-`lhi(exp)'
-     Extracts most significant word from 32-bit expression 'exp'.
-
-`hlo(exp)'
-     Extracts 3rd word from 64-bit expression 'exp'.
-
-`hhi(exp)'
-     Extracts 4rd word from 64-bit expression 'exp'.
-
-
-   They normally being used as an immediate source operand.
-         mov	#llo(1), r10	;	== mov	#1, r10
-         mov	#lhi(1), r10	;	== mov	#0, r10
-
-
-File: as.info,  Node: MSP430-Chars,  Next: MSP430-Regs,  Prev: MSP430-Macros,  Up: MSP430 Syntax
-
-8.23.2.2 Special Characters
-...........................
-
-`;' is the line comment character.
-
-   The character `$' in jump instructions indicates current location and
-implemented only for TI syntax compatibility.
-
-
-File: as.info,  Node: MSP430-Regs,  Next: MSP430-Ext,  Prev: MSP430-Chars,  Up: MSP430 Syntax
-
-8.23.2.3 Register Names
-.......................
-
-General-purpose registers are represented by predefined symbols of the
-form `rN' (for global registers), where N represents a number between
-`0' and `15'.  The leading letters may be in either upper or lower
-case; for example, `r13' and `R7' are both valid register names.
-
-   Register names `PC', `SP' and `SR' cannot be used as register names
-and will be treated as variables. Use `r0', `r1', and `r2' instead.
-
-
-File: as.info,  Node: MSP430-Ext,  Prev: MSP430-Regs,  Up: MSP430 Syntax
-
-8.23.2.4 Assembler Extensions
-.............................
-
-`@rN'
-     As destination operand being treated as `0(rn)'
-
-`0(rN)'
-     As source operand being treated as `@rn'
-
-`jCOND +N'
-     Skips next N bytes followed by jump instruction and equivalent to
-     `jCOND $+N+2'
-
-
-   Also, there are some instructions, which cannot be found in other
-assemblers.  These are branch instructions, which has different opcodes
-upon jump distance.  They all got PC relative addressing mode.
-
-`beq label'
-     A polymorph instruction which is `jeq label' in case if jump
-     distance within allowed range for cpu's jump instruction. If not,
-     this unrolls into a sequence of
-            jne $+6
-            br  label
-
-`bne label'
-     A polymorph instruction which is `jne label' or `jeq +4; br label'
-
-`blt label'
-     A polymorph instruction which is `jl label' or `jge +4; br label'
-
-`bltn label'
-     A polymorph instruction which is `jn label' or `jn +2; jmp +4; br
-     label'
-
-`bltu label'
-     A polymorph instruction which is `jlo label' or `jhs +2; br label'
-
-`bge label'
-     A polymorph instruction which is `jge label' or `jl +4; br label'
-
-`bgeu label'
-     A polymorph instruction which is `jhs label' or `jlo +4; br label'
-
-`bgt label'
-     A polymorph instruction which is `jeq +2; jge label' or `jeq +6;
-     jl  +4; br label'
-
-`bgtu label'
-     A polymorph instruction which is `jeq +2; jhs label' or `jeq +6;
-     jlo +4; br label'
-
-`bleu label'
-     A polymorph instruction which is `jeq label; jlo label' or `jeq
-     +2; jhs +4; br label'
-
-`ble label'
-     A polymorph instruction which is `jeq label; jl  label' or `jeq
-     +2; jge +4; br label'
-
-`jump label'
-     A polymorph instruction which is `jmp label' or `br label'
-
-
-File: as.info,  Node: MSP430 Floating Point,  Next: MSP430 Directives,  Prev: MSP430 Syntax,  Up: MSP430-Dependent
-
-8.23.3 Floating Point
----------------------
-
-The MSP 430 family uses IEEE 32-bit floating-point numbers.
-
-
-File: as.info,  Node: MSP430 Directives,  Next: MSP430 Opcodes,  Prev: MSP430 Floating Point,  Up: MSP430-Dependent
-
-8.23.4 MSP 430 Machine Directives
----------------------------------
-
-`.file'
-     This directive is ignored; it is accepted for compatibility with
-     other MSP 430 assemblers.
-
-          _Warning:_ in other versions of the GNU assembler, `.file' is
-          used for the directive called `.app-file' in the MSP 430
-          support.
-
-`.line'
-     This directive is ignored; it is accepted for compatibility with
-     other MSP 430 assemblers.
-
-`.arch'
-     Currently this directive is ignored; it is accepted for
-     compatibility with other MSP 430 assemblers.
-
-`.profiler'
-     This directive instructs assembler to add new profile entry to the
-     object file.
-
-
-
-File: as.info,  Node: MSP430 Opcodes,  Next: MSP430 Profiling Capability,  Prev: MSP430 Directives,  Up: MSP430-Dependent
-
-8.23.5 Opcodes
---------------
-
-`as' implements all the standard MSP 430 opcodes.  No additional
-pseudo-instructions are needed on this family.
-
-   For information on the 430 machine instruction set, see `MSP430
-User's Manual, document slau049b', Texas Instrument, Inc.
-
-
-File: as.info,  Node: MSP430 Profiling Capability,  Prev: MSP430 Opcodes,  Up: MSP430-Dependent
-
-8.23.6 Profiling Capability
----------------------------
-
-It is a performance hit to use gcc's profiling approach for this tiny
-target.  Even more - jtag hardware facility does not perform any
-profiling functions.  However we've got gdb's built-in simulator where
-we can do anything.
-
-   We define new section `.profiler' which holds all profiling
-information.  We define new pseudo operation `.profiler' which will
-instruct assembler to add new profile entry to the object file. Profile
-should take place at the present address.
-
-   Pseudo operation format:
-
-   `.profiler flags,function_to_profile [, cycle_corrector, extra]'
-
-   where:
-
-          `flags' is a combination of the following characters:
-
-    `s'
-          function entry
-
-    `x'
-          function exit
-
-    `i'
-          function is in init section
-
-    `f'
-          function is in fini section
-
-    `l'
-          library call
-
-    `c'
-          libc standard call
-
-    `d'
-          stack value demand
-
-    `I'
-          interrupt service routine
-
-    `P'
-          prologue start
-
-    `p'
-          prologue end
-
-    `E'
-          epilogue start
-
-    `e'
-          epilogue end
-
-    `j'
-          long jump / sjlj unwind
-
-    `a'
-          an arbitrary code fragment
-
-    `t'
-          extra parameter saved (a constant value like frame size)
-
-`function_to_profile'
-     a function address
-
-`cycle_corrector'
-     a value which should be added to the cycle counter, zero if
-     omitted.
-
-`extra'
-     any extra parameter, zero if omitted.
-
-
-   For example:
-     .global fxx
-     .type fxx,@function
-     fxx:
-     .LFrameOffset_fxx=0x08
-     .profiler "scdP", fxx     ; function entry.
-     			  ; we also demand stack value to be saved
-       push r11
-       push r10
-       push r9
-       push r8
-     .profiler "cdpt",fxx,0, .LFrameOffset_fxx  ; check stack value at this point
-     					  ; (this is a prologue end)
-     					  ; note, that spare var filled with
-     					  ; the farme size
-       mov r15,r8
-     ...
-     .profiler cdE,fxx         ; check stack
-       pop r8
-       pop r9
-       pop r10
-       pop r11
-     .profiler xcde,fxx,3      ; exit adds 3 to the cycle counter
-       ret                     ; cause 'ret' insn takes 3 cycles
-
-
-File: as.info,  Node: PDP-11-Dependent,  Next: PJ-Dependent,  Prev: SH64-Dependent,  Up: Machine Dependencies
-
-8.24 PDP-11 Dependent Features
-==============================
-
-* Menu:
-
-* PDP-11-Options::		Options
-* PDP-11-Pseudos::		Assembler Directives
-* PDP-11-Syntax::		DEC Syntax versus BSD Syntax
-* PDP-11-Mnemonics::		Instruction Naming
-* PDP-11-Synthetic::		Synthetic Instructions
-
-
-File: as.info,  Node: PDP-11-Options,  Next: PDP-11-Pseudos,  Up: PDP-11-Dependent
-
-8.24.1 Options
---------------
-
-The PDP-11 version of `as' has a rich set of machine dependent options.
-
-8.24.1.1 Code Generation Options
-................................
-
-`-mpic | -mno-pic'
-     Generate position-independent (or position-dependent) code.
-
-     The default is to generate position-independent code.
-
-8.24.1.2 Instruction Set Extension Options
-..........................................
-
-These options enables or disables the use of extensions over the base
-line instruction set as introduced by the first PDP-11 CPU: the KA11.
-Most options come in two variants: a `-m'EXTENSION that enables
-EXTENSION, and a `-mno-'EXTENSION that disables EXTENSION.
-
-   The default is to enable all extensions.
-
-`-mall | -mall-extensions'
-     Enable all instruction set extensions.
-
-`-mno-extensions'
-     Disable all instruction set extensions.
-
-`-mcis | -mno-cis'
-     Enable (or disable) the use of the commercial instruction set,
-     which consists of these instructions: `ADDNI', `ADDN', `ADDPI',
-     `ADDP', `ASHNI', `ASHN', `ASHPI', `ASHP', `CMPCI', `CMPC',
-     `CMPNI', `CMPN', `CMPPI', `CMPP', `CVTLNI', `CVTLN', `CVTLPI',
-     `CVTLP', `CVTNLI', `CVTNL', `CVTNPI', `CVTNP', `CVTPLI', `CVTPL',
-     `CVTPNI', `CVTPN', `DIVPI', `DIVP', `L2DR', `L3DR', `LOCCI',
-     `LOCC', `MATCI', `MATC', `MOVCI', `MOVC', `MOVRCI', `MOVRC',
-     `MOVTCI', `MOVTC', `MULPI', `MULP', `SCANCI', `SCANC', `SKPCI',
-     `SKPC', `SPANCI', `SPANC', `SUBNI', `SUBN', `SUBPI', and `SUBP'.
-
-`-mcsm | -mno-csm'
-     Enable (or disable) the use of the `CSM' instruction.
-
-`-meis | -mno-eis'
-     Enable (or disable) the use of the extended instruction set, which
-     consists of these instructions: `ASHC', `ASH', `DIV', `MARK',
-     `MUL', `RTT', `SOB' `SXT', and `XOR'.
-
-`-mfis | -mkev11'
-`-mno-fis | -mno-kev11'
-     Enable (or disable) the use of the KEV11 floating-point
-     instructions: `FADD', `FDIV', `FMUL', and `FSUB'.
-
-`-mfpp | -mfpu | -mfp-11'
-`-mno-fpp | -mno-fpu | -mno-fp-11'
-     Enable (or disable) the use of FP-11 floating-point instructions:
-     `ABSF', `ADDF', `CFCC', `CLRF', `CMPF', `DIVF', `LDCFF', `LDCIF',
-     `LDEXP', `LDF', `LDFPS', `MODF', `MULF', `NEGF', `SETD', `SETF',
-     `SETI', `SETL', `STCFF', `STCFI', `STEXP', `STF', `STFPS', `STST',
-     `SUBF', and `TSTF'.
-
-`-mlimited-eis | -mno-limited-eis'
-     Enable (or disable) the use of the limited extended instruction
-     set: `MARK', `RTT', `SOB', `SXT', and `XOR'.
-
-     The -mno-limited-eis options also implies -mno-eis.
-
-`-mmfpt | -mno-mfpt'
-     Enable (or disable) the use of the `MFPT' instruction.
-
-`-mmultiproc | -mno-multiproc'
-     Enable (or disable) the use of multiprocessor instructions:
-     `TSTSET' and `WRTLCK'.
-
-`-mmxps | -mno-mxps'
-     Enable (or disable) the use of the `MFPS' and `MTPS' instructions.
-
-`-mspl | -mno-spl'
-     Enable (or disable) the use of the `SPL' instruction.
-
-     Enable (or disable) the use of the microcode instructions: `LDUB',
-     `MED', and `XFC'.
-
-8.24.1.3 CPU Model Options
-..........................
-
-These options enable the instruction set extensions supported by a
-particular CPU, and disables all other extensions.
-
-`-mka11'
-     KA11 CPU.  Base line instruction set only.
-
-`-mkb11'
-     KB11 CPU.  Enable extended instruction set and `SPL'.
-
-`-mkd11a'
-     KD11-A CPU.  Enable limited extended instruction set.
-
-`-mkd11b'
-     KD11-B CPU.  Base line instruction set only.
-
-`-mkd11d'
-     KD11-D CPU.  Base line instruction set only.
-
-`-mkd11e'
-     KD11-E CPU.  Enable extended instruction set, `MFPS', and `MTPS'.
-
-`-mkd11f | -mkd11h | -mkd11q'
-     KD11-F, KD11-H, or KD11-Q CPU.  Enable limited extended
-     instruction set, `MFPS', and `MTPS'.
-
-`-mkd11k'
-     KD11-K CPU.  Enable extended instruction set, `LDUB', `MED',
-     `MFPS', `MFPT', `MTPS', and `XFC'.
-
-`-mkd11z'
-     KD11-Z CPU.  Enable extended instruction set, `CSM', `MFPS',
-     `MFPT', `MTPS', and `SPL'.
-
-`-mf11'
-     F11 CPU.  Enable extended instruction set, `MFPS', `MFPT', and
-     `MTPS'.
-
-`-mj11'
-     J11 CPU.  Enable extended instruction set, `CSM', `MFPS', `MFPT',
-     `MTPS', `SPL', `TSTSET', and `WRTLCK'.
-
-`-mt11'
-     T11 CPU.  Enable limited extended instruction set, `MFPS', and
-     `MTPS'.
-
-8.24.1.4 Machine Model Options
-..............................
-
-These options enable the instruction set extensions supported by a
-particular machine model, and disables all other extensions.
-
-`-m11/03'
-     Same as `-mkd11f'.
-
-`-m11/04'
-     Same as `-mkd11d'.
-
-`-m11/05 | -m11/10'
-     Same as `-mkd11b'.
-
-`-m11/15 | -m11/20'
-     Same as `-mka11'.
-
-`-m11/21'
-     Same as `-mt11'.
-
-`-m11/23 | -m11/24'
-     Same as `-mf11'.
-
-`-m11/34'
-     Same as `-mkd11e'.
-
-`-m11/34a'
-     Ame as `-mkd11e' `-mfpp'.
-
-`-m11/35 | -m11/40'
-     Same as `-mkd11a'.
-
-`-m11/44'
-     Same as `-mkd11z'.
-
-`-m11/45 | -m11/50 | -m11/55 | -m11/70'
-     Same as `-mkb11'.
-
-`-m11/53 | -m11/73 | -m11/83 | -m11/84 | -m11/93 | -m11/94'
-     Same as `-mj11'.
-
-`-m11/60'
-     Same as `-mkd11k'.
-
-
-File: as.info,  Node: PDP-11-Pseudos,  Next: PDP-11-Syntax,  Prev: PDP-11-Options,  Up: PDP-11-Dependent
-
-8.24.2 Assembler Directives
----------------------------
-
-The PDP-11 version of `as' has a few machine dependent assembler
-directives.
-
-`.bss'
-     Switch to the `bss' section.
-
-`.even'
-     Align the location counter to an even number.
-
-
-File: as.info,  Node: PDP-11-Syntax,  Next: PDP-11-Mnemonics,  Prev: PDP-11-Pseudos,  Up: PDP-11-Dependent
-
-8.24.3 PDP-11 Assembly Language Syntax
---------------------------------------
-
-`as' supports both DEC syntax and BSD syntax.  The only difference is
-that in DEC syntax, a `#' character is used to denote an immediate
-constants, while in BSD syntax the character for this purpose is `$'.
-
-   eneral-purpose registers are named `r0' through `r7'.  Mnemonic
-alternatives for `r6' and `r7' are `sp' and `pc', respectively.
-
-   Floating-point registers are named `ac0' through `ac3', or
-alternatively `fr0' through `fr3'.
-
-   Comments are started with a `#' or a `/' character, and extend to
-the end of the line.  (FIXME: clash with immediates?)
-
-
-File: as.info,  Node: PDP-11-Mnemonics,  Next: PDP-11-Synthetic,  Prev: PDP-11-Syntax,  Up: PDP-11-Dependent
-
-8.24.4 Instruction Naming
--------------------------
-
-Some instructions have alternative names.
-
-`BCC'
-     `BHIS'
-
-`BCS'
-     `BLO'
-
-`L2DR'
-     `L2D'
-
-`L3DR'
-     `L3D'
-
-`SYS'
-     `TRAP'
-
-
-File: as.info,  Node: PDP-11-Synthetic,  Prev: PDP-11-Mnemonics,  Up: PDP-11-Dependent
-
-8.24.5 Synthetic Instructions
------------------------------
-
-The `JBR' and `J'CC synthetic instructions are not supported yet.
-
-
-File: as.info,  Node: PJ-Dependent,  Next: PPC-Dependent,  Prev: PDP-11-Dependent,  Up: Machine Dependencies
-
-8.25 picoJava Dependent Features
-================================
-
-* Menu:
-
-* PJ Options::              Options
-
-
-File: as.info,  Node: PJ Options,  Up: PJ-Dependent
-
-8.25.1 Options
---------------
-
-`as' has two additional command-line options for the picoJava
-architecture.
-`-ml'
-     This option selects little endian data output.
-
-`-mb'
-     This option selects big endian data output.
-
-
-File: as.info,  Node: PPC-Dependent,  Next: Sparc-Dependent,  Prev: PJ-Dependent,  Up: Machine Dependencies
-
-8.26 PowerPC Dependent Features
-===============================
-
-* Menu:
-
-* PowerPC-Opts::                Options
-* PowerPC-Pseudo::              PowerPC Assembler Directives
-
-
-File: as.info,  Node: PowerPC-Opts,  Next: PowerPC-Pseudo,  Up: PPC-Dependent
-
-8.26.1 Options
---------------
-
-The PowerPC chip family includes several successive levels, using the
-same core instruction set, but including a few additional instructions
-at each level.  There are exceptions to this however.  For details on
-what instructions each variant supports, please see the chip's
-architecture reference manual.
-
-   The following table lists all available PowerPC options.
-
-`-mpwrx | -mpwr2'
-     Generate code for POWER/2 (RIOS2).
-
-`-mpwr'
-     Generate code for POWER (RIOS1)
-
-`-m601'
-     Generate code for PowerPC 601.
-
-`-mppc, -mppc32, -m603, -m604'
-     Generate code for PowerPC 603/604.
-
-`-m403, -m405'
-     Generate code for PowerPC 403/405.
-
-`-m440'
-     Generate code for PowerPC 440.  BookE and some 405 instructions.
-
-`-m7400, -m7410, -m7450, -m7455'
-     Generate code for PowerPC 7400/7410/7450/7455.
-
-`-mppc64, -m620'
-     Generate code for PowerPC 620/625/630.
-
-`-mppc64bridge'
-     Generate code for PowerPC 64, including bridge insns.
-
-`-mbooke64'
-     Generate code for 64-bit BookE.
-
-`-mbooke, mbooke32'
-     Generate code for 32-bit BookE.
-
-`-maltivec'
-     Generate code for processors with AltiVec instructions.
-
-`-mpower4'
-     Generate code for Power4 architecture.
-
-`-mcom'
-     Generate code Power/PowerPC common instructions.
-
-`-many'
-     Generate code for any architecture (PWR/PWRX/PPC).
-
-`-mregnames'
-     Allow symbolic names for registers.
-
-`-mno-regnames'
-     Do not allow symbolic names for registers.
-
-`-mrelocatable'
-     Support for GCC's -mrelocatble option.
-
-`-mrelocatable-lib'
-     Support for GCC's -mrelocatble-lib option.
-
-`-memb'
-     Set PPC_EMB bit in ELF flags.
-
-`-mlittle, -mlittle-endian'
-     Generate code for a little endian machine.
-
-`-mbig, -mbig-endian'
-     Generate code for a big endian machine.
-
-`-msolaris'
-     Generate code for Solaris.
-
-`-mno-solaris'
-     Do not generate code for Solaris.
-
-
-File: as.info,  Node: PowerPC-Pseudo,  Prev: PowerPC-Opts,  Up: PPC-Dependent
-
-8.26.2 PowerPC Assembler Directives
------------------------------------
-
-A number of assembler directives are available for PowerPC.  The
-following table is far from complete.
-
-`.machine "string"'
-     This directive allows you to change the machine for which code is
-     generated.  `"string"' may be any of the -m cpu selection options
-     (without the -m) enclosed in double quotes, `"push"', or `"pop"'.
-     `.machine "push"' saves the currently selected cpu, which may be
-     restored with `.machine "pop"'.
-
-
-File: as.info,  Node: SH-Dependent,  Next: SH64-Dependent,  Prev: MSP430-Dependent,  Up: Machine Dependencies
-
-8.27 Renesas / SuperH SH Dependent Features
-===========================================
-
-* Menu:
-
-* SH Options::              Options
-* SH Syntax::               Syntax
-* SH Floating Point::       Floating Point
-* SH Directives::           SH Machine Directives
-* SH Opcodes::              Opcodes
-
-
-File: as.info,  Node: SH Options,  Next: SH Syntax,  Up: SH-Dependent
-
-8.27.1 Options
---------------
-
-`as' has following command-line options for the Renesas (formerly
-Hitachi) / SuperH SH family.
-
-`-little'
-     Generate little endian code.
-
-`-big'
-     Generate big endian code.
-
-`-relax'
-     Alter jump instructions for long displacements.
-
-`-small'
-     Align sections to 4 byte boundaries, not 16.
-
-`-dsp'
-     Enable sh-dsp insns, and disable sh3e / sh4 insns.
-
-`-renesas'
-     Disable optimization with section symbol for compatibility with
-     Renesas assembler.
-
-`-isa=sh4 | sh4a'
-     Specify the sh4 or sh4a instruction set.
-
-`-isa=dsp'
-     Enable sh-dsp insns, and disable sh3e / sh4 insns.
-
-`-isa=fp'
-     Enable sh2e, sh3e, sh4, and sh4a insn sets.
-
-`-isa=all'
-     Enable sh1, sh2, sh2e, sh3, sh3e, sh4, sh4a, and sh-dsp insn sets.
-
-
-
-File: as.info,  Node: SH Syntax,  Next: SH Floating Point,  Prev: SH Options,  Up: SH-Dependent
-
-8.27.2 Syntax
--------------
-
-* Menu:
-
-* SH-Chars::                Special Characters
-* SH-Regs::                 Register Names
-* SH-Addressing::           Addressing Modes
-
-
-File: as.info,  Node: SH-Chars,  Next: SH-Regs,  Up: SH Syntax
-
-8.27.2.1 Special Characters
-...........................
-
-`!' is the line comment character.
-
-   You can use `;' instead of a newline to separate statements.
-
-   Since `$' has no special meaning, you may use it in symbol names.
-
-
-File: as.info,  Node: SH-Regs,  Next: SH-Addressing,  Prev: SH-Chars,  Up: SH Syntax
-
-8.27.2.2 Register Names
-.......................
-
-You can use the predefined symbols `r0', `r1', `r2', `r3', `r4', `r5',
-`r6', `r7', `r8', `r9', `r10', `r11', `r12', `r13', `r14', and `r15' to
-refer to the SH registers.
-
-   The SH also has these control registers:
-
-`pr'
-     procedure register (holds return address)
-
-`pc'
-     program counter
-
-`mach'
-`macl'
-     high and low multiply accumulator registers
-
-`sr'
-     status register
-
-`gbr'
-     global base register
-
-`vbr'
-     vector base register (for interrupt vectors)
-
-
-File: as.info,  Node: SH-Addressing,  Prev: SH-Regs,  Up: SH Syntax
-
-8.27.2.3 Addressing Modes
-.........................
-
-`as' understands the following addressing modes for the SH.  `RN' in
-the following refers to any of the numbered registers, but _not_ the
-control registers.
-
-`RN'
-     Register direct
-
-`@RN'
-     Register indirect
-
-`@-RN'
-     Register indirect with pre-decrement
-
-`@RN+'
-     Register indirect with post-increment
-
-`@(DISP, RN)'
-     Register indirect with displacement
-
-`@(R0, RN)'
-     Register indexed
-
-`@(DISP, GBR)'
-     `GBR' offset
-
-`@(R0, GBR)'
-     GBR indexed
-
-`ADDR'
-`@(DISP, PC)'
-     PC relative address (for branch or for addressing memory).  The
-     `as' implementation allows you to use the simpler form ADDR
-     anywhere a PC relative address is called for; the alternate form
-     is supported for compatibility with other assemblers.
-
-`#IMM'
-     Immediate data
-
-
-File: as.info,  Node: SH Floating Point,  Next: SH Directives,  Prev: SH Syntax,  Up: SH-Dependent
-
-8.27.3 Floating Point
----------------------
-
-SH2E, SH3E and SH4 groups have on-chip floating-point unit (FPU). Other
-SH groups can use `.float' directive to generate IEEE floating-point
-numbers.
-
-   SH2E and SH3E support single-precision floating point calculations as
-well as entirely PCAPI compatible emulation of double-precision
-floating point calculations. SH2E and SH3E instructions are a subset of
-the floating point calculations conforming to the IEEE754 standard.
-
-   In addition to single-precision and double-precision floating-point
-operation capability, the on-chip FPU of SH4 has a 128-bit graphic
-engine that enables 32-bit floating-point data to be processed 128 bits
-at a time. It also supports 4 * 4 array operations and inner product
-operations. Also, a superscalar architecture is employed that enables
-simultaneous execution of two instructions (including FPU
-instructions), providing performance of up to twice that of
-conventional architectures at the same frequency.
-
-
-File: as.info,  Node: SH Directives,  Next: SH Opcodes,  Prev: SH Floating Point,  Up: SH-Dependent
-
-8.27.4 SH Machine Directives
-----------------------------
-
-`uaword'
-`ualong'
-     `as' will issue a warning when a misaligned `.word' or `.long'
-     directive is used.  You may use `.uaword' or `.ualong' to indicate
-     that the value is intentionally misaligned.
-
-
-File: as.info,  Node: SH Opcodes,  Prev: SH Directives,  Up: SH-Dependent
-
-8.27.5 Opcodes
---------------
-
-For detailed information on the SH machine instruction set, see
-`SH-Microcomputer User's Manual' (Renesas) or `SH-4 32-bit CPU Core
-Architecture' (SuperH) and `SuperH (SH) 64-Bit RISC Series' (SuperH).
-
-   `as' implements all the standard SH opcodes.  No additional
-pseudo-instructions are needed on this family.  Note, however, that
-because `as' supports a simpler form of PC-relative addressing, you may
-simply write (for example)
-
-     mov.l  bar,r0
-
-where other assemblers might require an explicit displacement to `bar'
-from the program counter:
-
-     mov.l  @(DISP, PC)
-
-   Here is a summary of SH opcodes:
-
-     Legend:
-     Rn        a numbered register
-     Rm        another numbered register
-     #imm      immediate data
-     disp      displacement
-     disp8     8-bit displacement
-     disp12    12-bit displacement
-
-     add #imm,Rn                    lds.l @Rn+,PR
-     add Rm,Rn                      mac.w @Rm+,@Rn+
-     addc Rm,Rn                     mov #imm,Rn
-     addv Rm,Rn                     mov Rm,Rn
-     and #imm,R0                    mov.b Rm,@(R0,Rn)
-     and Rm,Rn                      mov.b Rm,@-Rn
-     and.b #imm,@(R0,GBR)           mov.b Rm,@Rn
-     bf disp8                       mov.b @(disp,Rm),R0
-     bra disp12                     mov.b @(disp,GBR),R0
-     bsr disp12                     mov.b @(R0,Rm),Rn
-     bt disp8                       mov.b @Rm+,Rn
-     clrmac                         mov.b @Rm,Rn
-     clrt                           mov.b R0,@(disp,Rm)
-     cmp/eq #imm,R0                 mov.b R0,@(disp,GBR)
-     cmp/eq Rm,Rn                   mov.l Rm,@(disp,Rn)
-     cmp/ge Rm,Rn                   mov.l Rm,@(R0,Rn)
-     cmp/gt Rm,Rn                   mov.l Rm,@-Rn
-     cmp/hi Rm,Rn                   mov.l Rm,@Rn
-     cmp/hs Rm,Rn                   mov.l @(disp,Rn),Rm
-     cmp/pl Rn                      mov.l @(disp,GBR),R0
-     cmp/pz Rn                      mov.l @(disp,PC),Rn
-     cmp/str Rm,Rn                  mov.l @(R0,Rm),Rn
-     div0s Rm,Rn                    mov.l @Rm+,Rn
-     div0u                          mov.l @Rm,Rn
-     div1 Rm,Rn                     mov.l R0,@(disp,GBR)
-     exts.b Rm,Rn                   mov.w Rm,@(R0,Rn)
-     exts.w Rm,Rn                   mov.w Rm,@-Rn
-     extu.b Rm,Rn                   mov.w Rm,@Rn
-     extu.w Rm,Rn                   mov.w @(disp,Rm),R0
-     jmp @Rn                        mov.w @(disp,GBR),R0
-     jsr @Rn                        mov.w @(disp,PC),Rn
-     ldc Rn,GBR                     mov.w @(R0,Rm),Rn
-     ldc Rn,SR                      mov.w @Rm+,Rn
-     ldc Rn,VBR                     mov.w @Rm,Rn
-     ldc.l @Rn+,GBR                 mov.w R0,@(disp,Rm)
-     ldc.l @Rn+,SR                  mov.w R0,@(disp,GBR)
-     ldc.l @Rn+,VBR                 mova @(disp,PC),R0
-     lds Rn,MACH                    movt Rn
-     lds Rn,MACL                    muls Rm,Rn
-     lds Rn,PR                      mulu Rm,Rn
-     lds.l @Rn+,MACH                neg Rm,Rn
-     lds.l @Rn+,MACL                negc Rm,Rn
-
-     nop                            stc VBR,Rn
-     not Rm,Rn                      stc.l GBR,@-Rn
-     or #imm,R0                     stc.l SR,@-Rn
-     or Rm,Rn                       stc.l VBR,@-Rn
-     or.b #imm,@(R0,GBR)            sts MACH,Rn
-     rotcl Rn                       sts MACL,Rn
-     rotcr Rn                       sts PR,Rn
-     rotl Rn                        sts.l MACH,@-Rn
-     rotr Rn                        sts.l MACL,@-Rn
-     rte                            sts.l PR,@-Rn
-     rts                            sub Rm,Rn
-     sett                           subc Rm,Rn
-     shal Rn                        subv Rm,Rn
-     shar Rn                        swap.b Rm,Rn
-     shll Rn                        swap.w Rm,Rn
-     shll16 Rn                      tas.b @Rn
-     shll2 Rn                       trapa #imm
-     shll8 Rn                       tst #imm,R0
-     shlr Rn                        tst Rm,Rn
-     shlr16 Rn                      tst.b #imm,@(R0,GBR)
-     shlr2 Rn                       xor #imm,R0
-     shlr8 Rn                       xor Rm,Rn
-     sleep                          xor.b #imm,@(R0,GBR)
-     stc GBR,Rn                     xtrct Rm,Rn
-     stc SR,Rn
-
-
-File: as.info,  Node: SH64-Dependent,  Next: PDP-11-Dependent,  Prev: SH-Dependent,  Up: Machine Dependencies
-
-8.28 SuperH SH64 Dependent Features
-===================================
-
-* Menu:
-
-* SH64 Options::              Options
-* SH64 Syntax::               Syntax
-* SH64 Directives::           SH64 Machine Directives
-* SH64 Opcodes::              Opcodes
-
-
-File: as.info,  Node: SH64 Options,  Next: SH64 Syntax,  Up: SH64-Dependent
-
-8.28.1 Options
---------------
-
-`-isa=sh4 | sh4a'
-     Specify the sh4 or sh4a instruction set.
-
-`-isa=dsp'
-     Enable sh-dsp insns, and disable sh3e / sh4 insns.
-
-`-isa=fp'
-     Enable sh2e, sh3e, sh4, and sh4a insn sets.
-
-`-isa=all'
-     Enable sh1, sh2, sh2e, sh3, sh3e, sh4, sh4a, and sh-dsp insn sets.
-
-`-isa=shmedia | -isa=shcompact'
-     Specify the default instruction set.  `SHmedia' specifies the
-     32-bit opcodes, and `SHcompact' specifies the 16-bit opcodes
-     compatible with previous SH families.  The default depends on the
-     ABI selected; the default for the 64-bit ABI is SHmedia, and the
-     default for the 32-bit ABI is SHcompact.  If neither the ABI nor
-     the ISA is specified, the default is 32-bit SHcompact.
-
-     Note that the `.mode' pseudo-op is not permitted if the ISA is not
-     specified on the command line.
-
-`-abi=32 | -abi=64'
-     Specify the default ABI.  If the ISA is specified and the ABI is
-     not, the default ABI depends on the ISA, with SHmedia defaulting
-     to 64-bit and SHcompact defaulting to 32-bit.
-
-     Note that the `.abi' pseudo-op is not permitted if the ABI is not
-     specified on the command line.  When the ABI is specified on the
-     command line, any `.abi' pseudo-ops in the source must match it.
-
-`-shcompact-const-crange'
-     Emit code-range descriptors for constants in SHcompact code
-     sections.
-
-`-no-mix'
-     Disallow SHmedia code in the same section as constants and
-     SHcompact code.
-
-`-no-expand'
-     Do not expand MOVI, PT, PTA or PTB instructions.
-
-`-expand-pt32'
-     With -abi=64, expand PT, PTA and PTB instructions to 32 bits only.
-
-
-
-File: as.info,  Node: SH64 Syntax,  Next: SH64 Directives,  Prev: SH64 Options,  Up: SH64-Dependent
-
-8.28.2 Syntax
--------------
-
-* Menu:
-
-* SH64-Chars::                Special Characters
-* SH64-Regs::                 Register Names
-* SH64-Addressing::           Addressing Modes
-
-
-File: as.info,  Node: SH64-Chars,  Next: SH64-Regs,  Up: SH64 Syntax
-
-8.28.2.1 Special Characters
-...........................
-
-`!' is the line comment character.
-
-   You can use `;' instead of a newline to separate statements.
-
-   Since `$' has no special meaning, you may use it in symbol names.
-
-
-File: as.info,  Node: SH64-Regs,  Next: SH64-Addressing,  Prev: SH64-Chars,  Up: SH64 Syntax
-
-8.28.2.2 Register Names
-.......................
-
-You can use the predefined symbols `r0' through `r63' to refer to the
-SH64 general registers, `cr0' through `cr63' for control registers,
-`tr0' through `tr7' for target address registers, `fr0' through `fr63'
-for single-precision floating point registers, `dr0' through `dr62'
-(even numbered registers only) for double-precision floating point
-registers, `fv0' through `fv60' (multiples of four only) for
-single-precision floating point vectors, `fp0' through `fp62' (even
-numbered registers only) for single-precision floating point pairs,
-`mtrx0' through `mtrx48' (multiples of 16 only) for 4x4 matrices of
-single-precision floating point registers, `pc' for the program
-counter, and `fpscr' for the floating point status and control register.
-
-   You can also refer to the control registers by the mnemonics `sr',
-`ssr', `pssr', `intevt', `expevt', `pexpevt', `tra', `spc', `pspc',
-`resvec', `vbr', `tea', `dcr', `kcr0', `kcr1', `ctc', and `usr'.
-
-
-File: as.info,  Node: SH64-Addressing,  Prev: SH64-Regs,  Up: SH64 Syntax
-
-8.28.2.3 Addressing Modes
-.........................
-
-SH64 operands consist of either a register or immediate value.  The
-immediate value can be a constant or label reference (or portion of a
-label reference), as in this example:
-
-     	movi	4,r2
-     	pt	function, tr4
-     	movi	(function >> 16) & 65535,r0
-     	shori	function & 65535, r0
-     	ld.l	r0,4,r0
-
-   Instruction label references can reference labels in either SHmedia
-or SHcompact.  To differentiate between the two, labels in SHmedia
-sections will always have the least significant bit set (i.e. they will
-be odd), which SHcompact labels will have the least significant bit
-reset (i.e. they will be even).  If you need to reference the actual
-address of a label, you can use the `datalabel' modifier, as in this
-example:
-
-     	.long	function
-     	.long	datalabel function
-
-   In that example, the first longword may or may not have the least
-significant bit set depending on whether the label is an SHmedia label
-or an SHcompact label.  The second longword will be the actual address
-of the label, regardless of what type of label it is.
-
-
-File: as.info,  Node: SH64 Directives,  Next: SH64 Opcodes,  Prev: SH64 Syntax,  Up: SH64-Dependent
-
-8.28.3 SH64 Machine Directives
-------------------------------
-
-In addition to the SH directives, the SH64 provides the following
-directives:
-
-`.mode [shmedia|shcompact]'
-`.isa [shmedia|shcompact]'
-     Specify the ISA for the following instructions (the two directives
-     are equivalent).  Note that programs such as `objdump' rely on
-     symbolic labels to determine when such mode switches occur (by
-     checking the least significant bit of the label's address), so
-     such mode/isa changes should always be followed by a label (in
-     practice, this is true anyway).  Note that you cannot use these
-     directives if you didn't specify an ISA on the command line.
-
-`.abi [32|64]'
-     Specify the ABI for the following instructions.  Note that you
-     cannot use this directive unless you specified an ABI on the
-     command line, and the ABIs specified must match.
-
-`.uaquad'
-     Like .uaword and .ualong, this allows you to specify an
-     intentionally unaligned quadword (64 bit word).
-
-
-
-File: as.info,  Node: SH64 Opcodes,  Prev: SH64 Directives,  Up: SH64-Dependent
-
-8.28.4 Opcodes
---------------
-
-For detailed information on the SH64 machine instruction set, see
-`SuperH 64 bit RISC Series Architecture Manual' (SuperH, Inc.).
-
-   `as' implements all the standard SH64 opcodes.  In addition, the
-following pseudo-opcodes may be expanded into one or more alternate
-opcodes:
-
-`movi'
-     If the value doesn't fit into a standard `movi' opcode, `as' will
-     replace the `movi' with a sequence of `movi' and `shori' opcodes.
-
-`pt'
-     This expands to a sequence of `movi' and `shori' opcode, followed
-     by a `ptrel' opcode, or to a `pta' or `ptb' opcode, depending on
-     the label referenced.
-
-
-
-File: as.info,  Node: Sparc-Dependent,  Next: TIC54X-Dependent,  Prev: PPC-Dependent,  Up: Machine Dependencies
-
-8.29 SPARC Dependent Features
-=============================
-
-* Menu:
-
-* Sparc-Opts::                  Options
-* Sparc-Aligned-Data::		Option to enforce aligned data
-* Sparc-Float::                 Floating Point
-* Sparc-Directives::            Sparc Machine Directives
-
-
-File: as.info,  Node: Sparc-Opts,  Next: Sparc-Aligned-Data,  Up: Sparc-Dependent
-
-8.29.1 Options
---------------
-
-The SPARC chip family includes several successive levels, using the same
-core instruction set, but including a few additional instructions at
-each level.  There are exceptions to this however.  For details on what
-instructions each variant supports, please see the chip's architecture
-reference manual.
-
-   By default, `as' assumes the core instruction set (SPARC v6), but
-"bumps" the architecture level as needed: it switches to successively
-higher architectures as it encounters instructions that only exist in
-the higher levels.
-
-   If not configured for SPARC v9 (`sparc64-*-*') GAS will not bump
-passed sparclite by default, an option must be passed to enable the v9
-instructions.
-
-   GAS treats sparclite as being compatible with v8, unless an
-architecture is explicitly requested.  SPARC v9 is always incompatible
-with sparclite.
-
-`-Av6 | -Av7 | -Av8 | -Asparclet | -Asparclite'
-`-Av8plus | -Av8plusa | -Av9 | -Av9a'
-     Use one of the `-A' options to select one of the SPARC
-     architectures explicitly.  If you select an architecture
-     explicitly, `as' reports a fatal error if it encounters an
-     instruction or feature requiring an incompatible or higher level.
-
-     `-Av8plus' and `-Av8plusa' select a 32 bit environment.
-
-     `-Av9' and `-Av9a' select a 64 bit environment and are not
-     available unless GAS is explicitly configured with 64 bit
-     environment support.
-
-     `-Av8plusa' and `-Av9a' enable the SPARC V9 instruction set with
-     UltraSPARC extensions.
-
-`-xarch=v8plus | -xarch=v8plusa'
-     For compatibility with the Solaris v9 assembler.  These options are
-     equivalent to -Av8plus and -Av8plusa, respectively.
-
-`-bump'
-     Warn whenever it is necessary to switch to another level.  If an
-     architecture level is explicitly requested, GAS will not issue
-     warnings until that level is reached, and will then bump the level
-     as required (except between incompatible levels).
-
-`-32 | -64'
-     Select the word size, either 32 bits or 64 bits.  These options
-     are only available with the ELF object file format, and require
-     that the necessary BFD support has been included.
-
-
-File: as.info,  Node: Sparc-Aligned-Data,  Next: Sparc-Float,  Prev: Sparc-Opts,  Up: Sparc-Dependent
-
-8.29.2 Enforcing aligned data
------------------------------
-
-SPARC GAS normally permits data to be misaligned.  For example, it
-permits the `.long' pseudo-op to be used on a byte boundary.  However,
-the native SunOS and Solaris assemblers issue an error when they see
-misaligned data.
-
-   You can use the `--enforce-aligned-data' option to make SPARC GAS
-also issue an error about misaligned data, just as the SunOS and Solaris
-assemblers do.
-
-   The `--enforce-aligned-data' option is not the default because gcc
-issues misaligned data pseudo-ops when it initializes certain packed
-data structures (structures defined using the `packed' attribute).  You
-may have to assemble with GAS in order to initialize packed data
-structures in your own code.
-
-
-File: as.info,  Node: Sparc-Float,  Next: Sparc-Directives,  Prev: Sparc-Aligned-Data,  Up: Sparc-Dependent
-
-8.29.3 Floating Point
----------------------
-
-The Sparc uses IEEE floating-point numbers.
-
-
-File: as.info,  Node: Sparc-Directives,  Prev: Sparc-Float,  Up: Sparc-Dependent
-
-8.29.4 Sparc Machine Directives
--------------------------------
-
-The Sparc version of `as' supports the following additional machine
-directives:
-
-`.align'
-     This must be followed by the desired alignment in bytes.
-
-`.common'
-     This must be followed by a symbol name, a positive number, and
-     `"bss"'.  This behaves somewhat like `.comm', but the syntax is
-     different.
-
-`.half'
-     This is functionally identical to `.short'.
-
-`.nword'
-     On the Sparc, the `.nword' directive produces native word sized
-     value, ie. if assembling with -32 it is equivalent to `.word', if
-     assembling with -64 it is equivalent to `.xword'.
-
-`.proc'
-     This directive is ignored.  Any text following it on the same line
-     is also ignored.
-
-`.register'
-     This directive declares use of a global application or system
-     register.  It must be followed by a register name %g2, %g3, %g6 or
-     %g7, comma and the symbol name for that register.  If symbol name
-     is `#scratch', it is a scratch register, if it is `#ignore', it
-     just suppresses any errors about using undeclared global register,
-     but does not emit any information about it into the object file.
-     This can be useful e.g. if you save the register before use and
-     restore it after.
-
-`.reserve'
-     This must be followed by a symbol name, a positive number, and
-     `"bss"'.  This behaves somewhat like `.lcomm', but the syntax is
-     different.
-
-`.seg'
-     This must be followed by `"text"', `"data"', or `"data1"'.  It
-     behaves like `.text', `.data', or `.data 1'.
-
-`.skip'
-     This is functionally identical to the `.space' directive.
-
-`.word'
-     On the Sparc, the `.word' directive produces 32 bit values,
-     instead of the 16 bit values it produces on many other machines.
-
-`.xword'
-     On the Sparc V9 processor, the `.xword' directive produces 64 bit
-     values.
-
-
-File: as.info,  Node: TIC54X-Dependent,  Next: V850-Dependent,  Prev: Sparc-Dependent,  Up: Machine Dependencies
-
-8.30 TIC54X Dependent Features
-==============================
-
-* Menu:
-
-* TIC54X-Opts::              Command-line Options
-* TIC54X-Block::             Blocking
-* TIC54X-Env::               Environment Settings
-* TIC54X-Constants::         Constants Syntax
-* TIC54X-Subsyms::           String Substitution
-* TIC54X-Locals::            Local Label Syntax
-* TIC54X-Builtins::          Builtin Assembler Math Functions
-* TIC54X-Ext::               Extended Addressing Support
-* TIC54X-Directives::        Directives
-* TIC54X-Macros::            Macro Features
-* TIC54X-MMRegs::            Memory-mapped Registers
-
-
-File: as.info,  Node: TIC54X-Opts,  Next: TIC54X-Block,  Up: TIC54X-Dependent
-
-8.30.1 Options
---------------
-
-The TMS320C54x version of `as' has a few machine-dependent options.
-
-   You can use the `-mfar-mode' option to enable extended addressing
-mode.  All addresses will be assumed to be > 16 bits, and the
-appropriate relocation types will be used.  This option is equivalent
-to using the `.far_mode' directive in the assembly code.  If you do not
-use the `-mfar-mode' option, all references will be assumed to be 16
-bits.  This option may be abbreviated to `-mf'.
-
-   You can use the `-mcpu' option to specify a particular CPU.  This
-option is equivalent to using the `.version' directive in the assembly
-code.  For recognized CPU codes, see *Note `.version':
-TIC54X-Directives.  The default CPU version is `542'.
-
-   You can use the `-merrors-to-file' option to redirect error output
-to a file (this provided for those deficient environments which don't
-provide adequate output redirection).  This option may be abbreviated to
-`-me'.
-
-
-File: as.info,  Node: TIC54X-Block,  Next: TIC54X-Env,  Prev: TIC54X-Opts,  Up: TIC54X-Dependent
-
-8.30.2 Blocking
----------------
-
-A blocked section or memory block is guaranteed not to cross the
-blocking boundary (usually a page, or 128 words) if it is smaller than
-the blocking size, or to start on a page boundary if it is larger than
-the blocking size.
-
-
-File: as.info,  Node: TIC54X-Env,  Next: TIC54X-Constants,  Prev: TIC54X-Block,  Up: TIC54X-Dependent
-
-8.30.3 Environment Settings
----------------------------
-
-`C54XDSP_DIR' and `A_DIR' are semicolon-separated paths which are added
-to the list of directories normally searched for source and include
-files.  `C54XDSP_DIR' will override `A_DIR'.
-
-
-File: as.info,  Node: TIC54X-Constants,  Next: TIC54X-Subsyms,  Prev: TIC54X-Env,  Up: TIC54X-Dependent
-
-8.30.4 Constants Syntax
------------------------
-
-The TIC54X version of `as' allows the following additional constant
-formats, using a suffix to indicate the radix:
-
-     Binary                  `000000B, 011000b'
-     Octal                   `10Q, 224q'
-     Hexadecimal             `45h, 0FH'
-
-
-File: as.info,  Node: TIC54X-Subsyms,  Next: TIC54X-Locals,  Prev: TIC54X-Constants,  Up: TIC54X-Dependent
-
-8.30.5 String Substitution
---------------------------
-
-A subset of allowable symbols (which we'll call subsyms) may be assigned
-arbitrary string values.  This is roughly equivalent to C preprocessor
-#define macros.  When `as' encounters one of these symbols, the symbol
-is replaced in the input stream by its string value.  Subsym names
-*must* begin with a letter.
-
-   Subsyms may be defined using the `.asg' and `.eval' directives
-(*Note `.asg': TIC54X-Directives, *Note `.eval': TIC54X-Directives.
-
-   Expansion is recursive until a previously encountered symbol is
-seen, at which point substitution stops.
-
-   In this example, x is replaced with SYM2; SYM2 is replaced with
-SYM1, and SYM1 is replaced with x.  At this point, x has already been
-encountered and the substitution stops.
-
-      .asg   "x",SYM1
-      .asg   "SYM1",SYM2
-      .asg   "SYM2",x
-      add    x,a             ; final code assembled is "add  x, a"
-
-   Macro parameters are converted to subsyms; a side effect of this is
-the normal `as' '\ARG' dereferencing syntax is unnecessary.  Subsyms
-defined within a macro will have global scope, unless the `.var'
-directive is used to identify the subsym as a local macro variable
-*note `.var': TIC54X-Directives.
-
-   Substitution may be forced in situations where replacement might be
-ambiguous by placing colons on either side of the subsym.  The following
-code:
-
-      .eval  "10",x
-     LAB:X:  add     #x, a
-
-   When assembled becomes:
-
-     LAB10  add     #10, a
-
-   Smaller parts of the string assigned to a subsym may be accessed with
-the following syntax:
-
-``:SYMBOL(CHAR_INDEX):''
-     Evaluates to a single-character string, the character at
-     CHAR_INDEX.
-
-``:SYMBOL(START,LENGTH):''
-     Evaluates to a substring of SYMBOL beginning at START with length
-     LENGTH.
-
-
-File: as.info,  Node: TIC54X-Locals,  Next: TIC54X-Builtins,  Prev: TIC54X-Subsyms,  Up: TIC54X-Dependent
-
-8.30.6 Local Labels
--------------------
-
-Local labels may be defined in two ways:
-
-   * $N, where N is a decimal number between 0 and 9
-
-   * LABEL?, where LABEL is any legal symbol name.
-
-   Local labels thus defined may be redefined or automatically
-generated.  The scope of a local label is based on when it may be
-undefined or reset.  This happens when one of the following situations
-is encountered:
-
-   * .newblock directive *note `.newblock': TIC54X-Directives.
-
-   * The current section is changed (.sect, .text, or .data)
-
-   * Entering or leaving an included file
-
-   * The macro scope where the label was defined is exited
-
-
-File: as.info,  Node: TIC54X-Builtins,  Next: TIC54X-Ext,  Prev: TIC54X-Locals,  Up: TIC54X-Dependent
-
-8.30.7 Math Builtins
---------------------
-
-The following built-in functions may be used to generate a
-floating-point value.  All return a floating-point value except `$cvi',
-`$int', and `$sgn', which return an integer value.
-
-``$acos(EXPR)''
-     Returns the floating point arccosine of EXPR.
-
-``$asin(EXPR)''
-     Returns the floating point arcsine of EXPR.
-
-``$atan(EXPR)''
-     Returns the floating point arctangent of EXPR.
-
-``$atan2(EXPR1,EXPR2)''
-     Returns the floating point arctangent of EXPR1 / EXPR2.
-
-``$ceil(EXPR)''
-     Returns the smallest integer not less than EXPR as floating point.
-
-``$cosh(EXPR)''
-     Returns the floating point hyperbolic cosine of EXPR.
-
-``$cos(EXPR)''
-     Returns the floating point cosine of EXPR.
-
-``$cvf(EXPR)''
-     Returns the integer value EXPR converted to floating-point.
-
-``$cvi(EXPR)''
-     Returns the floating point value EXPR converted to integer.
-
-``$exp(EXPR)''
-     Returns the floating point value e ^ EXPR.
-
-``$fabs(EXPR)''
-     Returns the floating point absolute value of EXPR.
-
-``$floor(EXPR)''
-     Returns the largest integer that is not greater than EXPR as
-     floating point.
-
-``$fmod(EXPR1,EXPR2)''
-     Returns the floating point remainder of EXPR1 / EXPR2.
-
-``$int(EXPR)''
-     Returns 1 if EXPR evaluates to an integer, zero otherwise.
-
-``$ldexp(EXPR1,EXPR2)''
-     Returns the floating point value EXPR1 * 2 ^ EXPR2.
-
-``$log10(EXPR)''
-     Returns the base 10 logarithm of EXPR.
-
-``$log(EXPR)''
-     Returns the natural logarithm of EXPR.
-
-``$max(EXPR1,EXPR2)''
-     Returns the floating point maximum of EXPR1 and EXPR2.
-
-``$min(EXPR1,EXPR2)''
-     Returns the floating point minimum of EXPR1 and EXPR2.
-
-``$pow(EXPR1,EXPR2)''
-     Returns the floating point value EXPR1 ^ EXPR2.
-
-``$round(EXPR)''
-     Returns the nearest integer to EXPR as a floating point number.
-
-``$sgn(EXPR)''
-     Returns -1, 0, or 1 based on the sign of EXPR.
-
-``$sin(EXPR)''
-     Returns the floating point sine of EXPR.
-
-``$sinh(EXPR)''
-     Returns the floating point hyperbolic sine of EXPR.
-
-``$sqrt(EXPR)''
-     Returns the floating point square root of EXPR.
-
-``$tan(EXPR)''
-     Returns the floating point tangent of EXPR.
-
-``$tanh(EXPR)''
-     Returns the floating point hyperbolic tangent of EXPR.
-
-``$trunc(EXPR)''
-     Returns the integer value of EXPR truncated towards zero as
-     floating point.
-
-
-
-File: as.info,  Node: TIC54X-Ext,  Next: TIC54X-Directives,  Prev: TIC54X-Builtins,  Up: TIC54X-Dependent
-
-8.30.8 Extended Addressing
---------------------------
-
-The `LDX' pseudo-op is provided for loading the extended addressing bits
-of a label or address.  For example, if an address `_label' resides in
-extended program memory, the value of `_label' may be loaded as follows:
-      ldx     #_label,16,a    ; loads extended bits of _label
-      or      #_label,a       ; loads lower 16 bits of _label
-      bacc    a               ; full address is in accumulator A
-
-
-File: as.info,  Node: TIC54X-Directives,  Next: TIC54X-Macros,  Prev: TIC54X-Ext,  Up: TIC54X-Dependent
-
-8.30.9 Directives
------------------
-
-`.align [SIZE]'
-`.even'
-     Align the section program counter on the next boundary, based on
-     SIZE.  SIZE may be any power of 2.  `.even' is equivalent to
-     `.align' with a SIZE of 2.
-    `1'
-          Align SPC to word boundary
-
-    `2'
-          Align SPC to longword boundary (same as .even)
-
-    `128'
-          Align SPC to page boundary
-
-`.asg STRING, NAME'
-     Assign NAME the string STRING.  String replacement is performed on
-     STRING before assignment.
-
-`.eval STRING, NAME'
-     Evaluate the contents of string STRING and assign the result as a
-     string to the subsym NAME.  String replacement is performed on
-     STRING before assignment.
-
-`.bss SYMBOL, SIZE [, [BLOCKING_FLAG] [,ALIGNMENT_FLAG]]'
-     Reserve space for SYMBOL in the .bss section.  SIZE is in words.
-     If present, BLOCKING_FLAG indicates the allocated space should be
-     aligned on a page boundary if it would otherwise cross a page
-     boundary.  If present, ALIGNMENT_FLAG causes the assembler to
-     allocate SIZE on a long word boundary.
-
-`.byte VALUE [,...,VALUE_N]'
-`.ubyte VALUE [,...,VALUE_N]'
-`.char VALUE [,...,VALUE_N]'
-`.uchar VALUE [,...,VALUE_N]'
-     Place one or more bytes into consecutive words of the current
-     section.  The upper 8 bits of each word is zero-filled.  If a
-     label is used, it points to the word allocated for the first byte
-     encountered.
-
-`.clink ["SECTION_NAME"]'
-     Set STYP_CLINK flag for this section, which indicates to the
-     linker that if no symbols from this section are referenced, the
-     section should not be included in the link.  If SECTION_NAME is
-     omitted, the current section is used.
-
-`.c_mode'
-     TBD.
-
-`.copy "FILENAME" | FILENAME'
-`.include "FILENAME" | FILENAME'
-     Read source statements from FILENAME.  The normal include search
-     path is used.  Normally .copy will cause statements from the
-     included file to be printed in the assembly listing and .include
-     will not, but this distinction is not currently implemented.
-
-`.data'
-     Begin assembling code into the .data section.
-
-`.double VALUE [,...,VALUE_N]'
-`.ldouble VALUE [,...,VALUE_N]'
-`.float VALUE [,...,VALUE_N]'
-`.xfloat VALUE [,...,VALUE_N]'
-     Place an IEEE single-precision floating-point representation of
-     one or more floating-point values into the current section.  All
-     but `.xfloat' align the result on a longword boundary.  Values are
-     stored most-significant word first.
-
-`.drlist'
-`.drnolist'
-     Control printing of directives to the listing file.  Ignored.
-
-`.emsg STRING'
-`.mmsg STRING'
-`.wmsg STRING'
-     Emit a user-defined error, message, or warning, respectively.
-
-`.far_mode'
-     Use extended addressing when assembling statements.  This should
-     appear only once per file, and is equivalent to the -mfar-mode
-     option *note `-mfar-mode': TIC54X-Opts.
-
-`.fclist'
-`.fcnolist'
-     Control printing of false conditional blocks to the listing file.
-
-`.field VALUE [,SIZE]'
-     Initialize a bitfield of SIZE bits in the current section.  If
-     VALUE is relocatable, then SIZE must be 16.  SIZE defaults to 16
-     bits.  If VALUE does not fit into SIZE bits, the value will be
-     truncated.  Successive `.field' directives will pack starting at
-     the current word, filling the most significant bits first, and
-     aligning to the start of the next word if the field size does not
-     fit into the space remaining in the current word.  A `.align'
-     directive with an operand of 1 will force the next `.field'
-     directive to begin packing into a new word.  If a label is used, it
-     points to the word that contains the specified field.
-
-`.global SYMBOL [,...,SYMBOL_N]'
-`.def SYMBOL [,...,SYMBOL_N]'
-`.ref SYMBOL [,...,SYMBOL_N]'
-     `.def' nominally identifies a symbol defined in the current file
-     and availalbe to other files.  `.ref' identifies a symbol used in
-     the current file but defined elsewhere.  Both map to the standard
-     `.global' directive.
-
-`.half VALUE [,...,VALUE_N]'
-`.uhalf VALUE [,...,VALUE_N]'
-`.short VALUE [,...,VALUE_N]'
-`.ushort VALUE [,...,VALUE_N]'
-`.int VALUE [,...,VALUE_N]'
-`.uint VALUE [,...,VALUE_N]'
-`.word VALUE [,...,VALUE_N]'
-`.uword VALUE [,...,VALUE_N]'
-     Place one or more values into consecutive words of the current
-     section.  If a label is used, it points to the word allocated for
-     the first value encountered.
-
-`.label SYMBOL'
-     Define a special SYMBOL to refer to the load time address of the
-     current section program counter.
-
-`.length'
-`.width'
-     Set the page length and width of the output listing file.  Ignored.
-
-`.list'
-`.nolist'
-     Control whether the source listing is printed.  Ignored.
-
-`.long VALUE [,...,VALUE_N]'
-`.ulong VALUE [,...,VALUE_N]'
-`.xlong VALUE [,...,VALUE_N]'
-     Place one or more 32-bit values into consecutive words in the
-     current section.  The most significant word is stored first.
-     `.long' and `.ulong' align the result on a longword boundary;
-     `xlong' does not.
-
-`.loop [COUNT]'
-`.break [CONDITION]'
-`.endloop'
-     Repeatedly assemble a block of code.  `.loop' begins the block, and
-     `.endloop' marks its termination.  COUNT defaults to 1024, and
-     indicates the number of times the block should be repeated.
-     `.break' terminates the loop so that assembly begins after the
-     `.endloop' directive.  The optional CONDITION will cause the loop
-     to terminate only if it evaluates to zero.
-
-`MACRO_NAME .macro [PARAM1][,...PARAM_N]'
-`[.mexit]'
-`.endm'
-     See the section on macros for more explanation (*Note
-     TIC54X-Macros::.
-
-`.mlib "FILENAME" | FILENAME'
-     Load the macro library FILENAME.  FILENAME must be an archived
-     library (BFD ar-compatible) of text files, expected to contain
-     only macro definitions.   The standard include search path is used.
-
-`.mlist'
-
-`.mnolist'
-     Control whether to include macro and loop block expansions in the
-     listing output.  Ignored.
-
-`.mmregs'
-     Define global symbolic names for the 'c54x registers.  Supposedly
-     equivalent to executing `.set' directives for each register with
-     its memory-mapped value, but in reality is provided only for
-     compatibility and does nothing.
-
-`.newblock'
-     This directive resets any TIC54X local labels currently defined.
-     Normal `as' local labels are unaffected.
-
-`.option OPTION_LIST'
-     Set listing options.  Ignored.
-
-`.sblock "SECTION_NAME" | SECTION_NAME [,"NAME_N" | NAME_N]'
-     Designate SECTION_NAME for blocking.  Blocking guarantees that a
-     section will start on a page boundary (128 words) if it would
-     otherwise cross a page boundary.  Only initialized sections may be
-     designated with this directive.  See also *Note TIC54X-Block::.
-
-`.sect "SECTION_NAME"'
-     Define a named initialized section and make it the current section.
-
-`SYMBOL .set "VALUE"'
-`SYMBOL .equ "VALUE"'
-     Equate a constant VALUE to a SYMBOL, which is placed in the symbol
-     table.  SYMBOL may not be previously defined.
-
-`.space SIZE_IN_BITS'
-`.bes SIZE_IN_BITS'
-     Reserve the given number of bits in the current section and
-     zero-fill them.  If a label is used with `.space', it points to the
-     *first* word reserved.  With `.bes', the label points to the
-     *last* word reserved.
-
-`.sslist'
-`.ssnolist'
-     Controls the inclusion of subsym replacement in the listing
-     output.  Ignored.
-
-`.string "STRING" [,...,"STRING_N"]'
-`.pstring "STRING" [,...,"STRING_N"]'
-     Place 8-bit characters from STRING into the current section.
-     `.string' zero-fills the upper 8 bits of each word, while
-     `.pstring' puts two characters into each word, filling the
-     most-significant bits first.  Unused space is zero-filled.  If a
-     label is used, it points to the first word initialized.
-
-`[STAG] .struct [OFFSET]'
-`[NAME_1] element [COUNT_1]'
-`[NAME_2] element [COUNT_2]'
-`[TNAME] .tag STAGX [TCOUNT]'
-`...'
-`[NAME_N] element [COUNT_N]'
-`[SSIZE] .endstruct'
-`LABEL .tag [STAG]'
-     Assign symbolic offsets to the elements of a structure.  STAG
-     defines a symbol to use to reference the structure.  OFFSET
-     indicates a starting value to use for the first element
-     encountered; otherwise it defaults to zero.  Each element can have
-     a named offset, NAME, which is a symbol assigned the value of the
-     element's offset into the structure.  If STAG is missing, these
-     become global symbols.  COUNT adjusts the offset that many times,
-     as if `element' were an array.  `element' may be one of `.byte',
-     `.word', `.long', `.float', or any equivalent of those, and the
-     structure offset is adjusted accordingly.  `.field' and `.string'
-     are also allowed; the size of `.field' is one bit, and `.string'
-     is considered to be one word in size.  Only element descriptors,
-     structure/union tags, `.align' and conditional assembly directives
-     are allowed within `.struct'/`.endstruct'.  `.align' aligns member
-     offsets to word boundaries only.  SSIZE, if provided, will always
-     be assigned the size of the structure.
-
-     The `.tag' directive, in addition to being used to define a
-     structure/union element within a structure, may be used to apply a
-     structure to a symbol.  Once applied to LABEL, the individual
-     structure elements may be applied to LABEL to produce the desired
-     offsets using LABEL as the structure base.
-
-`.tab'
-     Set the tab size in the output listing.  Ignored.
-
-`[UTAG] .union'
-`[NAME_1] element [COUNT_1]'
-`[NAME_2] element [COUNT_2]'
-`[TNAME] .tag UTAGX[,TCOUNT]'
-`...'
-`[NAME_N] element [COUNT_N]'
-`[USIZE] .endstruct'
-`LABEL .tag [UTAG]'
-     Similar to `.struct', but the offset after each element is reset to
-     zero, and the USIZE is set to the maximum of all defined elements.
-     Starting offset for the union is always zero.
-
-`[SYMBOL] .usect "SECTION_NAME", SIZE, [,[BLOCKING_FLAG] [,ALIGNMENT_FLAG]]'
-     Reserve space for variables in a named, uninitialized section
-     (similar to .bss).  `.usect' allows definitions sections
-     independent of .bss.  SYMBOL points to the first location reserved
-     by this allocation.  The symbol may be used as a variable name.
-     SIZE is the allocated size in words.  BLOCKING_FLAG indicates
-     whether to block this section on a page boundary (128 words)
-     (*note TIC54X-Block::).  ALIGNMENT FLAG indicates whether the
-     section should be longword-aligned.
-
-`.var SYM[,..., SYM_N]'
-     Define a subsym to be a local variable within a macro.  See *Note
-     TIC54X-Macros::.
-
-`.version VERSION'
-     Set which processor to build instructions for.  Though the
-     following values are accepted, the op is ignored.
-    `541'
-    `542'
-    `543'
-    `545'
-    `545LP'
-    `546LP'
-    `548'
-    `549'
-
-
-File: as.info,  Node: TIC54X-Macros,  Next: TIC54X-MMRegs,  Prev: TIC54X-Directives,  Up: TIC54X-Dependent
-
-8.30.10 Macros
---------------
-
-Macros do not require explicit dereferencing of arguments (i.e. \ARG).
-
-   During macro expansion, the macro parameters are converted to
-subsyms.  If the number of arguments passed the macro invocation
-exceeds the number of parameters defined, the last parameter is
-assigned the string equivalent of all remaining arguments.  If fewer
-arguments are given than parameters, the missing parameters are
-assigned empty strings.  To include a comma in an argument, you must
-enclose the argument in quotes.
-
-   The following built-in subsym functions allow examination of the
-string value of subsyms (or ordinary strings).  The arguments are
-strings unless otherwise indicated (subsyms passed as args will be
-replaced by the strings they represent).
-``$symlen(STR)''
-     Returns the length of STR.
-
-``$symcmp(STR1,STR2)''
-     Returns 0 if STR1 == STR2, non-zero otherwise.
-
-``$firstch(STR,CH)''
-     Returns index of the first occurrence of character constant CH in
-     STR.
-
-``$lastch(STR,CH)''
-     Returns index of the last occurrence of character constant CH in
-     STR.
-
-``$isdefed(SYMBOL)''
-     Returns zero if the symbol SYMBOL is not in the symbol table,
-     non-zero otherwise.
-
-``$ismember(SYMBOL,LIST)''
-     Assign the first member of comma-separated string LIST to SYMBOL;
-     LIST is reassigned the remainder of the list.  Returns zero if
-     LIST is a null string.  Both arguments must be subsyms.
-
-``$iscons(EXPR)''
-     Returns 1 if string EXPR is binary, 2 if octal, 3 if hexadecimal,
-     4 if a character, 5 if decimal, and zero if not an integer.
-
-``$isname(NAME)''
-     Returns 1 if NAME is a valid symbol name, zero otherwise.
-
-``$isreg(REG)''
-     Returns 1 if REG is a valid predefined register name (AR0-AR7
-     only).
-
-``$structsz(STAG)''
-     Returns the size of the structure or union represented by STAG.
-
-``$structacc(STAG)''
-     Returns the reference point of the structure or union represented
-     by STAG.   Always returns zero.
-
-
-
-File: as.info,  Node: TIC54X-MMRegs,  Prev: TIC54X-Macros,  Up: TIC54X-Dependent
-
-8.30.11 Memory-mapped Registers
--------------------------------
-
-The following symbols are recognized as memory-mapped registers:
-
-
-
-File: as.info,  Node: Z8000-Dependent,  Next: Vax-Dependent,  Prev: Xtensa-Dependent,  Up: Machine Dependencies
-
-8.31 Z8000 Dependent Features
-=============================
-
-   The Z8000 as supports both members of the Z8000 family: the
-unsegmented Z8002, with 16 bit addresses, and the segmented Z8001 with
-24 bit addresses.
-
-   When the assembler is in unsegmented mode (specified with the
-`unsegm' directive), an address takes up one word (16 bit) sized
-register.  When the assembler is in segmented mode (specified with the
-`segm' directive), a 24-bit address takes up a long (32 bit) register.
-*Note Assembler Directives for the Z8000: Z8000 Directives, for a list
-of other Z8000 specific assembler directives.
-
-* Menu:
-
-* Z8000 Options::               Command-line options for the Z8000
-* Z8000 Syntax::                Assembler syntax for the Z8000
-* Z8000 Directives::            Special directives for the Z8000
-* Z8000 Opcodes::               Opcodes
-
-
-File: as.info,  Node: Z8000 Options,  Next: Z8000 Syntax,  Up: Z8000-Dependent
-
-8.31.1 Options
---------------
-
-`-z8001'
-     Generate segmented code by default.
-
-`-z8002'
-     Generate unsegmented code by default.
-
-
-File: as.info,  Node: Z8000 Syntax,  Next: Z8000 Directives,  Prev: Z8000 Options,  Up: Z8000-Dependent
-
-8.31.2 Syntax
--------------
-
-* Menu:
-
-* Z8000-Chars::                Special Characters
-* Z8000-Regs::                 Register Names
-* Z8000-Addressing::           Addressing Modes
-
-
-File: as.info,  Node: Z8000-Chars,  Next: Z8000-Regs,  Up: Z8000 Syntax
-
-8.31.2.1 Special Characters
-...........................
-
-`!' is the line comment character.
-
-   You can use `;' instead of a newline to separate statements.
-
-
-File: as.info,  Node: Z8000-Regs,  Next: Z8000-Addressing,  Prev: Z8000-Chars,  Up: Z8000 Syntax
-
-8.31.2.2 Register Names
-.......................
-
-The Z8000 has sixteen 16 bit registers, numbered 0 to 15.  You can refer
-to different sized groups of registers by register number, with the
-prefix `r' for 16 bit registers, `rr' for 32 bit registers and `rq' for
-64 bit registers.  You can also refer to the contents of the first
-eight (of the sixteen 16 bit registers) by bytes.  They are named `rlN'
-and `rhN'.
-
-_byte registers_
-     rl0 rh0 rl1 rh1 rl2 rh2 rl3 rh3
-     rl4 rh4 rl5 rh5 rl6 rh6 rl7 rh7
-
-_word registers_
-     r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15
-
-_long word registers_
-     rr0 rr2 rr4 rr6 rr8 rr10 rr12 rr14
-
-_quad word registers_
-     rq0 rq4 rq8 rq12
-
-
-File: as.info,  Node: Z8000-Addressing,  Prev: Z8000-Regs,  Up: Z8000 Syntax
-
-8.31.2.3 Addressing Modes
-.........................
-
-as understands the following addressing modes for the Z8000:
-
-`rlN'
-`rhN'
-`rN'
-`rrN'
-`rqN'
-     Register direct:  8bit, 16bit, 32bit, and 64bit registers.
-
-`@rN'
-`@rrN'
-     Indirect register:  @rrN in segmented mode, @rN in unsegmented
-     mode.
-
-`ADDR'
-     Direct: the 16 bit or 24 bit address (depending on whether the
-     assembler is in segmented or unsegmented mode) of the operand is
-     in the instruction.
-
-`address(rN)'
-     Indexed: the 16 or 24 bit address is added to the 16 bit register
-     to produce the final address in memory of the operand.
-
-`rN(#IMM)'
-`rrN(#IMM)'
-     Base Address: the 16 or 24 bit register is added to the 16 bit sign
-     extended immediate displacement to produce the final address in
-     memory of the operand.
-
-`rN(rM)'
-`rrN(rM)'
-     Base Index: the 16 or 24 bit register rN or rrN is added to the
-     sign extended 16 bit index register rM to produce the final
-     address in memory of the operand.
-
-`#XX'
-     Immediate data XX.
-
-
-File: as.info,  Node: Z8000 Directives,  Next: Z8000 Opcodes,  Prev: Z8000 Syntax,  Up: Z8000-Dependent
-
-8.31.3 Assembler Directives for the Z8000
------------------------------------------
-
-The Z8000 port of as includes additional assembler directives, for
-compatibility with other Z8000 assemblers.  These do not begin with `.'
-(unlike the ordinary as directives).
-
-`segm'
-`.z8001'
-     Generate code for the segmented Z8001.
-
-`unsegm'
-`.z8002'
-     Generate code for the unsegmented Z8002.
-
-`name'
-     Synonym for `.file'
-
-`global'
-     Synonym for `.global'
-
-`wval'
-     Synonym for `.word'
-
-`lval'
-     Synonym for `.long'
-
-`bval'
-     Synonym for `.byte'
-
-`sval'
-     Assemble a string.  `sval' expects one string literal, delimited by
-     single quotes.  It assembles each byte of the string into
-     consecutive addresses.  You can use the escape sequence `%XX'
-     (where XX represents a two-digit hexadecimal number) to represent
-     the character whose ASCII value is XX.  Use this feature to
-     describe single quote and other characters that may not appear in
-     string literals as themselves.  For example, the C statement
-     `char *a = "he said \"it's 50% off\"";' is represented in Z8000
-     assembly language (shown with the assembler output in hex at the
-     left) as
-
-          68652073    sval    'he said %22it%27s 50%25 off%22%00'
-          61696420
-          22697427
-          73203530
-          25206F66
-          662200
-
-`rsect'
-     synonym for `.section'
-
-`block'
-     synonym for `.space'
-
-`even'
-     special case of `.align'; aligns output to even byte boundary.
-
-
-File: as.info,  Node: Z8000 Opcodes,  Prev: Z8000 Directives,  Up: Z8000-Dependent
-
-8.31.4 Opcodes
---------------
-
-For detailed information on the Z8000 machine instruction set, see
-`Z8000 Technical Manual'.
-
-   The following table summarizes the opcodes and their arguments:
-
-                 rs   16 bit source register
-                 rd   16 bit destination register
-                 rbs   8 bit source register
-                 rbd   8 bit destination register
-                 rrs   32 bit source register
-                 rrd   32 bit destination register
-                 rqs   64 bit source register
-                 rqd   64 bit destination register
-                 addr 16/24 bit address
-                 imm  immediate data
-
-     adc rd,rs               clrb addr               cpsir @rd,@rs,rr,cc
-     adcb rbd,rbs            clrb addr(rd)           cpsirb @rd,@rs,rr,cc
-     add rd,@rs              clrb rbd                dab rbd
-     add rd,addr             com @rd                 dbjnz rbd,disp7
-     add rd,addr(rs)         com addr                dec @rd,imm4m1
-     add rd,imm16            com addr(rd)            dec addr(rd),imm4m1
-     add rd,rs               com rd                  dec addr,imm4m1
-     addb rbd,@rs            comb @rd                dec rd,imm4m1
-     addb rbd,addr           comb addr               decb @rd,imm4m1
-     addb rbd,addr(rs)       comb addr(rd)           decb addr(rd),imm4m1
-     addb rbd,imm8           comb rbd                decb addr,imm4m1
-     addb rbd,rbs            comflg flags            decb rbd,imm4m1
-     addl rrd,@rs            cp @rd,imm16            di i2
-     addl rrd,addr           cp addr(rd),imm16       div rrd,@rs
-     addl rrd,addr(rs)       cp addr,imm16           div rrd,addr
-     addl rrd,imm32          cp rd,@rs               div rrd,addr(rs)
-     addl rrd,rrs            cp rd,addr              div rrd,imm16
-     and rd,@rs              cp rd,addr(rs)          div rrd,rs
-     and rd,addr             cp rd,imm16             divl rqd,@rs
-     and rd,addr(rs)         cp rd,rs                divl rqd,addr
-     and rd,imm16            cpb @rd,imm8            divl rqd,addr(rs)
-     and rd,rs               cpb addr(rd),imm8       divl rqd,imm32
-     andb rbd,@rs            cpb addr,imm8           divl rqd,rrs
-     andb rbd,addr           cpb rbd,@rs             djnz rd,disp7
-     andb rbd,addr(rs)       cpb rbd,addr            ei i2
-     andb rbd,imm8           cpb rbd,addr(rs)        ex rd,@rs
-     andb rbd,rbs            cpb rbd,imm8            ex rd,addr
-     bit @rd,imm4            cpb rbd,rbs             ex rd,addr(rs)
-     bit addr(rd),imm4       cpd rd,@rs,rr,cc        ex rd,rs
-     bit addr,imm4           cpdb rbd,@rs,rr,cc      exb rbd,@rs
-     bit rd,imm4             cpdr rd,@rs,rr,cc       exb rbd,addr
-     bit rd,rs               cpdrb rbd,@rs,rr,cc     exb rbd,addr(rs)
-     bitb @rd,imm4           cpi rd,@rs,rr,cc        exb rbd,rbs
-     bitb addr(rd),imm4      cpib rbd,@rs,rr,cc      ext0e imm8
-     bitb addr,imm4          cpir rd,@rs,rr,cc       ext0f imm8
-     bitb rbd,imm4           cpirb rbd,@rs,rr,cc     ext8e imm8
-     bitb rbd,rs             cpl rrd,@rs             ext8f imm8
-     bpt                     cpl rrd,addr            exts rrd
-     call @rd                cpl rrd,addr(rs)        extsb rd
-     call addr               cpl rrd,imm32           extsl rqd
-     call addr(rd)           cpl rrd,rrs             halt
-     calr disp12             cpsd @rd,@rs,rr,cc      in rd,@rs
-     clr @rd                 cpsdb @rd,@rs,rr,cc     in rd,imm16
-     clr addr                cpsdr @rd,@rs,rr,cc     inb rbd,@rs
-     clr addr(rd)            cpsdrb @rd,@rs,rr,cc    inb rbd,imm16
-     clr rd                  cpsi @rd,@rs,rr,cc      inc @rd,imm4m1
-     clrb @rd                cpsib @rd,@rs,rr,cc     inc addr(rd),imm4m1
-     inc addr,imm4m1         ldb rbd,rs(rx)          mult rrd,addr(rs)
-     inc rd,imm4m1           ldb rd(imm16),rbs       mult rrd,imm16
-     incb @rd,imm4m1         ldb rd(rx),rbs          mult rrd,rs
-     incb addr(rd),imm4m1    ldctl ctrl,rs           multl rqd,@rs
-     incb addr,imm4m1        ldctl rd,ctrl           multl rqd,addr
-     incb rbd,imm4m1         ldd @rs,@rd,rr          multl rqd,addr(rs)
-     ind @rd,@rs,ra          lddb @rs,@rd,rr         multl rqd,imm32
-     indb @rd,@rs,rba        lddr @rs,@rd,rr         multl rqd,rrs
-     inib @rd,@rs,ra         lddrb @rs,@rd,rr        neg @rd
-     inibr @rd,@rs,ra        ldi @rd,@rs,rr          neg addr
-     iret                    ldib @rd,@rs,rr         neg addr(rd)
-     jp cc,@rd               ldir @rd,@rs,rr         neg rd
-     jp cc,addr              ldirb @rd,@rs,rr        negb @rd
-     jp cc,addr(rd)          ldk rd,imm4             negb addr
-     jr cc,disp8             ldl @rd,rrs             negb addr(rd)
-     ld @rd,imm16            ldl addr(rd),rrs        negb rbd
-     ld @rd,rs               ldl addr,rrs            nop
-     ld addr(rd),imm16       ldl rd(imm16),rrs       or rd,@rs
-     ld addr(rd),rs          ldl rd(rx),rrs          or rd,addr
-     ld addr,imm16           ldl rrd,@rs             or rd,addr(rs)
-     ld addr,rs              ldl rrd,addr            or rd,imm16
-     ld rd(imm16),rs         ldl rrd,addr(rs)        or rd,rs
-     ld rd(rx),rs            ldl rrd,imm32           orb rbd,@rs
-     ld rd,@rs               ldl rrd,rrs             orb rbd,addr
-     ld rd,addr              ldl rrd,rs(imm16)       orb rbd,addr(rs)
-     ld rd,addr(rs)          ldl rrd,rs(rx)          orb rbd,imm8
-     ld rd,imm16             ldm @rd,rs,n            orb rbd,rbs
-     ld rd,rs                ldm addr(rd),rs,n       out @rd,rs
-     ld rd,rs(imm16)         ldm addr,rs,n           out imm16,rs
-     ld rd,rs(rx)            ldm rd,@rs,n            outb @rd,rbs
-     lda rd,addr             ldm rd,addr(rs),n       outb imm16,rbs
-     lda rd,addr(rs)         ldm rd,addr,n           outd @rd,@rs,ra
-     lda rd,rs(imm16)        ldps @rs                outdb @rd,@rs,rba
-     lda rd,rs(rx)           ldps addr               outib @rd,@rs,ra
-     ldar rd,disp16          ldps addr(rs)           outibr @rd,@rs,ra
-     ldb @rd,imm8            ldr disp16,rs           pop @rd,@rs
-     ldb @rd,rbs             ldr rd,disp16           pop addr(rd),@rs
-     ldb addr(rd),imm8       ldrb disp16,rbs         pop addr,@rs
-     ldb addr(rd),rbs        ldrb rbd,disp16         pop rd,@rs
-     ldb addr,imm8           ldrl disp16,rrs         popl @rd,@rs
-     ldb addr,rbs            ldrl rrd,disp16         popl addr(rd),@rs
-     ldb rbd,@rs             mbit                    popl addr,@rs
-     ldb rbd,addr            mreq rd                 popl rrd,@rs
-     ldb rbd,addr(rs)        mres                    push @rd,@rs
-     ldb rbd,imm8            mset                    push @rd,addr
-     ldb rbd,rbs             mult rrd,@rs            push @rd,addr(rs)
-     ldb rbd,rs(imm16)       mult rrd,addr           push @rd,imm16
-     push @rd,rs             set addr,imm4           subl rrd,imm32
-     pushl @rd,@rs           set rd,imm4             subl rrd,rrs
-     pushl @rd,addr          set rd,rs               tcc cc,rd
-     pushl @rd,addr(rs)      setb @rd,imm4           tccb cc,rbd
-     pushl @rd,rrs           setb addr(rd),imm4      test @rd
-     res @rd,imm4            setb addr,imm4          test addr
-     res addr(rd),imm4       setb rbd,imm4           test addr(rd)
-     res addr,imm4           setb rbd,rs             test rd
-     res rd,imm4             setflg imm4             testb @rd
-     res rd,rs               sinb rbd,imm16          testb addr
-     resb @rd,imm4           sinb rd,imm16           testb addr(rd)
-     resb addr(rd),imm4      sind @rd,@rs,ra         testb rbd
-     resb addr,imm4          sindb @rd,@rs,rba       testl @rd
-     resb rbd,imm4           sinib @rd,@rs,ra        testl addr
-     resb rbd,rs             sinibr @rd,@rs,ra       testl addr(rd)
-     resflg imm4             sla rd,imm8             testl rrd
-     ret cc                  slab rbd,imm8           trdb @rd,@rs,rba
-     rl rd,imm1or2           slal rrd,imm8           trdrb @rd,@rs,rba
-     rlb rbd,imm1or2         sll rd,imm8             trib @rd,@rs,rbr
-     rlc rd,imm1or2          sllb rbd,imm8           trirb @rd,@rs,rbr
-     rlcb rbd,imm1or2        slll rrd,imm8           trtdrb @ra,@rb,rbr
-     rldb rbb,rba            sout imm16,rs           trtib @ra,@rb,rr
-     rr rd,imm1or2           soutb imm16,rbs         trtirb @ra,@rb,rbr
-     rrb rbd,imm1or2         soutd @rd,@rs,ra        trtrb @ra,@rb,rbr
-     rrc rd,imm1or2          soutdb @rd,@rs,rba      tset @rd
-     rrcb rbd,imm1or2        soutib @rd,@rs,ra       tset addr
-     rrdb rbb,rba            soutibr @rd,@rs,ra      tset addr(rd)
-     rsvd36                  sra rd,imm8             tset rd
-     rsvd38                  srab rbd,imm8           tsetb @rd
-     rsvd78                  sral rrd,imm8           tsetb addr
-     rsvd7e                  srl rd,imm8             tsetb addr(rd)
-     rsvd9d                  srlb rbd,imm8           tsetb rbd
-     rsvd9f                  srll rrd,imm8           xor rd,@rs
-     rsvdb9                  sub rd,@rs              xor rd,addr
-     rsvdbf                  sub rd,addr             xor rd,addr(rs)
-     sbc rd,rs               sub rd,addr(rs)         xor rd,imm16
-     sbcb rbd,rbs            sub rd,imm16            xor rd,rs
-     sc imm8                 sub rd,rs               xorb rbd,@rs
-     sda rd,rs               subb rbd,@rs            xorb rbd,addr
-     sdab rbd,rs             subb rbd,addr           xorb rbd,addr(rs)
-     sdal rrd,rs             subb rbd,addr(rs)       xorb rbd,imm8
-     sdl rd,rs               subb rbd,imm8           xorb rbd,rbs
-     sdlb rbd,rs             subb rbd,rbs            xorb rbd,rbs
-     sdll rrd,rs             subl rrd,@rs
-     set @rd,imm4            subl rrd,addr
-     set addr(rd),imm4       subl rrd,addr(rs)
-
-
-File: as.info,  Node: Vax-Dependent,  Prev: Z8000-Dependent,  Up: Machine Dependencies
-
-8.32 VAX Dependent Features
-===========================
-
-* Menu:
-
-* VAX-Opts::                    VAX Command-Line Options
-* VAX-float::                   VAX Floating Point
-* VAX-directives::              Vax Machine Directives
-* VAX-opcodes::                 VAX Opcodes
-* VAX-branch::                  VAX Branch Improvement
-* VAX-operands::                VAX Operands
-* VAX-no::                      Not Supported on VAX
-
-
-File: as.info,  Node: VAX-Opts,  Next: VAX-float,  Up: Vax-Dependent
-
-8.32.1 VAX Command-Line Options
--------------------------------
-
-The Vax version of `as' accepts any of the following options, gives a
-warning message that the option was ignored and proceeds.  These
-options are for compatibility with scripts designed for other people's
-assemblers.
-
-``-D' (Debug)'
-``-S' (Symbol Table)'
-``-T' (Token Trace)'
-     These are obsolete options used to debug old assemblers.
-
-``-d' (Displacement size for JUMPs)'
-     This option expects a number following the `-d'.  Like options
-     that expect filenames, the number may immediately follow the `-d'
-     (old standard) or constitute the whole of the command line
-     argument that follows `-d' (GNU standard).
-
-``-V' (Virtualize Interpass Temporary File)'
-     Some other assemblers use a temporary file.  This option commanded
-     them to keep the information in active memory rather than in a
-     disk file.  `as' always does this, so this option is redundant.
-
-``-J' (JUMPify Longer Branches)'
-     Many 32-bit computers permit a variety of branch instructions to
-     do the same job.  Some of these instructions are short (and fast)
-     but have a limited range; others are long (and slow) but can
-     branch anywhere in virtual memory.  Often there are 3 flavors of
-     branch: short, medium and long.  Some other assemblers would emit
-     short and medium branches, unless told by this option to emit
-     short and long branches.
-
-``-t' (Temporary File Directory)'
-     Some other assemblers may use a temporary file, and this option
-     takes a filename being the directory to site the temporary file.
-     Since `as' does not use a temporary disk file, this option makes
-     no difference.  `-t' needs exactly one filename.
-
-   The Vax version of the assembler accepts additional options when
-compiled for VMS:
-
-`-h N'
-     External symbol or section (used for global variables) names are
-     not case sensitive on VAX/VMS and always mapped to upper case.
-     This is contrary to the C language definition which explicitly
-     distinguishes upper and lower case.  To implement a standard
-     conforming C compiler, names must be changed (mapped) to preserve
-     the case information.  The default mapping is to convert all lower
-     case characters to uppercase and adding an underscore followed by
-     a 6 digit hex value, representing a 24 digit binary value.  The
-     one digits in the binary value represent which characters are
-     uppercase in the original symbol name.
-
-     The `-h N' option determines how we map names.  This takes several
-     values.  No `-h' switch at all allows case hacking as described
-     above.  A value of zero (`-h0') implies names should be upper
-     case, and inhibits the case hack.  A value of 2 (`-h2') implies
-     names should be all lower case, with no case hack.  A value of 3
-     (`-h3') implies that case should be preserved.  The value 1 is
-     unused.  The `-H' option directs `as' to display every mapped
-     symbol during assembly.
-
-     Symbols whose names include a dollar sign `$' are exceptions to the
-     general name mapping.  These symbols are normally only used to
-     reference VMS library names.  Such symbols are always mapped to
-     upper case.
-
-`-+'
-     The `-+' option causes `as' to truncate any symbol name larger
-     than 31 characters.  The `-+' option also prevents some code
-     following the `_main' symbol normally added to make the object
-     file compatible with Vax-11 "C".
-
-`-1'
-     This option is ignored for backward compatibility with `as'
-     version 1.x.
-
-`-H'
-     The `-H' option causes `as' to print every symbol which was
-     changed by case mapping.
-
-
-File: as.info,  Node: VAX-float,  Next: VAX-directives,  Prev: VAX-Opts,  Up: Vax-Dependent
-
-8.32.2 VAX Floating Point
--------------------------
-
-Conversion of flonums to floating point is correct, and compatible with
-previous assemblers.  Rounding is towards zero if the remainder is
-exactly half the least significant bit.
-
-   `D', `F', `G' and `H' floating point formats are understood.
-
-   Immediate floating literals (_e.g._ `S`$6.9') are rendered
-correctly.  Again, rounding is towards zero in the boundary case.
-
-   The `.float' directive produces `f' format numbers.  The `.double'
-directive produces `d' format numbers.
-
-
-File: as.info,  Node: VAX-directives,  Next: VAX-opcodes,  Prev: VAX-float,  Up: Vax-Dependent
-
-8.32.3 Vax Machine Directives
------------------------------
-
-The Vax version of the assembler supports four directives for
-generating Vax floating point constants.  They are described in the
-table below.
-
-`.dfloat'
-     This expects zero or more flonums, separated by commas, and
-     assembles Vax `d' format 64-bit floating point constants.
-
-`.ffloat'
-     This expects zero or more flonums, separated by commas, and
-     assembles Vax `f' format 32-bit floating point constants.
-
-`.gfloat'
-     This expects zero or more flonums, separated by commas, and
-     assembles Vax `g' format 64-bit floating point constants.
-
-`.hfloat'
-     This expects zero or more flonums, separated by commas, and
-     assembles Vax `h' format 128-bit floating point constants.
-
-
-
-File: as.info,  Node: VAX-opcodes,  Next: VAX-branch,  Prev: VAX-directives,  Up: Vax-Dependent
-
-8.32.4 VAX Opcodes
-------------------
-
-All DEC mnemonics are supported.  Beware that `case...' instructions
-have exactly 3 operands.  The dispatch table that follows the `case...'
-instruction should be made with `.word' statements.  This is compatible
-with all unix assemblers we know of.
-
-
-File: as.info,  Node: VAX-branch,  Next: VAX-operands,  Prev: VAX-opcodes,  Up: Vax-Dependent
-
-8.32.5 VAX Branch Improvement
------------------------------
-
-Certain pseudo opcodes are permitted.  They are for branch
-instructions.  They expand to the shortest branch instruction that
-reaches the target.  Generally these mnemonics are made by substituting
-`j' for `b' at the start of a DEC mnemonic.  This feature is included
-both for compatibility and to help compilers.  If you do not need this
-feature, avoid these opcodes.  Here are the mnemonics, and the code
-they can expand into.
-
-`jbsb'
-     `Jsb' is already an instruction mnemonic, so we chose `jbsb'.
-    (byte displacement)
-          `bsbb ...'
-
-    (word displacement)
-          `bsbw ...'
-
-    (long displacement)
-          `jsb ...'
-
-`jbr'
-`jr'
-     Unconditional branch.
-    (byte displacement)
-          `brb ...'
-
-    (word displacement)
-          `brw ...'
-
-    (long displacement)
-          `jmp ...'
-
-`jCOND'
-     COND may be any one of the conditional branches `neq', `nequ',
-     `eql', `eqlu', `gtr', `geq', `lss', `gtru', `lequ', `vc', `vs',
-     `gequ', `cc', `lssu', `cs'.  COND may also be one of the bit tests
-     `bs', `bc', `bss', `bcs', `bsc', `bcc', `bssi', `bcci', `lbs',
-     `lbc'.  NOTCOND is the opposite condition to COND.
-    (byte displacement)
-          `bCOND ...'
-
-    (word displacement)
-          `bNOTCOND foo ; brw ... ; foo:'
-
-    (long displacement)
-          `bNOTCOND foo ; jmp ... ; foo:'
-
-`jacbX'
-     X may be one of `b d f g h l w'.
-    (word displacement)
-          `OPCODE ...'
-
-    (long displacement)
-               OPCODE ..., foo ;
-               brb bar ;
-               foo: jmp ... ;
-               bar:
-
-`jaobYYY'
-     YYY may be one of `lss leq'.
-
-`jsobZZZ'
-     ZZZ may be one of `geq gtr'.
-    (byte displacement)
-          `OPCODE ...'
-
-    (word displacement)
-               OPCODE ..., foo ;
-               brb bar ;
-               foo: brw DESTINATION ;
-               bar:
-
-    (long displacement)
-               OPCODE ..., foo ;
-               brb bar ;
-               foo: jmp DESTINATION ;
-               bar:
-
-`aobleq'
-`aoblss'
-`sobgeq'
-`sobgtr'
-
-    (byte displacement)
-          `OPCODE ...'
-
-    (word displacement)
-               OPCODE ..., foo ;
-               brb bar ;
-               foo: brw DESTINATION ;
-               bar:
-
-    (long displacement)
-               OPCODE ..., foo ;
-               brb bar ;
-               foo: jmp DESTINATION ;
-               bar:
-
-
-File: as.info,  Node: VAX-operands,  Next: VAX-no,  Prev: VAX-branch,  Up: Vax-Dependent
-
-8.32.6 VAX Operands
--------------------
-
-The immediate character is `$' for Unix compatibility, not `#' as DEC
-writes it.
-
-   The indirect character is `*' for Unix compatibility, not `@' as DEC
-writes it.
-
-   The displacement sizing character is ``' (an accent grave) for Unix
-compatibility, not `^' as DEC writes it.  The letter preceding ``' may
-have either case.  `G' is not understood, but all other letters (`b i l
-s w') are understood.
-
-   Register names understood are `r0 r1 r2 ... r15 ap fp sp pc'.  Upper
-and lower case letters are equivalent.
-
-   For instance
-     tstb *w`$4(r5)
-
-   Any expression is permitted in an operand.  Operands are comma
-separated.
-
-
-File: as.info,  Node: VAX-no,  Prev: VAX-operands,  Up: Vax-Dependent
-
-8.32.7 Not Supported on VAX
----------------------------
-
-Vax bit fields can not be assembled with `as'.  Someone can add the
-required code if they really need it.
-
-
-File: as.info,  Node: V850-Dependent,  Next: Xtensa-Dependent,  Prev: TIC54X-Dependent,  Up: Machine Dependencies
-
-8.33 v850 Dependent Features
-============================
-
-* Menu:
-
-* V850 Options::              Options
-* V850 Syntax::               Syntax
-* V850 Floating Point::       Floating Point
-* V850 Directives::           V850 Machine Directives
-* V850 Opcodes::              Opcodes
-
-
-File: as.info,  Node: V850 Options,  Next: V850 Syntax,  Up: V850-Dependent
-
-8.33.1 Options
---------------
-
-`as' supports the following additional command-line options for the
-V850 processor family:
-
-`-wsigned_overflow'
-     Causes warnings to be produced when signed immediate values
-     overflow the space available for then within their opcodes.  By
-     default this option is disabled as it is possible to receive
-     spurious warnings due to using exact bit patterns as immediate
-     constants.
-
-`-wunsigned_overflow'
-     Causes warnings to be produced when unsigned immediate values
-     overflow the space available for then within their opcodes.  By
-     default this option is disabled as it is possible to receive
-     spurious warnings due to using exact bit patterns as immediate
-     constants.
-
-`-mv850'
-     Specifies that the assembled code should be marked as being
-     targeted at the V850 processor.  This allows the linker to detect
-     attempts to link such code with code assembled for other
-     processors.
-
-`-mv850e'
-     Specifies that the assembled code should be marked as being
-     targeted at the V850E processor.  This allows the linker to detect
-     attempts to link such code with code assembled for other
-     processors.
-
-`-mv850e1'
-     Specifies that the assembled code should be marked as being
-     targeted at the V850E1 processor.  This allows the linker to
-     detect attempts to link such code with code assembled for other
-     processors.
-
-`-mv850any'
-     Specifies that the assembled code should be marked as being
-     targeted at the V850 processor but support instructions that are
-     specific to the extended variants of the process.  This allows the
-     production of binaries that contain target specific code, but
-     which are also intended to be used in a generic fashion.  For
-     example libgcc.a contains generic routines used by the code
-     produced by GCC for all versions of the v850 architecture,
-     together with support routines only used by the V850E architecture.
-
-`-mrelax'
-     Enables relaxation.  This allows the .longcall and .longjump pseudo
-     ops to be used in the assembler source code.  These ops label
-     sections of code which are either a long function call or a long
-     branch.  The assembler will then flag these sections of code and
-     the linker will attempt to relax them.
-
-
-
-File: as.info,  Node: V850 Syntax,  Next: V850 Floating Point,  Prev: V850 Options,  Up: V850-Dependent
-
-8.33.2 Syntax
--------------
-
-* Menu:
-
-* V850-Chars::                Special Characters
-* V850-Regs::                 Register Names
-
-
-File: as.info,  Node: V850-Chars,  Next: V850-Regs,  Up: V850 Syntax
-
-8.33.2.1 Special Characters
-...........................
-
-`#' is the line comment character.
-
-
-File: as.info,  Node: V850-Regs,  Prev: V850-Chars,  Up: V850 Syntax
-
-8.33.2.2 Register Names
-.......................
-
-`as' supports the following names for registers:
-`general register 0'
-     r0, zero
-
-`general register 1'
-     r1
-
-`general register 2'
-     r2, hp 
-
-`general register 3'
-     r3, sp 
-
-`general register 4'
-     r4, gp 
-
-`general register 5'
-     r5, tp
-
-`general register 6'
-     r6
-
-`general register 7'
-     r7
-
-`general register 8'
-     r8
-
-`general register 9'
-     r9
-
-`general register 10'
-     r10
-
-`general register 11'
-     r11
-
-`general register 12'
-     r12
-
-`general register 13'
-     r13
-
-`general register 14'
-     r14
-
-`general register 15'
-     r15
-
-`general register 16'
-     r16
-
-`general register 17'
-     r17
-
-`general register 18'
-     r18
-
-`general register 19'
-     r19
-
-`general register 20'
-     r20
-
-`general register 21'
-     r21
-
-`general register 22'
-     r22
-
-`general register 23'
-     r23
-
-`general register 24'
-     r24
-
-`general register 25'
-     r25
-
-`general register 26'
-     r26
-
-`general register 27'
-     r27
-
-`general register 28'
-     r28
-
-`general register 29'
-     r29 
-
-`general register 30'
-     r30, ep 
-
-`general register 31'
-     r31, lp 
-
-`system register 0'
-     eipc 
-
-`system register 1'
-     eipsw 
-
-`system register 2'
-     fepc 
-
-`system register 3'
-     fepsw 
-
-`system register 4'
-     ecr 
-
-`system register 5'
-     psw 
-
-`system register 16'
-     ctpc 
-
-`system register 17'
-     ctpsw 
-
-`system register 18'
-     dbpc 
-
-`system register 19'
-     dbpsw 
-
-`system register 20'
-     ctbp
-
-
-File: as.info,  Node: V850 Floating Point,  Next: V850 Directives,  Prev: V850 Syntax,  Up: V850-Dependent
-
-8.33.3 Floating Point
----------------------
-
-The V850 family uses IEEE floating-point numbers.
-
-
-File: as.info,  Node: V850 Directives,  Next: V850 Opcodes,  Prev: V850 Floating Point,  Up: V850-Dependent
-
-8.33.4 V850 Machine Directives
-------------------------------
-
-`.offset <EXPRESSION>'
-     Moves the offset into the current section to the specified amount.
-
-`.section "name", <type>'
-     This is an extension to the standard .section directive.  It sets
-     the current section to be <type> and creates an alias for this
-     section called "name".
-
-`.v850'
-     Specifies that the assembled code should be marked as being
-     targeted at the V850 processor.  This allows the linker to detect
-     attempts to link such code with code assembled for other
-     processors.
-
-`.v850e'
-     Specifies that the assembled code should be marked as being
-     targeted at the V850E processor.  This allows the linker to detect
-     attempts to link such code with code assembled for other
-     processors.
-
-`.v850e1'
-     Specifies that the assembled code should be marked as being
-     targeted at the V850E1 processor.  This allows the linker to
-     detect attempts to link such code with code assembled for other
-     processors.
-
-
-
-File: as.info,  Node: V850 Opcodes,  Prev: V850 Directives,  Up: V850-Dependent
-
-8.33.5 Opcodes
---------------
-
-`as' implements all the standard V850 opcodes.
-
-   `as' also implements the following pseudo ops:
-
-`hi0()'
-     Computes the higher 16 bits of the given expression and stores it
-     into the immediate operand field of the given instruction.  For
-     example:
-
-     `mulhi hi0(here - there), r5, r6'
-
-     computes the difference between the address of labels 'here' and
-     'there', takes the upper 16 bits of this difference, shifts it
-     down 16 bits and then mutliplies it by the lower 16 bits in
-     register 5, putting the result into register 6.
-
-`lo()'
-     Computes the lower 16 bits of the given expression and stores it
-     into the immediate operand field of the given instruction.  For
-     example:
-
-     `addi lo(here - there), r5, r6'
-
-     computes the difference between the address of labels 'here' and
-     'there', takes the lower 16 bits of this difference and adds it to
-     register 5, putting the result into register 6.
-
-`hi()'
-     Computes the higher 16 bits of the given expression and then adds
-     the value of the most significant bit of the lower 16 bits of the
-     expression and stores the result into the immediate operand field
-     of the given instruction.  For example the following code can be
-     used to compute the address of the label 'here' and store it into
-     register 6:
-
-     `movhi hi(here), r0, r6'     `movea lo(here), r6, r6'
-
-     The reason for this special behaviour is that movea performs a sign
-     extension on its immediate operand.  So for example if the address
-     of 'here' was 0xFFFFFFFF then without the special behaviour of the
-     hi() pseudo-op the movhi instruction would put 0xFFFF0000 into r6,
-     then the movea instruction would takes its immediate operand,
-     0xFFFF, sign extend it to 32 bits, 0xFFFFFFFF, and then add it
-     into r6 giving 0xFFFEFFFF which is wrong (the fifth nibble is E).
-     With the hi() pseudo op adding in the top bit of the lo() pseudo
-     op, the movhi instruction actually stores 0 into r6 (0xFFFF + 1 =
-     0x0000), so that the movea instruction stores 0xFFFFFFFF into r6 -
-     the right value.
-
-`hilo()'
-     Computes the 32 bit value of the given expression and stores it
-     into the immediate operand field of the given instruction (which
-     must be a mov instruction).  For example:
-
-     `mov hilo(here), r6'
-
-     computes the absolute address of label 'here' and puts the result
-     into register 6.
-
-`sdaoff()'
-     Computes the offset of the named variable from the start of the
-     Small Data Area (whoes address is held in register 4, the GP
-     register) and stores the result as a 16 bit signed value in the
-     immediate operand field of the given instruction.  For example:
-
-     `ld.w sdaoff(_a_variable)[gp],r6'
-
-     loads the contents of the location pointed to by the label
-     '_a_variable' into register 6, provided that the label is located
-     somewhere within +/- 32K of the address held in the GP register.
-     [Note the linker assumes that the GP register contains a fixed
-     address set to the address of the label called '__gp'.  This can
-     either be set up automatically by the linker, or specifically set
-     by using the `--defsym __gp=<value>' command line option].
-
-`tdaoff()'
-     Computes the offset of the named variable from the start of the
-     Tiny Data Area (whoes address is held in register 30, the EP
-     register) and stores the result as a 4,5, 7 or 8 bit unsigned
-     value in the immediate operand field of the given instruction.
-     For example:
-
-     `sld.w tdaoff(_a_variable)[ep],r6'
-
-     loads the contents of the location pointed to by the label
-     '_a_variable' into register 6, provided that the label is located
-     somewhere within +256 bytes of the address held in the EP
-     register.  [Note the linker assumes that the EP register contains
-     a fixed address set to the address of the label called '__ep'.
-     This can either be set up automatically by the linker, or
-     specifically set by using the `--defsym __ep=<value>' command line
-     option].
-
-`zdaoff()'
-     Computes the offset of the named variable from address 0 and
-     stores the result as a 16 bit signed value in the immediate
-     operand field of the given instruction.  For example:
-
-     `movea zdaoff(_a_variable),zero,r6'
-
-     puts the address of the label '_a_variable' into register 6,
-     assuming that the label is somewhere within the first 32K of
-     memory.  (Strictly speaking it also possible to access the last
-     32K of memory as well, as the offsets are signed).
-
-`ctoff()'
-     Computes the offset of the named variable from the start of the
-     Call Table Area (whoes address is helg in system register 20, the
-     CTBP register) and stores the result a 6 or 16 bit unsigned value
-     in the immediate field of then given instruction or piece of data.
-     For example:
-
-     `callt ctoff(table_func1)'
-
-     will put the call the function whoes address is held in the call
-     table at the location labeled 'table_func1'.
-
-`.longcall `name''
-     Indicates that the following sequence of instructions is a long
-     call to function `name'.  The linker will attempt to shorten this
-     call sequence if `name' is within a 22bit offset of the call.  Only
-     valid if the `-mrelax' command line switch has been enabled.
-
-`.longjump `name''
-     Indicates that the following sequence of instructions is a long
-     jump to label `name'.  The linker will attempt to shorten this code
-     sequence if `name' is within a 22bit offset of the jump.  Only
-     valid if the `-mrelax' command line switch has been enabled.
-
-
-   For information on the V850 instruction set, see `V850 Family
-32-/16-Bit single-Chip Microcontroller Architecture Manual' from NEC.
-Ltd.
-
-
-File: as.info,  Node: Xtensa-Dependent,  Next: Z8000-Dependent,  Prev: V850-Dependent,  Up: Machine Dependencies
-
-8.34 Xtensa Dependent Features
-==============================
-
-   This chapter covers features of the GNU assembler that are specific
-to the Xtensa architecture.  For details about the Xtensa instruction
-set, please consult the `Xtensa Instruction Set Architecture (ISA)
-Reference Manual'.
-
-* Menu:
-
-* Xtensa Options::              Command-line Options.
-* Xtensa Syntax::               Assembler Syntax for Xtensa Processors.
-* Xtensa Optimizations::        Assembler Optimizations.
-* Xtensa Relaxation::           Other Automatic Transformations.
-* Xtensa Directives::           Directives for Xtensa Processors.
-
-
-File: as.info,  Node: Xtensa Options,  Next: Xtensa Syntax,  Up: Xtensa-Dependent
-
-8.34.1 Command Line Options
----------------------------
-
-The Xtensa version of the GNU assembler supports these special options:
-
-`--text-section-literals | --no-text-section-literals'
-     Control the treatment of literal pools.  The default is
-     `--no-text-section-literals', which places literals in a separate
-     section in the output file.  This allows the literal pool to be
-     placed in a data RAM/ROM.  With `--text-section-literals', the
-     literals are interspersed in the text section in order to keep
-     them as close as possible to their references.  This may be
-     necessary for large assembly files, where the literals would
-     otherwise be out of range of the `L32R' instructions in the text
-     section.  These options only affect literals referenced via
-     PC-relative `L32R' instructions; literals for absolute mode `L32R'
-     instructions are handled separately.
-
-`--absolute-literals | --no-absolute-literals'
-     Indicate to the assembler whether `L32R' instructions use absolute
-     or PC-relative addressing.  If the processor includes the absolute
-     addressing option, the default is to use absolute `L32R'
-     relocations.  Otherwise, only the PC-relative `L32R' relocations
-     can be used.
-
-`--target-align | --no-target-align'
-     Enable or disable automatic alignment to reduce branch penalties
-     at some expense in code size.  *Note Automatic Instruction
-     Alignment: Xtensa Automatic Alignment.  This optimization is
-     enabled by default.  Note that the assembler will always align
-     instructions like `LOOP' that have fixed alignment requirements.
-
-`--longcalls | --no-longcalls'
-     Enable or disable transformation of call instructions to allow
-     calls across a greater range of addresses.  *Note Function Call
-     Relaxation: Xtensa Call Relaxation.  This option should be used
-     when call targets can potentially be out of range.  It may degrade
-     both code size and performance, but the linker can generally
-     optimize away the unnecessary overhead when a call ends up within
-     range.  The default is `--no-longcalls'.
-
-`--transform | --no-transform'
-     Enable or disable all assembler transformations of Xtensa
-     instructions, including both relaxation and optimization.  The
-     default is `--transform'; `--no-transform' should only be used in
-     the rare cases when the instructions must be exactly as specified
-     in the assembly source.  Using `--no-transform' causes out of range
-     instruction operands to be errors.
-
-`--rename-section OLDNAME=NEWNAME'
-     Rename the OLDNAME section to NEWNAME.  This option can be used
-     multiple times to rename multiple sections.
-
-
-File: as.info,  Node: Xtensa Syntax,  Next: Xtensa Optimizations,  Prev: Xtensa Options,  Up: Xtensa-Dependent
-
-8.34.2 Assembler Syntax
------------------------
-
-Block comments are delimited by `/*' and `*/'.  End of line comments
-may be introduced with either `#' or `//'.
-
-   Instructions consist of a leading opcode or macro name followed by
-whitespace and an optional comma-separated list of operands:
-
-     OPCODE [OPERAND, ...]
-
-   Instructions must be separated by a newline or semicolon.
-
-   FLIX instructions, which bundle multiple opcodes together in a single
-instruction, are specified by enclosing the bundled opcodes inside
-braces:
-
-     {
-     [FORMAT]
-     OPCODE0 [OPERANDS]
-     OPCODE1 [OPERANDS]
-     OPCODE2 [OPERANDS]
-     ...
-     }
-
-   The opcodes in a FLIX instruction are listed in the same order as the
-corresponding instruction slots in the TIE format declaration.
-Directives and labels are not allowed inside the braces of a FLIX
-instruction.  A particular TIE format name can optionally be specified
-immediately after the opening brace, but this is usually unnecessary.
-The assembler will automatically search for a format that can encode the
-specified opcodes, so the format name need only be specified in rare
-cases where there is more than one applicable format and where it
-matters which of those formats is used.  A FLIX instruction can also be
-specified on a single line by separating the opcodes with semicolons:
-
-     { [FORMAT;] OPCODE0 [OPERANDS]; OPCODE1 [OPERANDS]; OPCODE2 [OPERANDS]; ... }
-
-   The assembler can automatically bundle opcodes into FLIX
-instructions.  It encodes the opcodes in order, one at a time, choosing
-the smallest format where each opcode can be encoded and filling unused
-instruction slots with no-ops.
-
-* Menu:
-
-* Xtensa Opcodes::              Opcode Naming Conventions.
-* Xtensa Registers::            Register Naming.
-
-
-File: as.info,  Node: Xtensa Opcodes,  Next: Xtensa Registers,  Up: Xtensa Syntax
-
-8.34.2.1 Opcode Names
-.....................
-
-See the `Xtensa Instruction Set Architecture (ISA) Reference Manual'
-for a complete list of opcodes and descriptions of their semantics.
-
-   If an opcode name is prefixed with an underscore character (`_'),
-`as' will not transform that instruction in any way.  The underscore
-prefix disables both optimization (*note Xtensa Optimizations: Xtensa
-Optimizations.) and relaxation (*note Xtensa Relaxation: Xtensa
-Relaxation.) for that particular instruction.  Only use the underscore
-prefix when it is essential to select the exact opcode produced by the
-assembler.  Using this feature unnecessarily makes the code less
-efficient by disabling assembler optimization and less flexible by
-disabling relaxation.
-
-   Note that this special handling of underscore prefixes only applies
-to Xtensa opcodes, not to either built-in macros or user-defined macros.
-When an underscore prefix is used with a macro (e.g., `_MOV'), it
-refers to a different macro.  The assembler generally provides built-in
-macros both with and without the underscore prefix, where the underscore
-versions behave as if the underscore carries through to the instructions
-in the macros.  For example, `_MOV' may expand to `_MOV.N'.
-
-   The underscore prefix only applies to individual instructions, not to
-series of instructions.  For example, if a series of instructions have
-underscore prefixes, the assembler will not transform the individual
-instructions, but it may insert other instructions between them (e.g.,
-to align a `LOOP' instruction).  To prevent the assembler from
-modifying a series of instructions as a whole, use the `no-transform'
-directive.  *Note transform: Transform Directive.
-
-
-File: as.info,  Node: Xtensa Registers,  Prev: Xtensa Opcodes,  Up: Xtensa Syntax
-
-8.34.2.2 Register Names
-.......................
-
-The assembly syntax for a register file entry is the "short" name for a
-TIE register file followed by the index into that register file.  For
-example, the general-purpose `AR' register file has a short name of
-`a', so these registers are named `a0'...`a15'.  As a special feature,
-`sp' is also supported as a synonym for `a1'.  Additional registers may
-be added by processor configuration options and by designer-defined TIE
-extensions.  An initial `$' character is optional in all register names.
-
-
-File: as.info,  Node: Xtensa Optimizations,  Next: Xtensa Relaxation,  Prev: Xtensa Syntax,  Up: Xtensa-Dependent
-
-8.34.3 Xtensa Optimizations
----------------------------
-
-The optimizations currently supported by `as' are generation of density
-instructions where appropriate and automatic branch target alignment.
-
-* Menu:
-
-* Density Instructions::        Using Density Instructions.
-* Xtensa Automatic Alignment::  Automatic Instruction Alignment.
-
-
-File: as.info,  Node: Density Instructions,  Next: Xtensa Automatic Alignment,  Up: Xtensa Optimizations
-
-8.34.3.1 Using Density Instructions
-...................................
-
-The Xtensa instruction set has a code density option that provides
-16-bit versions of some of the most commonly used opcodes.  Use of these
-opcodes can significantly reduce code size.  When possible, the
-assembler automatically translates instructions from the core Xtensa
-instruction set into equivalent instructions from the Xtensa code
-density option.  This translation can be disabled by using underscore
-prefixes (*note Opcode Names: Xtensa Opcodes.), by using the
-`--no-transform' command-line option (*note Command Line Options:
-Xtensa Options.), or by using the `no-transform' directive (*note
-transform: Transform Directive.).
-
-   It is a good idea _not_ to use the density instructions directly.
-The assembler will automatically select dense instructions where
-possible.  If you later need to use an Xtensa processor without the code
-density option, the same assembly code will then work without
-modification.
-
-
-File: as.info,  Node: Xtensa Automatic Alignment,  Prev: Density Instructions,  Up: Xtensa Optimizations
-
-8.34.3.2 Automatic Instruction Alignment
-........................................
-
-The Xtensa assembler will automatically align certain instructions, both
-to optimize performance and to satisfy architectural requirements.
-
-   As an optimization to improve performance, the assembler attempts to
-align branch targets so they do not cross instruction fetch boundaries.
-(Xtensa processors can be configured with either 32-bit or 64-bit
-instruction fetch widths.)  An instruction immediately following a call
-is treated as a branch target in this context, because it will be the
-target of a return from the call.  This alignment has the potential to
-reduce branch penalties at some expense in code size.  The assembler
-will not attempt to align labels with the prefixes `.Ln' and `.LM',
-since these labels are used for debugging information and are not
-typically branch targets.  This optimization is enabled by default.
-You can disable it with the `--no-target-align' command-line option
-(*note Command Line Options: Xtensa Options.).
-
-   The target alignment optimization is done without adding instructions
-that could increase the execution time of the program.  If there are
-density instructions in the code preceding a target, the assembler can
-change the target alignment by widening some of those instructions to
-the equivalent 24-bit instructions.  Extra bytes of padding can be
-inserted immediately following unconditional jump and return
-instructions.  This approach is usually successful in aligning many,
-but not all, branch targets.
-
-   The `LOOP' family of instructions must be aligned such that the
-first instruction in the loop body does not cross an instruction fetch
-boundary (e.g., with a 32-bit fetch width, a `LOOP' instruction must be
-on either a 1 or 2 mod 4 byte boundary).  The assembler knows about
-this restriction and inserts the minimal number of 2 or 3 byte no-op
-instructions to satisfy it.  When no-op instructions are added, any
-label immediately preceding the original loop will be moved in order to
-refer to the loop instruction, not the newly generated no-op
-instruction.  To preserve binary compatibility across processors with
-different fetch widths, the assembler conservatively assumes a 32-bit
-fetch width when aligning `LOOP' instructions (except if the first
-instruction in the loop is a 64-bit instruction).
-
-   Similarly, the `ENTRY' instruction must be aligned on a 0 mod 4 byte
-boundary.  The assembler satisfies this requirement by inserting zero
-bytes when required.  In addition, labels immediately preceding the
-`ENTRY' instruction will be moved to the newly aligned instruction
-location.
-
-
-File: as.info,  Node: Xtensa Relaxation,  Next: Xtensa Directives,  Prev: Xtensa Optimizations,  Up: Xtensa-Dependent
-
-8.34.4 Xtensa Relaxation
-------------------------
-
-When an instruction operand is outside the range allowed for that
-particular instruction field, `as' can transform the code to use a
-functionally-equivalent instruction or sequence of instructions.  This
-process is known as "relaxation".  This is typically done for branch
-instructions because the distance of the branch targets is not known
-until assembly-time.  The Xtensa assembler offers branch relaxation and
-also extends this concept to function calls, `MOVI' instructions and
-other instructions with immediate fields.
-
-* Menu:
-
-* Xtensa Branch Relaxation::        Relaxation of Branches.
-* Xtensa Call Relaxation::          Relaxation of Function Calls.
-* Xtensa Immediate Relaxation::     Relaxation of other Immediate Fields.
-
-
-File: as.info,  Node: Xtensa Branch Relaxation,  Next: Xtensa Call Relaxation,  Up: Xtensa Relaxation
-
-8.34.4.1 Conditional Branch Relaxation
-......................................
-
-When the target of a branch is too far away from the branch itself,
-i.e., when the offset from the branch to the target is too large to fit
-in the immediate field of the branch instruction, it may be necessary to
-replace the branch with a branch around a jump.  For example,
-
-         beqz    a2, L
-
-   may result in:
-
-         bnez.n  a2, M
-         j L
-     M:
-
-   (The `BNEZ.N' instruction would be used in this example only if the
-density option is available.  Otherwise, `BNEZ' would be used.)
-
-   This relaxation works well because the unconditional jump instruction
-has a much larger offset range than the various conditional branches.
-However, an error will occur if a branch target is beyond the range of a
-jump instruction.  `as' cannot relax unconditional jumps.  Similarly,
-an error will occur if the original input contains an unconditional
-jump to a target that is out of range.
-
-   Branch relaxation is enabled by default.  It can be disabled by using
-underscore prefixes (*note Opcode Names: Xtensa Opcodes.), the
-`--no-transform' command-line option (*note Command Line Options:
-Xtensa Options.), or the `no-transform' directive (*note transform:
-Transform Directive.).
-
-
-File: as.info,  Node: Xtensa Call Relaxation,  Next: Xtensa Immediate Relaxation,  Prev: Xtensa Branch Relaxation,  Up: Xtensa Relaxation
-
-8.34.4.2 Function Call Relaxation
-.................................
-
-Function calls may require relaxation because the Xtensa immediate call
-instructions (`CALL0', `CALL4', `CALL8' and `CALL12') provide a
-PC-relative offset of only 512 Kbytes in either direction.  For larger
-programs, it may be necessary to use indirect calls (`CALLX0',
-`CALLX4', `CALLX8' and `CALLX12') where the target address is specified
-in a register.  The Xtensa assembler can automatically relax immediate
-call instructions into indirect call instructions.  This relaxation is
-done by loading the address of the called function into the callee's
-return address register and then using a `CALLX' instruction.  So, for
-example:
-
-         call8 func
-
-   might be relaxed to:
-
-         .literal .L1, func
-         l32r    a8, .L1
-         callx8  a8
-
-   Because the addresses of targets of function calls are not generally
-known until link-time, the assembler must assume the worst and relax all
-the calls to functions in other source files, not just those that really
-will be out of range.  The linker can recognize calls that were
-unnecessarily relaxed, and it will remove the overhead introduced by the
-assembler for those cases where direct calls are sufficient.
-
-   Call relaxation is disabled by default because it can have a negative
-effect on both code size and performance, although the linker can
-usually eliminate the unnecessary overhead.  If a program is too large
-and some of the calls are out of range, function call relaxation can be
-enabled using the `--longcalls' command-line option or the `longcalls'
-directive (*note longcalls: Longcalls Directive.).
-
-
-File: as.info,  Node: Xtensa Immediate Relaxation,  Prev: Xtensa Call Relaxation,  Up: Xtensa Relaxation
-
-8.34.4.3 Other Immediate Field Relaxation
-.........................................
-
-The assembler normally performs the following other relaxations.  They
-can be disabled by using underscore prefixes (*note Opcode Names:
-Xtensa Opcodes.), the `--no-transform' command-line option (*note
-Command Line Options: Xtensa Options.), or the `no-transform' directive
-(*note transform: Transform Directive.).
-
-   The `MOVI' machine instruction can only materialize values in the
-range from -2048 to 2047.  Values outside this range are best
-materialized with `L32R' instructions.  Thus:
-
-         movi a0, 100000
-
-   is assembled into the following machine code:
-
-         .literal .L1, 100000
-         l32r a0, .L1
-
-   The `L8UI' machine instruction can only be used with immediate
-offsets in the range from 0 to 255. The `L16SI' and `L16UI' machine
-instructions can only be used with offsets from 0 to 510.  The `L32I'
-machine instruction can only be used with offsets from 0 to 1020.  A
-load offset outside these ranges can be materalized with an `L32R'
-instruction if the destination register of the load is different than
-the source address register.  For example:
-
-         l32i a1, a0, 2040
-
-   is translated to:
-
-         .literal .L1, 2040
-         l32r a1, .L1
-         addi a1, a0, a1
-         l32i a1, a1, 0
-
-If the load destination and source address register are the same, an
-out-of-range offset causes an error.
-
-   The Xtensa `ADDI' instruction only allows immediate operands in the
-range from -128 to 127.  There are a number of alternate instruction
-sequences for the `ADDI' operation.  First, if the immediate is 0, the
-`ADDI' will be turned into a `MOV.N' instruction (or the equivalent
-`OR' instruction if the code density option is not available).  If the
-`ADDI' immediate is outside of the range -128 to 127, but inside the
-range -32896 to 32639, an `ADDMI' instruction or `ADDMI'/`ADDI'
-sequence will be used.  Finally, if the immediate is outside of this
-range and a free register is available, an `L32R'/`ADD' sequence will
-be used with a literal allocated from the literal pool.
-
-   For example:
-
-         addi    a5, a6, 0
-         addi    a5, a6, 512
-         addi    a5, a6, 513
-         addi    a5, a6, 50000
-
-   is assembled into the following:
-
-         .literal .L1, 50000
-         mov.n   a5, a6
-         addmi   a5, a6, 0x200
-         addmi   a5, a6, 0x200
-         addi    a5, a5, 1
-         l32r    a5, .L1
-         add     a5, a6, a5
-
-
-File: as.info,  Node: Xtensa Directives,  Prev: Xtensa Relaxation,  Up: Xtensa-Dependent
-
-8.34.5 Directives
------------------
-
-The Xtensa assember supports a region-based directive syntax:
-
-         .begin DIRECTIVE [OPTIONS]
-         ...
-         .end DIRECTIVE
-
-   All the Xtensa-specific directives that apply to a region of code use
-this syntax.
-
-   The directive applies to code between the `.begin' and the `.end'.
-The state of the option after the `.end' reverts to what it was before
-the `.begin'.  A nested `.begin'/`.end' region can further change the
-state of the directive without having to be aware of its outer state.
-For example, consider:
-
-         .begin no-transform
-     L:  add a0, a1, a2
-         .begin transform
-     M:  add a0, a1, a2
-         .end transform
-     N:  add a0, a1, a2
-         .end no-transform
-
-   The `ADD' opcodes at `L' and `N' in the outer `no-transform' region
-both result in `ADD' machine instructions, but the assembler selects an
-`ADD.N' instruction for the `ADD' at `M' in the inner `transform'
-region.
-
-   The advantage of this style is that it works well inside macros
-which can preserve the context of their callers.
-
-   The following directives are available:
-
-* Menu:
-
-* Schedule Directive::         Enable instruction scheduling.
-* Longcalls Directive::        Use Indirect Calls for Greater Range.
-* Transform Directive::        Disable All Assembler Transformations.
-* Literal Directive::          Intermix Literals with Instructions.
-* Literal Position Directive:: Specify Inline Literal Pool Locations.
-* Literal Prefix Directive::   Specify Literal Section Name Prefix.
-* Absolute Literals Directive:: Control PC-Relative vs. Absolute Literals.
-
-
-File: as.info,  Node: Schedule Directive,  Next: Longcalls Directive,  Up: Xtensa Directives
-
-8.34.5.1 schedule
-.................
-
-The `schedule' directive is recognized only for compatibility with
-Tensilica's assembler.
-
-         .begin [no-]schedule
-         .end [no-]schedule
-
-   This directive is ignored and has no effect on `as'.
-
-
-File: as.info,  Node: Longcalls Directive,  Next: Transform Directive,  Prev: Schedule Directive,  Up: Xtensa Directives
-
-8.34.5.2 longcalls
-..................
-
-The `longcalls' directive enables or disables function call relaxation.
-*Note Function Call Relaxation: Xtensa Call Relaxation.
-
-         .begin [no-]longcalls
-         .end [no-]longcalls
-
-   Call relaxation is disabled by default unless the `--longcalls'
-command-line option is specified.  The `longcalls' directive overrides
-the default determined by the command-line options.
-
-
-File: as.info,  Node: Transform Directive,  Next: Literal Directive,  Prev: Longcalls Directive,  Up: Xtensa Directives
-
-8.34.5.3 transform
-..................
-
-This directive enables or disables all assembler transformation,
-including relaxation (*note Xtensa Relaxation: Xtensa Relaxation.) and
-optimization (*note Xtensa Optimizations: Xtensa Optimizations.).
-
-         .begin [no-]transform
-         .end [no-]transform
-
-   Transformations are enabled by default unless the `--no-transform'
-option is used.  The `transform' directive overrides the default
-determined by the command-line options.  An underscore opcode prefix,
-disabling transformation of that opcode, always takes precedence over
-both directives and command-line flags.
-
-
-File: as.info,  Node: Literal Directive,  Next: Literal Position Directive,  Prev: Transform Directive,  Up: Xtensa Directives
-
-8.34.5.4 literal
-................
-
-The `.literal' directive is used to define literal pool data, i.e.,
-read-only 32-bit data accessed via `L32R' instructions.
-
-         .literal LABEL, VALUE[, VALUE...]
-
-   This directive is similar to the standard `.word' directive, except
-that the actual location of the literal data is determined by the
-assembler and linker, not by the position of the `.literal' directive.
-Using this directive gives the assembler freedom to locate the literal
-data in the most appropriate place and possibly to combine identical
-literals.  For example, the code:
-
-         entry sp, 40
-         .literal .L1, sym
-         l32r    a4, .L1
-
-   can be used to load a pointer to the symbol `sym' into register
-`a4'.  The value of `sym' will not be placed between the `ENTRY' and
-`L32R' instructions; instead, the assembler puts the data in a literal
-pool.
-
-   Literal pools for absolute mode `L32R' instructions (*note Absolute
-Literals Directive::) are placed in a seperate `.lit4' section.  By
-default literal pools for PC-relative mode `L32R' instructions are
-placed in a separate `.literal' section; however, when using the
-`--text-section-literals' option (*note Command Line Options: Xtensa
-Options.), the literal pools are placed in the current section.  These
-text section literal pools are created automatically before `ENTRY'
-instructions and manually after `.literal_position' directives (*note
-literal_position: Literal Position Directive.).  If there are no
-preceding `ENTRY' instructions, explicit `.literal_position' directives
-must be used to place the text section literal pools; otherwise, `as'
-will report an error.
-
-
-File: as.info,  Node: Literal Position Directive,  Next: Literal Prefix Directive,  Prev: Literal Directive,  Up: Xtensa Directives
-
-8.34.5.5 literal_position
-.........................
-
-When using `--text-section-literals' to place literals inline in the
-section being assembled, the `.literal_position' directive can be used
-to mark a potential location for a literal pool.
-
-         .literal_position
-
-   The `.literal_position' directive is ignored when the
-`--text-section-literals' option is not used or when `L32R'
-instructions use the absolute addressing mode.
-
-   The assembler will automatically place text section literal pools
-before `ENTRY' instructions, so the `.literal_position' directive is
-only needed to specify some other location for a literal pool.  You may
-need to add an explicit jump instruction to skip over an inline literal
-pool.
-
-   For example, an interrupt vector does not begin with an `ENTRY'
-instruction so the assembler will be unable to automatically find a good
-place to put a literal pool.  Moreover, the code for the interrupt
-vector must be at a specific starting address, so the literal pool
-cannot come before the start of the code.  The literal pool for the
-vector must be explicitly positioned in the middle of the vector (before
-any uses of the literals, due to the negative offsets used by
-PC-relative `L32R' instructions).  The `.literal_position' directive
-can be used to do this.  In the following code, the literal for `M'
-will automatically be aligned correctly and is placed after the
-unconditional jump.
-
-         .global M
-     code_start:
-         j continue
-         .literal_position
-         .align 4
-     continue:
-         movi    a4, M
-
-
-File: as.info,  Node: Literal Prefix Directive,  Next: Absolute Literals Directive,  Prev: Literal Position Directive,  Up: Xtensa Directives
-
-8.34.5.6 literal_prefix
-.......................
-
-The `literal_prefix' directive allows you to specify different sections
-to hold literals from different portions of an assembly file.  With
-this directive, a single assembly file can be used to generate code
-into multiple sections, including literals generated by the assembler.
-
-         .begin literal_prefix [NAME]
-         .end literal_prefix
-
-   By default the assembler places literal pools in sections separate
-from the instructions, using the default literal section names of
-`.literal' for PC-relative mode `L32R' instructions and `.lit4' for
-absolute mode `L32R' instructions (*note Absolute Literals
-Directive::).  The `literal_prefix' directive causes different literal
-sections to be used for the code inside the delimited region.  The new
-literal sections are determined by including NAME as a prefix to the
-default literal section names.  If the NAME argument is omitted, the
-literal sections revert to the defaults.  This directive has no effect
-when using the `--text-section-literals' option (*note Command Line
-Options: Xtensa Options.).
-
-   Except for two special cases, the assembler determines the new
-literal sections by simply prepending NAME to the default section names,
-resulting in `NAME.literal' and `NAME.lit4' sections.  The
-`literal_prefix' directive is often used with the name of the current
-text section as the prefix argument.  To facilitate this usage, the
-assembler uses special case rules when it recognizes NAME as a text
-section name.  First, if NAME ends with `.text', that suffix is not
-included in the literal section name.  For example, if NAME is
-`.iram0.text', then the literal sections will be `.iram0.literal' and
-`.iram0.lit4'.  Second, if NAME begins with `.gnu.linkonce.t.', then
-the literal section names are formed by replacing the `.t' substring
-with `.literal' and `.lit4'.  For example, if NAME is
-`.gnu.linkonce.t.func', the literal sections will be
-`.gnu.linkonce.literal.func' and `.gnu.linkonce.lit4.func'.
-
-
-File: as.info,  Node: Absolute Literals Directive,  Prev: Literal Prefix Directive,  Up: Xtensa Directives
-
-8.34.5.7 absolute-literals
-..........................
-
-The `absolute-literals' and `no-absolute-literals' directives control
-the absolute vs. PC-relative mode for `L32R' instructions.  These are
-relevant only for Xtensa configurations that include the absolute
-addressing option for `L32R' instructions.
-
-         .begin [no-]absolute-literals
-         .end [no-]absolute-literals
-
-   These directives do not change the `L32R' mode--they only cause the
-assembler to emit the appropriate kind of relocation for `L32R'
-instructions and to place the literal values in the appropriate section.
-To change the `L32R' mode, the program must write the `LITBASE' special
-register.  It is the programmer's responsibility to keep track of the
-mode and indicate to the assembler which mode is used in each region of
-code.
-
-   If the Xtensa configuration includes the absolute `L32R' addressing
-option, the default is to assume absolute `L32R' addressing unless the
-`--no-absolute-literals' command-line option is specified.  Otherwise,
-the default is to assume PC-relative `L32R' addressing.  The
-`absolute-literals' directive can then be used to override the default
-determined by the command-line options.
-
-
-File: as.info,  Node: Reporting Bugs,  Next: Acknowledgements,  Prev: Machine Dependencies,  Up: Top
-
-9 Reporting Bugs
-****************
-
-Your bug reports play an essential role in making `as' reliable.
-
-   Reporting a bug may help you by bringing a solution to your problem,
-or it may not.  But in any case the principal function of a bug report
-is to help the entire community by making the next version of `as' work
-better.  Bug reports are your contribution to the maintenance of `as'.
-
-   In order for a bug report to serve its purpose, you must include the
-information that enables us to fix the bug.
-
-* Menu:
-
-* Bug Criteria::                Have you found a bug?
-* Bug Reporting::               How to report bugs
-
-
-File: as.info,  Node: Bug Criteria,  Next: Bug Reporting,  Up: Reporting Bugs
-
-9.1 Have You Found a Bug?
-=========================
-
-If you are not sure whether you have found a bug, here are some
-guidelines:
-
-   * If the assembler gets a fatal signal, for any input whatever, that
-     is a `as' bug.  Reliable assemblers never crash.
-
-   * If `as' produces an error message for valid input, that is a bug.
-
-   * If `as' does not produce an error message for invalid input, that
-     is a bug.  However, you should note that your idea of "invalid
-     input" might be our idea of "an extension" or "support for
-     traditional practice".
-
-   * If you are an experienced user of assemblers, your suggestions for
-     improvement of `as' are welcome in any case.
-
-
-File: as.info,  Node: Bug Reporting,  Prev: Bug Criteria,  Up: Reporting Bugs
-
-9.2 How to Report Bugs
-======================
-
-A number of companies and individuals offer support for GNU products.
-If you obtained `as' from a support organization, we recommend you
-contact that organization first.
-
-   You can find contact information for many support companies and
-individuals in the file `etc/SERVICE' in the GNU Emacs distribution.
-
-   In any event, we also recommend that you send bug reports for `as'
-to `bug-binutils@gnu.org'.
-
-   The fundamental principle of reporting bugs usefully is this:
-*report all the facts*.  If you are not sure whether to state a fact or
-leave it out, state it!
-
-   Often people omit facts because they think they know what causes the
-problem and assume that some details do not matter.  Thus, you might
-assume that the name of a symbol you use in an example does not matter.
-Well, probably it does not, but one cannot be sure.  Perhaps the bug
-is a stray memory reference which happens to fetch from the location
-where that name is stored in memory; perhaps, if the name were
-different, the contents of that location would fool the assembler into
-doing the right thing despite the bug.  Play it safe and give a
-specific, complete example.  That is the easiest thing for you to do,
-and the most helpful.
-
-   Keep in mind that the purpose of a bug report is to enable us to fix
-the bug if it is new to us.  Therefore, always write your bug reports
-on the assumption that the bug has not been reported previously.
-
-   Sometimes people give a few sketchy facts and ask, "Does this ring a
-bell?"  This cannot help us fix a bug, so it is basically useless.  We
-respond by asking for enough details to enable us to investigate.  You
-might as well expedite matters by sending them to begin with.
-
-   To enable us to fix the bug, you should include all these things:
-
-   * The version of `as'.  `as' announces it if you start it with the
-     `--version' argument.
-
-     Without this, we will not know whether there is any point in
-     looking for the bug in the current version of `as'.
-
-   * Any patches you may have applied to the `as' source.
-
-   * The type of machine you are using, and the operating system name
-     and version number.
-
-   * What compiler (and its version) was used to compile `as'--e.g.
-     "`gcc-2.7'".
-
-   * The command arguments you gave the assembler to assemble your
-     example and observe the bug.  To guarantee you will not omit
-     something important, list them all.  A copy of the Makefile (or
-     the output from make) is sufficient.
-
-     If we were to try to guess the arguments, we would probably guess
-     wrong and then we might not encounter the bug.
-
-   * A complete input file that will reproduce the bug.  If the bug is
-     observed when the assembler is invoked via a compiler, send the
-     assembler source, not the high level language source.  Most
-     compilers will produce the assembler source when run with the `-S'
-     option.  If you are using `gcc', use the options `-v
-     --save-temps'; this will save the assembler source in a file with
-     an extension of `.s', and also show you exactly how `as' is being
-     run.
-
-   * A description of what behavior you observe that you believe is
-     incorrect.  For example, "It gets a fatal signal."
-
-     Of course, if the bug is that `as' gets a fatal signal, then we
-     will certainly notice it.  But if the bug is incorrect output, we
-     might not notice unless it is glaringly wrong.  You might as well
-     not give us a chance to make a mistake.
-
-     Even if the problem you experience is a fatal signal, you should
-     still say so explicitly.  Suppose something strange is going on,
-     such as, your copy of `as' is out of synch, or you have
-     encountered a bug in the C library on your system.  (This has
-     happened!)  Your copy might crash and ours would not.  If you told
-     us to expect a crash, then when ours fails to crash, we would know
-     that the bug was not happening for us.  If you had not told us to
-     expect a crash, then we would not be able to draw any conclusion
-     from our observations.
-
-   * If you wish to suggest changes to the `as' source, send us context
-     diffs, as generated by `diff' with the `-u', `-c', or `-p' option.
-     Always send diffs from the old file to the new file.  If you even
-     discuss something in the `as' source, refer to it by context, not
-     by line number.
-
-     The line numbers in our development sources will not match those
-     in your sources.  Your line numbers would convey no useful
-     information to us.
-
-   Here are some things that are not necessary:
-
-   * A description of the envelope of the bug.
-
-     Often people who encounter a bug spend a lot of time investigating
-     which changes to the input file will make the bug go away and which
-     changes will not affect it.
-
-     This is often time consuming and not very useful, because the way
-     we will find the bug is by running a single example under the
-     debugger with breakpoints, not by pure deduction from a series of
-     examples.  We recommend that you save your time for something else.
-
-     Of course, if you can find a simpler example to report _instead_
-     of the original one, that is a convenience for us.  Errors in the
-     output will be easier to spot, running under the debugger will take
-     less time, and so on.
-
-     However, simplification is not vital; if you do not want to do
-     this, report the bug anyway and send us the entire test case you
-     used.
-
-   * A patch for the bug.
-
-     A patch for the bug does help us if it is a good one.  But do not
-     omit the necessary information, such as the test case, on the
-     assumption that a patch is all we need.  We might see problems
-     with your patch and decide to fix the problem another way, or we
-     might not understand it at all.
-
-     Sometimes with a program as complicated as `as' it is very hard to
-     construct an example that will make the program follow a certain
-     path through the code.  If you do not send us the example, we will
-     not be able to construct one, so we will not be able to verify
-     that the bug is fixed.
-
-     And if we cannot understand what bug you are trying to fix, or why
-     your patch should be an improvement, we will not install it.  A
-     test case will help us to understand.
-
-   * A guess about what the bug is or what it depends on.
-
-     Such guesses are usually wrong.  Even we cannot guess right about
-     such things without first using the debugger to find the facts.
-
-
-File: as.info,  Node: Acknowledgements,  Next: GNU Free Documentation License,  Prev: Reporting Bugs,  Up: Top
-
-10 Acknowledgements
-*******************
-
-If you have contributed to GAS and your name isn't listed here, it is
-not meant as a slight.  We just don't know about it.  Send mail to the
-maintainer, and we'll correct the situation.  Currently the maintainer
-is Ken Raeburn (email address `raeburn@cygnus.com').
-
-   Dean Elsner wrote the original GNU assembler for the VAX.(1)
-
-   Jay Fenlason maintained GAS for a while, adding support for
-GDB-specific debug information and the 68k series machines, most of the
-preprocessing pass, and extensive changes in `messages.c',
-`input-file.c', `write.c'.
-
-   K. Richard Pixley maintained GAS for a while, adding various
-enhancements and many bug fixes, including merging support for several
-processors, breaking GAS up to handle multiple object file format back
-ends (including heavy rewrite, testing, an integration of the coff and
-b.out back ends), adding configuration including heavy testing and
-verification of cross assemblers and file splits and renaming,
-converted GAS to strictly ANSI C including full prototypes, added
-support for m680[34]0 and cpu32, did considerable work on i960
-including a COFF port (including considerable amounts of reverse
-engineering), a SPARC opcode file rewrite, DECstation, rs6000, and
-hp300hpux host ports, updated "know" assertions and made them work,
-much other reorganization, cleanup, and lint.
-
-   Ken Raeburn wrote the high-level BFD interface code to replace most
-of the code in format-specific I/O modules.
-
-   The original VMS support was contributed by David L. Kashtan.  Eric
-Youngdale has done much work with it since.
-
-   The Intel 80386 machine description was written by Eliot Dresselhaus.
-
-   Minh Tran-Le at IntelliCorp contributed some AIX 386 support.
-
-   The Motorola 88k machine description was contributed by Devon Bowen
-of Buffalo University and Torbjorn Granlund of the Swedish Institute of
-Computer Science.
-
-   Keith Knowles at the Open Software Foundation wrote the original
-MIPS back end (`tc-mips.c', `tc-mips.h'), and contributed Rose format
-support (which hasn't been merged in yet).  Ralph Campbell worked with
-the MIPS code to support a.out format.
-
-   Support for the Zilog Z8k and Renesas H8/300 and H8/500 processors
-(tc-z8k, tc-h8300, tc-h8500), and IEEE 695 object file format
-(obj-ieee), was written by Steve Chamberlain of Cygnus Support.  Steve
-also modified the COFF back end to use BFD for some low-level
-operations, for use with the H8/300 and AMD 29k targets.
-
-   John Gilmore built the AMD 29000 support, added `.include' support,
-and simplified the configuration of which versions accept which
-directives.  He updated the 68k machine description so that Motorola's
-opcodes always produced fixed-size instructions (e.g., `jsr'), while
-synthetic instructions remained shrinkable (`jbsr').  John fixed many
-bugs, including true tested cross-compilation support, and one bug in
-relaxation that took a week and required the proverbial one-bit fix.
-
-   Ian Lance Taylor of Cygnus Support merged the Motorola and MIT
-syntax for the 68k, completed support for some COFF targets (68k, i386
-SVR3, and SCO Unix), added support for MIPS ECOFF and ELF targets,
-wrote the initial RS/6000 and PowerPC assembler, and made a few other
-minor patches.
-
-   Steve Chamberlain made GAS able to generate listings.
-
-   Hewlett-Packard contributed support for the HP9000/300.
-
-   Jeff Law wrote GAS and BFD support for the native HPPA object format
-(SOM) along with a fairly extensive HPPA testsuite (for both SOM and
-ELF object formats).  This work was supported by both the Center for
-Software Science at the University of Utah and Cygnus Support.
-
-   Support for ELF format files has been worked on by Mark Eichin of
-Cygnus Support (original, incomplete implementation for SPARC), Pete
-Hoogenboom and Jeff Law at the University of Utah (HPPA mainly),
-Michael Meissner of the Open Software Foundation (i386 mainly), and Ken
-Raeburn of Cygnus Support (sparc, and some initial 64-bit support).
-
-   Linas Vepstas added GAS support for the ESA/390 "IBM 370"
-architecture.
-
-   Richard Henderson rewrote the Alpha assembler. Klaus Kaempf wrote
-GAS and BFD support for openVMS/Alpha.
-
-   Timothy Wall, Michael Hayes, and Greg Smart contributed to the
-various tic* flavors.
-
-   David Heine, Sterling Augustine, Bob Wilson and John Ruttenberg from
-Tensilica, Inc. added support for Xtensa processors.
-
-   Several engineers at Cygnus Support have also provided many small
-bug fixes and configuration enhancements.
-
-   Many others have contributed large or small bugfixes and
-enhancements.  If you have contributed significant work and are not
-mentioned on this list, and want to be, let us know.  Some of the
-history has been lost; we are not intentionally leaving anyone out.
-
-   ---------- Footnotes ----------
-
-   (1) Any more details?
-
-
-File: as.info,  Node: GNU Free Documentation License,  Next: Index,  Prev: Acknowledgements,  Up: Top
-
-Appendix A GNU Free Documentation License
-*****************************************
-
-                        Version 1.1, March 2000
-
-     Copyright (C) 2000, 2003 Free Software Foundation, Inc.
-     59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
-
-     Everyone is permitted to copy and distribute verbatim copies
-     of this license document, but changing it is not allowed.
-
-
-  0. PREAMBLE
-
-     The purpose of this License is to make a manual, textbook, or other
-     written document "free" in the sense of freedom: to assure everyone
-     the effective freedom to copy and redistribute it, with or without
-     modifying it, either commercially or noncommercially.  Secondarily,
-     this License preserves for the author and publisher a way to get
-     credit for their work, while not being considered responsible for
-     modifications made by others.
-
-     This License is a kind of "copyleft", which means that derivative
-     works of the document must themselves be free in the same sense.
-     It complements the GNU General Public License, which is a copyleft
-     license designed for free software.
-
-     We have designed this License in order to use it for manuals for
-     free software, because free software needs free documentation: a
-     free program should come with manuals providing the same freedoms
-     that the software does.  But this License is not limited to
-     software manuals; it can be used for any textual work, regardless
-     of subject matter or whether it is published as a printed book.
-     We recommend this License principally for works whose purpose is
-     instruction or reference.
-
-
-  1. APPLICABILITY AND DEFINITIONS
-
-     This License applies to any manual or other work that contains a
-     notice placed by the copyright holder saying it can be distributed
-     under the terms of this License.  The "Document", below, refers to
-     any such manual or work.  Any member of the public is a licensee,
-     and is addressed as "you."
-
-     A "Modified Version" of the Document means any work containing the
-     Document or a portion of it, either copied verbatim, or with
-     modifications and/or translated into another language.
-
-     A "Secondary Section" is a named appendix or a front-matter
-     section of the Document that deals exclusively with the
-     relationship of the publishers or authors of the Document to the
-     Document's overall subject (or to related matters) and contains
-     nothing that could fall directly within that overall subject.
-     (For example, if the Document is in part a textbook of
-     mathematics, a Secondary Section may not explain any mathematics.)
-     The relationship could be a matter of historical connection with
-     the subject or with related matters, or of legal, commercial,
-     philosophical, ethical or political position regarding them.
-
-     The "Invariant Sections" are certain Secondary Sections whose
-     titles are designated, as being those of Invariant Sections, in
-     the notice that says that the Document is released under this
-     License.
-
-     The "Cover Texts" are certain short passages of text that are
-     listed, as Front-Cover Texts or Back-Cover Texts, in the notice
-     that says that the Document is released under this License.
-
-     A "Transparent" copy of the Document means a machine-readable copy,
-     represented in a format whose specification is available to the
-     general public, whose contents can be viewed and edited directly
-     and straightforwardly with generic text editors or (for images
-     composed of pixels) generic paint programs or (for drawings) some
-     widely available drawing editor, and that is suitable for input to
-     text formatters or for automatic translation to a variety of
-     formats suitable for input to text formatters.  A copy made in an
-     otherwise Transparent file format whose markup has been designed
-     to thwart or discourage subsequent modification by readers is not
-     Transparent.  A copy that is not "Transparent" is called "Opaque."
-
-     Examples of suitable formats for Transparent copies include plain
-     ASCII without markup, Texinfo input format, LaTeX input format,
-     SGML or XML using a publicly available DTD, and
-     standard-conforming simple HTML designed for human modification.
-     Opaque formats include PostScript, PDF, proprietary formats that
-     can be read and edited only by proprietary word processors, SGML
-     or XML for which the DTD and/or processing tools are not generally
-     available, and the machine-generated HTML produced by some word
-     processors for output purposes only.
-
-     The "Title Page" means, for a printed book, the title page itself,
-     plus such following pages as are needed to hold, legibly, the
-     material this License requires to appear in the title page.  For
-     works in formats which do not have any title page as such, "Title
-     Page" means the text near the most prominent appearance of the
-     work's title, preceding the beginning of the body of the text.
-
-  2. VERBATIM COPYING
-
-     You may copy and distribute the Document in any medium, either
-     commercially or noncommercially, provided that this License, the
-     copyright notices, and the license notice saying this License
-     applies to the Document are reproduced in all copies, and that you
-     add no other conditions whatsoever to those of this License.  You
-     may not use technical measures to obstruct or control the reading
-     or further copying of the copies you make or distribute.  However,
-     you may accept compensation in exchange for copies.  If you
-     distribute a large enough number of copies you must also follow
-     the conditions in section 3.
-
-     You may also lend copies, under the same conditions stated above,
-     and you may publicly display copies.
-
-  3. COPYING IN QUANTITY
-
-     If you publish printed copies of the Document numbering more than
-     100, and the Document's license notice requires Cover Texts, you
-     must enclose the copies in covers that carry, clearly and legibly,
-     all these Cover Texts: Front-Cover Texts on the front cover, and
-     Back-Cover Texts on the back cover.  Both covers must also clearly
-     and legibly identify you as the publisher of these copies.  The
-     front cover must present the full title with all words of the
-     title equally prominent and visible.  You may add other material
-     on the covers in addition.  Copying with changes limited to the
-     covers, as long as they preserve the title of the Document and
-     satisfy these conditions, can be treated as verbatim copying in
-     other respects.
-
-     If the required texts for either cover are too voluminous to fit
-     legibly, you should put the first ones listed (as many as fit
-     reasonably) on the actual cover, and continue the rest onto
-     adjacent pages.
-
-     If you publish or distribute Opaque copies of the Document
-     numbering more than 100, you must either include a
-     machine-readable Transparent copy along with each Opaque copy, or
-     state in or with each Opaque copy a publicly-accessible
-     computer-network location containing a complete Transparent copy
-     of the Document, free of added material, which the general
-     network-using public has access to download anonymously at no
-     charge using public-standard network protocols.  If you use the
-     latter option, you must take reasonably prudent steps, when you
-     begin distribution of Opaque copies in quantity, to ensure that
-     this Transparent copy will remain thus accessible at the stated
-     location until at least one year after the last time you
-     distribute an Opaque copy (directly or through your agents or
-     retailers) of that edition to the public.
-
-     It is requested, but not required, that you contact the authors of
-     the Document well before redistributing any large number of
-     copies, to give them a chance to provide you with an updated
-     version of the Document.
-
-  4. MODIFICATIONS
-
-     You may copy and distribute a Modified Version of the Document
-     under the conditions of sections 2 and 3 above, provided that you
-     release the Modified Version under precisely this License, with
-     the Modified Version filling the role of the Document, thus
-     licensing distribution and modification of the Modified Version to
-     whoever possesses a copy of it.  In addition, you must do these
-     things in the Modified Version:
-
-     A. Use in the Title Page (and on the covers, if any) a title
-     distinct    from that of the Document, and from those of previous
-     versions    (which should, if there were any, be listed in the
-     History section    of the Document).  You may use the same title
-     as a previous version    if the original publisher of that version
-     gives permission.
-     B. List on the Title Page, as authors, one or more persons or
-     entities    responsible for authorship of the modifications in the
-     Modified    Version, together with at least five of the principal
-     authors of the    Document (all of its principal authors, if it
-     has less than five).
-     C. State on the Title page the name of the publisher of the
-     Modified Version, as the publisher.
-     D. Preserve all the copyright notices of the Document.
-     E. Add an appropriate copyright notice for your modifications
-     adjacent to the other copyright notices.
-     F. Include, immediately after the copyright notices, a license
-     notice    giving the public permission to use the Modified Version
-     under the    terms of this License, in the form shown in the
-     Addendum below.
-     G. Preserve in that license notice the full lists of Invariant
-     Sections    and required Cover Texts given in the Document's
-     license notice.
-     H. Include an unaltered copy of this License.
-     I. Preserve the section entitled "History", and its title, and add
-     to    it an item stating at least the title, year, new authors, and
-       publisher of the Modified Version as given on the Title Page.
-     If    there is no section entitled "History" in the Document,
-     create one    stating the title, year, authors, and publisher of
-     the Document as    given on its Title Page, then add an item
-     describing the Modified    Version as stated in the previous
-     sentence.
-     J. Preserve the network location, if any, given in the Document for
-       public access to a Transparent copy of the Document, and
-     likewise    the network locations given in the Document for
-     previous versions    it was based on.  These may be placed in the
-     "History" section.     You may omit a network location for a work
-     that was published at    least four years before the Document
-     itself, or if the original    publisher of the version it refers
-     to gives permission.
-     K. In any section entitled "Acknowledgements" or "Dedications",
-     preserve the section's title, and preserve in the section all the
-      substance and tone of each of the contributor acknowledgements
-     and/or dedications given therein.
-     L. Preserve all the Invariant Sections of the Document,
-     unaltered in their text and in their titles.  Section numbers
-     or the equivalent are not considered part of the section titles.
-     M. Delete any section entitled "Endorsements."  Such a section
-     may not be included in the Modified Version.
-     N. Do not retitle any existing section as "Endorsements"    or to
-     conflict in title with any Invariant Section.
-
-     If the Modified Version includes new front-matter sections or
-     appendices that qualify as Secondary Sections and contain no
-     material copied from the Document, you may at your option
-     designate some or all of these sections as invariant.  To do this,
-     add their titles to the list of Invariant Sections in the Modified
-     Version's license notice.  These titles must be distinct from any
-     other section titles.
-
-     You may add a section entitled "Endorsements", provided it contains
-     nothing but endorsements of your Modified Version by various
-     parties-for example, statements of peer review or that the text has
-     been approved by an organization as the authoritative definition
-     of a standard.
-
-     You may add a passage of up to five words as a Front-Cover Text,
-     and a passage of up to 25 words as a Back-Cover Text, to the end
-     of the list of Cover Texts in the Modified Version.  Only one
-     passage of Front-Cover Text and one of Back-Cover Text may be
-     added by (or through arrangements made by) any one entity.  If the
-     Document already includes a cover text for the same cover,
-     previously added by you or by arrangement made by the same entity
-     you are acting on behalf of, you may not add another; but you may
-     replace the old one, on explicit permission from the previous
-     publisher that added the old one.
-
-     The author(s) and publisher(s) of the Document do not by this
-     License give permission to use their names for publicity for or to
-     assert or imply endorsement of any Modified Version.
-
-  5. COMBINING DOCUMENTS
-
-     You may combine the Document with other documents released under
-     this License, under the terms defined in section 4 above for
-     modified versions, provided that you include in the combination
-     all of the Invariant Sections of all of the original documents,
-     unmodified, and list them all as Invariant Sections of your
-     combined work in its license notice.
-
-     The combined work need only contain one copy of this License, and
-     multiple identical Invariant Sections may be replaced with a single
-     copy.  If there are multiple Invariant Sections with the same name
-     but different contents, make the title of each such section unique
-     by adding at the end of it, in parentheses, the name of the
-     original author or publisher of that section if known, or else a
-     unique number.  Make the same adjustment to the section titles in
-     the list of Invariant Sections in the license notice of the
-     combined work.
-
-     In the combination, you must combine any sections entitled
-     "History" in the various original documents, forming one section
-     entitled "History"; likewise combine any sections entitled
-     "Acknowledgements", and any sections entitled "Dedications."  You
-     must delete all sections entitled "Endorsements."
-
-  6. COLLECTIONS OF DOCUMENTS
-
-     You may make a collection consisting of the Document and other
-     documents released under this License, and replace the individual
-     copies of this License in the various documents with a single copy
-     that is included in the collection, provided that you follow the
-     rules of this License for verbatim copying of each of the
-     documents in all other respects.
-
-     You may extract a single document from such a collection, and
-     distribute it individually under this License, provided you insert
-     a copy of this License into the extracted document, and follow
-     this License in all other respects regarding verbatim copying of
-     that document.
-
-  7. AGGREGATION WITH INDEPENDENT WORKS
-
-     A compilation of the Document or its derivatives with other
-     separate and independent documents or works, in or on a volume of
-     a storage or distribution medium, does not as a whole count as a
-     Modified Version of the Document, provided no compilation
-     copyright is claimed for the compilation.  Such a compilation is
-     called an "aggregate", and this License does not apply to the
-     other self-contained works thus compiled with the Document, on
-     account of their being thus compiled, if they are not themselves
-     derivative works of the Document.
-
-     If the Cover Text requirement of section 3 is applicable to these
-     copies of the Document, then if the Document is less than one
-     quarter of the entire aggregate, the Document's Cover Texts may be
-     placed on covers that surround only the Document within the
-     aggregate.  Otherwise they must appear on covers around the whole
-     aggregate.
-
-  8. TRANSLATION
-
-     Translation is considered a kind of modification, so you may
-     distribute translations of the Document under the terms of section
-     4.  Replacing Invariant Sections with translations requires special
-     permission from their copyright holders, but you may include
-     translations of some or all Invariant Sections in addition to the
-     original versions of these Invariant Sections.  You may include a
-     translation of this License provided that you also include the
-     original English version of this License.  In case of a
-     disagreement between the translation and the original English
-     version of this License, the original English version will prevail.
-
-  9. TERMINATION
-
-     You may not copy, modify, sublicense, or distribute the Document
-     except as expressly provided for under this License.  Any other
-     attempt to copy, modify, sublicense or distribute the Document is
-     void, and will automatically terminate your rights under this
-     License.  However, parties who have received copies, or rights,
-     from you under this License will not have their licenses
-     terminated so long as such parties remain in full compliance.
-
- 10. FUTURE REVISIONS OF THIS LICENSE
-
-     The Free Software Foundation may publish new, revised versions of
-     the GNU Free Documentation License from time to time.  Such new
-     versions will be similar in spirit to the present version, but may
-     differ in detail to address new problems or concerns.  See
-     http://www.gnu.org/copyleft/.
-
-     Each version of the License is given a distinguishing version
-     number.  If the Document specifies that a particular numbered
-     version of this License "or any later version" applies to it, you
-     have the option of following the terms and conditions either of
-     that specified version or of any later version that has been
-     published (not as a draft) by the Free Software Foundation.  If
-     the Document does not specify a version number of this License,
-     you may choose any version ever published (not as a draft) by the
-     Free Software Foundation.
-
-
-ADDENDUM: How to use this License for your documents
-====================================================
-
-To use this License in a document you have written, include a copy of
-the License in the document and put the following copyright and license
-notices just after the title page:
-
-     Copyright (C)  YEAR  YOUR NAME.
-     Permission is granted to copy, distribute and/or modify this document
-     under the terms of the GNU Free Documentation License, Version 1.1
-     or any later version published by the Free Software Foundation;
-     with the Invariant Sections being LIST THEIR TITLES, with the
-     Front-Cover Texts being LIST, and with the Back-Cover Texts being LIST.
-     A copy of the license is included in the section entitled "GNU
-     Free Documentation License."
-
-   If you have no Invariant Sections, write "with no Invariant Sections"
-instead of saying which ones are invariant.  If you have no Front-Cover
-Texts, write "no Front-Cover Texts" instead of "Front-Cover Texts being
-LIST"; likewise for Back-Cover Texts.
-
-   If your document contains nontrivial examples of program code, we
-recommend releasing these examples in parallel under your choice of
-free software license, such as the GNU General Public License, to
-permit their use in free software.
-
diff -urN binutils-2.16.1/gas/po/Make-in binutils-2.16.1-STEP/gas/po/Make-in
--- binutils-2.16.1/gas/po/Make-in	2005-03-04 00:47:57.000000000 +1300
+++ binutils-2.16.1-STEP/gas/po/Make-in	2005-09-02 11:16:20.103262416 +1200
@@ -10,7 +10,7 @@
 PACKAGE = @PACKAGE@
 VERSION = @VERSION@
 
-SHELL = /bin/sh
+SHELL = /System/Tools/sh
 @SET_MAKE@
 
 srcdir = @srcdir@
@@ -205,7 +205,7 @@
 dist distdir: update-po $(DISTFILES)
 	dists="$(DISTFILES)"; \
 	for file in $$dists; do \
-	  ln $(srcdir)/$$file $(distdir) 2> /dev/null \
+	  ln $(srcdir)/$$file $(distdir) 2> /System/Devices/null \
 	    || cp -p $(srcdir)/$$file $(distdir); \
 	done
 
diff -urN binutils-2.16.1/gas/testsuite/gas/all/gas.exp binutils-2.16.1-STEP/gas/testsuite/gas/all/gas.exp
--- binutils-2.16.1/gas/testsuite/gas/all/gas.exp	2005-02-16 18:04:33.000000000 +1300
+++ binutils-2.16.1-STEP/gas/testsuite/gas/all/gas.exp	2005-09-02 11:16:20.137257248 +1200
@@ -127,7 +127,7 @@
 	run_dump_test altmacro
 	# The second test is valid only when '!' is not a comment
 	# character (it is allowed to be a line comment character).
-	if [string match "" [lindex [gas_run excl.s "-o /dev/null" ""] 0]] {
+	if [string match "" [lindex [gas_run excl.s "-o /System/Devices/null" ""] 0]] {
 	    run_dump_test altmac2
 	}
     }
diff -urN binutils-2.16.1/gas/testsuite/gas/alpha/elf-reloc-8.s binutils-2.16.1-STEP/gas/testsuite/gas/alpha/elf-reloc-8.s
--- binutils-2.16.1/gas/testsuite/gas/alpha/elf-reloc-8.s	2002-11-07 13:42:19.000000000 +1300
+++ binutils-2.16.1-STEP/gas/testsuite/gas/alpha/elf-reloc-8.s	2005-09-02 11:16:20.162253448 +1200
@@ -276,7 +276,7 @@
 $LC4:
 	.ascii "sysfs\0"
 $LC5:
-	.ascii "/dev/\0"
+	.ascii "/System/Devices/\0"
 $LC6:
 	.ascii "nfs\0"
 	.section	.init.text
@@ -893,7 +893,7 @@
 	.end rd_load_image
 	.section	.rodata.str1.1
 $LC14:
-	.ascii "/dev/root\0"
+	.ascii "/System/Devices/root\0"
 	.section	.init.text
 	.align 2
 	.align 4
@@ -947,7 +947,7 @@
 	.end handle_initrd
 	.section	.rodata.str1.1
 $LC15:
-	.ascii "/dev/initrd\0"
+	.ascii "/System/Devices/initrd\0"
 	.section	.init.text
 	.align 2
 	.align 4
diff -urN binutils-2.16.1/gas/testsuite/gas/i860/README.i860 binutils-2.16.1-STEP/gas/testsuite/gas/i860/README.i860
--- binutils-2.16.1/gas/testsuite/gas/i860/README.i860	2003-08-17 15:16:22.000000000 +1200
+++ binutils-2.16.1-STEP/gas/testsuite/gas/i860/README.i860	2005-09-02 11:16:20.178251016 +1200
@@ -12,7 +12,7 @@
 as the enhanced i860XP instructions and control registers.
 
 The expected results files were generated using the UNIX System V/i860
-Release 4 vendor assembler (/usr/ccs/bin/as -V reports version
+Release 4 vendor assembler (/usr/ccs/System/Tools/as -V reports version
 "Standard C Development Environment  (SCDE) 5.0 12/08/89").  This
 way GAS/i860 is tested against a known good assembler.
 
diff -urN binutils-2.16.1/gas/testsuite/gas/iq2000/load-hazards.exp binutils-2.16.1-STEP/gas/testsuite/gas/iq2000/load-hazards.exp
--- binutils-2.16.1/gas/testsuite/gas/iq2000/load-hazards.exp	2003-01-04 10:38:50.000000000 +1300
+++ binutils-2.16.1-STEP/gas/testsuite/gas/iq2000/load-hazards.exp	2005-09-02 11:16:20.199247824 +1200
@@ -13,7 +13,7 @@
 proc iq2000_warning_test { file testname {warnpattern ""} } {
     global comp_output
 
-    gas_run $file "" ">/dev/null"
+    gas_run $file "" ">/System/Devices/null"
     verbose "output was $comp_output" 2
 
     if {$warnpattern == ""} {
diff -urN binutils-2.16.1/gas/testsuite/gas/iq2000/yield.exp binutils-2.16.1-STEP/gas/testsuite/gas/iq2000/yield.exp
--- binutils-2.16.1/gas/testsuite/gas/iq2000/yield.exp	2003-01-04 10:38:50.000000000 +1300
+++ binutils-2.16.1-STEP/gas/testsuite/gas/iq2000/yield.exp	2005-09-02 11:16:20.205246912 +1200
@@ -12,7 +12,7 @@
 proc iq2000_error_test { file testname {pattern ""} } {
     global comp_output
 
-    gas_run $file "" ">/dev/null"
+    gas_run $file "" ">/System/Devices/null"
     verbose "output was $comp_output" 2
 
     if {$pattern == ""} {
diff -urN binutils-2.16.1/gas/testsuite/gas/ppc/generate.sh binutils-2.16.1-STEP/gas/testsuite/gas/ppc/generate.sh
--- binutils-2.16.1/gas/testsuite/gas/ppc/generate.sh	2001-08-27 22:51:19.000000000 +1200
+++ binutils-2.16.1-STEP/gas/testsuite/gas/ppc/generate.sh	2005-09-02 11:16:20.220244632 +1200
@@ -1,4 +1,4 @@
-#! /bin/sh
+#! /System/Tools/sh
 
 m4 -DELF32 test1elf.asm >test1elf32.s
 m4 -DELF64 test1elf.asm >test1elf64.s
diff -urN binutils-2.16.1/gas/testsuite/gas/sh/arch/arch.exp binutils-2.16.1-STEP/gas/testsuite/gas/sh/arch/arch.exp
--- binutils-2.16.1/gas/testsuite/gas/sh/arch/arch.exp	2005-03-04 05:59:20.000000000 +1300
+++ binutils-2.16.1-STEP/gas/testsuite/gas/sh/arch/arch.exp	2005-09-02 11:16:20.265237792 +1200
@@ -496,8 +496,8 @@
 
     # The -Z option ensures that all error messages are output,
     # even those from later phases of assembly (such as offset range errors)
-    send_log "$AS -Z -isa=$arch all_insns.s -o /dev/null\n"
-    spawn $AS -Z -isa=$arch all_insns.s -o /dev/null
+    send_log "$AS -Z -isa=$arch all_insns.s -o /System/Devices/null\n"
+    spawn $AS -Z -isa=$arch all_insns.s -o /System/Devices/null
     expect Error: {incr errormessages; exp_continue}
 
     if {$errormessages == $expected} then {
diff -urN binutils-2.16.1/gas/testsuite/gas/tic4x/rebuild.sh binutils-2.16.1-STEP/gas/testsuite/gas/tic4x/rebuild.sh
--- binutils-2.16.1/gas/testsuite/gas/tic4x/rebuild.sh	2002-11-18 21:28:37.000000000 +1300
+++ binutils-2.16.1-STEP/gas/testsuite/gas/tic4x/rebuild.sh	2005-09-02 11:16:20.287234448 +1200
@@ -1,4 +1,4 @@
-#!/bin/sh
+#!/System/Tools/sh
 
 echo "Rebuilding opcodes.s from allopcodes.S"
 cat <<EOF >opcodes.s
diff -urN binutils-2.16.1/gas/testsuite/gas/xstormy16/allinsn.sh binutils-2.16.1-STEP/gas/testsuite/gas/xstormy16/allinsn.sh
--- binutils-2.16.1/gas/testsuite/gas/xstormy16/allinsn.sh	2002-12-21 10:14:04.000000000 +1300
+++ binutils-2.16.1-STEP/gas/testsuite/gas/xstormy16/allinsn.sh	2005-09-02 11:16:20.309231104 +1200
@@ -1,4 +1,4 @@
-#/bin/sh
+#/System/Tools/sh
 # Generate test result data for xstormy16 GAS testing.
 # This script is machine generated.
 # It is intended to be run in the testsuite source directory.
diff -urN binutils-2.16.1/gas/testsuite/gas/xstormy16/gcc.sh binutils-2.16.1-STEP/gas/testsuite/gas/xstormy16/gcc.sh
--- binutils-2.16.1/gas/testsuite/gas/xstormy16/gcc.sh	2001-12-08 16:45:57.000000000 +1300
+++ binutils-2.16.1-STEP/gas/testsuite/gas/xstormy16/gcc.sh	2005-09-02 11:16:20.313230496 +1200
@@ -1,4 +1,4 @@
-#/bin/sh
+#/System/Tools/sh
 # Generate test result data for xstormy16 GAS testing.
 # It is intended to be run in the testsuite source directory.
 #
diff -urN binutils-2.16.1/gas/testsuite/lib/doboth binutils-2.16.1-STEP/gas/testsuite/lib/doboth
--- binutils-2.16.1/gas/testsuite/lib/doboth	1999-05-03 19:28:53.000000000 +1200
+++ binutils-2.16.1-STEP/gas/testsuite/lib/doboth	2005-09-02 11:16:20.314230344 +1200
@@ -1,9 +1,9 @@
-#!/bin/sh
+#!/System/Tools/sh
 
 x=$1 ; shift
 y=$1 ; shift
 
-rm tmp.0 > /dev/null 2>&1
+rm tmp.0 > /System/Devices/null 2>&1
 ln -s $x tmp.0
 $* tmp.0 > tmp.1
 
diff -urN binutils-2.16.1/gas/testsuite/lib/doobjcmp binutils-2.16.1-STEP/gas/testsuite/lib/doobjcmp
--- binutils-2.16.1/gas/testsuite/lib/doobjcmp	1999-05-03 19:28:53.000000000 +1200
+++ binutils-2.16.1-STEP/gas/testsuite/lib/doobjcmp	2005-09-02 11:16:20.315230192 +1200
@@ -1,4 +1,4 @@
-#!/bin/sh
+#!/System/Tools/sh
 # compare two object files, in depth.
 
 x=$1
@@ -7,7 +7,7 @@
 
 
 # if they cmp, we're fine.
-if (cmp $BOTH > /dev/null)
+if (cmp $BOTH > /System/Devices/null)
 then
 	exit 0
 fi
@@ -30,7 +30,7 @@
 #	exit 1
 fi
 
-if (doboth $BOTH objdump +text > /dev/null)
+if (doboth $BOTH objdump +text > /System/Devices/null)
 then
 	echo Text ok.
 else
@@ -39,7 +39,7 @@
 #	exit 1
 fi
 
-if (doboth $BOTH objdump +data > /dev/null)
+if (doboth $BOTH objdump +data > /System/Devices/null)
 then
 	echo Data ok.
 else
@@ -48,7 +48,7 @@
 #	exit 1
 fi
 
-if (doboth $BOTH objdump +symbols > /dev/null)
+if (doboth $BOTH objdump +symbols > /System/Devices/null)
 then
 	echo Symbols ok.
 else
@@ -68,7 +68,7 @@
 # of course, if there were symbol diffs, then the reloc symbol indexes
 # will be off.
 
-if (doboth $BOTH objdump -r > /dev/null)
+if (doboth $BOTH objdump -r > /System/Devices/null)
 then
 	echo Reloc ok.
 else
diff -urN binutils-2.16.1/gas/testsuite/lib/dostriptest binutils-2.16.1-STEP/gas/testsuite/lib/dostriptest
--- binutils-2.16.1/gas/testsuite/lib/dostriptest	1999-05-03 19:28:53.000000000 +1200
+++ binutils-2.16.1-STEP/gas/testsuite/lib/dostriptest	2005-09-02 11:16:20.316230040 +1200
@@ -1,4 +1,4 @@
-#!/bin/sh
+#!/System/Tools/sh
 
 x=striptest.xx.$$
 y=striptest.yy.$$
diff -urN binutils-2.16.1/gas/testsuite/lib/dotest binutils-2.16.1-STEP/gas/testsuite/lib/dotest
--- binutils-2.16.1/gas/testsuite/lib/dotest	1999-05-03 19:28:53.000000000 +1200
+++ binutils-2.16.1-STEP/gas/testsuite/lib/dotest	2005-09-02 11:16:20.317229888 +1200
@@ -1,4 +1,4 @@
-#!/bin/sh
+#!/System/Tools/sh
 # ad hoc debug tool
 
 x=$1
diff -urN binutils-2.16.1/gas/testsuite/lib/dounsreloc binutils-2.16.1-STEP/gas/testsuite/lib/dounsreloc
--- binutils-2.16.1/gas/testsuite/lib/dounsreloc	1999-05-03 19:28:53.000000000 +1200
+++ binutils-2.16.1-STEP/gas/testsuite/lib/dounsreloc	2005-09-02 11:16:20.318229736 +1200
@@ -1,4 +1,4 @@
-#!/bin/sh
+#!/System/Tools/sh
 # objdump the reloc table, but strip off the headings and reloc
 # numbers and sort the result.  Intended for use in comparing reloc
 # tables that may not be in the same order.
diff -urN binutils-2.16.1/gas/testsuite/lib/dounssym binutils-2.16.1-STEP/gas/testsuite/lib/dounssym
--- binutils-2.16.1/gas/testsuite/lib/dounssym	1999-05-03 19:28:53.000000000 +1200
+++ binutils-2.16.1-STEP/gas/testsuite/lib/dounssym	2005-09-02 11:16:20.319229584 +1200
@@ -1,4 +1,4 @@
-#!/bin/sh
+#!/System/Tools/sh
 # objdump the symbol table, but strip off the headings and symbol
 # numbers and sort the result.  Intended for use in comparing symbol
 # tables that may not be in the same order.
diff -urN binutils-2.16.1/gas/testsuite/lib/gas-defs.exp binutils-2.16.1-STEP/gas/testsuite/lib/gas-defs.exp
--- binutils-2.16.1/gas/testsuite/lib/gas-defs.exp	2005-02-21 23:07:08.000000000 +1300
+++ binutils-2.16.1-STEP/gas/testsuite/lib/gas-defs.exp	2005-09-02 11:16:20.321229280 +1200
@@ -22,7 +22,7 @@
 
 proc gas_version {} {
     global AS
-    catch "exec $AS -version < /dev/null" tmp
+    catch "exec $AS -version < /System/Devices/null" tmp
     # Should find a way to discard constant parts, keep whatever's
     # left, so the version string could be almost anything at all...
     regexp "\[^\n\]* (cygnus-|)(\[-0-9.a-zA-Z-\]+)\[\r\n\].*" $tmp version cyg number
@@ -115,7 +115,7 @@
 	    if [expr $i&$num] then {
 		set extra_opts "$extra_opts $opt($bit)"
 		if $ignore_stdout($bit) then {
-		    set maybe_ignore_stdout ">/dev/null"
+		    set maybe_ignore_stdout ">/System/Devices/null"
 		}
 	    }
 	}
@@ -137,14 +137,14 @@
 proc gas_test_ignore_stdout { file as_opts testname } {
     global comp_output
 
-    gas_run $file $as_opts ">/dev/null"
+    gas_run $file $as_opts ">/System/Devices/null"
     want_no_output $testname
 }
 
 proc gas_test_error { file as_opts testname } {
     global comp_output
 
-    gas_run $file $as_opts ">/dev/null"
+    gas_run $file $as_opts ">/System/Devices/null"
     if ![string match "" $comp_output] then {
 	send_log "$comp_output\n"
 	verbose "$comp_output" 3
@@ -744,7 +744,7 @@
     # prune_warnings -- delete various system verbosities from TEXT.
     #
     # An example is:
-    # ld.so: warning: /usr/lib/libc.so.1.8.1 has older revision than expected 9
+    # ld.so: warning: /System/Library/Libraries/libc.so.1.8.1 has older revision than expected 9
     #
     # Sites with particular verbose os's may wish to override this in site.exp.
     #
diff -urN binutils-2.16.1/gas/testsuite/lib/run binutils-2.16.1-STEP/gas/testsuite/lib/run
--- binutils-2.16.1/gas/testsuite/lib/run	1999-05-03 19:28:53.000000000 +1200
+++ binutils-2.16.1-STEP/gas/testsuite/lib/run	2005-09-02 11:16:20.322229128 +1200
@@ -1,2 +1,2 @@
-#!/bin/sh
+#!/System/Tools/sh
 eval exec $@
diff -urN binutils-2.16.1/gas/vmsconf.sh binutils-2.16.1-STEP/gas/vmsconf.sh
--- binutils-2.16.1/gas/vmsconf.sh	1999-05-03 19:28:41.000000000 +1200
+++ binutils-2.16.1-STEP/gas/vmsconf.sh	2005-09-02 11:16:20.335227152 +1200
@@ -1,4 +1,4 @@
-#!/bin/sh
+#!/System/Tools/sh
 
 cat << 'EOF'
 $!make-gas.com
diff -urN binutils-2.16.1/gettext.m4 binutils-2.16.1-STEP/gettext.m4
--- binutils-2.16.1/gettext.m4	2005-02-01 09:29:41.000000000 +1300
+++ binutils-2.16.1-STEP/gettext.m4	2005-09-02 11:16:20.352224568 +1200
@@ -111,7 +111,7 @@
       if test "$XGETTEXT" != ":"; then
 	dnl If it is no GNU xgettext we define it as : so that the
 	dnl Makefiles still can work.
-	if $XGETTEXT --omit-header /dev/null 2> /dev/null; then
+	if $XGETTEXT --omit-header /System/Devices/null 2> /System/Devices/null; then
 	  : ;
 	else
 	  AC_MSG_RESULT(
diff -urN binutils-2.16.1/gprof/Makefile.am binutils-2.16.1-STEP/gprof/Makefile.am
--- binutils-2.16.1/gprof/Makefile.am	2004-12-01 06:20:48.000000000 +1300
+++ binutils-2.16.1-STEP/gprof/Makefile.am	2005-09-02 11:16:20.401217120 +1200
@@ -82,7 +82,7 @@
 	$(MAKE) MKDEP="$(MKDEP)" DEP1
 	sed -f dep.sed < DEP1 > DEPA
 	echo '# IF YOU PUT ANYTHING HERE IT WILL GO AWAY' >> DEPA
-	if grep ' /' DEPA > /dev/null 2> /dev/null; then \
+	if grep ' /' DEPA > /System/Devices/null 2> /System/Devices/null; then \
 	  echo 'make DEP failed!'; exit 1; \
 	else \
 	  mv -f DEPA $@; \
diff -urN binutils-2.16.1/gprof/Makefile.in binutils-2.16.1-STEP/gprof/Makefile.in
--- binutils-2.16.1/gprof/Makefile.in	2004-12-01 06:20:48.000000000 +1300
+++ binutils-2.16.1-STEP/gprof/Makefile.in	2005-09-02 11:16:20.414215144 +1200
@@ -416,7 +416,7 @@
 uninstall-info-am:
 	$(PRE_UNINSTALL)
 	@if (install-info --version && \
-	     install-info --version 2>&1 | sed 1q | grep -i -v debian) >/dev/null 2>&1; then \
+	     install-info --version 2>&1 | sed 1q | grep -i -v debian) >/System/Devices/null 2>&1; then \
 	  list='$(INFO_DEPS)'; \
 	  for file in $$list; do \
 	    relfile=`echo "$$file" | sed 's|^.*/||'`; \
@@ -583,7 +583,7 @@
 		$(TAGS_FILES) $(LISP)
 	tags=; \
 	here=`pwd`; \
-	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
+	if ($(ETAGS) --etags-include --version) >/System/Devices/null 2>&1; then \
 	  include_option=--etags-include; \
 	  empty_fix=.; \
 	else \
@@ -715,7 +715,7 @@
 	done
 	@$(POST_INSTALL)
 	@if (install-info --version && \
-	     install-info --version 2>&1 | sed 1q | grep -i -v debian) >/dev/null 2>&1; then \
+	     install-info --version 2>&1 | sed 1q | grep -i -v debian) >/System/Devices/null 2>&1; then \
 	  list='$(INFO_DEPS)'; \
 	  for file in $$list; do \
 	    relfile=`echo "$$file" | sed 's|^.*/||'`; \
@@ -807,7 +807,7 @@
 	$(MAKE) MKDEP="$(MKDEP)" DEP1
 	sed -f dep.sed < DEP1 > DEPA
 	echo '# IF YOU PUT ANYTHING HERE IT WILL GO AWAY' >> DEPA
-	if grep ' /' DEPA > /dev/null 2> /dev/null; then \
+	if grep ' /' DEPA > /System/Devices/null 2> /System/Devices/null; then \
 	  echo 'make DEP failed!'; exit 1; \
 	else \
 	  mv -f DEPA $@; \
diff -urN binutils-2.16.1/gprof/TODO binutils-2.16.1-STEP/gprof/TODO
--- binutils-2.16.1/gprof/TODO	2002-02-01 07:37:56.000000000 +1300
+++ binutils-2.16.1-STEP/gprof/TODO	2005-09-02 11:16:20.441211040 +1200
@@ -39,7 +39,7 @@
 + convert to very new file format (back to trivial format, that is :)
 + replace "dummy.h" for Alpha (if there is any use to it)
 + add support for execution time profiling at a basic-block level
-+ fix filename-off-by-one bug for Alpha (see ~/tmp/d.[ch])---no longer
++ fix filename-off-by-one bug for Alpha (see ~/System/TemporaryFiles/d.[ch])---no longer
   relevant
 + "-pg -a" doesn't work as expected because mcleanup() will overwrite
   the file generated by __bb_exit_func() (or vice versa)
diff -urN binutils-2.16.1/gprof/aclocal.m4 binutils-2.16.1-STEP/gprof/aclocal.m4
--- binutils-2.16.1/gprof/aclocal.m4	2004-12-01 06:20:48.000000000 +1300
+++ binutils-2.16.1-STEP/gprof/aclocal.m4	2005-09-02 11:16:20.373221376 +1200
@@ -237,7 +237,7 @@
     for i in 1 2 3 4 5 6; do
       echo '#include "conftst'$i'.h"' >> sub/conftest.c
       # Using `: > sub/conftst$i.h' creates only sub/conftst1.h with
-      # Solaris 8's {/usr,}/bin/sh.
+      # Solaris 8's {/usr,}/System/Tools/sh.
       touch sub/conftst$i.h
     done
     echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf
@@ -261,10 +261,10 @@
        source=sub/conftest.c object=sub/conftest.${OBJEXT-o} \
        depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
        $SHELL ./depcomp $depcc -c -o sub/conftest.${OBJEXT-o} sub/conftest.c \
-         >/dev/null 2>conftest.err &&
-       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
-       grep sub/conftest.${OBJEXT-o} sub/conftest.Po > /dev/null 2>&1 &&
-       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
+         >/System/Devices/null 2>conftest.err &&
+       grep sub/conftst6.h sub/conftest.Po > /System/Devices/null 2>&1 &&
+       grep sub/conftest.${OBJEXT-o} sub/conftest.Po > /System/Devices/null 2>&1 &&
+       ${MAKE-make} -s -f confmf > /System/Devices/null 2>&1; then
       # icc doesn't choke on unknown options, it will just issue warnings
       # or remarks (even with -Werror).  So we grep stderr for any message
       # that says an option was ignored or not supported.
@@ -273,7 +273,7 @@
       # The diagnosis changed in icc 8.0:
       #   icc: Command line remark: option '-MP' not supported
       if (grep 'ignoring option' conftest.err ||
-          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
+          grep 'not supported' conftest.err) >/System/Devices/null 2>&1; then :; else
         am_cv_$1_dependencies_compiler_type=$depmode
         break
       fi
@@ -351,7 +351,7 @@
   # Grep'ing the first line is not enough: some people post-process
   # each Makefile.in and add a new line on top of each file to say so.
   # So let's grep whole file.
-  if grep '^#.*generated by automake' $mf > /dev/null 2>&1; then
+  if grep '^#.*generated by automake' $mf > /System/Devices/null 2>&1; then
     dirpart=`AS_DIRNAME("$mf")`
   else
     continue
@@ -447,7 +447,7 @@
 
 # test whether we have cygpath
 if test -z "$CYGPATH_W"; then
-  if (cygpath --version) >/dev/null 2>/dev/null; then
+  if (cygpath --version) >/System/Devices/null 2>/System/Devices/null; then
     CYGPATH_W='cygpath -w'
   else
     CYGPATH_W=echo
@@ -570,14 +570,14 @@
 # Check whether the underlying file-system supports filenames
 # with a leading dot.  For instance MS-DOS doesn't.
 AC_DEFUN([AM_SET_LEADING_DOT],
-[rm -rf .tst 2>/dev/null
-mkdir .tst 2>/dev/null
+[rm -rf .tst 2>/System/Devices/null
+mkdir .tst 2>/System/Devices/null
 if test -d .tst; then
   am__leading_dot=.
 else
   am__leading_dot=_
 fi
-rmdir .tst 2>/dev/null
+rmdir .tst 2>/System/Devices/null
 AC_SUBST([am__leading_dot])])
 
 # Add --enable-maintainer-mode option to configure.
@@ -663,7 +663,7 @@
 # In particular we don't look at `^make:' because GNU make might
 # be invoked under some other name (usually "gmake"), in which
 # case it prints its new name instead of `make'.
-if test "`$am_make -s -f confmf 2> /dev/null | grep -v 'ing directory'`" = "done"; then
+if test "`$am_make -s -f confmf 2> /System/Devices/null | grep -v 'ing directory'`" = "done"; then
    am__include=include
    am__quote=
    _am_result=GNU
@@ -671,7 +671,7 @@
 # Now try BSD make style include.
 if test "$am__include" = "#"; then
    echo '.include "confinc"' > confmf
-   if test "`$am_make -s -f confmf 2> /dev/null`" = "done"; then
+   if test "`$am_make -s -f confmf 2> /System/Devices/null`" = "done"; then
       am__include=.include
       am__quote="\""
       _am_result=BSD
@@ -769,7 +769,7 @@
 # restrict ourselves to GNU make (using the --version option ensures
 # this.)
 AC_DEFUN([AM_PROG_MKDIR_P],
-[if mkdir -p --version . >/dev/null 2>&1 && test ! -d ./--version; then
+[if mkdir -p --version . >/System/Devices/null 2>&1 && test ! -d ./--version; then
   # We used to keeping the `.' as first argument, in order to
   # allow $(mkdir_p) to be used without argument.  As in
   #   $(mkdir_p) $(somedir)
@@ -883,7 +883,7 @@
 # (eg FreeBSD returns the mod time of the symlink's containing
 # directory).
 if (
-   set X `ls -Lt $srcdir/configure conftest.file 2> /dev/null`
+   set X `ls -Lt $srcdir/configure conftest.file 2> /System/Devices/null`
    if test "$[*]" = "X"; then
       # -L didn't work.
       set X `ls -t $srcdir/configure conftest.file`
@@ -1013,7 +1013,7 @@
   plaintar)
     # Must skip GNU tar: if it does not support --format= it doesn't create
     # ustar tarball either.
-    (tar --version) >/dev/null 2>&1 && continue
+    (tar --version) >/System/Devices/null 2>&1 && continue
     am__tar='tar chf - "$$tardir"'
     am__tar_='tar chf - "$tardir"'
     am__untar='tar xf -'
@@ -1047,7 +1047,7 @@
   rm -rf conftest.dir
   if test -s conftest.tar; then
     AM_RUN_LOG([$am__untar <conftest.tar])
-    grep GrepMe conftest.dir/file >/dev/null 2>&1 && break
+    grep GrepMe conftest.dir/file >/System/Devices/null 2>&1 && break
   fi
 done
 rm -rf conftest.dir
diff -urN binutils-2.16.1/gprof/bbconv.pl binutils-2.16.1-STEP/gprof/bbconv.pl
--- binutils-2.16.1/gprof/bbconv.pl	2001-03-14 10:07:29.000000000 +1300
+++ binutils-2.16.1-STEP/gprof/bbconv.pl	2005-09-02 11:16:20.375221072 +1200
@@ -1,4 +1,4 @@
-#! /usr/bin/perl
+#! /System/Tools/perl
 
 # This script converts a "bb.out" file into a format
 # suitable for processing by gprof
diff -urN binutils-2.16.1/gprof/configure binutils-2.16.1-STEP/gprof/configure
--- binutils-2.16.1/gprof/configure	2005-02-01 09:32:41.000000000 +1300
+++ binutils-2.16.1-STEP/gprof/configure	2005-09-02 11:16:20.392218488 +1200
@@ -1,4 +1,4 @@
-#! /bin/sh
+#! /System/Tools/sh
 # Guess values for system-dependent variables and create Makefiles.
 # Generated by GNU Autoconf 2.59.
 #
@@ -10,19 +10,19 @@
 ## --------------------- ##
 
 # Be Bourne compatible
-if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
+if test -n "${ZSH_VERSION+set}" && (emulate sh) >/System/Devices/null 2>&1; then
   emulate sh
   NULLCMD=:
   # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
   # is contrary to our usage.  Disable this feature.
   alias -g '${1+"$@"}'='"$@"'
-elif test -n "${BASH_VERSION+set}" && (set -o posix) >/dev/null 2>&1; then
+elif test -n "${BASH_VERSION+set}" && (set -o posix) >/System/Devices/null 2>&1; then
   set -o posix
 fi
 DUALCASE=1; export DUALCASE # for MKS sh
 
 # Support unset when possible.
-if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
+if ( (MAIL=60; unset MAIL) || exit) >/System/Devices/null 2>&1; then
   as_unset=unset
 else
   as_unset=false
@@ -49,13 +49,13 @@
 done
 
 # Required to use basename.
-if expr a : '\(a\)' >/dev/null 2>&1; then
+if expr a : '\(a\)' >/System/Devices/null 2>&1; then
   as_expr=expr
 else
   as_expr=false
 fi
 
-if (basename /) >/dev/null 2>&1 && test "X`basename / 2>&1`" = "X/"; then
+if (basename /) >/System/Devices/null 2>&1 && test "X`basename / 2>&1`" = "X/"; then
   as_basename=basename
 else
   as_basename=false
@@ -67,7 +67,7 @@
 $as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
 	 X"$0" : 'X\(//\)$' \| \
 	 X"$0" : 'X\(/\)$' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X/"$0" |
     sed '/^.*\/\([^/][^/]*\)\/*$/{ s//\1/; q; }
   	  /^X\/\(\/\/\)$/{ s//\1/; q; }
@@ -85,10 +85,10 @@
 
 # The user is always right.
 if test "${PATH_SEPARATOR+set}" != set; then
-  echo "#! /bin/sh" >conf$$.sh
+  echo "#! /System/Tools/sh" >conf$$.sh
   echo  "exit 0"   >>conf$$.sh
   chmod +x conf$$.sh
-  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
+  if (PATH="/nonexistent;."; conf$$.sh) >/System/Devices/null 2>&1; then
     PATH_SEPARATOR=';'
   else
     PATH_SEPARATOR=:
@@ -99,7 +99,7 @@
 
   as_lineno_1=$LINENO
   as_lineno_2=$LINENO
-  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
+  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/System/Devices/null`
   test "x$as_lineno_1" != "x$as_lineno_2" &&
   test "x$as_lineno_3"  = "x$as_lineno_2"  || {
   # Find who we are.  Look in the path if we contain no path at all
@@ -138,9 +138,9 @@
 	   if ("$as_dir/$as_base" -c '
   as_lineno_1=$LINENO
   as_lineno_2=$LINENO
-  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
+  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/System/Devices/null`
   test "x$as_lineno_1" != "x$as_lineno_2" &&
-  test "x$as_lineno_3"  = "x$as_lineno_2" ') 2>/dev/null; then
+  test "x$as_lineno_3"  = "x$as_lineno_2" ') 2>/System/Devices/null; then
 	     $as_unset BASH_ENV || test "${BASH_ENV+set}" != set || { BASH_ENV=; export BASH_ENV; }
 	     $as_unset ENV || test "${ENV+set}" != set || { ENV=; export ENV; }
 	     CONFIG_SHELL=$as_dir/$as_base
@@ -191,7 +191,7 @@
   *)       ECHO_N= ECHO_C='\c' ECHO_T= ;;
 esac
 
-if expr a : '\(a\)' >/dev/null 2>&1; then
+if expr a : '\(a\)' >/System/Devices/null 2>&1; then
   as_expr=expr
 else
   as_expr=false
@@ -199,7 +199,7 @@
 
 rm -f conf$$ conf$$.exe conf$$.file
 echo >conf$$.file
-if ln -s conf$$.file conf$$ 2>/dev/null; then
+if ln -s conf$$.file conf$$ 2>/System/Devices/null; then
   # We could just check for DJGPP; but this test a) works b) is more generic
   # and c) will remain valid once DJGPP supports symlinks (DJGPP 2.04).
   if test -f conf$$.exe; then
@@ -208,14 +208,14 @@
   else
     as_ln_s='ln -s'
   fi
-elif ln conf$$.file conf$$ 2>/dev/null; then
+elif ln conf$$.file conf$$ 2>/System/Devices/null; then
   as_ln_s=ln
 else
   as_ln_s='cp -p'
 fi
 rm -f conf$$ conf$$.exe conf$$.file
 
-if mkdir -p . 2>/dev/null; then
+if mkdir -p . 2>/System/Devices/null; then
   as_mkdir_p=:
 else
   test -d ./-p && rmdir ./-p
@@ -244,7 +244,7 @@
 # Name of the host.
 # hostname on some systems (SVR3.2, Linux) returns a bogus exit status,
 # so uname gets run too.
-ac_hostname=`(hostname || uname -n) 2>/dev/null | sed 1q`
+ac_hostname=`(hostname || uname -n) 2>/System/Devices/null | sed 1q`
 
 exec 6>&1
 
@@ -257,7 +257,7 @@
 subdirs=
 MFLAGS=
 MAKEFLAGS=
-SHELL=${CONFIG_SHELL-/bin/sh}
+SHELL=${CONFIG_SHELL-/System/Tools/sh}
 
 # Maximum number of lines to put in a shell here document.
 # This variable seems obsolete.  It should probably be removed, and
@@ -317,7 +317,7 @@
 ac_init_version=false
 # The variables have the same names as the options, with
 # dashes changed to underlines.
-cache_file=/dev/null
+cache_file=/System/Devices/null
 exec_prefix=NONE
 no_create=
 no_recursion=
@@ -395,7 +395,7 @@
   -disable-* | --disable-*)
     ac_feature=`expr "x$ac_option" : 'x-*disable-\(.*\)'`
     # Reject names that are not valid shell variable names.
-    expr "x$ac_feature" : ".*[^-_$as_cr_alnum]" >/dev/null &&
+    expr "x$ac_feature" : ".*[^-_$as_cr_alnum]" >/System/Devices/null &&
       { echo "$as_me: error: invalid feature name: $ac_feature" >&2
    { (exit 1); exit 1; }; }
     ac_feature=`echo $ac_feature | sed 's/-/_/g'`
@@ -404,7 +404,7 @@
   -enable-* | --enable-*)
     ac_feature=`expr "x$ac_option" : 'x-*enable-\([^=]*\)'`
     # Reject names that are not valid shell variable names.
-    expr "x$ac_feature" : ".*[^-_$as_cr_alnum]" >/dev/null &&
+    expr "x$ac_feature" : ".*[^-_$as_cr_alnum]" >/System/Devices/null &&
       { echo "$as_me: error: invalid feature name: $ac_feature" >&2
    { (exit 1); exit 1; }; }
     ac_feature=`echo $ac_feature | sed 's/-/_/g'`
@@ -586,7 +586,7 @@
   -with-* | --with-*)
     ac_package=`expr "x$ac_option" : 'x-*with-\([^=]*\)'`
     # Reject names that are not valid shell variable names.
-    expr "x$ac_package" : ".*[^-_$as_cr_alnum]" >/dev/null &&
+    expr "x$ac_package" : ".*[^-_$as_cr_alnum]" >/System/Devices/null &&
       { echo "$as_me: error: invalid package name: $ac_package" >&2
    { (exit 1); exit 1; }; }
     ac_package=`echo $ac_package| sed 's/-/_/g'`
@@ -599,7 +599,7 @@
   -without-* | --without-*)
     ac_package=`expr "x$ac_option" : 'x-*without-\(.*\)'`
     # Reject names that are not valid shell variable names.
-    expr "x$ac_package" : ".*[^-_$as_cr_alnum]" >/dev/null &&
+    expr "x$ac_package" : ".*[^-_$as_cr_alnum]" >/System/Devices/null &&
       { echo "$as_me: error: invalid package name: $ac_package" >&2
    { (exit 1); exit 1; }; }
     ac_package=`echo $ac_package | sed 's/-/_/g'`
@@ -631,7 +631,7 @@
   *=*)
     ac_envvar=`expr "x$ac_option" : 'x\([^=]*\)='`
     # Reject names that are not valid shell variable names.
-    expr "x$ac_envvar" : ".*[^_$as_cr_alnum]" >/dev/null &&
+    expr "x$ac_envvar" : ".*[^_$as_cr_alnum]" >/System/Devices/null &&
       { echo "$as_me: error: invalid variable name: $ac_envvar" >&2
    { (exit 1); exit 1; }; }
     ac_optarg=`echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"`
@@ -641,7 +641,7 @@
   *)
     # FIXME: should be removed in autoconf 3.0.
     echo "$as_me: WARNING: you should use --build, --host, --target" >&2
-    expr "x$ac_option" : ".*[^-._$as_cr_alnum]" >/dev/null &&
+    expr "x$ac_option" : ".*[^-._$as_cr_alnum]" >/System/Devices/null &&
       echo "$as_me: WARNING: invalid host type: $ac_option" >&2
     : ${build_alias=$ac_option} ${host_alias=$ac_option} ${target_alias=$ac_option}
     ;;
@@ -699,19 +699,19 @@
 ac_tool_prefix=
 test -n "$host_alias" && ac_tool_prefix=$host_alias-
 
-test "$silent" = yes && exec 6>/dev/null
+test "$silent" = yes && exec 6>/System/Devices/null
 
 
 # Find the source files, if location was not specified.
 if test -z "$srcdir"; then
   ac_srcdir_defaulted=yes
   # Try the directory containing this script, then its parent.
-  ac_confdir=`(dirname "$0") 2>/dev/null ||
+  ac_confdir=`(dirname "$0") 2>/System/Devices/null ||
 $as_expr X"$0" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$0" : 'X\(//\)[^/]' \| \
 	 X"$0" : 'X\(//\)$' \| \
 	 X"$0" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$0" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -734,7 +734,7 @@
    { (exit 1); exit 1; }; }
   fi
 fi
-(cd $srcdir && test -r ./$ac_unique_file) 2>/dev/null ||
+(cd $srcdir && test -r ./$ac_unique_file) 2>/System/Devices/null ||
   { echo "$as_me: error: sources are in $srcdir, but \`cd $srcdir' does not work" >&2
    { (exit 1); exit 1; }; }
 srcdir=`echo "$srcdir" | sed 's%\([^\\/]\)[\\/]*$%\1%'`
@@ -999,22 +999,22 @@
 ## Platform. ##
 ## --------- ##
 
-hostname = `(hostname || uname -n) 2>/dev/null | sed 1q`
-uname -m = `(uname -m) 2>/dev/null || echo unknown`
-uname -r = `(uname -r) 2>/dev/null || echo unknown`
-uname -s = `(uname -s) 2>/dev/null || echo unknown`
-uname -v = `(uname -v) 2>/dev/null || echo unknown`
-
-/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`
-/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`
-
-/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`
-/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`
-/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`
-hostinfo               = `(hostinfo) 2>/dev/null               || echo unknown`
-/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`
-/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`
-/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`
+hostname = `(hostname || uname -n) 2>/System/Devices/null | sed 1q`
+uname -m = `(uname -m) 2>/System/Devices/null || echo unknown`
+uname -r = `(uname -r) 2>/System/Devices/null || echo unknown`
+uname -s = `(uname -s) 2>/System/Devices/null || echo unknown`
+uname -v = `(uname -v) 2>/System/Devices/null || echo unknown`
+
+/System/Tools/uname -p = `(/System/Tools/uname -p) 2>/System/Devices/null || echo unknown`
+/System/Tools/uname -X     = `(/System/Tools/uname -X) 2>/System/Devices/null     || echo unknown`
+
+/System/Tools/arch              = `(/System/Tools/arch) 2>/System/Devices/null              || echo unknown`
+/System/Tools/arch -k       = `(/System/Tools/arch -k) 2>/System/Devices/null       || echo unknown`
+/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/System/Devices/null || echo unknown`
+hostinfo               = `(hostinfo) 2>/System/Devices/null               || echo unknown`
+/System/Tools/machine           = `(/System/Tools/machine) 2>/System/Devices/null           || echo unknown`
+/System/Tools/oslevel       = `(/System/Tools/oslevel) 2>/System/Devices/null       || echo unknown`
+/System/Tools/universe          = `(/System/Tools/universe) 2>/System/Devices/null          || echo unknown`
 
 _ASUNAME
 
@@ -1224,7 +1224,7 @@
 done
 
 if test -r "$cache_file"; then
-  # Some versions of bash will fail to source /dev/null (special
+  # Some versions of bash will fail to source /System/Devices/null (special
   # files actually), so we avoid doing that.
   if test -f "$cache_file"; then
     { echo "$as_me:$LINENO: loading cache $cache_file" >&5
@@ -1343,7 +1343,7 @@
 ac_configure="$SHELL $ac_aux_dir/configure" # This should be Cygnus configure.
 
 # Make sure we can run config.sub.
-$ac_config_sub sun4 >/dev/null 2>&1 ||
+$ac_config_sub sun4 >/System/Devices/null 2>&1 ||
   { { echo "$as_me:$LINENO: error: cannot run $ac_config_sub" >&5
 echo "$as_me: error: cannot run $ac_config_sub" >&2;}
    { (exit 1); exit 1; }; }
@@ -1743,18 +1743,18 @@
 echo "$as_me:$LINENO:" \
      "checking for C compiler version" >&5
 ac_compiler=`set X $ac_compile; echo $2`
-{ (eval echo "$as_me:$LINENO: \"$ac_compiler --version </dev/null >&5\"") >&5
-  (eval $ac_compiler --version </dev/null >&5) 2>&5
+{ (eval echo "$as_me:$LINENO: \"$ac_compiler --version </System/Devices/null >&5\"") >&5
+  (eval $ac_compiler --version </System/Devices/null >&5) 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
-{ (eval echo "$as_me:$LINENO: \"$ac_compiler -v </dev/null >&5\"") >&5
-  (eval $ac_compiler -v </dev/null >&5) 2>&5
+{ (eval echo "$as_me:$LINENO: \"$ac_compiler -v </System/Devices/null >&5\"") >&5
+  (eval $ac_compiler -v </System/Devices/null >&5) 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
-{ (eval echo "$as_me:$LINENO: \"$ac_compiler -V </dev/null >&5\"") >&5
-  (eval $ac_compiler -V </dev/null >&5) 2>&5
+{ (eval echo "$as_me:$LINENO: \"$ac_compiler -V </System/Devices/null >&5\"") >&5
+  (eval $ac_compiler -V </System/Devices/null >&5) 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
@@ -1936,7 +1936,7 @@
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }; then
-  for ac_file in `(ls conftest.o conftest.obj; ls conftest.*) 2>/dev/null`; do
+  for ac_file in `(ls conftest.o conftest.obj; ls conftest.*) 2>/System/Devices/null`; do
   case $ac_file in
     *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg ) ;;
     *) ac_cv_objext=`expr "$ac_file" : '.*\.\(.*\)'`
@@ -2487,13 +2487,13 @@
 # Find a good install program.  We prefer a C program (faster),
 # so one script is as good as another.  But avoid the broken or
 # incompatible versions:
-# SysV /etc/install, /usr/sbin/install
+# SysV/System/Settings/install, /usr/System/AdminTools/install
 # SunOS /usr/etc/install
-# IRIX /sbin/install
-# AIX /bin/install
+# IRIX /System/AdminTools/install
+# AIX /System/Tools/install
 # AmigaOS /C/install, which installs bootblocks on floppy discs
-# AIX 4 /usr/bin/installbsd, which doesn't work without a -g flag
-# AFS /usr/afsws/bin/install, which mishandles nonexistent args
+# AIX 4 /System/Tools/installbsd, which doesn't work without a -g flag
+# AFS /usr/afsws/System/Tools/install, which mishandles nonexistent args
 # SVR4 /usr/ucb/install, which tries to use the nonexistent group "staff"
 # OS/2's system install, which has a completely different semantic
 # ./install, which can be erroneously created by make from ./install.sh.
@@ -2511,7 +2511,7 @@
   # Account for people who put trailing slashes in PATH elements.
 case $as_dir/ in
   ./ | .// | /cC/* | \
-  /etc/* | /usr/sbin/* | /usr/etc/* | /sbin/* | /usr/afsws/bin/* | \
+ /System/Settings/* | /usr/System/AdminTools/* | /usr/etc/* | /System/AdminTools/* | /usr/afsws/System/Tools/* | \
   ?:\\/os2\\/install\\/* | ?:\\/OS2\\/INSTALL\\/* | \
   /usr/ucb/* ) ;;
   *)
@@ -2522,11 +2522,11 @@
       for ac_exec_ext in '' $ac_executable_extensions; do
 	if $as_executable_p "$as_dir/$ac_prog$ac_exec_ext"; then
 	  if test $ac_prog = install &&
-	    grep dspmsg "$as_dir/$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
+	    grep dspmsg "$as_dir/$ac_prog$ac_exec_ext" >/System/Devices/null 2>&1; then
 	    # AIX install.  It has an incompatible calling convention.
 	    :
 	  elif test $ac_prog = install &&
-	    grep pwplus "$as_dir/$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
+	    grep pwplus "$as_dir/$ac_prog$ac_exec_ext" >/System/Devices/null 2>&1; then
 	    # program-specific install script used by HP pwplus--don't use.
 	    :
 	  else
@@ -2574,7 +2574,7 @@
 # (eg FreeBSD returns the mod time of the symlink's containing
 # directory).
 if (
-   set X `ls -Lt $srcdir/configure conftest.file 2> /dev/null`
+   set X `ls -Lt $srcdir/configure conftest.file 2> /System/Devices/null`
    if test "$*" = "X"; then
       # -L didn't work.
       set X `ls -t $srcdir/configure conftest.file`
@@ -2634,7 +2634,7 @@
 echo "$as_me: WARNING: \`missing' script is too old or missing" >&2;}
 fi
 
-if mkdir -p --version . >/dev/null 2>&1 && test ! -d ./--version; then
+if mkdir -p --version . >/System/Devices/null 2>&1 && test ! -d ./--version; then
   # We used to keeping the `.' as first argument, in order to
   # allow $(mkdir_p) to be used without argument.  As in
   #   $(mkdir_p) $(somedir)
@@ -2718,7 +2718,7 @@
 	@echo 'ac_maketemp="$(MAKE)"'
 _ACEOF
 # GNU make sometimes prints "make[1]: Entering...", which would confuse us.
-eval `${MAKE-make} -f conftest.make 2>/dev/null | grep temp=`
+eval `${MAKE-make} -f conftest.make 2>/System/Devices/null | grep temp=`
 if test -n "$ac_maketemp"; then
   eval ac_cv_prog_make_${ac_make}_set=yes
 else
@@ -2736,14 +2736,14 @@
   SET_MAKE="MAKE=${MAKE-make}"
 fi
 
-rm -rf .tst 2>/dev/null
-mkdir .tst 2>/dev/null
+rm -rf .tst 2>/System/Devices/null
+mkdir .tst 2>/System/Devices/null
 if test -d .tst; then
   am__leading_dot=.
 else
   am__leading_dot=_
 fi
-rmdir .tst 2>/dev/null
+rmdir .tst 2>/System/Devices/null
 
 DEPDIR="${am__leading_dot}deps"
 
@@ -2769,7 +2769,7 @@
 # In particular we don't look at `^make:' because GNU make might
 # be invoked under some other name (usually "gmake"), in which
 # case it prints its new name instead of `make'.
-if test "`$am_make -s -f confmf 2> /dev/null | grep -v 'ing directory'`" = "done"; then
+if test "`$am_make -s -f confmf 2> /System/Devices/null | grep -v 'ing directory'`" = "done"; then
    am__include=include
    am__quote=
    _am_result=GNU
@@ -2777,7 +2777,7 @@
 # Now try BSD make style include.
 if test "$am__include" = "#"; then
    echo '.include "confinc"' > confmf
-   if test "`$am_make -s -f confmf 2> /dev/null`" = "done"; then
+   if test "`$am_make -s -f confmf 2> /System/Devices/null`" = "done"; then
       am__include=.include
       am__quote="\""
       _am_result=BSD
@@ -2820,7 +2820,7 @@
 
 # test whether we have cygpath
 if test -z "$CYGPATH_W"; then
-  if (cygpath --version) >/dev/null 2>/dev/null; then
+  if (cygpath --version) >/System/Devices/null 2>/System/Devices/null; then
     CYGPATH_W='cygpath -w'
   else
     CYGPATH_W=echo
@@ -3001,7 +3001,7 @@
     for i in 1 2 3 4 5 6; do
       echo '#include "conftst'$i'.h"' >> sub/conftest.c
       # Using `: > sub/conftst$i.h' creates only sub/conftst1.h with
-      # Solaris 8's {/usr,}/bin/sh.
+      # Solaris 8's {/usr,}/System/Tools/sh.
       touch sub/conftst$i.h
     done
     echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf
@@ -3025,10 +3025,10 @@
        source=sub/conftest.c object=sub/conftest.${OBJEXT-o} \
        depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
        $SHELL ./depcomp $depcc -c -o sub/conftest.${OBJEXT-o} sub/conftest.c \
-         >/dev/null 2>conftest.err &&
-       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
-       grep sub/conftest.${OBJEXT-o} sub/conftest.Po > /dev/null 2>&1 &&
-       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
+         >/System/Devices/null 2>conftest.err &&
+       grep sub/conftst6.h sub/conftest.Po > /System/Devices/null 2>&1 &&
+       grep sub/conftest.${OBJEXT-o} sub/conftest.Po > /System/Devices/null 2>&1 &&
+       ${MAKE-make} -s -f confmf > /System/Devices/null 2>&1; then
       # icc doesn't choke on unknown options, it will just issue warnings
       # or remarks (even with -Werror).  So we grep stderr for any message
       # that says an option was ignored or not supported.
@@ -3037,7 +3037,7 @@
       # The diagnosis changed in icc 8.0:
       #   icc: Command line remark: option '-MP' not supported
       if (grep 'ignoring option' conftest.err ||
-          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
+          grep 'not supported' conftest.err) >/System/Devices/null 2>&1; then :; else
         am_cv_CC_dependencies_compiler_type=$depmode
         break
       fi
@@ -3162,7 +3162,7 @@
       re_direlt='/[^/][^/]*/\.\./'
       # Canonicalize the path of ld
       ac_prog=`echo $ac_prog| sed 's%\\\\%/%g'`
-      while echo $ac_prog | grep "$re_direlt" > /dev/null 2>&1; do
+      while echo $ac_prog | grep "$re_direlt" > /System/Devices/null 2>&1; do
 	ac_prog=`echo $ac_prog| sed "s%$re_direlt%/%"`
       done
       test -z "$LD" && LD="$ac_prog"
@@ -3195,7 +3195,7 @@
       # Check to see if the program is GNU ld.  I'd rather use --version,
       # but apparently some GNU ld's only accept -v.
       # Break only if it was the GNU/non-GNU ld that we prefer.
-      if "$lt_cv_path_LD" -v 2>&1 < /dev/null | egrep '(GNU|with BFD)' > /dev/null; then
+      if "$lt_cv_path_LD" -v 2>&1 < /System/Devices/null | egrep '(GNU|with BFD)' > /System/Devices/null; then
 	test "$with_gnu_ld" != no && break
       else
 	test "$with_gnu_ld" != yes && break
@@ -3225,7 +3225,7 @@
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
   # I'd rather use --version here, but apparently some GNU ld's only accept -v.
-if $LD -v 2>&1 </dev/null | egrep '(GNU|with BFD)' 1>&5; then
+if $LD -v 2>&1 </System/Devices/null | egrep '(GNU|with BFD)' 1>&5; then
   lt_cv_prog_gnu_ld=yes
 else
   lt_cv_prog_gnu_ld=no
@@ -3265,11 +3265,11 @@
       # Check to see if the nm accepts a BSD-compat flag.
       # Adding the `sed 1q' prevents false positives on HP-UX, which says:
       #   nm: unknown option "B" ignored
-      # Tru64's nm complains that /dev/null is an invalid object file
-      if ($tmp_nm -B /dev/null 2>&1 | sed '1q'; exit 0) | egrep '(/dev/null|Invalid file or object type)' >/dev/null; then
+      # Tru64's nm complains that /System/Devices/null is an invalid object file
+      if ($tmp_nm -B /System/Devices/null 2>&1 | sed '1q'; exit 0) | egrep '(/System/Devices/null|Invalid file or object type)' >/System/Devices/null; then
 	lt_cv_path_NM="$tmp_nm -B"
 	break
-      elif ($tmp_nm -p /dev/null 2>&1 | sed '1q'; exit 0) | egrep /dev/null >/dev/null; then
+      elif ($tmp_nm -p /System/Devices/null 2>&1 | sed '1q'; exit 0) | egrep /System/Devices/null >/System/Devices/null; then
 	lt_cv_path_NM="$tmp_nm -p"
 	break
       else
@@ -3328,7 +3328,7 @@
 
 bsdi4*)
   lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (shared object|dynamic lib)'
-  lt_cv_file_magic_cmd='/usr/bin/file -L'
+  lt_cv_file_magic_cmd='/System/Tools/file -L'
   lt_cv_file_magic_test_file=/shlib/libc.so
   ;;
 
@@ -3339,26 +3339,26 @@
 
 darwin* | rhapsody*)
   lt_cv_deplibs_check_method='file_magic Mach-O dynamically linked shared library'
-  lt_cv_file_magic_cmd='/usr/bin/file -L'
+  lt_cv_file_magic_cmd='/System/Tools/file -L'
   case "$host_os" in
   rhapsody* | darwin1.012)
     lt_cv_file_magic_test_file='/System/Library/Frameworks/System.framework/System'
     ;;
   *) # Darwin 1.3 on
-    lt_cv_file_magic_test_file='/usr/lib/libSystem.dylib'
+    lt_cv_file_magic_test_file='/System/Library/Libraries/libSystem.dylib'
     ;;
   esac
   ;;
 
 freebsd* | kfreebsd*-gnu)
-  if echo __ELF__ | $CC -E - | grep __ELF__ > /dev/null; then
+  if echo __ELF__ | $CC -E - | grep __ELF__ > /System/Devices/null; then
     case $host_cpu in
     i*86 )
       # Not sure whether the presence of OpenBSD here was a mistake.
       # Let's accept both of them until this is cleared up.
       lt_cv_deplibs_check_method='file_magic (FreeBSD|OpenBSD)/i[3-9]86 (compact )?demand paged shared library'
-      lt_cv_file_magic_cmd=/usr/bin/file
-      lt_cv_file_magic_test_file=`echo /usr/lib/libc.so.*`
+      lt_cv_file_magic_cmd=/System/Tools/file
+      lt_cv_file_magic_test_file=`echo /System/Library/Libraries/libc.so.*`
       ;;
     esac
   else
@@ -3374,13 +3374,13 @@
   case $host_cpu in
   hppa*)
     lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|PA-RISC[0-9].[0-9]) shared library'
-    lt_cv_file_magic_cmd=/usr/bin/file
-    lt_cv_file_magic_test_file=/usr/lib/libc.sl
+    lt_cv_file_magic_cmd=/System/Tools/file
+    lt_cv_file_magic_test_file=/System/Library/Libraries/libc.sl
     ;;
   ia64*)
     lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF-[0-9][0-9]) shared object file - IA64'
-    lt_cv_file_magic_cmd=/usr/bin/file
-    lt_cv_file_magic_test_file=/usr/lib/hpux32/libc.so
+    lt_cv_file_magic_cmd=/System/Tools/file
+    lt_cv_file_magic_test_file=/System/Library/Libraries/hpux32/libc.so
     ;;
   esac
   ;;
@@ -3419,7 +3419,7 @@
   ;;
 
 netbsd* | knetbsd*-gnu)
-  if echo __ELF__ | $CC -E - | grep __ELF__ > /dev/null; then
+  if echo __ELF__ | $CC -E - | grep __ELF__ > /System/Devices/null; then
     lt_cv_deplibs_check_method='match_pattern /lib[^/\.]+\.so\.[0-9]+\.[0-9]+$'
   else
     lt_cv_deplibs_check_method='match_pattern /lib[^/\.]+\.so$'
@@ -3428,8 +3428,8 @@
 
 newsos6)
   lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (executable|dynamic lib)'
-  lt_cv_file_magic_cmd=/usr/bin/file
-  lt_cv_file_magic_test_file=/usr/lib/libnls.so
+  lt_cv_file_magic_cmd=/System/Tools/file
+  lt_cv_file_magic_test_file=/System/Library/Libraries/libnls.so
   ;;
 
 osf3* | osf4* | osf5*)
@@ -3459,7 +3459,7 @@
     ;;
   motorola)
     lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (shared object|dynamic lib) M[0-9][0-9]* Version [0-9]'
-    lt_cv_file_magic_test_file=`echo /usr/lib/libc.so*`
+    lt_cv_file_magic_test_file=`echo /System/Library/Libraries/libc.so*`
     ;;
   esac
   ;;
@@ -3505,8 +3505,8 @@
 	"file_magic "*)
 	  file_magic_regex="`expr \"$deplibs_check_method\" : \"file_magic \(.*\)\"`"
 	  MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
-	  if eval $file_magic_cmd \$file_magic_test_file 2> /dev/null |
-	    egrep "$file_magic_regex" > /dev/null; then
+	  if eval $file_magic_cmd \$file_magic_test_file 2> /System/Devices/null |
+	    egrep "$file_magic_regex" > /System/Devices/null; then
 	    :
 	  else
 	    cat <<EOF 1>&2
@@ -3569,8 +3569,8 @@
 	"file_magic "*)
 	  file_magic_regex="`expr \"$deplibs_check_method\" : \"file_magic \(.*\)\"`"
 	  MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
-	  if eval $file_magic_cmd \$file_magic_test_file 2> /dev/null |
-	    egrep "$file_magic_regex" > /dev/null; then
+	  if eval $file_magic_cmd \$file_magic_test_file 2> /System/Devices/null |
+	    egrep "$file_magic_regex" > /System/Devices/null; then
 	    :
 	  else
 	    cat <<EOF 1>&2
@@ -3816,7 +3816,7 @@
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }; then
    if test "$lt_cv_prog_gnu_ld" = yes; then
-    case `/usr/bin/file conftest.$ac_objext` in
+    case `/System/Tools/file conftest.$ac_objext` in
     *32-bit*)
       LD="${LD-ld} -melf32bsmip"
       ;;
@@ -3828,7 +3828,7 @@
       ;;
     esac
    else
-    case `/usr/bin/file conftest.$ac_objext` in
+    case `/System/Tools/file conftest.$ac_objext` in
     *32-bit*)
       LD="${LD-ld} -32"
       ;;
@@ -3852,7 +3852,7 @@
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }; then
-    case "`/usr/bin/file conftest.o`" in
+    case "`/System/Tools/file conftest.o`" in
     *ELF-32*)
       HPUX_IA64_MODE="32"
       ;;
@@ -3992,9 +3992,9 @@
      t end
      /^ac_cv_env/!s/^\([^=]*\)=\(.*\)$/\1=${\1=\2}/
      : end' >>confcache
-if diff $cache_file confcache >/dev/null 2>&1; then :; else
+if diff $cache_file confcache >/System/Devices/null 2>&1; then :; else
   if test -w $cache_file; then
-    test "x$cache_file" != "x/dev/null" && echo "updating cache $cache_file"
+    test "x$cache_file" != "x/System/Devices/null" && echo "updating cache $cache_file"
     cat confcache >$cache_file
   else
     echo "not updating unwritable cache $cache_file"
@@ -4009,7 +4009,7 @@
 AS="$AS" DLLTOOL="$DLLTOOL" OBJDUMP="$OBJDUMP" \
 objext="$OBJEXT" exeext="$EXEEXT" reload_flag="$reload_flag" \
 deplibs_check_method="$deplibs_check_method" file_magic_cmd="$file_magic_cmd" \
-${CONFIG_SHELL-/bin/sh} $ac_aux_dir/ltconfig --no-reexec \
+${CONFIG_SHELL-/System/Tools/sh} $ac_aux_dir/ltconfig --no-reexec \
 $libtool_flags --no-verify --build="$build" $ac_aux_dir/ltmain.sh $host \
 || { { echo "$as_me:$LINENO: error: libtool configure failed" >&5
 echo "$as_me: error: libtool configure failed" >&2;}
@@ -4017,7 +4017,7 @@
 
 # Reload cache, that may have been modified by ltconfig
 if test -r "$cache_file"; then
-  # Some versions of bash will fail to source /dev/null (special
+  # Some versions of bash will fail to source /System/Devices/null (special
   # files actually), so we avoid doing that.
   if test -f "$cache_file"; then
     { echo "$as_me:$LINENO: loading cache $cache_file" >&5
@@ -4372,18 +4372,18 @@
 echo "$as_me:$LINENO:" \
      "checking for C compiler version" >&5
 ac_compiler=`set X $ac_compile; echo $2`
-{ (eval echo "$as_me:$LINENO: \"$ac_compiler --version </dev/null >&5\"") >&5
-  (eval $ac_compiler --version </dev/null >&5) 2>&5
+{ (eval echo "$as_me:$LINENO: \"$ac_compiler --version </System/Devices/null >&5\"") >&5
+  (eval $ac_compiler --version </System/Devices/null >&5) 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
-{ (eval echo "$as_me:$LINENO: \"$ac_compiler -v </dev/null >&5\"") >&5
-  (eval $ac_compiler -v </dev/null >&5) 2>&5
+{ (eval echo "$as_me:$LINENO: \"$ac_compiler -v </System/Devices/null >&5\"") >&5
+  (eval $ac_compiler -v </System/Devices/null >&5) 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
-{ (eval echo "$as_me:$LINENO: \"$ac_compiler -V </dev/null >&5\"") >&5
-  (eval $ac_compiler -V </dev/null >&5) 2>&5
+{ (eval echo "$as_me:$LINENO: \"$ac_compiler -V </System/Devices/null >&5\"") >&5
+  (eval $ac_compiler -V </System/Devices/null >&5) 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
@@ -4785,13 +4785,13 @@
 # Find a good install program.  We prefer a C program (faster),
 # so one script is as good as another.  But avoid the broken or
 # incompatible versions:
-# SysV /etc/install, /usr/sbin/install
+# SysV/System/Settings/install, /usr/System/AdminTools/install
 # SunOS /usr/etc/install
-# IRIX /sbin/install
-# AIX /bin/install
+# IRIX /System/AdminTools/install
+# AIX /System/Tools/install
 # AmigaOS /C/install, which installs bootblocks on floppy discs
-# AIX 4 /usr/bin/installbsd, which doesn't work without a -g flag
-# AFS /usr/afsws/bin/install, which mishandles nonexistent args
+# AIX 4 /System/Tools/installbsd, which doesn't work without a -g flag
+# AFS /usr/afsws/System/Tools/install, which mishandles nonexistent args
 # SVR4 /usr/ucb/install, which tries to use the nonexistent group "staff"
 # OS/2's system install, which has a completely different semantic
 # ./install, which can be erroneously created by make from ./install.sh.
@@ -4809,7 +4809,7 @@
   # Account for people who put trailing slashes in PATH elements.
 case $as_dir/ in
   ./ | .// | /cC/* | \
-  /etc/* | /usr/sbin/* | /usr/etc/* | /sbin/* | /usr/afsws/bin/* | \
+ /System/Settings/* | /usr/System/AdminTools/* | /usr/etc/* | /System/AdminTools/* | /usr/afsws/System/Tools/* | \
   ?:\\/os2\\/install\\/* | ?:\\/OS2\\/INSTALL\\/* | \
   /usr/ucb/* ) ;;
   *)
@@ -4820,11 +4820,11 @@
       for ac_exec_ext in '' $ac_executable_extensions; do
 	if $as_executable_p "$as_dir/$ac_prog$ac_exec_ext"; then
 	  if test $ac_prog = install &&
-	    grep dspmsg "$as_dir/$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
+	    grep dspmsg "$as_dir/$ac_prog$ac_exec_ext" >/System/Devices/null 2>&1; then
 	    # AIX install.  It has an incompatible calling convention.
 	    :
 	  elif test $ac_prog = install &&
-	    grep pwplus "$as_dir/$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
+	    grep pwplus "$as_dir/$ac_prog$ac_exec_ext" >/System/Devices/null 2>&1; then
 	    # program-specific install script used by HP pwplus--don't use.
 	    :
 	  else
@@ -5093,7 +5093,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -5131,7 +5131,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -5200,7 +5200,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -5238,7 +5238,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -5286,7 +5286,7 @@
 if test "${ac_cv_prog_egrep+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
-  if echo a | (grep -E '(a|b)') >/dev/null 2>&1
+  if echo a | (grep -E '(a|b)') >/System/Devices/null 2>&1
     then ac_cv_prog_egrep='grep -E'
     else ac_cv_prog_egrep='egrep'
     fi
@@ -5363,7 +5363,7 @@
 
 _ACEOF
 if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  $EGREP "memchr" >/dev/null 2>&1; then
+  $EGREP "memchr" >/System/Devices/null 2>&1; then
   :
 else
   ac_cv_header_stdc=no
@@ -5384,7 +5384,7 @@
 
 _ACEOF
 if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  $EGREP "free" >/dev/null 2>&1; then
+  $EGREP "free" >/System/Devices/null 2>&1; then
   :
 else
   ac_cv_header_stdc=no
@@ -5394,7 +5394,7 @@
 fi
 
 if test $ac_cv_header_stdc = yes; then
-  # /bin/cc in Irix-4.0.5 gets non-ANSI ctype macros unless using -ansi.
+  # /System/Tools/cc in Irix-4.0.5 gets non-ANSI ctype macros unless using -ansi.
   if test "$cross_compiling" = yes; then
   :
 else
@@ -6021,7 +6021,7 @@
 
 _ACEOF
 if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  $EGREP "webecray" >/dev/null 2>&1; then
+  $EGREP "webecray" >/System/Devices/null 2>&1; then
   ac_cv_os_cray=yes
 else
   ac_cv_os_cray=no
@@ -6280,7 +6280,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -6717,7 +6717,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -7186,7 +7186,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -7844,7 +7844,7 @@
       fi
 
             if test "$XGETTEXT" != ":"; then
-			if $XGETTEXT --omit-header /dev/null 2> /dev/null; then
+			if $XGETTEXT --omit-header /System/Devices/null 2> /System/Devices/null; then
 	  : ;
 	else
 	  echo "$as_me:$LINENO: result: found xgettext programs is not GNU xgettext; ignore it" >&5
@@ -7997,7 +7997,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -8211,7 +8211,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -8357,9 +8357,9 @@
      t end
      /^ac_cv_env/!s/^\([^=]*\)=\(.*\)$/\1=${\1=\2}/
      : end' >>confcache
-if diff $cache_file confcache >/dev/null 2>&1; then :; else
+if diff $cache_file confcache >/System/Devices/null 2>&1; then :; else
   if test -w $cache_file; then
-    test "x$cache_file" != "x/dev/null" && echo "updating cache $cache_file"
+    test "x$cache_file" != "x/System/Devices/null" && echo "updating cache $cache_file"
     cat confcache >$cache_file
   else
     echo "not updating unwritable cache $cache_file"
@@ -8449,19 +8449,19 @@
 ## --------------------- ##
 
 # Be Bourne compatible
-if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
+if test -n "${ZSH_VERSION+set}" && (emulate sh) >/System/Devices/null 2>&1; then
   emulate sh
   NULLCMD=:
   # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
   # is contrary to our usage.  Disable this feature.
   alias -g '${1+"$@"}'='"$@"'
-elif test -n "${BASH_VERSION+set}" && (set -o posix) >/dev/null 2>&1; then
+elif test -n "${BASH_VERSION+set}" && (set -o posix) >/System/Devices/null 2>&1; then
   set -o posix
 fi
 DUALCASE=1; export DUALCASE # for MKS sh
 
 # Support unset when possible.
-if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
+if ( (MAIL=60; unset MAIL) || exit) >/System/Devices/null 2>&1; then
   as_unset=unset
 else
   as_unset=false
@@ -8488,13 +8488,13 @@
 done
 
 # Required to use basename.
-if expr a : '\(a\)' >/dev/null 2>&1; then
+if expr a : '\(a\)' >/System/Devices/null 2>&1; then
   as_expr=expr
 else
   as_expr=false
 fi
 
-if (basename /) >/dev/null 2>&1 && test "X`basename / 2>&1`" = "X/"; then
+if (basename /) >/System/Devices/null 2>&1 && test "X`basename / 2>&1`" = "X/"; then
   as_basename=basename
 else
   as_basename=false
@@ -8506,7 +8506,7 @@
 $as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
 	 X"$0" : 'X\(//\)$' \| \
 	 X"$0" : 'X\(/\)$' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X/"$0" |
     sed '/^.*\/\([^/][^/]*\)\/*$/{ s//\1/; q; }
   	  /^X\/\(\/\/\)$/{ s//\1/; q; }
@@ -8524,10 +8524,10 @@
 
 # The user is always right.
 if test "${PATH_SEPARATOR+set}" != set; then
-  echo "#! /bin/sh" >conf$$.sh
+  echo "#! /System/Tools/sh" >conf$$.sh
   echo  "exit 0"   >>conf$$.sh
   chmod +x conf$$.sh
-  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
+  if (PATH="/nonexistent;."; conf$$.sh) >/System/Devices/null 2>&1; then
     PATH_SEPARATOR=';'
   else
     PATH_SEPARATOR=:
@@ -8538,7 +8538,7 @@
 
   as_lineno_1=$LINENO
   as_lineno_2=$LINENO
-  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
+  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/System/Devices/null`
   test "x$as_lineno_1" != "x$as_lineno_2" &&
   test "x$as_lineno_3"  = "x$as_lineno_2"  || {
   # Find who we are.  Look in the path if we contain no path at all
@@ -8578,9 +8578,9 @@
 	   if ("$as_dir/$as_base" -c '
   as_lineno_1=$LINENO
   as_lineno_2=$LINENO
-  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
+  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/System/Devices/null`
   test "x$as_lineno_1" != "x$as_lineno_2" &&
-  test "x$as_lineno_3"  = "x$as_lineno_2" ') 2>/dev/null; then
+  test "x$as_lineno_3"  = "x$as_lineno_2" ') 2>/System/Devices/null; then
 	     $as_unset BASH_ENV || test "${BASH_ENV+set}" != set || { BASH_ENV=; export BASH_ENV; }
 	     $as_unset ENV || test "${ENV+set}" != set || { ENV=; export ENV; }
 	     CONFIG_SHELL=$as_dir/$as_base
@@ -8632,7 +8632,7 @@
   *)       ECHO_N= ECHO_C='\c' ECHO_T= ;;
 esac
 
-if expr a : '\(a\)' >/dev/null 2>&1; then
+if expr a : '\(a\)' >/System/Devices/null 2>&1; then
   as_expr=expr
 else
   as_expr=false
@@ -8640,7 +8640,7 @@
 
 rm -f conf$$ conf$$.exe conf$$.file
 echo >conf$$.file
-if ln -s conf$$.file conf$$ 2>/dev/null; then
+if ln -s conf$$.file conf$$ 2>/System/Devices/null; then
   # We could just check for DJGPP; but this test a) works b) is more generic
   # and c) will remain valid once DJGPP supports symlinks (DJGPP 2.04).
   if test -f conf$$.exe; then
@@ -8649,14 +8649,14 @@
   else
     as_ln_s='ln -s'
   fi
-elif ln conf$$.file conf$$ 2>/dev/null; then
+elif ln conf$$.file conf$$ 2>/System/Devices/null; then
   as_ln_s=ln
 else
   as_ln_s='cp -p'
 fi
 rm -f conf$$ conf$$.exe conf$$.file
 
-if mkdir -p . 2>/dev/null; then
+if mkdir -p . 2>/System/Devices/null; then
   as_mkdir_p=:
 else
   test -d ./-p && rmdir ./-p
@@ -8705,7 +8705,7 @@
   $ $0 $@
 
 _CSEOF
-echo "on `(hostname || uname -n) 2>/dev/null | sed 1q`" >&5
+echo "on `(hostname || uname -n) 2>/System/Devices/null | sed 1q`" >&5
 echo >&5
 _ACEOF
 
@@ -8839,7 +8839,7 @@
 ac_configure_extra_args=
 
 if $ac_cs_silent; then
-  exec 6>/dev/null
+  exec 6>/System/Devices/null
   ac_configure_extra_args="$ac_configure_extra_args --silent"
 fi
 
@@ -8903,7 +8903,7 @@
 # Create a (secure) tmp directory for tmp files.
 
 {
-  tmp=`(umask 077 && mktemp -d -q "./confstatXXXXXX") 2>/dev/null` &&
+  tmp=`(umask 077 && mktemp -d -q "./confstatXXXXXX") 2>/System/Devices/null` &&
   test -n "$tmp" && test -d "$tmp"
 }  ||
 {
@@ -9100,12 +9100,12 @@
   esac
 
   # Compute @srcdir@, @top_srcdir@, and @INSTALL@ for subdirectories.
-  ac_dir=`(dirname "$ac_file") 2>/dev/null ||
+  ac_dir=`(dirname "$ac_file") 2>/System/Devices/null ||
 $as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$ac_file" : 'X\(//\)[^/]' \| \
 	 X"$ac_file" : 'X\(//\)$' \| \
 	 X"$ac_file" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$ac_file" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -9119,12 +9119,12 @@
     as_dirs=
     while test ! -d "$as_dir"; do
       as_dirs="$as_dir $as_dirs"
-      as_dir=`(dirname "$as_dir") 2>/dev/null ||
+      as_dir=`(dirname "$as_dir") 2>/System/Devices/null ||
 $as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$as_dir" : 'X\(//\)[^/]' \| \
 	 X"$as_dir" : 'X\(//\)$' \| \
 	 X"$as_dir" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$as_dir" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -9244,7 +9244,7 @@
 	   # Source tree
 	   echo "$srcdir/$f"
 	 else
-	   # /dev/null tree
+	   # /System/Devices/null tree
 	   { { echo "$as_me:$LINENO: error: cannot find input file: $f" >&5
 echo "$as_me: error: cannot find input file: $f" >&2;}
    { (exit 1); exit 1; }; }
@@ -9336,7 +9336,7 @@
 	   # Source tree
 	   echo "$srcdir/$f"
 	 else
-	   # /dev/null tree
+	   # /System/Devices/null tree
 	   { { echo "$as_me:$LINENO: error: cannot find input file: $f" >&5
 echo "$as_me: error: cannot find input file: $f" >&2;}
    { (exit 1); exit 1; }; }
@@ -9389,11 +9389,11 @@
 # Break up conftest.defines because some shells have a limit on the size
 # of here documents, and old seds have small limits too (100 cmds).
 echo '  # Handle all the #define templates only if necessary.' >>$CONFIG_STATUS
-echo '  if grep "^[	 ]*#[	 ]*define" $tmp/in >/dev/null; then' >>$CONFIG_STATUS
+echo '  if grep "^[	 ]*#[	 ]*define" $tmp/in >/System/Devices/null; then' >>$CONFIG_STATUS
 echo '  # If there are no defines, we may have an empty if/fi' >>$CONFIG_STATUS
 echo '  :' >>$CONFIG_STATUS
 rm -f conftest.tail
-while grep . conftest.defines >/dev/null
+while grep . conftest.defines >/System/Devices/null
 do
   # Write a limited-size here document to $tmp/defines.sed.
   echo '  cat >$tmp/defines.sed <<CEOF' >>$CONFIG_STATUS
@@ -9420,7 +9420,7 @@
 # of here documents, and old seds have small limits too (100 cmds).
 echo '  # Handle all the #undef templates' >>$CONFIG_STATUS
 rm -f conftest.tail
-while grep . conftest.undefs >/dev/null
+while grep . conftest.undefs >/System/Devices/null
 do
   # Write a limited-size here document to $tmp/undefs.sed.
   echo '  cat >$tmp/undefs.sed <<CEOF' >>$CONFIG_STATUS
@@ -9453,16 +9453,16 @@
   cat $tmp/in >>$tmp/config.h
   rm -f $tmp/in
   if test x"$ac_file" != x-; then
-    if diff $ac_file $tmp/config.h >/dev/null 2>&1; then
+    if diff $ac_file $tmp/config.h >/System/Devices/null 2>&1; then
       { echo "$as_me:$LINENO: $ac_file is unchanged" >&5
 echo "$as_me: $ac_file is unchanged" >&6;}
     else
-      ac_dir=`(dirname "$ac_file") 2>/dev/null ||
+      ac_dir=`(dirname "$ac_file") 2>/System/Devices/null ||
 $as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$ac_file" : 'X\(//\)[^/]' \| \
 	 X"$ac_file" : 'X\(//\)$' \| \
 	 X"$ac_file" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$ac_file" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -9476,12 +9476,12 @@
     as_dirs=
     while test ! -d "$as_dir"; do
       as_dirs="$as_dir $as_dirs"
-      as_dir=`(dirname "$as_dir") 2>/dev/null ||
+      as_dir=`(dirname "$as_dir") 2>/System/Devices/null ||
 $as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$as_dir" : 'X\(//\)[^/]' \| \
 	 X"$as_dir" : 'X\(//\)$' \| \
 	 X"$as_dir" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$as_dir" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -9511,12 +9511,12 @@
       _am_stamp_count=`expr $_am_stamp_count + 1` ;;
   esac
 done
-echo "timestamp for $ac_file" >`(dirname $ac_file) 2>/dev/null ||
+echo "timestamp for $ac_file" >`(dirname $ac_file) 2>/System/Devices/null ||
 $as_expr X$ac_file : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X$ac_file : 'X\(//\)[^/]' \| \
 	 X$ac_file : 'X\(//\)$' \| \
 	 X$ac_file : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X$ac_file |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -9533,12 +9533,12 @@
 for ac_file in : $CONFIG_COMMANDS; do test "x$ac_file" = x: && continue
   ac_dest=`echo "$ac_file" | sed 's,:.*,,'`
   ac_source=`echo "$ac_file" | sed 's,[^:]*:,,'`
-  ac_dir=`(dirname "$ac_dest") 2>/dev/null ||
+  ac_dir=`(dirname "$ac_dest") 2>/System/Devices/null ||
 $as_expr X"$ac_dest" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$ac_dest" : 'X\(//\)[^/]' \| \
 	 X"$ac_dest" : 'X\(//\)$' \| \
 	 X"$ac_dest" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$ac_dest" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -9552,12 +9552,12 @@
     as_dirs=
     while test ! -d "$as_dir"; do
       as_dirs="$as_dir $as_dirs"
-      as_dir=`(dirname "$as_dir") 2>/dev/null ||
+      as_dir=`(dirname "$as_dir") 2>/System/Devices/null ||
 $as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$as_dir" : 'X\(//\)[^/]' \| \
 	 X"$as_dir" : 'X\(//\)$' \| \
 	 X"$as_dir" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$as_dir" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -9648,13 +9648,13 @@
   # Grep'ing the first line is not enough: some people post-process
   # each Makefile.in and add a new line on top of each file to say so.
   # So let's grep whole file.
-  if grep '^#.*generated by automake' $mf > /dev/null 2>&1; then
-    dirpart=`(dirname "$mf") 2>/dev/null ||
+  if grep '^#.*generated by automake' $mf > /System/Devices/null 2>&1; then
+    dirpart=`(dirname "$mf") 2>/System/Devices/null ||
 $as_expr X"$mf" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$mf" : 'X\(//\)[^/]' \| \
 	 X"$mf" : 'X\(//\)$' \| \
 	 X"$mf" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$mf" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -9682,12 +9682,12 @@
        sed -e 's/\$(DEPDIR)/'"$DEPDIR"'/g' -e 's/\$U/'"$U"'/g'`; do
     # Make sure the directory exists.
     test -f "$dirpart/$file" && continue
-    fdir=`(dirname "$file") 2>/dev/null ||
+    fdir=`(dirname "$file") 2>/System/Devices/null ||
 $as_expr X"$file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$file" : 'X\(//\)[^/]' \| \
 	 X"$file" : 'X\(//\)$' \| \
 	 X"$file" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$file" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -9701,12 +9701,12 @@
     as_dirs=
     while test ! -d "$as_dir"; do
       as_dirs="$as_dir $as_dirs"
-      as_dir=`(dirname "$as_dir") 2>/dev/null ||
+      as_dir=`(dirname "$as_dir") 2>/System/Devices/null ||
 $as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$as_dir" : 'X\(//\)[^/]' \| \
 	 X"$as_dir" : 'X\(//\)$' \| \
 	 X"$as_dir" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$as_dir" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -9741,7 +9741,7 @@
 # config.status does its own redirection, appending to config.log.
 # Unfortunately, on DOS this fails, as config.log is still kept open
 # by configure, so config.status won't be able to write to it; its
-# output is simply discarded.  So we exec the FD to /dev/null,
+# output is simply discarded.  So we exec the FD to /System/Devices/null,
 # effectively closing config.log, so it can be properly (re)opened and
 # appended to by config.status.  When coming back to configure, we
 # need to make the FD available again.
@@ -9750,7 +9750,7 @@
   ac_config_status_args=
   test "$silent" = yes &&
     ac_config_status_args="$ac_config_status_args --quiet"
-  exec 5>/dev/null
+  exec 5>/System/Devices/null
   $SHELL $CONFIG_STATUS $ac_config_status_args || ac_cs_success=false
   exec 5>>config.log
   # Use ||, not &&, to avoid exiting from the if with $? = 1, which
diff -urN binutils-2.16.1/gprof/po/Make-in binutils-2.16.1-STEP/gprof/po/Make-in
--- binutils-2.16.1/gprof/po/Make-in	2005-03-04 01:05:13.000000000 +1300
+++ binutils-2.16.1-STEP/gprof/po/Make-in	2005-09-02 11:16:20.440211192 +1200
@@ -10,7 +10,7 @@
 PACKAGE = @PACKAGE@
 VERSION = @VERSION@
 
-SHELL = /bin/sh
+SHELL = /System/Tools/sh
 @SET_MAKE@
 
 srcdir = @srcdir@
@@ -205,7 +205,7 @@
 dist distdir: update-po $(DISTFILES)
 	dists="$(DISTFILES)"; \
 	for file in $$dists; do \
-	  ln $(srcdir)/$$file $(distdir) 2> /dev/null \
+	  ln $(srcdir)/$$file $(distdir) 2> /System/Devices/null \
 	    || cp -p $(srcdir)/$$file $(distdir); \
 	done
 
diff -urN binutils-2.16.1/install-sh binutils-2.16.1-STEP/install-sh
--- binutils-2.16.1/install-sh	2005-01-19 13:34:56.000000000 +1300
+++ binutils-2.16.1-STEP/install-sh	2005-09-02 11:16:20.443210736 +1200
@@ -1,4 +1,4 @@
-#!/bin/sh
+#!/System/Tools/sh
 # install - install a program, script, or datafile
 
 scriptversion=2004-12-17.09
@@ -279,7 +279,7 @@
       && { test -z "$chmodcmd" || $doit $chmodcmd "$dsttmp"; } &&
 
     # Now rename the file to the real destination.
-    { $doit $mvcmd -f "$dsttmp" "$dstdir/$dstfile" 2>/dev/null \
+    { $doit $mvcmd -f "$dsttmp" "$dstdir/$dstfile" 2>/System/Devices/null \
       || {
 	   # The rename failed, perhaps because mv can't rename something else
 	   # to itself, or perhaps because mv is so ancient that it does not
@@ -292,8 +292,8 @@
 	   # file should still install successfully.
 	   {
 	     if test -f "$dstdir/$dstfile"; then
-	       $doit $rmcmd -f "$dstdir/$dstfile" 2>/dev/null \
-	       || $doit $mvcmd -f "$dstdir/$dstfile" "$rmtmp" 2>/dev/null \
+	       $doit $rmcmd -f "$dstdir/$dstfile" 2>/System/Devices/null \
+	       || $doit $mvcmd -f "$dstdir/$dstfile" "$rmtmp" 2>/System/Devices/null \
 	       || {
 		 echo "$0: cannot unlink or rename $dstdir/$dstfile" >&2
 		 (exit 1); exit 1
diff -urN binutils-2.16.1/intl/ChangeLog binutils-2.16.1-STEP/intl/ChangeLog
--- binutils-2.16.1/intl/ChangeLog	2004-12-01 06:20:48.000000000 +1300
+++ binutils-2.16.1-STEP/intl/ChangeLog	2005-09-02 11:16:20.476205720 +1200
@@ -966,7 +966,7 @@
 	* Makefile.in (../po/cat-id-tbl.o):
 	Use $(MAKE) instead of make for recursive make.
 
-	* Makefile.in (.el.elc): Use $(SHELL) instead of /bin/sh.
+	* Makefile.in (.el.elc): Use $(SHELL) instead of /System/Tools/sh.
 	(install-exec): Add missing dummy goal.
 	(install-data, uninstall): @ in multi-line shell command at
  	beginning, not in front of echo.  Reported by Eric Backus.
diff -urN binutils-2.16.1/intl/Makefile.in binutils-2.16.1-STEP/intl/Makefile.in
--- binutils-2.16.1/intl/Makefile.in	2004-12-01 06:20:48.000000000 +1300
+++ binutils-2.16.1-STEP/intl/Makefile.in	2005-09-02 11:16:20.481204960 +1200
@@ -18,7 +18,7 @@
 PACKAGE = @PACKAGE@
 VERSION = @VERSION@
 
-SHELL = /bin/sh
+SHELL = /System/Tools/sh
 
 srcdir = @srcdir@
 top_srcdir = @top_srcdir@
@@ -189,7 +189,7 @@
 	  additional="$(DISTFILES.normal)"; \
 	fi; \
 	for file in $(DISTFILES.common) $$additional; do \
-	  ln $(srcdir)/$$file $(distdir) 2> /dev/null \
+	  ln $(srcdir)/$$file $(distdir) 2> /System/Devices/null \
 	    || cp -p $(srcdir)/$$file $(distdir); \
 	done
 
diff -urN binutils-2.16.1/intl/aclocal.m4 binutils-2.16.1-STEP/intl/aclocal.m4
--- binutils-2.16.1/intl/aclocal.m4	2001-11-29 16:20:34.000000000 +1300
+++ binutils-2.16.1-STEP/intl/aclocal.m4	2005-09-02 11:16:20.467207088 +1200
@@ -155,7 +155,7 @@
       if test "$XGETTEXT" != ":"; then
 	dnl If it is no GNU xgettext we define it as : so that the
 	dnl Makefiles still can work.
-	if $XGETTEXT --omit-header /dev/null 2> /dev/null; then
+	if $XGETTEXT --omit-header /System/Devices/null 2> /System/Devices/null; then
 	  : ;
 	else
 	  AC_MSG_RESULT(
diff -urN binutils-2.16.1/intl/configure binutils-2.16.1-STEP/intl/configure
--- binutils-2.16.1/intl/configure	2001-11-29 16:20:34.000000000 +1300
+++ binutils-2.16.1-STEP/intl/configure	2005-09-02 11:16:20.480205112 +1200
@@ -1,4 +1,4 @@
-#! /bin/sh
+#! /System/Tools/sh
 
 # Guess values for system-dependent variables and create Makefiles.
 # Generated automatically using autoconf version 2.12.1 
@@ -53,7 +53,7 @@
 # Initialize some other variables.
 subdirs=
 MFLAGS= MAKEFLAGS=
-SHELL=${CONFIG_SHELL-/bin/sh}
+SHELL=${CONFIG_SHELL-/System/Tools/sh}
 # Maximum number of lines to put in a shell here document.
 ac_max_here_lines=12
 
@@ -406,12 +406,12 @@
 # 0 standard input
 # 1 file creation
 # 2 errors and warnings
-# 3 some systems may open it to /dev/tty
+# 3 some systems may open it to /System/Devices/tty
 # 4 used on the Kubota Titan
 # 6 checking for... messages and results
 # 5 compiler messages saved in config.log
 if test "$silent" = yes; then
-  exec 6>/dev/null
+  exec 6>/System/Devices/null
 else
   exec 6>&1
 fi
@@ -483,9 +483,9 @@
 # Prefer explicitly selected file to automatically selected ones.
 if test -z "$CONFIG_SITE"; then
   if test "x$prefix" != xNONE; then
-    CONFIG_SITE="$prefix/share/config.site $prefix/etc/config.site"
+    CONFIG_SITE="$prefix/share/config.site $prefix/System/SystemFS/config.site"
   else
-    CONFIG_SITE="$ac_default_prefix/share/config.site $ac_default_prefix/etc/config.site"
+    CONFIG_SITE="$ac_default_prefix/share/config.site $ac_default_prefix/System/SystemFS/config.site"
   fi
 fi
 for ac_site_file in $CONFIG_SITE; do
@@ -510,9 +510,9 @@
 ac_link='${CC-cc} -o conftest $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS 1>&5'
 cross_compiling=$ac_cv_prog_cc_cross
 
-if (echo "testing\c"; echo 1,2,3) | grep c >/dev/null; then
+if (echo "testing\c"; echo 1,2,3) | grep c >/System/Devices/null; then
   # Stardent Vistra SVR4 grep lacks -e, says ghazi@caip.rutgers.edu.
-  if (echo -n testing; echo 1,2,3) | sed s/-n/xn/ | grep xn >/dev/null; then
+  if (echo -n testing; echo 1,2,3) | sed s/-n/xn/ | grep xn >/System/Devices/null; then
     ac_n= ac_c='
 ' ac_t='	'
   else
@@ -549,12 +549,12 @@
 # Find a good install program.  We prefer a C program (faster),
 # so one script is as good as another.  But avoid the broken or
 # incompatible versions:
-# SysV /etc/install, /usr/sbin/install
-# SunOS /usr/etc/install
-# IRIX /sbin/install
-# AIX /bin/install
-# AIX 4 /usr/bin/installbsd, which doesn't work without a -g flag
-# AFS /usr/afsws/bin/install, which mishandles nonexistent args
+# SysV/System/Settings/install, /usr/System/AdminTools/install
+# SunOS /usr/System/SystemFS/install
+# IRIX /System/AdminTools/install
+# AIX /System/Tools/install
+# AIX 4 /System/Tools/installbsd, which doesn't work without a -g flag
+# AFS /usr/afsws/System/Tools/install, which mishandles nonexistent args
 # SVR4 /usr/ucb/install, which tries to use the nonexistent group "staff"
 # ./install, which can be erroneously created by make from ./install.sh.
 echo $ac_n "checking for a BSD compatible install""... $ac_c" 1>&6
@@ -567,7 +567,7 @@
   for ac_dir in $PATH; do
     # Account for people who put trailing slashes in PATH elements.
     case "$ac_dir/" in
-    /|./|.//|/etc/*|/usr/sbin/*|/usr/etc/*|/sbin/*|/usr/afsws/bin/*|/usr/ucb/*) ;;
+    /|./|.//|/System/SystemFS/*|/usr/System/AdminTools/*|/usr/System/SystemFS/*|/System/AdminTools/*|/usr/afsws/System/Tools/*|/usr/ucb/*) ;;
     *)
       # OSF1 and SCO ODT 3.0 have their own names for install.
       # Don't use installbsd from OSF since it installs stuff as root
@@ -575,7 +575,7 @@
       for ac_prog in ginstall scoinst install; do
         if test -f $ac_dir/$ac_prog; then
 	  if test $ac_prog = install &&
-            grep dspmsg $ac_dir/$ac_prog >/dev/null 2>&1; then
+            grep dspmsg $ac_dir/$ac_prog >/System/Devices/null 2>&1; then
 	    # AIX install.  It has an incompatible calling convention.
 	    :
 	  else
@@ -632,7 +632,7 @@
 #include <assert.h>
 Syntax Error
 EOF
-ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
+ac_try="$ac_cpp conftest.$ac_ext >/System/Devices/null 2>conftest.out"
 { (eval echo configure:637: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out`
 if test -z "$ac_err"; then
@@ -649,7 +649,7 @@
 #include <assert.h>
 Syntax Error
 EOF
-ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
+ac_try="$ac_cpp conftest.$ac_ext >/System/Devices/null 2>conftest.out"
 { (eval echo configure:654: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out`
 if test -z "$ac_err"; then
@@ -683,7 +683,7 @@
 	@echo 'ac_maketemp="${MAKE}"'
 EOF
 # GNU make sometimes prints "make[1]: Entering...", which would confuse us.
-eval `${MAKE-make} -f conftestmake 2>/dev/null | grep temp=`
+eval `${MAKE-make} -f conftestmake 2>/System/Devices/null | grep temp=`
 if test -n "$ac_maketemp"; then
   eval ac_cv_prog_make_${ac_make}_set=yes
 else
@@ -796,7 +796,7 @@
 if { (eval echo configure:797: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then
   ac_cv_prog_cc_works=yes
   # If we can't run a trivial program, we are probably using a cross compiler.
-  if (./conftest; exit) 2>/dev/null; then
+  if (./conftest; exit) 2>/System/Devices/null; then
     ac_cv_prog_cc_cross=no
   else
     ac_cv_prog_cc_cross=yes
@@ -827,7 +827,7 @@
   yes;
 #endif
 EOF
-if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:831: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then
+if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:831: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/System/Devices/null 2>&1; then
   ac_cv_prog_gcc=yes
 else
   ac_cv_prog_gcc=no
@@ -900,8 +900,8 @@
 
 echo $ac_n "checking for POSIXized ISC""... $ac_c" 1>&6
 echo "configure:903: checking for POSIXized ISC" >&5
-if test -d /etc/conf/kconfig.d &&
-  grep _POSIX_VERSION /usr/include/sys/unistd.h >/dev/null 2>&1
+if test -d/System/Settings/conf/kconfig.d &&
+  grep _POSIX_VERSION /usr/include/sys/unistd.h >/System/Devices/null 2>&1
 then
   echo "$ac_t""yes" 1>&6
   ISC=yes # If later tests want to check for ISC.
@@ -932,7 +932,7 @@
 #include <string.h>
 #include <float.h>
 EOF
-ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
+ac_try="$ac_cpp conftest.$ac_ext >/System/Devices/null 2>conftest.out"
 { (eval echo configure:937: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out`
 if test -z "$ac_err"; then
@@ -955,7 +955,7 @@
 #include <string.h>
 EOF
 if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  egrep "memchr" >/dev/null 2>&1; then
+  egrep "memchr" >/System/Devices/null 2>&1; then
   :
 else
   rm -rf conftest*
@@ -973,7 +973,7 @@
 #include <stdlib.h>
 EOF
 if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  egrep "free" >/dev/null 2>&1; then
+  egrep "free" >/System/Devices/null 2>&1; then
   :
 else
   rm -rf conftest*
@@ -984,7 +984,7 @@
 fi
 
 if test $ac_cv_header_stdc = yes; then
-  # /bin/cc in Irix-4.0.5 gets non-ANSI ctype macros unless using -ansi.
+  # /System/Tools/cc in Irix-4.0.5 gets non-ANSI ctype macros unless using -ansi.
 if test "$cross_compiling" = yes; then
   :
 else
@@ -1000,7 +1000,7 @@
 exit (0); }
 
 EOF
-if { (eval echo configure:1004: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/dev/null
+if { (eval echo configure:1004: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/System/Devices/null
 then
   :
 else
@@ -1153,7 +1153,7 @@
 #endif
 EOF
 if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  egrep "off_t[^a-zA-Z_0-9]" >/dev/null 2>&1; then
+  egrep "off_t[^a-zA-Z_0-9]" >/System/Devices/null 2>&1; then
   rm -rf conftest*
   ac_cv_type_off_t=yes
 else
@@ -1186,7 +1186,7 @@
 #endif
 EOF
 if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  egrep "size_t[^a-zA-Z_0-9]" >/dev/null 2>&1; then
+  egrep "size_t[^a-zA-Z_0-9]" >/System/Devices/null 2>&1; then
   rm -rf conftest*
   ac_cv_type_size_t=yes
 else
@@ -1315,7 +1315,7 @@
 
 EOF
 if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  egrep "webecray" >/dev/null 2>&1; then
+  egrep "webecray" >/System/Devices/null 2>&1; then
   rm -rf conftest*
   ac_cv_os_cray=yes
 else
@@ -1412,7 +1412,7 @@
   exit (find_stack_direction() < 0);
 }
 EOF
-if { (eval echo configure:1416: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/dev/null
+if { (eval echo configure:1416: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/System/Devices/null
 then
   ac_cv_c_stack_direction=1
 else
@@ -1446,7 +1446,7 @@
 #include "confdefs.h"
 #include <$ac_hdr>
 EOF
-ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
+ac_try="$ac_cpp conftest.$ac_ext >/System/Devices/null 2>conftest.out"
 { (eval echo configure:1451: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out`
 if test -z "$ac_err"; then
@@ -1677,7 +1677,7 @@
 }
 
 EOF
-if { (eval echo configure:1681: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/dev/null
+if { (eval echo configure:1681: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/System/Devices/null
 then
   ac_cv_func_mmap_fixed_mapped=yes
 else
@@ -1714,7 +1714,7 @@
 #include "confdefs.h"
 #include <$ac_hdr>
 EOF
-ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
+ac_try="$ac_cpp conftest.$ac_ext >/System/Devices/null 2>conftest.out"
 { (eval echo configure:1719: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out`
 if test -z "$ac_err"; then
@@ -1945,7 +1945,7 @@
 #include "confdefs.h"
 #include <libintl.h>
 EOF
-ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
+ac_try="$ac_cpp conftest.$ac_ext >/System/Devices/null 2>conftest.out"
 { (eval echo configure:1950: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out`
 if test -z "$ac_err"; then
@@ -2375,7 +2375,7 @@
       fi
 
             if test "$XGETTEXT" != ":"; then
-			if $XGETTEXT --omit-header /dev/null 2> /dev/null; then
+			if $XGETTEXT --omit-header /System/Devices/null 2> /System/Devices/null; then
 	  : ;
 	else
 	  echo "$ac_t""found xgettext programs is not GNU xgettext; ignore it" 1>&6
@@ -2458,7 +2458,7 @@
 #include "confdefs.h"
 #include <linux/version.h>
 EOF
-ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
+ac_try="$ac_cpp conftest.$ac_ext >/System/Devices/null 2>conftest.out"
 { (eval echo configure:2463: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out`
 if test -z "$ac_err"; then
@@ -2534,7 +2534,7 @@
 # the --cache-file=FILE option to use a different cache file; that is
 # what configure does when it calls configure scripts in
 # subdirectories, so they share the cache.
-# Giving --cache-file=/dev/null disables caching, for debugging configure.
+# Giving --cache-file=/System/Devices/null disables caching, for debugging configure.
 # config.status only pays attention to the cache file if you give it the
 # --recheck option to rerun configure.
 #
@@ -2593,11 +2593,11 @@
 echo creating $CONFIG_STATUS
 rm -f $CONFIG_STATUS
 cat > $CONFIG_STATUS <<EOF
-#! /bin/sh
+#! /System/Tools/sh
 # Generated automatically by configure.
 # Run this file to recreate the current configuration.
 # This directory was configured as follows,
-# on host `(hostname || uname -n) 2>/dev/null | sed 1q`:
+# on host `(hostname || uname -n) 2>/System/Devices/null | sed 1q`:
 #
 # $0 $ac_configure_args
 #
@@ -2609,8 +2609,8 @@
 do
   case "\$ac_option" in
   -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
-    echo "running \${CONFIG_SHELL-/bin/sh} $0 $ac_configure_args --no-create --no-recursion"
-    exec \${CONFIG_SHELL-/bin/sh} $0 $ac_configure_args --no-create --no-recursion ;;
+    echo "running \${CONFIG_SHELL-/System/Tools/sh} $0 $ac_configure_args --no-create --no-recursion"
+    exec \${CONFIG_SHELL-/System/Tools/sh} $0 $ac_configure_args --no-create --no-recursion ;;
   -version | --version | --versio | --versi | --vers | --ver | --ve | --v)
     echo "$CONFIG_STATUS generated by autoconf version 2.12.1"
     exit 0 ;;
@@ -2874,7 +2874,7 @@
   echo "/* $ac_file.  Generated automatically by configure.  */" > conftest.h
   cat conftest.in >> conftest.h
   rm -f conftest.in
-  if cmp -s $ac_file conftest.h 2>/dev/null; then
+  if cmp -s $ac_file conftest.h 2>/System/Devices/null; then
     echo "$ac_file is unchanged"
     rm -f conftest.h
   else
@@ -2928,7 +2928,7 @@
   esac
 
   # Make a symlink if possible; otherwise try a hard link.
-  if ln -s $ac_rel_source $ac_dest 2>/dev/null ||
+  if ln -s $ac_rel_source $ac_dest 2>/System/Devices/null ||
     ln $srcdir/$ac_source $ac_dest; then :
   else
     { echo "configure: error: can not link $ac_dest to $srcdir/$ac_source" 1>&2; exit 1; }
@@ -2946,5 +2946,5 @@
 EOF
 chmod +x $CONFIG_STATUS
 rm -fr confdefs* $ac_clean_files
-test "$no_create" = yes || ${CONFIG_SHELL-/bin/sh} $CONFIG_STATUS || exit 1
+test "$no_create" = yes || ${CONFIG_SHELL-/System/Tools/sh} $CONFIG_STATUS || exit 1
 
diff -urN binutils-2.16.1/ld/ChangeLog-0001 binutils-2.16.1-STEP/ld/ChangeLog-0001
--- binutils-2.16.1/ld/ChangeLog-0001	2004-01-03 00:16:20.000000000 +1300
+++ binutils-2.16.1-STEP/ld/ChangeLog-0001	2005-09-02 11:16:20.499202224 +1200
@@ -117,7 +117,7 @@
 	* configure.in: Substitute LIB_PATH.
 	* configure: Regenerate.
 	* configure.tgt (*cygwin): Set LIB_PATH for cross build.
-	* configure.host (*cygwin): Add /usr/lib/w32api to NATIVE_LIB_DIRS.
+	* configure.host (*cygwin): Add /System/Library/Libraries/w32api to NATIVE_LIB_DIRS.
 
 2001-12-07  Nick Clifton  <nickc@cambridge.redhat.com>
 
diff -urN binutils-2.16.1/ld/ChangeLog-9197 binutils-2.16.1-STEP/ld/ChangeLog-9197
--- binutils-2.16.1/ld/ChangeLog-9197	2003-10-26 05:26:30.000000000 +1300
+++ binutils-2.16.1-STEP/ld/ChangeLog-9197	2005-09-02 11:16:20.511200400 +1200
@@ -1994,7 +1994,7 @@
 
 	* emultempl/lnk960.em (machine_table): Add jx and hx.
 
-	* genscripts.sh: Don't use ${9:-xx}, since Ultrix /bin/sh doesn't
+	* genscripts.sh: Don't use ${9:-xx}, since Ultrix /System/Tools/sh doesn't
 	support it.
 
 Tue Mar 12 12:43:59 1996  David Mosberger-Tang  <davidm@koala.azstarnet.com>
@@ -4778,7 +4778,7 @@
 
 Wed May 18 10:15:39 1994  Ian Lance Taylor  (ian@cygnus.com)
 
-	* Makefile.in (install): Redirect output of ln to /dev/null.
+	* Makefile.in (install): Redirect output of ln to /System/Devices/null.
 
 Mon May 16 13:35:08 1994  Jeff Law  (law@snake.cs.utah.edu)
 
@@ -6232,7 +6232,7 @@
 
 Wed Jul  7 11:33:12 1993  Ian Lance Taylor  (ian@cygnus.com)
 
-	* Makefile.in (install): Don't install as $(tooldir)/bin/gld;
+	* Makefile.in (install): Don't install as $(tooldir)/bingld;
 	collect2 doesn't look for gld any more anyhow.
 
 Mon Jul  5 14:29:48 1993  Ian Lance Taylor  (ian@cygnus.com)
@@ -6640,7 +6640,7 @@
 
 Thu Jan 28 15:12:04 1993  Ian Lance Taylor  (ian@cygnus.com)
 
-	* Makefile.in (install): Remove $(tooldir)/bin/gld before creating
+	* Makefile.in (install): Remove $(tooldir)/bingld before creating
 	the link to it.
 
 Tue Jan 26 11:49:50 1993  Ian Lance Taylor  (ian@cygnus.com)
@@ -6660,8 +6660,8 @@
 
 Thu Jan 14 15:30:27 1993  Ian Lance Taylor  (ian@cygnus.com)
 
-	* Makefile.in (install): Install ld as both $(tooldir)/bin/ld and
-	$(tooldir)/bin/gld, so that gcc can find it with or without
+	* Makefile.in (install): Install ld as both $(tooldir)/binld and
+	$(tooldir)/bingld, so that gcc can find it with or without
 	collect2.
 
 Mon Jan 11 18:50:07 1993  Ian Lance Taylor  (ian@tweedledumb.cygnus.com)
diff -urN binutils-2.16.1/ld/Makefile.am binutils-2.16.1-STEP/ld/Makefile.am
--- binutils-2.16.1/ld/Makefile.am	2005-01-21 08:37:49.000000000 +1300
+++ binutils-2.16.1-STEP/ld/Makefile.am	2005-09-02 11:16:20.672175928 +1200
@@ -1549,7 +1549,7 @@
 	  export TCL_LIBRARY; \
 	fi; \
 	runtest=$(RUNTEST); \
-	if $(SHELL) -c "$$runtest --version" > /dev/null 2>&1; then \
+	if $(SHELL) -c "$$runtest --version" > /System/Devices/null 2>&1; then \
 	  $$runtest --tool $(DEJATOOL) --srcdir $${srcroot}/testsuite \
 		CC="$(CC_FOR_TARGET)" CFLAGS="$(CFLAGS)" \
 		CXX="$(CXX_FOR_TARGET)" CXXFLAGS="$(CXXFLAGS)" \
@@ -1619,8 +1619,8 @@
 # because almost all configs use "gen" version of manual.
 #  Set DOCVER above to change.
 configdoc.texi:	${DOCVER}-doc.texi
-	ln -s ${srcdir}/${DOCVER}-doc.texi ./configdoc.texi >/dev/null 2>&1 \
-	  || ln ${srcdir}/${DOCVER}-doc.texi ./configdoc.texi >/dev/null 2>&1 \
+	ln -s ${srcdir}/${DOCVER}-doc.texi ./configdoc.texi >/System/Devices/null 2>&1 \
+	  || ln ${srcdir}/${DOCVER}-doc.texi ./configdoc.texi >/System/Devices/null 2>&1 \
 	  || cp ${srcdir}/${DOCVER}-doc.texi ./configdoc.texi
 
 ldver.texi: Makefile
@@ -1669,10 +1669,10 @@
 	  else :; fi; \
 	done
 	n=`echo ld | sed '$(transform)'`; \
-	if [ "$(bindir)/$$n$(EXEEXT)" != "$(tooldir)/bin/ld$(EXEEXT)" ]; then \
-	  rm -f $(DESTDIR)$(tooldir)/bin/ld$(EXEEXT); \
-	  ln $(DESTDIR)$(bindir)/$$n$(EXEEXT) $(DESTDIR)$(tooldir)/bin/ld$(EXEEXT) >/dev/null 2>/dev/null \
-	  || $(LIBTOOL) --mode=install $(INSTALL_PROGRAM) ld-new$(EXEEXT) $(DESTDIR)$(tooldir)/bin/ld$(EXEEXT); \
+	if [ "$(bindir)/$$n$(EXEEXT)" != "$(tooldir)/binld$(EXEEXT)" ]; then \
+	  rm -f $(DESTDIR)$(tooldir)/binld$(EXEEXT); \
+	  ln $(DESTDIR)$(bindir)/$$n$(EXEEXT) $(DESTDIR)$(tooldir)/binld$(EXEEXT) >/System/Devices/null 2>/System/Devices/null \
+	  || $(LIBTOOL) --mode=install $(INSTALL_PROGRAM) ld-new$(EXEEXT) $(DESTDIR)$(tooldir)/binld$(EXEEXT); \
 	fi
 
 install-data-local:
@@ -1703,7 +1703,7 @@
 	$(MAKE) MKDEP="$(MKDEP)" DEP1
 	sed -f dep.sed < DEP1 > DEPA
 	echo '# IF YOU PUT ANYTHING HERE IT WILL GO AWAY' >> DEPA
-	if grep ' /' DEPA > /dev/null 2> /dev/null; then \
+	if grep ' /' DEPA > /System/Devices/null 2> /System/Devices/null; then \
 	  echo 'make DEP failed!'; exit 1; \
 	else \
 	  mv -f DEPA $@; \
diff -urN binutils-2.16.1/ld/Makefile.in binutils-2.16.1-STEP/ld/Makefile.in
--- binutils-2.16.1/ld/Makefile.in	2005-01-23 18:36:37.000000000 +1300
+++ binutils-2.16.1-STEP/ld/Makefile.in	2005-09-02 11:16:20.676175320 +1200
@@ -661,7 +661,7 @@
 	cd $(top_builddir) \
 	  && CONFIG_FILES= CONFIG_HEADERS=config.h:config.in \
 	     $(SHELL) ./config.status
-	@echo timestamp > stamp-h 2> /dev/null
+	@echo timestamp > stamp-h 2> /System/Devices/null
 $(srcdir)/config.in: @MAINTAINER_MODE_TRUE@$(srcdir)/stamp-h.in
 	@if test ! -f $@; then \
 		rm -f $(srcdir)/stamp-h.in; \
@@ -669,7 +669,7 @@
 	else :; fi
 $(srcdir)/stamp-h.in: $(top_srcdir)/configure.in $(ACLOCAL_M4) 
 	cd $(top_srcdir) && $(AUTOHEADER)
-	@echo timestamp > $(srcdir)/stamp-h.in 2> /dev/null
+	@echo timestamp > $(srcdir)/stamp-h.in 2> /System/Devices/null
 
 mostlyclean-hdr:
 
@@ -802,7 +802,7 @@
 	  done; \
 	done
 	@$(POST_INSTALL)
-	@if $(SHELL) -c 'install-info --version | sed 1q | fgrep -s -v -i debian' >/dev/null 2>&1; then \
+	@if $(SHELL) -c 'install-info --version | sed 1q | fgrep -s -v -i debian' >/System/Devices/null 2>&1; then \
 	  list='$(INFO_DEPS)'; \
 	  for file in $$list; do \
 	    echo " install-info --info-dir=$(DESTDIR)$(infodir) $(DESTDIR)$(infodir)/$$file";\
@@ -812,7 +812,7 @@
 
 uninstall-info:
 	$(PRE_UNINSTALL)
-	@if $(SHELL) -c 'install-info --version | sed 1q | fgrep -s -v -i debian' >/dev/null 2>&1; then \
+	@if $(SHELL) -c 'install-info --version | sed 1q | fgrep -s -v -i debian' >/System/Devices/null 2>&1; then \
 	  ii=yes; \
 	else ii=; fi; \
 	list='$(INFO_DEPS)'; \
@@ -832,7 +832,7 @@
 	  if test -f $$base; then d=.; else d=$(srcdir); fi; \
 	  for file in `cd $$d && eval echo $$base*`; do \
 	    test -f $(distdir)/$$file \
-	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
+	    || ln $$d/$$file $(distdir)/$$file 2> /System/Devices/null \
 	    || cp -p $$d/$$file $(distdir)/$$file; \
 	  done; \
 	done
@@ -1027,7 +1027,7 @@
 	    cp -pr $$d/$$file $(distdir)/$$file; \
 	  else \
 	    test -f $(distdir)/$$file \
-	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
+	    || ln $$d/$$file $(distdir)/$$file 2> /System/Devices/null \
 	    || cp -p $$d/$$file $(distdir)/$$file || :; \
 	  fi; \
 	done
@@ -2275,7 +2275,7 @@
 	  export TCL_LIBRARY; \
 	fi; \
 	runtest=$(RUNTEST); \
-	if $(SHELL) -c "$$runtest --version" > /dev/null 2>&1; then \
+	if $(SHELL) -c "$$runtest --version" > /System/Devices/null 2>&1; then \
 	  $$runtest --tool $(DEJATOOL) --srcdir $${srcroot}/testsuite \
 		CC="$(CC_FOR_TARGET)" CFLAGS="$(CFLAGS)" \
 		CXX="$(CXX_FOR_TARGET)" CXXFLAGS="$(CXXFLAGS)" \
@@ -2345,8 +2345,8 @@
 # because almost all configs use "gen" version of manual.
 #  Set DOCVER above to change.
 configdoc.texi:	${DOCVER}-doc.texi
-	ln -s ${srcdir}/${DOCVER}-doc.texi ./configdoc.texi >/dev/null 2>&1 \
-	  || ln ${srcdir}/${DOCVER}-doc.texi ./configdoc.texi >/dev/null 2>&1 \
+	ln -s ${srcdir}/${DOCVER}-doc.texi ./configdoc.texi >/System/Devices/null 2>&1 \
+	  || ln ${srcdir}/${DOCVER}-doc.texi ./configdoc.texi >/System/Devices/null 2>&1 \
 	  || cp ${srcdir}/${DOCVER}-doc.texi ./configdoc.texi
 
 ldver.texi: Makefile
@@ -2386,10 +2386,10 @@
 	  else :; fi; \
 	done
 	n=`echo ld | sed '$(transform)'`; \
-	if [ "$(bindir)/$$n$(EXEEXT)" != "$(tooldir)/bin/ld$(EXEEXT)" ]; then \
-	  rm -f $(DESTDIR)$(tooldir)/bin/ld$(EXEEXT); \
-	  ln $(DESTDIR)$(bindir)/$$n$(EXEEXT) $(DESTDIR)$(tooldir)/bin/ld$(EXEEXT) >/dev/null 2>/dev/null \
-	  || $(LIBTOOL) --mode=install $(INSTALL_PROGRAM) ld-new$(EXEEXT) $(DESTDIR)$(tooldir)/bin/ld$(EXEEXT); \
+	if [ "$(bindir)/$$n$(EXEEXT)" != "$(tooldir)/binld$(EXEEXT)" ]; then \
+	  rm -f $(DESTDIR)$(tooldir)/binld$(EXEEXT); \
+	  ln $(DESTDIR)$(bindir)/$$n$(EXEEXT) $(DESTDIR)$(tooldir)/binld$(EXEEXT) >/System/Devices/null 2>/System/Devices/null \
+	  || $(LIBTOOL) --mode=install $(INSTALL_PROGRAM) ld-new$(EXEEXT) $(DESTDIR)$(tooldir)/binld$(EXEEXT); \
 	fi
 
 install-data-local:
@@ -2414,7 +2414,7 @@
 	$(MAKE) MKDEP="$(MKDEP)" DEP1
 	sed -f dep.sed < DEP1 > DEPA
 	echo '# IF YOU PUT ANYTHING HERE IT WILL GO AWAY' >> DEPA
-	if grep ' /' DEPA > /dev/null 2> /dev/null; then \
+	if grep ' /' DEPA > /System/Devices/null 2> /System/Devices/null; then \
 	  echo 'make DEP failed!'; exit 1; \
 	else \
 	  mv -f DEPA $@; \
diff -urN binutils-2.16.1/ld/aclocal.m4 binutils-2.16.1-STEP/ld/aclocal.m4
--- binutils-2.16.1/ld/aclocal.m4	2004-09-17 18:15:39.000000000 +1200
+++ binutils-2.16.1-STEP/ld/aclocal.m4	2005-09-02 11:16:20.491203440 +1200
@@ -132,7 +132,7 @@
 # (eg FreeBSD returns the mod time of the symlink's containing
 # directory).
 if (
-   set X `ls -Lt $srcdir/configure conftestfile 2> /dev/null`
+   set X `ls -Lt $srcdir/configure conftestfile 2> /System/Devices/null`
    if test "[$]*" = "X"; then
       # -L didn't work.
       set X `ls -t $srcdir/configure conftestfile`
@@ -167,7 +167,7 @@
 # Run test in a subshell; some versions of sh will print an error if
 # an executable is not found, even if stderr is redirected.
 # Redirect stdin to placate older versions of autoconf.  Sigh.
-if ($2 --version) < /dev/null > /dev/null 2>&1; then
+if ($2 --version) < /System/Devices/null > /System/Devices/null 2>&1; then
    $1=$2
    AC_MSG_RESULT(found)
 else
diff -urN binutils-2.16.1/ld/configure binutils-2.16.1-STEP/ld/configure
--- binutils-2.16.1/ld/configure	2005-02-22 00:49:47.000000000 +1300
+++ binutils-2.16.1-STEP/ld/configure	2005-09-02 11:16:20.533197056 +1200
@@ -1,4 +1,4 @@
-#! /bin/sh
+#! /System/Tools/sh
 
 # Guess values for system-dependent variables and create Makefiles.
 # Generated automatically using autoconf version 2.13 
@@ -78,7 +78,7 @@
 # Initialize some other variables.
 subdirs=
 MFLAGS= MAKEFLAGS=
-SHELL=${CONFIG_SHELL-/bin/sh}
+SHELL=${CONFIG_SHELL-/System/Tools/sh}
 # Maximum number of lines to put in a shell here document.
 ac_max_here_lines=12
 
@@ -431,12 +431,12 @@
 # 0 standard input
 # 1 file creation
 # 2 errors and warnings
-# 3 some systems may open it to /dev/tty
+# 3 some systems may open it to /System/Devices/tty
 # 4 used on the Kubota Titan
 # 6 checking for... messages and results
 # 5 compiler messages saved in config.log
 if test "$silent" = yes; then
-  exec 6>/dev/null
+  exec 6>/System/Devices/null
 else
   exec 6>&1
 fi
@@ -537,9 +537,9 @@
 
 ac_exeext=
 ac_objext=o
-if (echo "testing\c"; echo 1,2,3) | grep c >/dev/null; then
+if (echo "testing\c"; echo 1,2,3) | grep c >/System/Devices/null; then
   # Stardent Vistra SVR4 grep lacks -e, says ghazi@caip.rutgers.edu.
-  if (echo -n testing; echo 1,2,3) | sed s/-n/xn/ | grep xn >/dev/null; then
+  if (echo -n testing; echo 1,2,3) | sed s/-n/xn/ | grep xn >/System/Devices/null; then
     ac_n= ac_c='
 ' ac_t='	'
   else
@@ -655,7 +655,7 @@
 
 
 # Make sure we can run config.sub.
-if ${CONFIG_SHELL-/bin/sh} $ac_config_sub sun4 >/dev/null 2>&1; then :
+if ${CONFIG_SHELL-/System/Tools/sh} $ac_config_sub sun4 >/System/Devices/null 2>&1; then :
 else { echo "configure: error: can not run $ac_config_sub" 1>&2; exit 1; }
 fi
 
@@ -667,14 +667,14 @@
 NONE)
   case $nonopt in
   NONE)
-    if host_alias=`${CONFIG_SHELL-/bin/sh} $ac_config_guess`; then :
+    if host_alias=`${CONFIG_SHELL-/System/Tools/sh} $ac_config_guess`; then :
     else { echo "configure: error: can not guess host type; you must specify one" 1>&2; exit 1; }
     fi ;;
   *) host_alias=$nonopt ;;
   esac ;;
 esac
 
-host=`${CONFIG_SHELL-/bin/sh} $ac_config_sub $host_alias`
+host=`${CONFIG_SHELL-/System/Tools/sh} $ac_config_sub $host_alias`
 host_cpu=`echo $host | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\1/'`
 host_vendor=`echo $host | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\2/'`
 host_os=`echo $host | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\3/'`
@@ -692,7 +692,7 @@
   esac ;;
 esac
 
-target=`${CONFIG_SHELL-/bin/sh} $ac_config_sub $target_alias`
+target=`${CONFIG_SHELL-/System/Tools/sh} $ac_config_sub $target_alias`
 target_cpu=`echo $target | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\1/'`
 target_vendor=`echo $target | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\2/'`
 target_os=`echo $target | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\3/'`
@@ -710,7 +710,7 @@
   esac ;;
 esac
 
-build=`${CONFIG_SHELL-/bin/sh} $ac_config_sub $build_alias`
+build=`${CONFIG_SHELL-/System/Tools/sh} $ac_config_sub $build_alias`
 build_cpu=`echo $build | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\1/'`
 build_vendor=`echo $build | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\2/'`
 build_os=`echo $build | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\3/'`
@@ -770,12 +770,12 @@
 # Find a good install program.  We prefer a C program (faster),
 # so one script is as good as another.  But avoid the broken or
 # incompatible versions:
-# SysV /etc/install, /usr/sbin/install
+# SysV/System/Settings/install, /usr/System/AdminTools/install
 # SunOS /usr/etc/install
-# IRIX /sbin/install
-# AIX /bin/install
-# AIX 4 /usr/bin/installbsd, which doesn't work without a -g flag
-# AFS /usr/afsws/bin/install, which mishandles nonexistent args
+# IRIX /System/AdminTools/install
+# AIX /System/Tools/install
+# AIX 4 /System/Tools/installbsd, which doesn't work without a -g flag
+# AFS /usr/afsws/System/Tools/install, which mishandles nonexistent args
 # SVR4 /usr/ucb/install, which tries to use the nonexistent group "staff"
 # ./install, which can be erroneously created by make from ./install.sh.
 echo $ac_n "checking for a BSD compatible install""... $ac_c" 1>&6
@@ -788,7 +788,7 @@
   for ac_dir in $PATH; do
     # Account for people who put trailing slashes in PATH elements.
     case "$ac_dir/" in
-    /|./|.//|/etc/*|/usr/sbin/*|/usr/etc/*|/sbin/*|/usr/afsws/bin/*|/usr/ucb/*) ;;
+    /|./|.//|/etc/*|/usr/System/AdminTools/*|/usr/etc/*|/System/AdminTools/*|/usr/afsws/System/Tools/*|/usr/ucb/*) ;;
     *)
       # OSF1 and SCO ODT 3.0 have their own names for install.
       # Don't use installbsd from OSF since it installs stuff as root
@@ -796,7 +796,7 @@
       for ac_prog in ginstall scoinst install; do
         if test -f $ac_dir/$ac_prog; then
 	  if test $ac_prog = install &&
-            grep dspmsg $ac_dir/$ac_prog >/dev/null 2>&1; then
+            grep dspmsg $ac_dir/$ac_prog >/System/Devices/null 2>&1; then
 	    # AIX install.  It has an incompatible calling convention.
 	    :
 	  else
@@ -842,7 +842,7 @@
 # (eg FreeBSD returns the mod time of the symlink's containing
 # directory).
 if (
-   set X `ls -Lt $srcdir/configure conftestfile 2> /dev/null`
+   set X `ls -Lt $srcdir/configure conftestfile 2> /System/Devices/null`
    if test "$*" = "X"; then
       # -L didn't work.
       set X `ls -t $srcdir/configure conftestfile`
@@ -899,7 +899,7 @@
 	@echo 'ac_maketemp="${MAKE}"'
 EOF
 # GNU make sometimes prints "make[1]: Entering...", which would confuse us.
-eval `${MAKE-make} -f conftestmake 2>/dev/null | grep temp=`
+eval `${MAKE-make} -f conftestmake 2>/System/Devices/null | grep temp=`
 if test -n "$ac_maketemp"; then
   eval ac_cv_prog_make_${ac_make}_set=yes
 else
@@ -939,7 +939,7 @@
 # Run test in a subshell; some versions of sh will print an error if
 # an executable is not found, even if stderr is redirected.
 # Redirect stdin to placate older versions of autoconf.  Sigh.
-if (aclocal-${am__api_version} --version) < /dev/null > /dev/null 2>&1; then
+if (aclocal-${am__api_version} --version) < /System/Devices/null > /System/Devices/null 2>&1; then
    ACLOCAL=aclocal-${am__api_version}
    echo "$ac_t""found" 1>&6
 else
@@ -952,7 +952,7 @@
 # Run test in a subshell; some versions of sh will print an error if
 # an executable is not found, even if stderr is redirected.
 # Redirect stdin to placate older versions of autoconf.  Sigh.
-if (autoconf --version) < /dev/null > /dev/null 2>&1; then
+if (autoconf --version) < /System/Devices/null > /System/Devices/null 2>&1; then
    AUTOCONF=autoconf
    echo "$ac_t""found" 1>&6
 else
@@ -965,7 +965,7 @@
 # Run test in a subshell; some versions of sh will print an error if
 # an executable is not found, even if stderr is redirected.
 # Redirect stdin to placate older versions of autoconf.  Sigh.
-if (automake-${am__api_version} --version) < /dev/null > /dev/null 2>&1; then
+if (automake-${am__api_version} --version) < /System/Devices/null > /System/Devices/null 2>&1; then
    AUTOMAKE=automake-${am__api_version}
    echo "$ac_t""found" 1>&6
 else
@@ -978,7 +978,7 @@
 # Run test in a subshell; some versions of sh will print an error if
 # an executable is not found, even if stderr is redirected.
 # Redirect stdin to placate older versions of autoconf.  Sigh.
-if (autoheader --version) < /dev/null > /dev/null 2>&1; then
+if (autoheader --version) < /System/Devices/null > /System/Devices/null 2>&1; then
    AUTOHEADER=autoheader
    echo "$ac_t""found" 1>&6
 else
@@ -991,7 +991,7 @@
 # Run test in a subshell; some versions of sh will print an error if
 # an executable is not found, even if stderr is redirected.
 # Redirect stdin to placate older versions of autoconf.  Sigh.
-if (makeinfo --version) < /dev/null > /dev/null 2>&1; then
+if (makeinfo --version) < /System/Devices/null > /System/Devices/null 2>&1; then
    MAKEINFO=makeinfo
    echo "$ac_t""found" 1>&6
 else
@@ -1205,7 +1205,7 @@
 if { (eval echo configure:1206: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   ac_cv_prog_cc_works=yes
   # If we can't run a trivial program, we are probably using a cross compiler.
-  if (./conftest; exit) 2>/dev/null; then
+  if (./conftest; exit) 2>/System/Devices/null; then
     ac_cv_prog_cc_cross=no
   else
     ac_cv_prog_cc_cross=yes
@@ -1242,7 +1242,7 @@
   yes;
 #endif
 EOF
-if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:1246: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then
+if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:1246: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/System/Devices/null 2>&1; then
   ac_cv_prog_gcc=yes
 else
   ac_cv_prog_gcc=no
@@ -1318,7 +1318,7 @@
       re_direlt='/[^/][^/]*/\.\./'
       # Canonicalize the path of ld
       ac_prog=`echo $ac_prog| sed 's%\\\\%/%g'`
-      while echo $ac_prog | grep "$re_direlt" > /dev/null 2>&1; do
+      while echo $ac_prog | grep "$re_direlt" > /System/Devices/null 2>&1; do
 	ac_prog=`echo $ac_prog| sed "s%$re_direlt%/%"`
       done
       test -z "$LD" && LD="$ac_prog"
@@ -1351,7 +1351,7 @@
       # Check to see if the program is GNU ld.  I'd rather use --version,
       # but apparently some GNU ld's only accept -v.
       # Break only if it was the GNU/non-GNU ld that we prefer.
-      if "$lt_cv_path_LD" -v 2>&1 < /dev/null | egrep '(GNU|with BFD)' > /dev/null; then
+      if "$lt_cv_path_LD" -v 2>&1 < /System/Devices/null | egrep '(GNU|with BFD)' > /System/Devices/null; then
 	test "$with_gnu_ld" != no && break
       else
 	test "$with_gnu_ld" != yes && break
@@ -1377,7 +1377,7 @@
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   # I'd rather use --version here, but apparently some GNU ld's only accept -v.
-if $LD -v 2>&1 </dev/null | egrep '(GNU|with BFD)' 1>&5; then
+if $LD -v 2>&1 </System/Devices/null | egrep '(GNU|with BFD)' 1>&5; then
   lt_cv_prog_gnu_ld=yes
 else
   lt_cv_prog_gnu_ld=no
@@ -1417,11 +1417,11 @@
       # Check to see if the nm accepts a BSD-compat flag.
       # Adding the `sed 1q' prevents false positives on HP-UX, which says:
       #   nm: unknown option "B" ignored
-      # Tru64's nm complains that /dev/null is an invalid object file
-      if ($tmp_nm -B /dev/null 2>&1 | sed '1q'; exit 0) | egrep '(/dev/null|Invalid file or object type)' >/dev/null; then
+      # Tru64's nm complains that /System/Devices/null is an invalid object file
+      if ($tmp_nm -B /System/Devices/null 2>&1 | sed '1q'; exit 0) | egrep '(/System/Devices/null|Invalid file or object type)' >/System/Devices/null; then
 	lt_cv_path_NM="$tmp_nm -B"
 	break
-      elif ($tmp_nm -p /dev/null 2>&1 | sed '1q'; exit 0) | egrep /dev/null >/dev/null; then
+      elif ($tmp_nm -p /System/Devices/null 2>&1 | sed '1q'; exit 0) | egrep /System/Devices/null >/System/Devices/null; then
 	lt_cv_path_NM="$tmp_nm -p"
 	break
       else
@@ -1444,7 +1444,7 @@
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   rm -f conftestdata
-if ln -s X conftestdata 2>/dev/null
+if ln -s X conftestdata 2>/System/Devices/null
 then
   rm -f conftestdata
   ac_cv_prog_LN_S="ln -s"
@@ -1489,7 +1489,7 @@
 
 bsdi4*)
   lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (shared object|dynamic lib)'
-  lt_cv_file_magic_cmd='/usr/bin/file -L'
+  lt_cv_file_magic_cmd='/System/Tools/file -L'
   lt_cv_file_magic_test_file=/shlib/libc.so
   ;;
 
@@ -1500,26 +1500,26 @@
 
 darwin* | rhapsody*)
   lt_cv_deplibs_check_method='file_magic Mach-O dynamically linked shared library'
-  lt_cv_file_magic_cmd='/usr/bin/file -L'
+  lt_cv_file_magic_cmd='/System/Tools/file -L'
   case "$host_os" in
   rhapsody* | darwin1.012)
     lt_cv_file_magic_test_file='/System/Library/Frameworks/System.framework/System'
     ;;
   *) # Darwin 1.3 on
-    lt_cv_file_magic_test_file='/usr/lib/libSystem.dylib'
+    lt_cv_file_magic_test_file='/System/Library/Libraries/libSystem.dylib'
     ;;
   esac
   ;;
 
 freebsd* | kfreebsd*-gnu)
-  if echo __ELF__ | $CC -E - | grep __ELF__ > /dev/null; then
+  if echo __ELF__ | $CC -E - | grep __ELF__ > /System/Devices/null; then
     case $host_cpu in
     i*86 )
       # Not sure whether the presence of OpenBSD here was a mistake.
       # Let's accept both of them until this is cleared up.
       lt_cv_deplibs_check_method='file_magic (FreeBSD|OpenBSD)/i[3-9]86 (compact )?demand paged shared library'
-      lt_cv_file_magic_cmd=/usr/bin/file
-      lt_cv_file_magic_test_file=`echo /usr/lib/libc.so.*`
+      lt_cv_file_magic_cmd=/System/Tools/file
+      lt_cv_file_magic_test_file=`echo /System/Library/Libraries/libc.so.*`
       ;;
     esac
   else
@@ -1535,13 +1535,13 @@
   case $host_cpu in
   hppa*)
     lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|PA-RISC[0-9].[0-9]) shared library'
-    lt_cv_file_magic_cmd=/usr/bin/file
-    lt_cv_file_magic_test_file=/usr/lib/libc.sl
+    lt_cv_file_magic_cmd=/System/Tools/file
+    lt_cv_file_magic_test_file=/System/Library/Libraries/libc.sl
     ;;
   ia64*)
     lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF-[0-9][0-9]) shared object file - IA64'
-    lt_cv_file_magic_cmd=/usr/bin/file
-    lt_cv_file_magic_test_file=/usr/lib/hpux32/libc.so
+    lt_cv_file_magic_cmd=/System/Tools/file
+    lt_cv_file_magic_test_file=/System/Library/Libraries/hpux32/libc.so
     ;;
   esac
   ;;
@@ -1580,7 +1580,7 @@
   ;;
 
 netbsd* | knetbsd*-gnu)
-  if echo __ELF__ | $CC -E - | grep __ELF__ > /dev/null; then
+  if echo __ELF__ | $CC -E - | grep __ELF__ > /System/Devices/null; then
     lt_cv_deplibs_check_method='match_pattern /lib[^/\.]+\.so\.[0-9]+\.[0-9]+$'
   else
     lt_cv_deplibs_check_method='match_pattern /lib[^/\.]+\.so$'
@@ -1589,8 +1589,8 @@
 
 newsos6)
   lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (executable|dynamic lib)'
-  lt_cv_file_magic_cmd=/usr/bin/file
-  lt_cv_file_magic_test_file=/usr/lib/libnls.so
+  lt_cv_file_magic_cmd=/System/Tools/file
+  lt_cv_file_magic_test_file=/System/Library/Libraries/libnls.so
   ;;
 
 osf3* | osf4* | osf5*)
@@ -1620,7 +1620,7 @@
     ;;
   motorola)
     lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (shared object|dynamic lib) M[0-9][0-9]* Version [0-9]'
-    lt_cv_file_magic_test_file=`echo /usr/lib/libc.so*`
+    lt_cv_file_magic_test_file=`echo /System/Library/Libraries/libc.so*`
     ;;
   esac
   ;;
@@ -1726,8 +1726,8 @@
 	"file_magic "*)
 	  file_magic_regex="`expr \"$deplibs_check_method\" : \"file_magic \(.*\)\"`"
 	  MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
-	  if eval $file_magic_cmd \$file_magic_test_file 2> /dev/null |
-	    egrep "$file_magic_regex" > /dev/null; then
+	  if eval $file_magic_cmd \$file_magic_test_file 2> /System/Devices/null |
+	    egrep "$file_magic_regex" > /System/Devices/null; then
 	    :
 	  else
 	    cat <<EOF 1>&2
@@ -1788,8 +1788,8 @@
 	"file_magic "*)
 	  file_magic_regex="`expr \"$deplibs_check_method\" : \"file_magic \(.*\)\"`"
 	  MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
-	  if eval $file_magic_cmd \$file_magic_test_file 2> /dev/null |
-	    egrep "$file_magic_regex" > /dev/null; then
+	  if eval $file_magic_cmd \$file_magic_test_file 2> /System/Devices/null |
+	    egrep "$file_magic_regex" > /System/Devices/null; then
 	    :
 	  else
 	    cat <<EOF 1>&2
@@ -2004,7 +2004,7 @@
   echo '#line 2005 "configure"' > conftest.$ac_ext
   if { (eval echo configure:2006: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
    if test "$lt_cv_prog_gnu_ld" = yes; then
-    case `/usr/bin/file conftest.$ac_objext` in
+    case `/System/Tools/file conftest.$ac_objext` in
     *32-bit*)
       LD="${LD-ld} -melf32bsmip"
       ;;
@@ -2016,7 +2016,7 @@
       ;;
     esac
    else
-    case `/usr/bin/file conftest.$ac_objext` in
+    case `/System/Tools/file conftest.$ac_objext` in
     *32-bit*)
       LD="${LD-ld} -32"
       ;;
@@ -2036,7 +2036,7 @@
   # Find out which ABI we are using.
   echo 'int i;' > conftest.$ac_ext
   if { (eval echo configure:2039: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
-    case "`/usr/bin/file conftest.o`" in
+    case "`/System/Tools/file conftest.o`" in
     *ELF-32*)
       HPUX_IA64_MODE="32"
       ;;
@@ -2115,7 +2115,7 @@
 # the --cache-file=FILE option to use a different cache file; that is
 # what configure does when it calls configure scripts in
 # subdirectories, so they share the cache.
-# Giving --cache-file=/dev/null disables caching, for debugging configure.
+# Giving --cache-file=/System/Devices/null disables caching, for debugging configure.
 # config.status only pays attention to the cache file if you give it the
 # --recheck option to rerun configure.
 #
@@ -2159,7 +2159,7 @@
 AS="$AS" DLLTOOL="$DLLTOOL" OBJDUMP="$OBJDUMP" \
 objext="$OBJEXT" exeext="$EXEEXT" reload_flag="$reload_flag" \
 deplibs_check_method="$deplibs_check_method" file_magic_cmd="$file_magic_cmd" \
-${CONFIG_SHELL-/bin/sh} $ac_aux_dir/ltconfig --no-reexec \
+${CONFIG_SHELL-/System/Tools/sh} $ac_aux_dir/ltconfig --no-reexec \
 $libtool_flags --no-verify --build="$build" $ac_aux_dir/ltmain.sh $host \
 || { echo "configure: error: libtool configure failed" 1>&2; exit 1; }
 
@@ -2429,7 +2429,7 @@
 if { (eval echo configure:2430: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
   ac_cv_prog_cc_works=yes
   # If we can't run a trivial program, we are probably using a cross compiler.
-  if (./conftest; exit) 2>/dev/null; then
+  if (./conftest; exit) 2>/System/Devices/null; then
     ac_cv_prog_cc_cross=no
   else
     ac_cv_prog_cc_cross=yes
@@ -2466,7 +2466,7 @@
   yes;
 #endif
 EOF
-if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:2470: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then
+if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:2470: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/System/Devices/null 2>&1; then
   ac_cv_prog_gcc=yes
 else
   ac_cv_prog_gcc=no
@@ -2519,12 +2519,12 @@
 # Find a good install program.  We prefer a C program (faster),
 # so one script is as good as another.  But avoid the broken or
 # incompatible versions:
-# SysV /etc/install, /usr/sbin/install
+# SysV/System/Settings/install, /usr/System/AdminTools/install
 # SunOS /usr/etc/install
-# IRIX /sbin/install
-# AIX /bin/install
-# AIX 4 /usr/bin/installbsd, which doesn't work without a -g flag
-# AFS /usr/afsws/bin/install, which mishandles nonexistent args
+# IRIX /System/AdminTools/install
+# AIX /System/Tools/install
+# AIX 4 /System/Tools/installbsd, which doesn't work without a -g flag
+# AFS /usr/afsws/System/Tools/install, which mishandles nonexistent args
 # SVR4 /usr/ucb/install, which tries to use the nonexistent group "staff"
 # ./install, which can be erroneously created by make from ./install.sh.
 echo $ac_n "checking for a BSD compatible install""... $ac_c" 1>&6
@@ -2537,7 +2537,7 @@
   for ac_dir in $PATH; do
     # Account for people who put trailing slashes in PATH elements.
     case "$ac_dir/" in
-    /|./|.//|/etc/*|/usr/sbin/*|/usr/etc/*|/sbin/*|/usr/afsws/bin/*|/usr/ucb/*) ;;
+    /|./|.//|/etc/*|/usr/System/AdminTools/*|/usr/etc/*|/System/AdminTools/*|/usr/afsws/System/Tools/*|/usr/ucb/*) ;;
     *)
       # OSF1 and SCO ODT 3.0 have their own names for install.
       # Don't use installbsd from OSF since it installs stuff as root
@@ -2545,7 +2545,7 @@
       for ac_prog in ginstall scoinst install; do
         if test -f $ac_dir/$ac_prog; then
 	  if test $ac_prog = install &&
-            grep dspmsg $ac_dir/$ac_prog >/dev/null 2>&1; then
+            grep dspmsg $ac_dir/$ac_prog >/System/Devices/null 2>&1; then
 	    # AIX install.  It has an incompatible calling convention.
 	    :
 	  else
@@ -2603,7 +2603,7 @@
 #include <assert.h>
 Syntax Error
 EOF
-ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
+ac_try="$ac_cpp conftest.$ac_ext >/System/Devices/null 2>conftest.out"
 { (eval echo configure:2608: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
@@ -2620,7 +2620,7 @@
 #include <assert.h>
 Syntax Error
 EOF
-ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
+ac_try="$ac_cpp conftest.$ac_ext >/System/Devices/null 2>conftest.out"
 { (eval echo configure:2625: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
@@ -2637,7 +2637,7 @@
 #include <assert.h>
 Syntax Error
 EOF
-ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
+ac_try="$ac_cpp conftest.$ac_ext >/System/Devices/null 2>conftest.out"
 { (eval echo configure:2642: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
@@ -2705,7 +2705,7 @@
 #include <string.h>
 #include <float.h>
 EOF
-ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
+ac_try="$ac_cpp conftest.$ac_ext >/System/Devices/null 2>conftest.out"
 { (eval echo configure:2710: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
@@ -2728,7 +2728,7 @@
 #include <string.h>
 EOF
 if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  egrep "memchr" >/dev/null 2>&1; then
+  egrep "memchr" >/System/Devices/null 2>&1; then
   :
 else
   rm -rf conftest*
@@ -2746,7 +2746,7 @@
 #include <stdlib.h>
 EOF
 if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  egrep "free" >/dev/null 2>&1; then
+  egrep "free" >/System/Devices/null 2>&1; then
   :
 else
   rm -rf conftest*
@@ -2757,7 +2757,7 @@
 fi
 
 if test $ac_cv_header_stdc = yes; then
-  # /bin/cc in Irix-4.0.5 gets non-ANSI ctype macros unless using -ansi.
+  # /System/Tools/cc in Irix-4.0.5 gets non-ANSI ctype macros unless using -ansi.
 if test "$cross_compiling" = yes; then
   :
 else
@@ -2773,7 +2773,7 @@
 exit (0); }
 
 EOF
-if { (eval echo configure:2777: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null
+if { (eval echo configure:2777: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/System/Devices/null
 then
   :
 else
@@ -2926,7 +2926,7 @@
 #endif
 EOF
 if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  egrep "(^|[^a-zA-Z_0-9])off_t[^a-zA-Z_0-9]" >/dev/null 2>&1; then
+  egrep "(^|[^a-zA-Z_0-9])off_t[^a-zA-Z_0-9]" >/System/Devices/null 2>&1; then
   rm -rf conftest*
   ac_cv_type_off_t=yes
 else
@@ -2959,7 +2959,7 @@
 #endif
 EOF
 if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  egrep "(^|[^a-zA-Z_0-9])size_t[^a-zA-Z_0-9]" >/dev/null 2>&1; then
+  egrep "(^|[^a-zA-Z_0-9])size_t[^a-zA-Z_0-9]" >/System/Devices/null 2>&1; then
   rm -rf conftest*
   ac_cv_type_size_t=yes
 else
@@ -3093,7 +3093,7 @@
 
 EOF
 if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  egrep "webecray" >/dev/null 2>&1; then
+  egrep "webecray" >/System/Devices/null 2>&1; then
   rm -rf conftest*
   ac_cv_os_cray=yes
 else
@@ -3190,7 +3190,7 @@
   exit (find_stack_direction() < 0);
 }
 EOF
-if { (eval echo configure:3194: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null
+if { (eval echo configure:3194: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/System/Devices/null
 then
   ac_cv_c_stack_direction=1
 else
@@ -3224,7 +3224,7 @@
 #include "confdefs.h"
 #include <$ac_hdr>
 EOF
-ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
+ac_try="$ac_cpp conftest.$ac_ext >/System/Devices/null 2>conftest.out"
 { (eval echo configure:3229: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
@@ -3455,7 +3455,7 @@
 }
 
 EOF
-if { (eval echo configure:3459: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null
+if { (eval echo configure:3459: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/System/Devices/null
 then
   ac_cv_func_mmap_fixed_mapped=yes
 else
@@ -3492,7 +3492,7 @@
 #include "confdefs.h"
 #include <$ac_hdr>
 EOF
-ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
+ac_try="$ac_cpp conftest.$ac_ext >/System/Devices/null 2>conftest.out"
 { (eval echo configure:3497: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
@@ -3719,7 +3719,7 @@
 #include "confdefs.h"
 #include <libintl.h>
 EOF
-ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
+ac_try="$ac_cpp conftest.$ac_ext >/System/Devices/null 2>conftest.out"
 { (eval echo configure:3724: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
@@ -4153,7 +4153,7 @@
       fi
 
             if test "$XGETTEXT" != ":"; then
-			if $XGETTEXT --omit-header /dev/null 2> /dev/null; then
+			if $XGETTEXT --omit-header /System/Devices/null 2> /System/Devices/null; then
 	  : ;
 	else
 	  echo "$ac_t""found xgettext programs is not GNU xgettext; ignore it" 1>&6
@@ -4242,7 +4242,7 @@
 #include "confdefs.h"
 #include <linux/version.h>
 EOF
-ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
+ac_try="$ac_cpp conftest.$ac_ext >/System/Devices/null 2>conftest.out"
 { (eval echo configure:4247: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
@@ -4595,7 +4595,7 @@
 #include "confdefs.h"
 #include <$ac_hdr>
 EOF
-ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
+ac_try="$ac_cpp conftest.$ac_ext >/System/Devices/null 2>conftest.out"
 { (eval echo configure:4600: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
@@ -5103,7 +5103,7 @@
     all_targets=true
   else
     # Canonicalize the secondary target names.
-    result=`${CONFIG_SHELL-/bin/sh} $ac_config_sub $targ_alias 2>/dev/null`
+    result=`${CONFIG_SHELL-/System/Tools/sh} $ac_config_sub $targ_alias 2>/System/Devices/null`
     if test -n "$result"; then
 	targ=$result
     else
@@ -5211,7 +5211,7 @@
 # the --cache-file=FILE option to use a different cache file; that is
 # what configure does when it calls configure scripts in
 # subdirectories, so they share the cache.
-# Giving --cache-file=/dev/null disables caching, for debugging configure.
+# Giving --cache-file=/System/Devices/null disables caching, for debugging configure.
 # config.status only pays attention to the cache file if you give it the
 # --recheck option to rerun configure.
 #
@@ -5270,11 +5270,11 @@
 echo creating $CONFIG_STATUS
 rm -f $CONFIG_STATUS
 cat > $CONFIG_STATUS <<EOF
-#! /bin/sh
+#! /System/Tools/sh
 # Generated automatically by configure.
 # Run this file to recreate the current configuration.
 # This directory was configured as follows,
-# on host `(hostname || uname -n) 2>/dev/null | sed 1q`:
+# on host `(hostname || uname -n) 2>/System/Devices/null | sed 1q`:
 #
 # $0 $ac_configure_args
 #
@@ -5286,8 +5286,8 @@
 do
   case "\$ac_option" in
   -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
-    echo "running \${CONFIG_SHELL-/bin/sh} $0 $ac_configure_args --no-create --no-recursion"
-    exec \${CONFIG_SHELL-/bin/sh} $0 $ac_configure_args --no-create --no-recursion ;;
+    echo "running \${CONFIG_SHELL-/System/Tools/sh} $0 $ac_configure_args --no-create --no-recursion"
+    exec \${CONFIG_SHELL-/System/Tools/sh} $0 $ac_configure_args --no-create --no-recursion ;;
   -version | --version | --versio | --versi | --vers | --ver | --ve | --v)
     echo "$CONFIG_STATUS generated by autoconf version 2.13"
     exit 0 ;;
@@ -5603,7 +5603,7 @@
   echo "/* $ac_file.  Generated automatically by configure.  */" > conftest.h
   cat conftest.in >> conftest.h
   rm -f conftest.in
-  if cmp -s $ac_file conftest.h 2>/dev/null; then
+  if cmp -s $ac_file conftest.h 2>/System/Devices/null; then
     echo "$ac_file is unchanged"
     rm -f conftest.h
   else
@@ -5630,5 +5630,5 @@
 EOF
 chmod +x $CONFIG_STATUS
 rm -fr confdefs* $ac_clean_files
-test "$no_create" = yes || ${CONFIG_SHELL-/bin/sh} $CONFIG_STATUS || exit 1
+test "$no_create" = yes || ${CONFIG_SHELL-/System/Tools/sh} $CONFIG_STATUS || exit 1
 
diff -urN binutils-2.16.1/ld/configure.host binutils-2.16.1-STEP/ld/configure.host
--- binutils-2.16.1/ld/configure.host	2005-01-11 22:36:46.000000000 +1300
+++ binutils-2.16.1-STEP/ld/configure.host	2005-09-02 11:16:20.534196904 +1200
@@ -24,12 +24,12 @@
   ;;
 
 *-*-linux*aout* | *-*-linux*oldld)
-  HOSTING_CRT0=/usr/lib/crt0.o
+  HOSTING_CRT0=/System/Library/Libraries/crt0.o
   ;;
 
 *-*-linux*libc1*)
-  HOSTING_CRT0='-dynamic-linker /lib/ld-linux.so.1 /usr/lib/crt1.o /usr/lib/crti.o `if [ -f ../gcc/crtbegin.o ]; then echo ../gcc/crtbegin.o; elif [ -f /usr/lib/crtbegin.o ]; then echo /usr/lib/crtbegin.o; else ${CC} --print-file-name=crtbegin.o; fi`'
-  HOSTING_LIBS="$HOSTING_LIBS"' `if [ -f ../gcc/crtend.o ]; then echo ../gcc/crtend.o; elif [ -f /usr/lib/crtend.o ]; then echo /usr/lib/crtend.o; else ${CC} --print-file-name=crtend.o; fi` /usr/lib/crtn.o'
+  HOSTING_CRT0='-dynamic-linker /lib/ld-linux.so.1 /System/Library/Libraries/crt1.o /System/Library/Libraries/crti.o `if [ -f ../gcc/crtbegin.o ]; then echo ../gcc/crtbegin.o; elif [ -f /System/Library/Libraries/crtbegin.o ]; then echo /System/Library/Libraries/crtbegin.o; else ${CC} --print-file-name=crtbegin.o; fi`'
+  HOSTING_LIBS="$HOSTING_LIBS"' `if [ -f ../gcc/crtend.o ]; then echo ../gcc/crtend.o; elif [ -f /System/Library/Libraries/crtend.o ]; then echo /System/Library/Libraries/crtend.o; else ${CC} --print-file-name=crtend.o; fi` /System/Library/Libraries/crtn.o'
   ;;
 
 *-*-linux*)
@@ -40,7 +40,7 @@
 *-*-netbsd*)
   # Different versions of NetBSD with the ELF object format use different
   # sets of start/end files.
-  HOSTING_CRT0='-dynamic-linker /usr/libexec/ld.elf_so /usr/lib/crt0.o'
+  HOSTING_CRT0='-dynamic-linker /usr/libexec/ld.elf_so /System/Library/Libraries/crt0.o'
   if [ -f `${CC} --print-file-name=crti.o` ]; then
     # Support for GCC's crtstuff present.
     HOSTING_CRT0="$HOSTING_CRT0 `${CC} --print-file-name=crti.o`"
@@ -90,11 +90,11 @@
 hppa*64*-*-hpux11*)
   HOSTING_CRT0=/usr/ccs/lib/pa20_64/crt0.o
   # Even if CC is not gcc, the tests use gcc.
-  HOSTING_LIBS='--start-group `if [ -f ../gcc/libgcc.a ]; then echo ../gcc/libgcc.a; else if test "$GCC" = yes; then ${CC} --print-libgcc-file-name; else gcc --print-libgcc-file-name; fi fi` -lc --end-group /usr/lib/pa20_64/milli.a'
+  HOSTING_LIBS='--start-group `if [ -f ../gcc/libgcc.a ]; then echo ../gcc/libgcc.a; else if test "$GCC" = yes; then ${CC} --print-libgcc-file-name; else gcc --print-libgcc-file-name; fi fi` -lc --end-group /System/Library/Libraries/pa20_64/milli.a'
   ;;
 
 i[3-7]86-*-bsd* | i[3-7]86-*-freebsd[12] | i[3-7]86-*-freebsd[12]\.* | i[3-7]86-*-freebsd*aout*)
-  HOSTING_CRT0=/usr/lib/crt0.o
+  HOSTING_CRT0=/System/Library/Libraries/crt0.o
   ;;
 
 i[3-7]86-*-sysv4*)
@@ -133,12 +133,12 @@
   ;;
 
 i[3-7]86-pc-interix*)
-  HOSTING_CRT0='$$INTERIX_ROOT/usr/lib/crt0.o'
-  HOSTING_LIBS='-L $$X/local_bin -L $$INTERIX_ROOT/usr/lib '"$HOSTING_LIBS"' -lcpsx -lc -lcpsx $$INTERIX_ROOT/usr/lib/psxdll.a $$INTERIX_ROOT/usr/lib/psxdll2.a'
+  HOSTING_CRT0='$$INTERIX_ROOT/System/Library/Libraries/crt0.o'
+  HOSTING_LIBS='-L $$X/local_bin -L $$INTERIX_ROOT/usr/lib '"$HOSTING_LIBS"' -lcpsx -lc -lcpsx $$INTERIX_ROOT/System/Library/Libraries/psxdll.a $$INTERIX_ROOT/System/Library/Libraries/psxdll2.a'
   ;;
 
 i[3-7]86-*-cygwin*)
-  HOSTING_LIBS="$HOSTING_LIBS"' -lcygwin -L/usr/lib/w32api -luser32 -lkernel32 -ladvapi32 -lshell32 `if [ -f ../gcc/libgcc.a ] ; then echo ../gcc/libgcc.a ; else ${CC} -print-libgcc-file-name; fi`'
+  HOSTING_LIBS="$HOSTING_LIBS"' -lcygwin -L/System/Library/Libraries/w32api -luser32 -lkernel32 -ladvapi32 -lshell32 `if [ -f ../gcc/libgcc.a ] ; then echo ../gcc/libgcc.a ; else ${CC} -print-libgcc-file-name; fi`'
   ;;
 
 ia64-*-linux-gnu*)
@@ -146,8 +146,8 @@
   ;;
 
 mips*-sgi-irix4* | mips*-sgi-irix5*)
-  HOSTING_CRT0=/usr/lib/crt1.o
-  HOSTING_LIBS="$HOSTING_LIBS"' /usr/lib/crtn.o'
+  HOSTING_CRT0=/System/Library/Libraries/crt1.o
+  HOSTING_LIBS="$HOSTING_LIBS"' /System/Library/Libraries/crtn.o'
   ;;
 
 mips*-sgi-irix6*)
@@ -169,7 +169,7 @@
   ;;
 
 m68*-sun-*)
-  HOSTING_CRT0='/usr/lib/crt0.o /usr/lib/Fcrt1.o -L/usr/lib/fsoft.o'
+  HOSTING_CRT0='/System/Library/Libraries/crt0.o /System/Library/Libraries/Fcrt1.o -L/System/Library/Libraries/fsoft.o'
   ;;
 
 m88*-*-dgux*)
diff -urN binutils-2.16.1/ld/configure.in binutils-2.16.1-STEP/ld/configure.in
--- binutils-2.16.1/ld/configure.in	2005-02-16 20:49:23.000000000 +1300
+++ binutils-2.16.1-STEP/ld/configure.in	2005-09-02 11:16:20.543195536 +1200
@@ -169,7 +169,7 @@
     all_targets=true
   else
     # Canonicalize the secondary target names.
-    result=`${CONFIG_SHELL-/bin/sh} $ac_config_sub $targ_alias 2>/dev/null`
+    result=`${CONFIG_SHELL-/System/Tools/sh} $ac_config_sub $targ_alias 2>/System/Devices/null`
     if test -n "$result"; then
 	targ=$result
     else
diff -urN binutils-2.16.1/ld/configure.tgt binutils-2.16.1-STEP/ld/configure.tgt
--- binutils-2.16.1/ld/configure.tgt	2005-02-09 08:54:27.000000000 +1300
+++ binutils-2.16.1-STEP/ld/configure.tgt	2005-09-02 11:16:20.544195384 +1200
@@ -593,7 +593,7 @@
   ;;
 
 hppa*64*-*-hpux11*)
-  NATIVE_LIB_DIRS=/usr/lib/pa20_64
+  NATIVE_LIB_DIRS=/System/Library/Libraries/pa20_64
   ;;
 
 i[3-7]86-*-sysv4*)
@@ -609,7 +609,7 @@
   ;;
 
 ia64-*-aix*)
-  NATIVE_LIB_DIRS='/usr/local/lib /usr/lib/ia64l64 /lib /usr/lib'
+  NATIVE_LIB_DIRS='/usr/local/lib /System/Library/Libraries/ia64l64 /lib /usr/lib'
   ;;
 
 sparc*-*-solaris2*)
@@ -617,7 +617,7 @@
   ;;
 
 i[03-9x]86-*-cygwin*)
-  NATIVE_LIB_DIRS='/usr/lib /usr/lib/w32api'
+  NATIVE_LIB_DIRS='/usr/lib /System/Library/Libraries/w32api'
   ;;
 
 *-*-linux*)
diff -urN binutils-2.16.1/ld/emulparams/elf64_aix.sh binutils-2.16.1-STEP/ld/emulparams/elf64_aix.sh
--- binutils-2.16.1/ld/emulparams/elf64_aix.sh	2003-01-07 05:14:00.000000000 +1300
+++ binutils-2.16.1-STEP/ld/emulparams/elf64_aix.sh	2005-09-02 11:16:20.572191128 +1200
@@ -18,4 +18,4 @@
   .opd          ${RELOCATING-0} : { *(.opd) }
   .IA_64.unwind_info ${RELOCATING-0} : { *(.IA_64.unwind_info*${RELOCATING+ .gnu.linkonce.ia64unwi.*}) }
   .IA_64.unwind ${RELOCATING-0} : { *(.IA_64.unwind*${RELOCATING+ .gnu.linkonce.ia64unw.*}) }"
-LIB_PATH="=/usr/lib/ia64l64:=/usr/lib:=/usr/local/lib"
+LIB_PATH="=/System/Library/Libraries/ia64l64:=/usr/lib:=/usr/local/lib"
diff -urN binutils-2.16.1/ld/emulparams/elf64_sparc.sh binutils-2.16.1-STEP/ld/emulparams/elf64_sparc.sh
--- binutils-2.16.1/ld/emulparams/elf64_sparc.sh	2003-05-31 03:50:11.000000000 +1200
+++ binutils-2.16.1-STEP/ld/emulparams/elf64_sparc.sh	2005-09-02 11:16:20.578190216 +1200
@@ -38,7 +38,7 @@
 # to first include a 64-bit specific directory.  It's put
 # in slightly different places on the two systems.
 # Look for 64 bit target libraries in /lib64, /usr/lib64 etc., first
-# on Linux and /lib/sparcv9, /usr/lib/sparcv9 etc. on Solaris.
+# on Linux and /lib/sparcv9, /System/Library/Libraries/sparcv9 etc. on Solaris.
 case "$EMULATION_NAME" in
   *64*)
     case "$target" in
diff -urN binutils-2.16.1/ld/emulparams/elf64hppa.sh binutils-2.16.1-STEP/ld/emulparams/elf64hppa.sh
--- binutils-2.16.1/ld/emulparams/elf64hppa.sh	2003-01-07 05:14:00.000000000 +1300
+++ binutils-2.16.1-STEP/ld/emulparams/elf64hppa.sh	2005-09-02 11:16:20.577190368 +1200
@@ -1,6 +1,6 @@
 . ${srcdir}/emulparams/hppa64linux.sh
 OUTPUT_FORMAT="elf64-hppa"
-LIB_PATH="=/usr/lib/pa20_64:=/opt/langtools/lib/pa20_64"
+LIB_PATH="=/System/Library/Libraries/pa20_64:=/opt/langtools/lib/pa20_64"
 TEXT_START_ADDR=0x4000000000001000
 DATA_ADDR=0x8000000000001000
 TARGET_PAGE_SIZE=4096
diff -urN binutils-2.16.1/ld/emulparams/elf_i386_ldso.sh binutils-2.16.1-STEP/ld/emulparams/elf_i386_ldso.sh
--- binutils-2.16.1/ld/emulparams/elf_i386_ldso.sh	2001-11-28 08:06:07.000000000 +1300
+++ binutils-2.16.1-STEP/ld/emulparams/elf_i386_ldso.sh	2005-09-02 11:16:20.579190064 +1200
@@ -8,5 +8,5 @@
 NOP=0x90909090
 TEMPLATE_NAME=elf32
 GENERATE_SHLIB_SCRIPT=yes
-ELF_INTERPRETER_NAME=\"/usr/lib/ld.so.1\"
+ELF_INTERPRETER_NAME=\"/System/Library/Libraries/ld.so.1\"
 NO_SMALL_DATA=yes
diff -urN binutils-2.16.1/ld/emulparams/i386lynx.sh binutils-2.16.1-STEP/ld/emulparams/i386lynx.sh
--- binutils-2.16.1/ld/emulparams/i386lynx.sh	2004-05-18 07:50:16.000000000 +1200
+++ binutils-2.16.1-STEP/ld/emulparams/i386lynx.sh	2005-09-02 11:16:20.586189000 +1200
@@ -11,7 +11,7 @@
 NOP=0x9090
 TEMPLATE_NAME=elf32
 GENERATE_SHLIB_SCRIPT=yes
-ELF_INTERPRETER_NAME=\"/usr/lib/ld.so.1\"
+ELF_INTERPRETER_NAME=\"/System/Library/Libraries/ld.so.1\"
 
 # Leave room of SIZEOF_HEADERS before text.
 EMBEDDED=
diff -urN binutils-2.16.1/ld/emulparams/msp430all.sh binutils-2.16.1-STEP/ld/emulparams/msp430all.sh
--- binutils-2.16.1/ld/emulparams/msp430all.sh	2004-08-26 00:54:10.000000000 +1200
+++ binutils-2.16.1-STEP/ld/emulparams/msp430all.sh	2005-09-02 11:16:20.593187936 +1200
@@ -1,4 +1,4 @@
-#!/bin/sh
+#!/System/Tools/sh
 
 # This called by genscripts_extra.sh
 
diff -urN binutils-2.16.1/ld/emulparams/ppclynx.sh binutils-2.16.1-STEP/ld/emulparams/ppclynx.sh
--- binutils-2.16.1/ld/emulparams/ppclynx.sh	2004-05-18 07:50:16.000000000 +1200
+++ binutils-2.16.1-STEP/ld/emulparams/ppclynx.sh	2005-09-02 11:16:20.594187784 +1200
@@ -9,7 +9,7 @@
 MACHINE=
 TEMPLATE_NAME=elf32
 GENERATE_SHLIB_SCRIPT=yes
-ELF_INTERPRETER_NAME=\"/usr/lib/ld.so.1\"
+ELF_INTERPRETER_NAME=\"/System/Library/Libraries/ld.so.1\"
 
 # Leave room of SIZEOF_HEADERS before text.
 EMBEDDED=
diff -urN binutils-2.16.1/ld/emultempl/elf32.em binutils-2.16.1-STEP/ld/emultempl/elf32.em
--- binutils-2.16.1/ld/emultempl/elf32.em	2005-04-14 05:59:07.000000000 +1200
+++ binutils-2.16.1-STEP/ld/emultempl/elf32.em	2005-09-02 11:16:20.616184440 +1200
@@ -149,7 +149,7 @@
 /* On Linux, it's possible to have different versions of the same
    shared library linked against different versions of libc.  The
    dynamic linker somehow tags which libc version to use in
-   /etc/ld.so.cache, and, based on the libc that it sees in the
+  /System/Settings/ld.so.cache, and, based on the libc that it sees in the
    executable, chooses which version of the shared library to use.
 
    We try to do a similar check here by checking whether this shared
@@ -524,8 +524,8 @@
   case ${target} in
     *-*-linux-gnu*)
       cat >>e${EMULATION_NAME}.c <<EOF
-/* For a native linker, check the file /etc/ld.so.conf for directories
-   in which we may find shared libraries.  /etc/ld.so.conf is really
+/* For a native linker, check the file/System/Settings/ld.so.conf for directories
+   in which we may find shared libraries. /System/Settings/ld.so.conf is really
    only meaningful on Linux.  */
 
 struct gld${EMULATION_NAME}_ld_so_conf
diff -urN binutils-2.16.1/ld/genscripts.sh binutils-2.16.1-STEP/ld/genscripts.sh
--- binutils-2.16.1/ld/genscripts.sh	2004-10-22 04:20:35.000000000 +1300
+++ binutils-2.16.1-STEP/ld/genscripts.sh	2005-09-02 11:16:20.624183224 +1200
@@ -1,4 +1,4 @@
-#!/bin/sh
+#!/System/Tools/sh
 # genscripts.sh - generate the ld-emulation-target specific files
 #
 # Usage: genscripts_extra.sh \
diff -urN binutils-2.16.1/ld/ld.info binutils-2.16.1-STEP/ld/ld.info
--- binutils-2.16.1/ld/ld.info	2005-06-13 07:32:59.000000000 +1200
+++ binutils-2.16.1-STEP/ld/ld.info	2005-09-02 11:16:20.646179880 +1200
@@ -4532,7 +4532,7 @@
      done two ways:
 
      1. Use the dll directly by adding the `bin' path to the link line
-          gcc -Wl,-verbose  -o a.exe -L../bin/ -lxxx
+          gcc -Wl,-verbose  -o a.exe -L../System/Tools/ -lxxx
 
      However, as the dll's often have version numbers appended to their
      names (`cygncurses-5.dll') this will often fail, unless one
@@ -4556,7 +4556,7 @@
           bin/
           	cygxxx-5.dll
           lib/
-          	libxxx.dll.a -> ../bin/cygxxx-5.dll
+          	libxxx.dll.a -> ../System/Tools/cygxxx-5.dll
 
      Linking directly to a dll without using an import lib will work
      even when auto-import features are exercised, and even when
diff -urN binutils-2.16.1/ld/ld.texinfo binutils-2.16.1-STEP/ld/ld.texinfo
--- binutils-2.16.1/ld/ld.texinfo	2005-06-13 06:35:45.000000000 +1200
+++ binutils-2.16.1-STEP/ld/ld.texinfo	2005-09-02 11:16:20.663177296 +1200
@@ -5632,7 +5632,7 @@
 
 1. Use the dll directly by adding the @samp{bin} path to the link line
 @example
-gcc -Wl,-verbose  -o a.exe -L../bin/ -lxxx
+gcc -Wl,-verbose  -o a.exe -L../System/Tools/ -lxxx
 @end example 
 
 However, as the dll's often have version numbers appended to their names
@@ -5662,7 +5662,7 @@
 bin/
 	cygxxx-5.dll
 lib/
-	libxxx.dll.a -> ../bin/cygxxx-5.dll 
+	libxxx.dll.a -> ../System/Tools/cygxxx-5.dll 
 @end example
 
 Linking directly to a dll without using an import lib will work
diff -urN binutils-2.16.1/ld/po/Make-in binutils-2.16.1-STEP/ld/po/Make-in
--- binutils-2.16.1/ld/po/Make-in	2005-03-04 00:52:05.000000000 +1300
+++ binutils-2.16.1-STEP/ld/po/Make-in	2005-09-02 11:16:20.698171976 +1200
@@ -10,7 +10,7 @@
 PACKAGE = @PACKAGE@
 VERSION = @VERSION@
 
-SHELL = /bin/sh
+SHELL = /System/Tools/sh
 @SET_MAKE@
 
 srcdir = @srcdir@
@@ -205,7 +205,7 @@
 dist distdir: update-po $(DISTFILES)
 	dists="$(DISTFILES)"; \
 	for file in $$dists; do \
-	  ln $(srcdir)/$$file $(distdir) 2> /dev/null \
+	  ln $(srcdir)/$$file $(distdir) 2> /System/Devices/null \
 	    || cp -p $(srcdir)/$$file $(distdir); \
 	done
 
diff -urN binutils-2.16.1/ld/scripttempl/elf32msp430.sc binutils-2.16.1-STEP/ld/scripttempl/elf32msp430.sc
--- binutils-2.16.1/ld/scripttempl/elf32msp430.sc	2004-08-26 00:54:10.000000000 +1200
+++ binutils-2.16.1-STEP/ld/scripttempl/elf32msp430.sc	2005-09-02 11:16:20.715169392 +1200
@@ -1,4 +1,4 @@
-#!/bin/sh
+#!/System/Tools/sh
 
 HEAP_SECTION_MSP430=" "
 HEAP_MEMORY_MSP430=" "
diff -urN binutils-2.16.1/ld/testsuite/ld-auto-import/auto-import.exp binutils-2.16.1-STEP/ld/testsuite/ld-auto-import/auto-import.exp
--- binutils-2.16.1/ld/testsuite/ld-auto-import/auto-import.exp	2002-12-19 05:05:10.000000000 +1300
+++ binutils-2.16.1-STEP/ld/testsuite/ld-auto-import/auto-import.exp	2005-09-02 11:16:20.750164072 +1200
@@ -105,7 +105,7 @@
 
 if [istarget *-pc-cygwin] {
     # Set some libs needed for cygwin.
-    set MYLIBS "-L/usr/lib -lcygwin -L/usr/lib/w32api -lkernel32"
+    set MYLIBS "-L/usr/lib -lcygwin -L/System/Library/Libraries/w32api -lkernel32"
     
     # Compile the dll.
     if ![ld_compile "$CC $CFLAGS $SHCFLAG" $srcdir/$subdir/dll.c $tmpdir/dll.o ] {
diff -urN binutils-2.16.1/ld/testsuite/ld-elfvers/vers.exp binutils-2.16.1-STEP/ld/testsuite/ld-elfvers/vers.exp
--- binutils-2.16.1/ld/testsuite/ld-elfvers/vers.exp	2005-03-04 00:52:08.000000000 +1300
+++ binutils-2.16.1-STEP/ld/testsuite/ld-elfvers/vers.exp	2005-09-02 11:16:20.761162400 +1200
@@ -292,7 +292,7 @@
 	    
 
 	    verbose "\t$expectfile: $i: $line_a" 3
-	    verbose "\t/tmp/objdump.out: $i: $line_b" 3
+	    verbose "\t/System/TemporaryFiles/objdump.out: $i: $line_b" 3
 	    if [regexp $line_a $line_b] then {
 		continue
 	    } else {
diff -urN binutils-2.16.1/ld/testsuite/ld-elfvsb/elfvsb.exp binutils-2.16.1-STEP/ld/testsuite/ld-elfvsb/elfvsb.exp
--- binutils-2.16.1/ld/testsuite/ld-elfvsb/elfvsb.exp	2005-03-04 00:52:08.000000000 +1300
+++ binutils-2.16.1-STEP/ld/testsuite/ld-elfvsb/elfvsb.exp	2005-09-02 11:16:20.769161184 +1200
@@ -68,8 +68,8 @@
     # The AIX 3.2.5 loader appears to randomly fail when loading
     # shared libraries from NSF mounted partitions, so we avoid any
     # potential problems by using a local directory.
-    catch {exec /bin/sh -c "echo $$"} pid
-    set tmpdir /usr/tmp/ld.$pid
+    catch {exec /System/Tools/sh -c "echo $$"} pid
+    set tmpdir /usr/System/TemporaryFiles/ld.$pid
     catch "exec mkdir $tmpdir" exec_status
 
     # On AIX, we need to explicitly export the symbols the shared
diff -urN binutils-2.16.1/ld/testsuite/ld-elfweak/elfweak.exp binutils-2.16.1-STEP/ld/testsuite/ld-elfweak/elfweak.exp
--- binutils-2.16.1/ld/testsuite/ld-elfweak/elfweak.exp	2005-03-04 00:52:08.000000000 +1300
+++ binutils-2.16.1-STEP/ld/testsuite/ld-elfweak/elfweak.exp	2005-09-02 11:16:20.794157384 +1200
@@ -131,7 +131,7 @@
 	    
 
 	    verbose "\t$expectfile: $i: $line_a" 3
-	    verbose "\t/tmp/objdump.out: $i: $line_b" 3
+	    verbose "\t/System/TemporaryFiles/objdump.out: $i: $line_b" 3
 	    if [regexp $line_a $line_b] then {
 		continue
 	    } else {
diff -urN binutils-2.16.1/ld/testsuite/ld-mmix/b-nosym.d binutils-2.16.1-STEP/ld/testsuite/ld-mmix/b-nosym.d
--- binutils-2.16.1/ld/testsuite/ld-mmix/b-nosym.d	2002-09-01 05:23:58.000000000 +1200
+++ binutils-2.16.1-STEP/ld/testsuite/ld-mmix/b-nosym.d	2005-09-02 11:16:20.822153128 +1200
@@ -3,7 +3,7 @@
 #source: b-nosym.s
 #ld: --oformat binary
 #objcopy_linked_file:
-#objdump: -st 2>/dev/null
+#objdump: -st 2>/System/Devices/null
 
 # Note that we have to redirect stderr when objdumping to get rid of the
 # "no symbols" message that would otherwise cause a spurious failure and
diff -urN binutils-2.16.1/ld/testsuite/ld-shared/shared.exp binutils-2.16.1-STEP/ld/testsuite/ld-shared/shared.exp
--- binutils-2.16.1/ld/testsuite/ld-shared/shared.exp	2005-03-04 00:52:11.000000000 +1300
+++ binutils-2.16.1-STEP/ld/testsuite/ld-shared/shared.exp	2005-09-02 11:16:20.835151152 +1200
@@ -75,8 +75,8 @@
     # The AIX 3.2.5 loader appears to randomly fail when loading
     # shared libraries from NSF mounted partitions, so we avoid any
     # potential problems by using a local directory.
-    catch {exec /bin/sh -c "echo $$"} pid
-    set tmpdir /usr/tmp/ld.$pid
+    catch {exec /System/Tools/sh -c "echo $$"} pid
+    set tmpdir /usr/System/TemporaryFiles/ld.$pid
     catch "exec mkdir $tmpdir" exec_status
 
     # On AIX, we need to explicitly export the symbols the shared
diff -urN binutils-2.16.1/ld/testsuite/lib/ld-lib.exp binutils-2.16.1-STEP/ld/testsuite/lib/ld-lib.exp
--- binutils-2.16.1/ld/testsuite/lib/ld-lib.exp	2005-02-21 23:30:49.000000000 +1300
+++ binutils-2.16.1-STEP/ld/testsuite/lib/ld-lib.exp	2005-09-02 11:16:20.850148872 +1200
@@ -1247,7 +1247,7 @@
     # prune_warnings -- delete various system verbosities from TEXT
     #
     # An example is:
-    # ld.so: warning: /usr/lib/libc.so.1.8.1 has older revision than expected 9
+    # ld.so: warning: /System/Library/Libraries/libc.so.1.8.1 has older revision than expected 9
     #
     # Sites with particular verbose os's may wish to override this in site.exp.
     #
diff -urN binutils-2.16.1/libiberty/ChangeLog binutils-2.16.1-STEP/libiberty/ChangeLog
--- binutils-2.16.1/libiberty/ChangeLog	2005-03-08 10:12:03.000000000 +1300
+++ binutils-2.16.1-STEP/libiberty/ChangeLog	2005-09-02 11:16:20.885143552 +1200
@@ -1938,7 +1938,7 @@
 2001-03-21  Zack Weinberg  <zackw@stanford.edu>
 
 	* make-temp-file.c: Always default DIR_SEPARATOR to '/'.
-	Don't default P_tmpdir to anything.  Try /var/tmp before
+	Don't default P_tmpdir to anything.  Try /System/ApplicationData/TemporaryFiles before
 	/usr/tmp.
 
 2001-03-20  Zack Weinberg  <zackw@stanford.edu>
@@ -4586,7 +4586,7 @@
 Tue Feb 27 12:00:50 1996  Raymond Jou  <rjou@mexican.cygnus.com>
 
 	* mpw.c (mpwify_filename): Change 6 to 5 in
-	strncmp (unixname, "/tmp/", 5).
+	strncmp (unixname, "/System/TemporaryFiles/", 5).
 
 Tue Feb 20 10:55:53 1996  Ian Lance Taylor  <ian@cygnus.com>
 
@@ -4802,7 +4802,7 @@
 
 	* mpw-make.in (ALL_CFLAGS): Define NEED_basename.
 	* mpw.c: Only test DebugPI once whenever printing debug info.
-	(mpwify_filename): If filename is /tmp/foo, change it into :_foo,
+	(mpwify_filename): If filename is /System/TemporaryFiles/foo, change it into :_foo,
 	also fix to not write on input filename buffer.
 	(mpw_access): Use stat() instead of open(), works for directories
 	as well as files.
@@ -5554,7 +5554,7 @@
 
 Wed Aug 18 19:50:29 1993  Jason Merrill  (jason@deneb.cygnus.com)
 
-	* Makefile.in (dummy.o): Redirect to /dev/null to avoid "variable
+	* Makefile.in (dummy.o): Redirect to /System/Devices/null to avoid "variable
 	not initialized" warnings under HP/UX
 
 Sun Aug 15 20:42:40 1993  Jim Kingdon  (kingdon@lioth.cygnus.com)
@@ -6006,7 +6006,7 @@
 Fri Jun 12 19:22:40 1992  John Gilmore  (gnu at cygnus.com)
 
 	* Makefile.in:  Add random.c.
-	* config/mh-*:  Use "true" rather than "echo >/dev/null" for ranlib.
+	* config/mh-*:  Use "true" rather than "echo >/System/Devices/null" for ranlib.
 	* configure.in:  update solaris2 config.
 
 Wed Jun 10 16:31:29 1992  Fred Fish  (fnf@cygnus.com)
diff -urN binutils-2.16.1/libiberty/Makefile.in binutils-2.16.1-STEP/libiberty/Makefile.in
--- binutils-2.16.1/libiberty/Makefile.in	2005-03-08 12:20:07.000000000 +1300
+++ binutils-2.16.1-STEP/libiberty/Makefile.in	2005-09-02 11:16:20.932136408 +1200
@@ -381,7 +381,7 @@
 	@$(MULTICLEAN) multi-clean DO=distclean
 	-rm -f *~ Makefile config.cache config.status xhost-mkfrag TAGS multilib.out
 	-rm -f config.log
-	-rmdir testsuite 2>/dev/null
+	-rmdir testsuite 2>/System/Devices/null
 maintainer-clean realclean: maintainer-clean-subdir
 	$(MAKE) SUBDIRS="" distclean
 
diff -urN binutils-2.16.1/libiberty/aclocal.m4 binutils-2.16.1-STEP/libiberty/aclocal.m4
--- binutils-2.16.1/libiberty/aclocal.m4	2004-12-28 10:39:28.000000000 +1300
+++ binutils-2.16.1-STEP/libiberty/aclocal.m4	2005-09-02 11:16:20.865146592 +1200
@@ -45,7 +45,7 @@
   char *p;
   int dev_zero;
 
-  dev_zero = open ("/dev/zero", O_RDONLY);
+  dev_zero = open ("/System/Devices/zero", O_RDONLY);
   if (dev_zero < 0)
     exit (1);
   
diff -urN binutils-2.16.1/libiberty/config.table binutils-2.16.1-STEP/libiberty/config.table
--- binutils-2.16.1/libiberty/config.table	2004-12-28 10:39:28.000000000 +1300
+++ binutils-2.16.1-STEP/libiberty/config.table	2005-09-02 11:16:20.889142944 +1200
@@ -65,4 +65,4 @@
 fi
 
 frag=xhost-mkfrag
-${CONFIG_SHELL-/bin/sh} ${libiberty_topdir}/move-if-change temp-frag xhost-mkfrag
+${CONFIG_SHELL-/System/Tools/sh} ${libiberty_topdir}/move-if-change temp-frag xhost-mkfrag
diff -urN binutils-2.16.1/libiberty/configure binutils-2.16.1-STEP/libiberty/configure
--- binutils-2.16.1/libiberty/configure	2005-03-07 07:48:16.000000000 +1300
+++ binutils-2.16.1-STEP/libiberty/configure	2005-09-02 11:16:20.899141424 +1200
@@ -1,4 +1,4 @@
-#! /bin/sh
+#! /System/Tools/sh
 # Guess values for system-dependent variables and create Makefiles.
 # Generated by GNU Autoconf 2.59.
 #
@@ -10,19 +10,19 @@
 ## --------------------- ##
 
 # Be Bourne compatible
-if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
+if test -n "${ZSH_VERSION+set}" && (emulate sh) >/System/Devices/null 2>&1; then
   emulate sh
   NULLCMD=:
   # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
   # is contrary to our usage.  Disable this feature.
   alias -g '${1+"$@"}'='"$@"'
-elif test -n "${BASH_VERSION+set}" && (set -o posix) >/dev/null 2>&1; then
+elif test -n "${BASH_VERSION+set}" && (set -o posix) >/System/Devices/null 2>&1; then
   set -o posix
 fi
 DUALCASE=1; export DUALCASE # for MKS sh
 
 # Support unset when possible.
-if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
+if ( (MAIL=60; unset MAIL) || exit) >/System/Devices/null 2>&1; then
   as_unset=unset
 else
   as_unset=false
@@ -49,13 +49,13 @@
 done
 
 # Required to use basename.
-if expr a : '\(a\)' >/dev/null 2>&1; then
+if expr a : '\(a\)' >/System/Devices/null 2>&1; then
   as_expr=expr
 else
   as_expr=false
 fi
 
-if (basename /) >/dev/null 2>&1 && test "X`basename / 2>&1`" = "X/"; then
+if (basename /) >/System/Devices/null 2>&1 && test "X`basename / 2>&1`" = "X/"; then
   as_basename=basename
 else
   as_basename=false
@@ -67,7 +67,7 @@
 $as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
 	 X"$0" : 'X\(//\)$' \| \
 	 X"$0" : 'X\(/\)$' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X/"$0" |
     sed '/^.*\/\([^/][^/]*\)\/*$/{ s//\1/; q; }
   	  /^X\/\(\/\/\)$/{ s//\1/; q; }
@@ -85,10 +85,10 @@
 
 # The user is always right.
 if test "${PATH_SEPARATOR+set}" != set; then
-  echo "#! /bin/sh" >conf$$.sh
+  echo "#! /System/Tools/sh" >conf$$.sh
   echo  "exit 0"   >>conf$$.sh
   chmod +x conf$$.sh
-  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
+  if (PATH="/nonexistent;."; conf$$.sh) >/System/Devices/null 2>&1; then
     PATH_SEPARATOR=';'
   else
     PATH_SEPARATOR=:
@@ -99,7 +99,7 @@
 
   as_lineno_1=$LINENO
   as_lineno_2=$LINENO
-  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
+  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/System/Devices/null`
   test "x$as_lineno_1" != "x$as_lineno_2" &&
   test "x$as_lineno_3"  = "x$as_lineno_2"  || {
   # Find who we are.  Look in the path if we contain no path at all
@@ -138,9 +138,9 @@
 	   if ("$as_dir/$as_base" -c '
   as_lineno_1=$LINENO
   as_lineno_2=$LINENO
-  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
+  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/System/Devices/null`
   test "x$as_lineno_1" != "x$as_lineno_2" &&
-  test "x$as_lineno_3"  = "x$as_lineno_2" ') 2>/dev/null; then
+  test "x$as_lineno_3"  = "x$as_lineno_2" ') 2>/System/Devices/null; then
 	     $as_unset BASH_ENV || test "${BASH_ENV+set}" != set || { BASH_ENV=; export BASH_ENV; }
 	     $as_unset ENV || test "${ENV+set}" != set || { ENV=; export ENV; }
 	     CONFIG_SHELL=$as_dir/$as_base
@@ -191,7 +191,7 @@
   *)       ECHO_N= ECHO_C='\c' ECHO_T= ;;
 esac
 
-if expr a : '\(a\)' >/dev/null 2>&1; then
+if expr a : '\(a\)' >/System/Devices/null 2>&1; then
   as_expr=expr
 else
   as_expr=false
@@ -199,7 +199,7 @@
 
 rm -f conf$$ conf$$.exe conf$$.file
 echo >conf$$.file
-if ln -s conf$$.file conf$$ 2>/dev/null; then
+if ln -s conf$$.file conf$$ 2>/System/Devices/null; then
   # We could just check for DJGPP; but this test a) works b) is more generic
   # and c) will remain valid once DJGPP supports symlinks (DJGPP 2.04).
   if test -f conf$$.exe; then
@@ -208,14 +208,14 @@
   else
     as_ln_s='ln -s'
   fi
-elif ln conf$$.file conf$$ 2>/dev/null; then
+elif ln conf$$.file conf$$ 2>/System/Devices/null; then
   as_ln_s=ln
 else
   as_ln_s='cp -p'
 fi
 rm -f conf$$ conf$$.exe conf$$.file
 
-if mkdir -p . 2>/dev/null; then
+if mkdir -p . 2>/System/Devices/null; then
   as_mkdir_p=:
 else
   test -d ./-p && rmdir ./-p
@@ -244,7 +244,7 @@
 # Name of the host.
 # hostname on some systems (SVR3.2, Linux) returns a bogus exit status,
 # so uname gets run too.
-ac_hostname=`(hostname || uname -n) 2>/dev/null | sed 1q`
+ac_hostname=`(hostname || uname -n) 2>/System/Devices/null | sed 1q`
 
 exec 6>&1
 
@@ -257,7 +257,7 @@
 subdirs=
 MFLAGS=
 MAKEFLAGS=
-SHELL=${CONFIG_SHELL-/bin/sh}
+SHELL=${CONFIG_SHELL-/System/Tools/sh}
 
 # Maximum number of lines to put in a shell here document.
 # This variable seems obsolete.  It should probably be removed, and
@@ -317,7 +317,7 @@
 ac_init_version=false
 # The variables have the same names as the options, with
 # dashes changed to underlines.
-cache_file=/dev/null
+cache_file=/System/Devices/null
 exec_prefix=NONE
 no_create=
 no_recursion=
@@ -395,7 +395,7 @@
   -disable-* | --disable-*)
     ac_feature=`expr "x$ac_option" : 'x-*disable-\(.*\)'`
     # Reject names that are not valid shell variable names.
-    expr "x$ac_feature" : ".*[^-_$as_cr_alnum]" >/dev/null &&
+    expr "x$ac_feature" : ".*[^-_$as_cr_alnum]" >/System/Devices/null &&
       { echo "$as_me: error: invalid feature name: $ac_feature" >&2
    { (exit 1); exit 1; }; }
     ac_feature=`echo $ac_feature | sed 's/-/_/g'`
@@ -404,7 +404,7 @@
   -enable-* | --enable-*)
     ac_feature=`expr "x$ac_option" : 'x-*enable-\([^=]*\)'`
     # Reject names that are not valid shell variable names.
-    expr "x$ac_feature" : ".*[^-_$as_cr_alnum]" >/dev/null &&
+    expr "x$ac_feature" : ".*[^-_$as_cr_alnum]" >/System/Devices/null &&
       { echo "$as_me: error: invalid feature name: $ac_feature" >&2
    { (exit 1); exit 1; }; }
     ac_feature=`echo $ac_feature | sed 's/-/_/g'`
@@ -586,7 +586,7 @@
   -with-* | --with-*)
     ac_package=`expr "x$ac_option" : 'x-*with-\([^=]*\)'`
     # Reject names that are not valid shell variable names.
-    expr "x$ac_package" : ".*[^-_$as_cr_alnum]" >/dev/null &&
+    expr "x$ac_package" : ".*[^-_$as_cr_alnum]" >/System/Devices/null &&
       { echo "$as_me: error: invalid package name: $ac_package" >&2
    { (exit 1); exit 1; }; }
     ac_package=`echo $ac_package| sed 's/-/_/g'`
@@ -599,7 +599,7 @@
   -without-* | --without-*)
     ac_package=`expr "x$ac_option" : 'x-*without-\(.*\)'`
     # Reject names that are not valid shell variable names.
-    expr "x$ac_package" : ".*[^-_$as_cr_alnum]" >/dev/null &&
+    expr "x$ac_package" : ".*[^-_$as_cr_alnum]" >/System/Devices/null &&
       { echo "$as_me: error: invalid package name: $ac_package" >&2
    { (exit 1); exit 1; }; }
     ac_package=`echo $ac_package | sed 's/-/_/g'`
@@ -631,7 +631,7 @@
   *=*)
     ac_envvar=`expr "x$ac_option" : 'x\([^=]*\)='`
     # Reject names that are not valid shell variable names.
-    expr "x$ac_envvar" : ".*[^_$as_cr_alnum]" >/dev/null &&
+    expr "x$ac_envvar" : ".*[^_$as_cr_alnum]" >/System/Devices/null &&
       { echo "$as_me: error: invalid variable name: $ac_envvar" >&2
    { (exit 1); exit 1; }; }
     ac_optarg=`echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"`
@@ -641,7 +641,7 @@
   *)
     # FIXME: should be removed in autoconf 3.0.
     echo "$as_me: WARNING: you should use --build, --host, --target" >&2
-    expr "x$ac_option" : ".*[^-._$as_cr_alnum]" >/dev/null &&
+    expr "x$ac_option" : ".*[^-._$as_cr_alnum]" >/System/Devices/null &&
       echo "$as_me: WARNING: invalid host type: $ac_option" >&2
     : ${build_alias=$ac_option} ${host_alias=$ac_option} ${target_alias=$ac_option}
     ;;
@@ -699,19 +699,19 @@
 ac_tool_prefix=
 test -n "$host_alias" && ac_tool_prefix=$host_alias-
 
-test "$silent" = yes && exec 6>/dev/null
+test "$silent" = yes && exec 6>/System/Devices/null
 
 
 # Find the source files, if location was not specified.
 if test -z "$srcdir"; then
   ac_srcdir_defaulted=yes
   # Try the directory containing this script, then its parent.
-  ac_confdir=`(dirname "$0") 2>/dev/null ||
+  ac_confdir=`(dirname "$0") 2>/System/Devices/null ||
 $as_expr X"$0" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$0" : 'X\(//\)[^/]' \| \
 	 X"$0" : 'X\(//\)$' \| \
 	 X"$0" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$0" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -734,7 +734,7 @@
    { (exit 1); exit 1; }; }
   fi
 fi
-(cd $srcdir && test -r ./$ac_unique_file) 2>/dev/null ||
+(cd $srcdir && test -r ./$ac_unique_file) 2>/System/Devices/null ||
   { echo "$as_me: error: sources are in $srcdir, but \`cd $srcdir' does not work" >&2
    { (exit 1); exit 1; }; }
 srcdir=`echo "$srcdir" | sed 's%\([^\\/]\)[\\/]*$%\1%'`
@@ -988,22 +988,22 @@
 ## Platform. ##
 ## --------- ##
 
-hostname = `(hostname || uname -n) 2>/dev/null | sed 1q`
-uname -m = `(uname -m) 2>/dev/null || echo unknown`
-uname -r = `(uname -r) 2>/dev/null || echo unknown`
-uname -s = `(uname -s) 2>/dev/null || echo unknown`
-uname -v = `(uname -v) 2>/dev/null || echo unknown`
-
-/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`
-/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`
-
-/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`
-/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`
-/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`
-hostinfo               = `(hostinfo) 2>/dev/null               || echo unknown`
-/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`
-/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`
-/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`
+hostname = `(hostname || uname -n) 2>/System/Devices/null | sed 1q`
+uname -m = `(uname -m) 2>/System/Devices/null || echo unknown`
+uname -r = `(uname -r) 2>/System/Devices/null || echo unknown`
+uname -s = `(uname -s) 2>/System/Devices/null || echo unknown`
+uname -v = `(uname -v) 2>/System/Devices/null || echo unknown`
+
+/System/Tools/uname -p = `(/System/Tools/uname -p) 2>/System/Devices/null || echo unknown`
+/System/Tools/uname -X     = `(/System/Tools/uname -X) 2>/System/Devices/null     || echo unknown`
+
+/System/Tools/arch              = `(/System/Tools/arch) 2>/System/Devices/null              || echo unknown`
+/System/Tools/arch -k       = `(/System/Tools/arch -k) 2>/System/Devices/null       || echo unknown`
+/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/System/Devices/null || echo unknown`
+hostinfo               = `(hostinfo) 2>/System/Devices/null               || echo unknown`
+/System/Tools/machine           = `(/System/Tools/machine) 2>/System/Devices/null           || echo unknown`
+/System/Tools/oslevel       = `(/System/Tools/oslevel) 2>/System/Devices/null       || echo unknown`
+/System/Tools/universe          = `(/System/Tools/universe) 2>/System/Devices/null          || echo unknown`
 
 _ASUNAME
 
@@ -1213,7 +1213,7 @@
 done
 
 if test -r "$cache_file"; then
-  # Some versions of bash will fail to source /dev/null (special
+  # Some versions of bash will fail to source /System/Devices/null (special
   # files actually), so we avoid doing that.
   if test -f "$cache_file"; then
     { echo "$as_me:$LINENO: loading cache $cache_file" >&5
@@ -1512,7 +1512,7 @@
 
 
 # Make sure we can run config.sub.
-$ac_config_sub sun4 >/dev/null 2>&1 ||
+$ac_config_sub sun4 >/System/Devices/null 2>&1 ||
   { { echo "$as_me:$LINENO: error: cannot run $ac_config_sub" >&5
 echo "$as_me: error: cannot run $ac_config_sub" >&2;}
    { (exit 1); exit 1; }; }
@@ -2047,18 +2047,18 @@
 echo "$as_me:$LINENO:" \
      "checking for C compiler version" >&5
 ac_compiler=`set X $ac_compile; echo $2`
-{ (eval echo "$as_me:$LINENO: \"$ac_compiler --version </dev/null >&5\"") >&5
-  (eval $ac_compiler --version </dev/null >&5) 2>&5
+{ (eval echo "$as_me:$LINENO: \"$ac_compiler --version </System/Devices/null >&5\"") >&5
+  (eval $ac_compiler --version </System/Devices/null >&5) 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
-{ (eval echo "$as_me:$LINENO: \"$ac_compiler -v </dev/null >&5\"") >&5
-  (eval $ac_compiler -v </dev/null >&5) 2>&5
+{ (eval echo "$as_me:$LINENO: \"$ac_compiler -v </System/Devices/null >&5\"") >&5
+  (eval $ac_compiler -v </System/Devices/null >&5) 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
-{ (eval echo "$as_me:$LINENO: \"$ac_compiler -V </dev/null >&5\"") >&5
-  (eval $ac_compiler -V </dev/null >&5) 2>&5
+{ (eval echo "$as_me:$LINENO: \"$ac_compiler -V </System/Devices/null >&5\"") >&5
+  (eval $ac_compiler -V </System/Devices/null >&5) 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
@@ -2274,7 +2274,7 @@
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }; then
-  for ac_file in `(ls conftest.o conftest.obj; ls conftest.*) 2>/dev/null`; do
+  for ac_file in `(ls conftest.o conftest.obj; ls conftest.*) 2>/System/Devices/null`; do
   case $ac_file in
     *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg ) ;;
     *) ac_cv_objext=`expr "$ac_file" : '.*\.\(.*\)'`
@@ -2739,7 +2739,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -2777,7 +2777,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -2846,7 +2846,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -2884,7 +2884,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -3432,13 +3432,13 @@
 # Find a good install program.  We prefer a C program (faster),
 # so one script is as good as another.  But avoid the broken or
 # incompatible versions:
-# SysV /etc/install, /usr/sbin/install
+# SysV/System/Settings/install, /usr/System/AdminTools/install
 # SunOS /usr/etc/install
-# IRIX /sbin/install
-# AIX /bin/install
+# IRIX /System/AdminTools/install
+# AIX /System/Tools/install
 # AmigaOS /C/install, which installs bootblocks on floppy discs
-# AIX 4 /usr/bin/installbsd, which doesn't work without a -g flag
-# AFS /usr/afsws/bin/install, which mishandles nonexistent args
+# AIX 4 /System/Tools/installbsd, which doesn't work without a -g flag
+# AFS /usr/afsws/System/Tools/install, which mishandles nonexistent args
 # SVR4 /usr/ucb/install, which tries to use the nonexistent group "staff"
 # OS/2's system install, which has a completely different semantic
 # ./install, which can be erroneously created by make from ./install.sh.
@@ -3456,7 +3456,7 @@
   # Account for people who put trailing slashes in PATH elements.
 case $as_dir/ in
   ./ | .// | /cC/* | \
-  /etc/* | /usr/sbin/* | /usr/etc/* | /sbin/* | /usr/afsws/bin/* | \
+ /System/Settings/* | /usr/System/AdminTools/* | /usr/etc/* | /System/AdminTools/* | /usr/afsws/System/Tools/* | \
   ?:\\/os2\\/install\\/* | ?:\\/OS2\\/INSTALL\\/* | \
   /usr/ucb/* ) ;;
   *)
@@ -3467,11 +3467,11 @@
       for ac_exec_ext in '' $ac_executable_extensions; do
 	if $as_executable_p "$as_dir/$ac_prog$ac_exec_ext"; then
 	  if test $ac_prog = install &&
-	    grep dspmsg "$as_dir/$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
+	    grep dspmsg "$as_dir/$ac_prog$ac_exec_ext" >/System/Devices/null 2>&1; then
 	    # AIX install.  It has an incompatible calling convention.
 	    :
 	  elif test $ac_prog = install &&
-	    grep pwplus "$as_dir/$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
+	    grep pwplus "$as_dir/$ac_prog$ac_exec_ext" >/System/Devices/null 2>&1; then
 	    # program-specific install script used by HP pwplus--don't use.
 	    :
 	  else
@@ -3563,7 +3563,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -3798,7 +3798,7 @@
 if test "${ac_cv_prog_egrep+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
-  if echo a | (grep -E '(a|b)') >/dev/null 2>&1
+  if echo a | (grep -E '(a|b)') >/System/Devices/null 2>&1
     then ac_cv_prog_egrep='grep -E'
     else ac_cv_prog_egrep='egrep'
     fi
@@ -3875,7 +3875,7 @@
 
 _ACEOF
 if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  $EGREP "memchr" >/dev/null 2>&1; then
+  $EGREP "memchr" >/System/Devices/null 2>&1; then
   :
 else
   ac_cv_header_stdc=no
@@ -3896,7 +3896,7 @@
 
 _ACEOF
 if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  $EGREP "free" >/dev/null 2>&1; then
+  $EGREP "free" >/System/Devices/null 2>&1; then
   :
 else
   ac_cv_header_stdc=no
@@ -3906,7 +3906,7 @@
 fi
 
 if test $ac_cv_header_stdc = yes; then
-  # /bin/cc in Irix-4.0.5 gets non-ANSI ctype macros unless using -ansi.
+  # /System/Tools/cc in Irix-4.0.5 gets non-ANSI ctype macros unless using -ansi.
   if test "$cross_compiling" = yes; then
   :
 else
@@ -4008,7 +4008,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -5602,7 +5602,7 @@
 
 _ACEOF
 if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  $EGREP "webecray" >/dev/null 2>&1; then
+  $EGREP "webecray" >/System/Devices/null 2>&1; then
   ac_cv_os_cray=yes
 else
   ac_cv_os_cray=no
@@ -5802,7 +5802,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -6745,7 +6745,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -7103,7 +7103,7 @@
   char *p;
   int dev_zero;
 
-  dev_zero = open ("/dev/zero", O_RDONLY);
+  dev_zero = open ("/System/Devices/zero", O_RDONLY);
   if (dev_zero < 0)
     exit (1);
 
@@ -7236,9 +7236,9 @@
      t end
      /^ac_cv_env/!s/^\([^=]*\)=\(.*\)$/\1=${\1=\2}/
      : end' >>confcache
-if diff $cache_file confcache >/dev/null 2>&1; then :; else
+if diff $cache_file confcache >/System/Devices/null 2>&1; then :; else
   if test -w $cache_file; then
-    test "x$cache_file" != "x/dev/null" && echo "updating cache $cache_file"
+    test "x$cache_file" != "x/System/Devices/null" && echo "updating cache $cache_file"
     cat confcache >$cache_file
   else
     echo "not updating unwritable cache $cache_file"
@@ -7307,19 +7307,19 @@
 ## --------------------- ##
 
 # Be Bourne compatible
-if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
+if test -n "${ZSH_VERSION+set}" && (emulate sh) >/System/Devices/null 2>&1; then
   emulate sh
   NULLCMD=:
   # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
   # is contrary to our usage.  Disable this feature.
   alias -g '${1+"$@"}'='"$@"'
-elif test -n "${BASH_VERSION+set}" && (set -o posix) >/dev/null 2>&1; then
+elif test -n "${BASH_VERSION+set}" && (set -o posix) >/System/Devices/null 2>&1; then
   set -o posix
 fi
 DUALCASE=1; export DUALCASE # for MKS sh
 
 # Support unset when possible.
-if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
+if ( (MAIL=60; unset MAIL) || exit) >/System/Devices/null 2>&1; then
   as_unset=unset
 else
   as_unset=false
@@ -7346,13 +7346,13 @@
 done
 
 # Required to use basename.
-if expr a : '\(a\)' >/dev/null 2>&1; then
+if expr a : '\(a\)' >/System/Devices/null 2>&1; then
   as_expr=expr
 else
   as_expr=false
 fi
 
-if (basename /) >/dev/null 2>&1 && test "X`basename / 2>&1`" = "X/"; then
+if (basename /) >/System/Devices/null 2>&1 && test "X`basename / 2>&1`" = "X/"; then
   as_basename=basename
 else
   as_basename=false
@@ -7364,7 +7364,7 @@
 $as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
 	 X"$0" : 'X\(//\)$' \| \
 	 X"$0" : 'X\(/\)$' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X/"$0" |
     sed '/^.*\/\([^/][^/]*\)\/*$/{ s//\1/; q; }
   	  /^X\/\(\/\/\)$/{ s//\1/; q; }
@@ -7382,10 +7382,10 @@
 
 # The user is always right.
 if test "${PATH_SEPARATOR+set}" != set; then
-  echo "#! /bin/sh" >conf$$.sh
+  echo "#! /System/Tools/sh" >conf$$.sh
   echo  "exit 0"   >>conf$$.sh
   chmod +x conf$$.sh
-  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
+  if (PATH="/nonexistent;."; conf$$.sh) >/System/Devices/null 2>&1; then
     PATH_SEPARATOR=';'
   else
     PATH_SEPARATOR=:
@@ -7396,7 +7396,7 @@
 
   as_lineno_1=$LINENO
   as_lineno_2=$LINENO
-  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
+  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/System/Devices/null`
   test "x$as_lineno_1" != "x$as_lineno_2" &&
   test "x$as_lineno_3"  = "x$as_lineno_2"  || {
   # Find who we are.  Look in the path if we contain no path at all
@@ -7436,9 +7436,9 @@
 	   if ("$as_dir/$as_base" -c '
   as_lineno_1=$LINENO
   as_lineno_2=$LINENO
-  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
+  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/System/Devices/null`
   test "x$as_lineno_1" != "x$as_lineno_2" &&
-  test "x$as_lineno_3"  = "x$as_lineno_2" ') 2>/dev/null; then
+  test "x$as_lineno_3"  = "x$as_lineno_2" ') 2>/System/Devices/null; then
 	     $as_unset BASH_ENV || test "${BASH_ENV+set}" != set || { BASH_ENV=; export BASH_ENV; }
 	     $as_unset ENV || test "${ENV+set}" != set || { ENV=; export ENV; }
 	     CONFIG_SHELL=$as_dir/$as_base
@@ -7490,7 +7490,7 @@
   *)       ECHO_N= ECHO_C='\c' ECHO_T= ;;
 esac
 
-if expr a : '\(a\)' >/dev/null 2>&1; then
+if expr a : '\(a\)' >/System/Devices/null 2>&1; then
   as_expr=expr
 else
   as_expr=false
@@ -7498,7 +7498,7 @@
 
 rm -f conf$$ conf$$.exe conf$$.file
 echo >conf$$.file
-if ln -s conf$$.file conf$$ 2>/dev/null; then
+if ln -s conf$$.file conf$$ 2>/System/Devices/null; then
   # We could just check for DJGPP; but this test a) works b) is more generic
   # and c) will remain valid once DJGPP supports symlinks (DJGPP 2.04).
   if test -f conf$$.exe; then
@@ -7507,14 +7507,14 @@
   else
     as_ln_s='ln -s'
   fi
-elif ln conf$$.file conf$$ 2>/dev/null; then
+elif ln conf$$.file conf$$ 2>/System/Devices/null; then
   as_ln_s=ln
 else
   as_ln_s='cp -p'
 fi
 rm -f conf$$ conf$$.exe conf$$.file
 
-if mkdir -p . 2>/dev/null; then
+if mkdir -p . 2>/System/Devices/null; then
   as_mkdir_p=:
 else
   test -d ./-p && rmdir ./-p
@@ -7563,7 +7563,7 @@
   $ $0 $@
 
 _CSEOF
-echo "on `(hostname || uname -n) 2>/dev/null | sed 1q`" >&5
+echo "on `(hostname || uname -n) 2>/System/Devices/null | sed 1q`" >&5
 echo >&5
 _ACEOF
 
@@ -7697,7 +7697,7 @@
 ac_configure_extra_args=
 
 if $ac_cs_silent; then
-  exec 6>/dev/null
+  exec 6>/System/Devices/null
   ac_configure_extra_args="$ac_configure_extra_args --silent"
 fi
 
@@ -7721,7 +7721,7 @@
 with_target_subdir=${with_target_subdir}
 with_multisubdir=${with_multisubdir}
 ac_configure_args="--enable-multilib ${ac_configure_args}"
-CONFIG_SHELL=${CONFIG_SHELL-/bin/sh}
+CONFIG_SHELL=${CONFIG_SHELL-/System/Tools/sh}
 ORIGINAL_LD_FOR_MULTILIBS="${ORIGINAL_LD_FOR_MULTILIBS}"
 libiberty_topdir=${libiberty_topdir}
 
@@ -7768,7 +7768,7 @@
 # Create a (secure) tmp directory for tmp files.
 
 {
-  tmp=`(umask 077 && mktemp -d -q "./confstatXXXXXX") 2>/dev/null` &&
+  tmp=`(umask 077 && mktemp -d -q "./confstatXXXXXX") 2>/System/Devices/null` &&
   test -n "$tmp" && test -d "$tmp"
 }  ||
 {
@@ -7924,12 +7924,12 @@
   esac
 
   # Compute @srcdir@, @top_srcdir@, and @INSTALL@ for subdirectories.
-  ac_dir=`(dirname "$ac_file") 2>/dev/null ||
+  ac_dir=`(dirname "$ac_file") 2>/System/Devices/null ||
 $as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$ac_file" : 'X\(//\)[^/]' \| \
 	 X"$ac_file" : 'X\(//\)$' \| \
 	 X"$ac_file" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$ac_file" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -7943,12 +7943,12 @@
     as_dirs=
     while test ! -d "$as_dir"; do
       as_dirs="$as_dir $as_dirs"
-      as_dir=`(dirname "$as_dir") 2>/dev/null ||
+      as_dir=`(dirname "$as_dir") 2>/System/Devices/null ||
 $as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$as_dir" : 'X\(//\)[^/]' \| \
 	 X"$as_dir" : 'X\(//\)$' \| \
 	 X"$as_dir" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$as_dir" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -8068,7 +8068,7 @@
 	   # Source tree
 	   echo "$srcdir/$f"
 	 else
-	   # /dev/null tree
+	   # /System/Devices/null tree
 	   { { echo "$as_me:$LINENO: error: cannot find input file: $f" >&5
 echo "$as_me: error: cannot find input file: $f" >&2;}
    { (exit 1); exit 1; }; }
@@ -8160,7 +8160,7 @@
 	   # Source tree
 	   echo "$srcdir/$f"
 	 else
-	   # /dev/null tree
+	   # /System/Devices/null tree
 	   { { echo "$as_me:$LINENO: error: cannot find input file: $f" >&5
 echo "$as_me: error: cannot find input file: $f" >&2;}
    { (exit 1); exit 1; }; }
@@ -8213,11 +8213,11 @@
 # Break up conftest.defines because some shells have a limit on the size
 # of here documents, and old seds have small limits too (100 cmds).
 echo '  # Handle all the #define templates only if necessary.' >>$CONFIG_STATUS
-echo '  if grep "^[	 ]*#[	 ]*define" $tmp/in >/dev/null; then' >>$CONFIG_STATUS
+echo '  if grep "^[	 ]*#[	 ]*define" $tmp/in >/System/Devices/null; then' >>$CONFIG_STATUS
 echo '  # If there are no defines, we may have an empty if/fi' >>$CONFIG_STATUS
 echo '  :' >>$CONFIG_STATUS
 rm -f conftest.tail
-while grep . conftest.defines >/dev/null
+while grep . conftest.defines >/System/Devices/null
 do
   # Write a limited-size here document to $tmp/defines.sed.
   echo '  cat >$tmp/defines.sed <<CEOF' >>$CONFIG_STATUS
@@ -8244,7 +8244,7 @@
 # of here documents, and old seds have small limits too (100 cmds).
 echo '  # Handle all the #undef templates' >>$CONFIG_STATUS
 rm -f conftest.tail
-while grep . conftest.undefs >/dev/null
+while grep . conftest.undefs >/System/Devices/null
 do
   # Write a limited-size here document to $tmp/undefs.sed.
   echo '  cat >$tmp/undefs.sed <<CEOF' >>$CONFIG_STATUS
@@ -8277,16 +8277,16 @@
   cat $tmp/in >>$tmp/config.h
   rm -f $tmp/in
   if test x"$ac_file" != x-; then
-    if diff $ac_file $tmp/config.h >/dev/null 2>&1; then
+    if diff $ac_file $tmp/config.h >/System/Devices/null 2>&1; then
       { echo "$as_me:$LINENO: $ac_file is unchanged" >&5
 echo "$as_me: $ac_file is unchanged" >&6;}
     else
-      ac_dir=`(dirname "$ac_file") 2>/dev/null ||
+      ac_dir=`(dirname "$ac_file") 2>/System/Devices/null ||
 $as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$ac_file" : 'X\(//\)[^/]' \| \
 	 X"$ac_file" : 'X\(//\)$' \| \
 	 X"$ac_file" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$ac_file" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -8300,12 +8300,12 @@
     as_dirs=
     while test ! -d "$as_dir"; do
       as_dirs="$as_dir $as_dirs"
-      as_dir=`(dirname "$as_dir") 2>/dev/null ||
+      as_dir=`(dirname "$as_dir") 2>/System/Devices/null ||
 $as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$as_dir" : 'X\(//\)[^/]' \| \
 	 X"$as_dir" : 'X\(//\)$' \| \
 	 X"$as_dir" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$as_dir" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -8335,12 +8335,12 @@
 for ac_file in : $CONFIG_COMMANDS; do test "x$ac_file" = x: && continue
   ac_dest=`echo "$ac_file" | sed 's,:.*,,'`
   ac_source=`echo "$ac_file" | sed 's,[^:]*:,,'`
-  ac_dir=`(dirname "$ac_dest") 2>/dev/null ||
+  ac_dir=`(dirname "$ac_dest") 2>/System/Devices/null ||
 $as_expr X"$ac_dest" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$ac_dest" : 'X\(//\)[^/]' \| \
 	 X"$ac_dest" : 'X\(//\)$' \| \
 	 X"$ac_dest" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$ac_dest" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -8354,12 +8354,12 @@
     as_dirs=
     while test ! -d "$as_dir"; do
       as_dirs="$as_dir $as_dirs"
-      as_dir=`(dirname "$as_dir") 2>/dev/null ||
+      as_dir=`(dirname "$as_dir") 2>/System/Devices/null ||
 $as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$as_dir" : 'X\(//\)[^/]' \| \
 	 X"$as_dir" : 'X\(//\)$' \| \
 	 X"$as_dir" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$as_dir" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -8466,7 +8466,7 @@
 # config.status does its own redirection, appending to config.log.
 # Unfortunately, on DOS this fails, as config.log is still kept open
 # by configure, so config.status won't be able to write to it; its
-# output is simply discarded.  So we exec the FD to /dev/null,
+# output is simply discarded.  So we exec the FD to /System/Devices/null,
 # effectively closing config.log, so it can be properly (re)opened and
 # appended to by config.status.  When coming back to configure, we
 # need to make the FD available again.
@@ -8475,7 +8475,7 @@
   ac_config_status_args=
   test "$silent" = yes &&
     ac_config_status_args="$ac_config_status_args --quiet"
-  exec 5>/dev/null
+  exec 5>/System/Devices/null
   $SHELL $CONFIG_STATUS $ac_config_status_args || ac_cs_success=false
   exec 5>>config.log
   # Use ||, not &&, to avoid exiting from the if with $? = 1, which
diff -urN binutils-2.16.1/libiberty/configure.ac binutils-2.16.1-STEP/libiberty/configure.ac
--- binutils-2.16.1/libiberty/configure.ac	2005-03-07 07:48:16.000000000 +1300
+++ binutils-2.16.1-STEP/libiberty/configure.ac	2005-09-02 11:16:20.913139296 +1200
@@ -567,7 +567,7 @@
 with_target_subdir=${with_target_subdir}
 with_multisubdir=${with_multisubdir}
 ac_configure_args="--enable-multilib ${ac_configure_args}"
-CONFIG_SHELL=${CONFIG_SHELL-/bin/sh}
+CONFIG_SHELL=${CONFIG_SHELL-/System/Tools/sh}
 ORIGINAL_LD_FOR_MULTILIBS="${ORIGINAL_LD_FOR_MULTILIBS}"
 libiberty_topdir=${libiberty_topdir}
 ]])
diff -urN binutils-2.16.1/libiberty/gather-docs binutils-2.16.1-STEP/libiberty/gather-docs
--- binutils-2.16.1/libiberty/gather-docs	2001-09-27 06:45:49.000000000 +1200
+++ binutils-2.16.1-STEP/libiberty/gather-docs	2005-09-02 11:16:20.922137928 +1200
@@ -1,4 +1,4 @@
-#!/usr/bin/perl
+#!/System/Tools/perl
 # -*- perl -*-
 
 #   Copyright (C) 2001
diff -urN binutils-2.16.1/libiberty/maint-tool binutils-2.16.1-STEP/libiberty/maint-tool
--- binutils-2.16.1/libiberty/maint-tool	2005-03-08 10:12:04.000000000 +1300
+++ binutils-2.16.1-STEP/libiberty/maint-tool	2005-09-02 11:16:20.923137776 +1200
@@ -1,4 +1,4 @@
-#!/usr/bin/perl
+#!/System/Tools/perl
 # -*- perl -*-
 
 #   Copyright (C) 2001
diff -urN binutils-2.16.1/libiberty/make-temp-file.c binutils-2.16.1-STEP/libiberty/make-temp-file.c
--- binutils-2.16.1/libiberty/make-temp-file.c	2001-10-18 11:35:28.000000000 +1300
+++ binutils-2.16.1-STEP/libiberty/make-temp-file.c	2005-09-02 11:16:20.933136256 +1200
@@ -112,7 +112,7 @@
   base = try (P_tmpdir, base);
 #endif
 
-  /* Try /var/tmp, /usr/tmp, then /tmp.  */
+  /* Try /System/ApplicationData/TemporaryFiles, /usr/tmp, then /tmp.  */
   base = try (vartmp, base);
   base = try (usrtmp, base);
   base = try (tmp, base);
diff -urN binutils-2.16.1/libiberty/regex.c binutils-2.16.1-STEP/libiberty/regex.c
--- binutils-2.16.1/libiberty/regex.c	2004-11-20 16:00:46.000000000 +1300
+++ binutils-2.16.1-STEP/libiberty/regex.c	2005-09-02 11:16:20.948133976 +1200
@@ -205,7 +205,7 @@
 
    "... Some ctype macros are valid only for character codes that
    isascii says are ASCII (SGI's IRIX-4.0.5 is one such system --when
-   using /bin/cc or gcc but without giving an ansi option).  So, all
+   using /System/Tools/cc or gcc but without giving an ansi option).  So, all
    ctype uses should be through macros like ISPRINT...  If
    STDC_HEADERS is defined, then autoconf has verified that the ctype
    macros don't need to be guarded with references to isascii. ...
diff -urN binutils-2.16.1/libiberty/tmpnam.c binutils-2.16.1-STEP/libiberty/tmpnam.c
--- binutils-2.16.1/libiberty/tmpnam.c	2001-10-08 11:42:23.000000000 +1300
+++ binutils-2.16.1-STEP/libiberty/tmpnam.c	2005-09-02 11:18:09.955562328 +1200
@@ -18,7 +18,7 @@
 #define L_tmpnam 100
 #endif
 #ifndef P_tmpdir
-#define P_tmpdir "/usr/tmp"
+#define P_tmpdir "/System/TemporaryFiles"
 #endif
 
 static char tmpnam_buffer[L_tmpnam];
diff -urN binutils-2.16.1/libtool.m4 binutils-2.16.1-STEP/libtool.m4
--- binutils-2.16.1/libtool.m4	2004-07-22 07:21:41.000000000 +1200
+++ binutils-2.16.1-STEP/libtool.m4	2005-09-02 11:16:20.970130632 +1200
@@ -66,7 +66,7 @@
 AS="$AS" DLLTOOL="$DLLTOOL" OBJDUMP="$OBJDUMP" \
 objext="$OBJEXT" exeext="$EXEEXT" reload_flag="$reload_flag" \
 deplibs_check_method="$deplibs_check_method" file_magic_cmd="$file_magic_cmd" \
-${CONFIG_SHELL-/bin/sh} $ac_aux_dir/ltconfig --no-reexec \
+${CONFIG_SHELL-/System/Tools/sh} $ac_aux_dir/ltconfig --no-reexec \
 $libtool_flags --no-verify --build="$build" $ac_aux_dir/ltmain.sh $host \
 || AC_MSG_ERROR([libtool configure failed])
 
@@ -145,7 +145,7 @@
   echo '[#]line __oline__ "configure"' > conftest.$ac_ext
   if AC_TRY_EVAL(ac_compile); then
    if test "$lt_cv_prog_gnu_ld" = yes; then
-    case `/usr/bin/file conftest.$ac_objext` in
+    case `/System/Tools/file conftest.$ac_objext` in
     *32-bit*)
       LD="${LD-ld} -melf32bsmip"
       ;;
@@ -157,7 +157,7 @@
       ;;
     esac
    else
-    case `/usr/bin/file conftest.$ac_objext` in
+    case `/System/Tools/file conftest.$ac_objext` in
     *32-bit*)
       LD="${LD-ld} -32"
       ;;
@@ -177,7 +177,7 @@
   # Find out which ABI we are using.
   echo 'int i;' > conftest.$ac_ext
   if AC_TRY_EVAL(ac_compile); then
-    case "`/usr/bin/file conftest.o`" in
+    case "`/System/Tools/file conftest.o`" in
     *ELF-32*)
       HPUX_IA64_MODE="32"
       ;;
@@ -381,8 +381,8 @@
 	"file_magic "*)
 	  file_magic_regex="`expr \"$deplibs_check_method\" : \"file_magic \(.*\)\"`"
 	  MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
-	  if eval $file_magic_cmd \$file_magic_test_file 2> /dev/null |
-	    egrep "$file_magic_regex" > /dev/null; then
+	  if eval $file_magic_cmd \$file_magic_test_file 2> /System/Devices/null |
+	    egrep "$file_magic_regex" > /System/Devices/null; then
 	    :
 	  else
 	    cat <<EOF 1>&2
@@ -455,7 +455,7 @@
       re_direlt=['/[^/][^/]*/\.\./']
       # Canonicalize the path of ld
       ac_prog=`echo $ac_prog| sed 's%\\\\%/%g'`
-      while echo $ac_prog | grep "$re_direlt" > /dev/null 2>&1; do
+      while echo $ac_prog | grep "$re_direlt" > /System/Devices/null 2>&1; do
 	ac_prog=`echo $ac_prog| sed "s%$re_direlt%/%"`
       done
       test -z "$LD" && LD="$ac_prog"
@@ -484,7 +484,7 @@
       # Check to see if the program is GNU ld.  I'd rather use --version,
       # but apparently some GNU ld's only accept -v.
       # Break only if it was the GNU/non-GNU ld that we prefer.
-      if "$lt_cv_path_LD" -v 2>&1 < /dev/null | egrep '(GNU|with BFD)' > /dev/null; then
+      if "$lt_cv_path_LD" -v 2>&1 < /System/Devices/null | egrep '(GNU|with BFD)' > /System/Devices/null; then
 	test "$with_gnu_ld" != no && break
       else
 	test "$with_gnu_ld" != yes && break
@@ -508,7 +508,7 @@
 AC_DEFUN([AC_PROG_LD_GNU],
 [AC_CACHE_CHECK([if the linker ($LD) is GNU ld], lt_cv_prog_gnu_ld,
 [# I'd rather use --version here, but apparently some GNU ld's only accept -v.
-if $LD -v 2>&1 </dev/null | egrep '(GNU|with BFD)' 1>&5; then
+if $LD -v 2>&1 </System/Devices/null | egrep '(GNU|with BFD)' 1>&5; then
   lt_cv_prog_gnu_ld=yes
 else
   lt_cv_prog_gnu_ld=no
@@ -555,7 +555,7 @@
 
 bsdi4*)
   lt_cv_deplibs_check_method=['file_magic ELF [0-9][0-9]*-bit [ML]SB (shared object|dynamic lib)']
-  lt_cv_file_magic_cmd='/usr/bin/file -L'
+  lt_cv_file_magic_cmd='/System/Tools/file -L'
   lt_cv_file_magic_test_file=/shlib/libc.so
   ;;
 
@@ -566,26 +566,26 @@
 
 darwin* | rhapsody*)
   lt_cv_deplibs_check_method='file_magic Mach-O dynamically linked shared library'
-  lt_cv_file_magic_cmd='/usr/bin/file -L'
+  lt_cv_file_magic_cmd='/System/Tools/file -L'
   case "$host_os" in
   rhapsody* | darwin1.[012])
     lt_cv_file_magic_test_file='/System/Library/Frameworks/System.framework/System'
     ;;
   *) # Darwin 1.3 on
-    lt_cv_file_magic_test_file='/usr/lib/libSystem.dylib'
+    lt_cv_file_magic_test_file='/System/Library/Libraries/libSystem.dylib'
     ;;
   esac
   ;;
 
 freebsd* | kfreebsd*-gnu)
-  if echo __ELF__ | $CC -E - | grep __ELF__ > /dev/null; then
+  if echo __ELF__ | $CC -E - | grep __ELF__ > /System/Devices/null; then
     case $host_cpu in
     i*86 )
       # Not sure whether the presence of OpenBSD here was a mistake.
       # Let's accept both of them until this is cleared up.
       lt_cv_deplibs_check_method=['file_magic (FreeBSD|OpenBSD)/i[3-9]86 (compact )?demand paged shared library']
-      lt_cv_file_magic_cmd=/usr/bin/file
-      lt_cv_file_magic_test_file=`echo /usr/lib/libc.so.*`
+      lt_cv_file_magic_cmd=/System/Tools/file
+      lt_cv_file_magic_test_file=`echo /System/Library/Libraries/libc.so.*`
       ;;
     esac
   else
@@ -601,13 +601,13 @@
   case $host_cpu in
   hppa*)
     [lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|PA-RISC[0-9].[0-9]) shared library']
-    lt_cv_file_magic_cmd=/usr/bin/file
-    lt_cv_file_magic_test_file=/usr/lib/libc.sl
+    lt_cv_file_magic_cmd=/System/Tools/file
+    lt_cv_file_magic_test_file=/System/Library/Libraries/libc.sl
     ;;
   ia64*)
     [lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF-[0-9][0-9]) shared object file - IA64']
-    lt_cv_file_magic_cmd=/usr/bin/file
-    lt_cv_file_magic_test_file=/usr/lib/hpux32/libc.so
+    lt_cv_file_magic_cmd=/System/Tools/file
+    lt_cv_file_magic_test_file=/System/Library/Libraries/hpux32/libc.so
     ;;
   esac
   ;;
@@ -646,7 +646,7 @@
   ;;
 
 netbsd* | knetbsd*-gnu)
-  if echo __ELF__ | $CC -E - | grep __ELF__ > /dev/null; then
+  if echo __ELF__ | $CC -E - | grep __ELF__ > /System/Devices/null; then
     [lt_cv_deplibs_check_method='match_pattern /lib[^/\.]+\.so\.[0-9]+\.[0-9]+$']
   else
     [lt_cv_deplibs_check_method='match_pattern /lib[^/\.]+\.so$']
@@ -655,8 +655,8 @@
 
 newsos6)
   [lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (executable|dynamic lib)']
-  lt_cv_file_magic_cmd=/usr/bin/file
-  lt_cv_file_magic_test_file=/usr/lib/libnls.so
+  lt_cv_file_magic_cmd=/System/Tools/file
+  lt_cv_file_magic_test_file=/System/Library/Libraries/libnls.so
   ;;
 
 osf3* | osf4* | osf5*)
@@ -686,7 +686,7 @@
     ;;
   motorola)
     lt_cv_deplibs_check_method=['file_magic ELF [0-9][0-9]*-bit [ML]SB (shared object|dynamic lib) M[0-9][0-9]* Version [0-9]']
-    lt_cv_file_magic_test_file=`echo /usr/lib/libc.so*`
+    lt_cv_file_magic_test_file=`echo /System/Library/Libraries/libc.so*`
     ;;
   esac
   ;;
@@ -713,11 +713,11 @@
       # Check to see if the nm accepts a BSD-compat flag.
       # Adding the `sed 1q' prevents false positives on HP-UX, which says:
       #   nm: unknown option "B" ignored
-      # Tru64's nm complains that /dev/null is an invalid object file
-      if ($tmp_nm -B /dev/null 2>&1 | sed '1q'; exit 0) | egrep '(/dev/null|Invalid file or object type)' >/dev/null; then
+      # Tru64's nm complains that /System/Devices/null is an invalid object file
+      if ($tmp_nm -B /System/Devices/null 2>&1 | sed '1q'; exit 0) | egrep '(/System/Devices/null|Invalid file or object type)' >/System/Devices/null; then
 	lt_cv_path_NM="$tmp_nm -B"
 	break
-      elif ($tmp_nm -p /dev/null 2>&1 | sed '1q'; exit 0) | egrep /dev/null >/dev/null; then
+      elif ($tmp_nm -p /System/Devices/null 2>&1 | sed '1q'; exit 0) | egrep /System/Devices/null >/System/Devices/null; then
 	lt_cv_path_NM="$tmp_nm -p"
 	break
       else
@@ -829,7 +829,7 @@
 objext="$OBJEXT" exeext="$EXEEXT" reload_flag="$reload_flag" \
 deplibs_check_method="$deplibs_check_method" \
 file_magic_cmd="$file_magic_cmd" \
-${CONFIG_SHELL-/bin/sh} $ac_aux_dir/ltconfig -o libtool $libtool_flags \
+${CONFIG_SHELL-/System/Tools/sh} $ac_aux_dir/ltconfig -o libtool $libtool_flags \
 --build="$build" --add-tag=CXX $ac_aux_dir/ltcf-cxx.sh $host \
 || AC_MSG_ERROR([libtool tag configuration failed])
 CC="$lt_save_CC"
@@ -863,7 +863,7 @@
 objext="$OBJEXT" exeext="$EXEEXT" reload_flag="$reload_flag" \
 deplibs_check_method="$deplibs_check_method" \
 file_magic_cmd="$file_magic_cmd" \
-${CONFIG_SHELL-/bin/sh} $ac_aux_dir/ltconfig -o libtool $libtool_flags \
+${CONFIG_SHELL-/System/Tools/sh} $ac_aux_dir/ltconfig -o libtool $libtool_flags \
 --build="$build" --add-tag=GCJ $ac_aux_dir/ltcf-gcj.sh $host \
 || AC_MSG_ERROR([libtool tag configuration failed])
 CC="$lt_save_CC"
diff -urN binutils-2.16.1/ltcf-c.sh binutils-2.16.1-STEP/ltcf-c.sh
--- binutils-2.16.1/ltcf-c.sh	2004-10-06 02:34:42.000000000 +1300
+++ binutils-2.16.1-STEP/ltcf-c.sh	2005-09-02 11:16:20.981128960 +1200
@@ -88,7 +88,7 @@
     ;;
 
   beos*)
-    if $LD --help 2>&1 | egrep ': supported targets:.* elf' > /dev/null; then
+    if $LD --help 2>&1 | egrep ': supported targets:.* elf' > /System/Devices/null; then
       allow_undefined_flag=unsupported
       # Joseph Beckenbach <jrb3@best.com> says some releases of gcc
       # support --undefined.  This deserves some investigation.  FIXME
@@ -186,7 +186,7 @@
     ;;
 
   netbsd* | knetbsd*-gnu)
-    if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then
+    if echo __ELF__ | $CC -E - | grep __ELF__ >/System/Devices/null; then
       archive_cmds='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'
       wlarc=
     else
@@ -196,7 +196,7 @@
     ;;
 
   solaris* | sysv5*)
-    if $LD -v 2>&1 | egrep 'BFD 2\.8' > /dev/null; then
+    if $LD -v 2>&1 | egrep 'BFD 2\.8' > /System/Devices/null; then
       ld_shlibs=no
       cat <<EOF 1>&2
 
@@ -208,7 +208,7 @@
 *** used, and then restart.
 
 EOF
-    elif $LD --help 2>&1 | egrep ': supported targets:.* elf' > /dev/null; then
+    elif $LD --help 2>&1 | egrep ': supported targets:.* elf' > /System/Devices/null; then
       archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
       archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
     else
@@ -228,7 +228,7 @@
     ;;
 
   *)
-    if $LD --help 2>&1 | egrep ': supported targets:.* elf' > /dev/null; then
+    if $LD --help 2>&1 | egrep ': supported targets:.* elf' > /System/Devices/null; then
       archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
       archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
     else
@@ -248,7 +248,7 @@
       ;;
     *)
       # ancient GNU ld didn't support --whole-archive et. al.
-      if $LD --help 2>&1 | egrep 'no-whole-archive' > /dev/null; then
+      if $LD --help 2>&1 | egrep 'no-whole-archive' > /System/Devices/null; then
 	whole_archive_flag_spec="$wlarc"'--whole-archive$convenience '"$wlarc"'--no-whole-archive'
       else
 	whole_archive_flag_spec=
@@ -288,7 +288,7 @@
       # below for broken collect2 doesn't work under 4.3+
         collect2name=`${CC} -print-prog-name=collect2`
         if test -f "$collect2name" && \
-	   strings "$collect2name" | grep resolve_lib_name >/dev/null
+	   strings "$collect2name" | grep resolve_lib_name >/System/Devices/null
         then
 	  # We have reworked collect2
 	  hardcode_direct=yes
@@ -398,7 +398,7 @@
   # does not break anything, and helps significantly (at the cost of a little
   # extra space).
   freebsd2.2*)
-    archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags /usr/lib/c++rt0.o'
+    archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags /System/Library/Libraries/c++rt0.o'
     hardcode_libdir_flag_spec='-R$libdir'
     hardcode_direct=yes
     hardcode_shlibpath_var=no
@@ -461,7 +461,7 @@
     ;;
 
   netbsd* | knetbsd*-gnu)
-    if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then
+    if echo __ELF__ | $CC -E - | grep __ELF__ >/System/Devices/null; then
       archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out
     else
       archive_cmds='$LD -shared -o $lib $libobjs $deplibs $linker_flags'      # ELF
diff -urN binutils-2.16.1/ltcf-cxx.sh binutils-2.16.1-STEP/ltcf-cxx.sh
--- binutils-2.16.1/ltcf-cxx.sh	2004-10-06 02:34:42.000000000 +1300
+++ binutils-2.16.1-STEP/ltcf-cxx.sh	2005-09-02 11:16:20.988127896 +1200
@@ -62,7 +62,7 @@
   yes;
 #endif
 EOF
-if { ac_try='${CC-c++} -E conftest.$ac_ext'; { (eval echo \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then
+if { ac_try='${CC-c++} -E conftest.$ac_ext'; { (eval echo \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/System/Devices/null 2>&1; then
   with_gcc=yes
 
   # Set up default GNU C++ configuration
@@ -91,7 +91,7 @@
 
     # ancient GNU ld didn't support --whole-archive et. al.
     if eval "`$CC -print-prog-name=ld` --help 2>&1" | \
-        egrep 'no-whole-archive' > /dev/null; then
+        egrep 'no-whole-archive' > /System/Devices/null; then
       whole_archive_flag_spec="$wlarc"'--whole-archive$convenience '"$wlarc"'--no-whole-archive'
     else
       whole_archive_flag_spec=
@@ -139,7 +139,7 @@
       # below for broken collect2 doesn't work under 4.3+
         collect2name=`${CC} -print-prog-name=collect2`
         if test -f "$collect2name" && \
-	   strings "$collect2name" | grep resolve_lib_name >/dev/null
+	   strings "$collect2name" | grep resolve_lib_name >/System/Devices/null
         then
 	  # We have reworked collect2
 	  hardcode_direct=yes
@@ -612,7 +612,7 @@
         # GNU C++ compiler with Solaris linker
         if test "$with_gcc" = yes && test "$with_gnu_ld" = no; then
 	  no_undefined_flag=' ${wl}-z ${wl}defs'
-          if $CC --version | egrep -v '^2\.7' > /dev/null; then
+          if $CC --version | egrep -v '^2\.7' > /System/Devices/null; then
             archive_cmds='$CC -shared -nostdlib $LDFLAGS $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-h $wl$soname -o $lib'
             archive_expsym_cmds='$echo "{ global:" > $lib.exp~cat $export_symbols | sed -e "s/\(.*\)/\1;/" >> $lib.exp~$echo "local: *; };" >> $lib.exp~
 		$CC -shared -nostdlib ${wl}-M $wl$lib.exp -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$rm $lib.exp'
diff -urN binutils-2.16.1/ltcf-gcj.sh binutils-2.16.1-STEP/ltcf-gcj.sh
--- binutils-2.16.1/ltcf-gcj.sh	2004-07-22 07:21:41.000000000 +1200
+++ binutils-2.16.1-STEP/ltcf-gcj.sh	2005-09-02 11:16:21.000126072 +1200
@@ -91,7 +91,7 @@
     ;;
 
   beos*)
-    if $LD --help 2>&1 | egrep ': supported targets:.* elf' > /dev/null; then
+    if $LD --help 2>&1 | egrep ': supported targets:.* elf' > /System/Devices/null; then
       allow_undefined_flag=unsupported
       # Joseph Beckenbach <jrb3@best.com> says some releases of gcc
       # support --undefined.  This deserves some investigation.  FIXME
@@ -179,7 +179,7 @@
     ;;
 
   netbsd* | knetbsd*-gnu)
-    if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then
+    if echo __ELF__ | $CC -E - | grep __ELF__ >/System/Devices/null; then
       archive_cmds='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'
       wlarc=
     else
@@ -189,7 +189,7 @@
     ;;
 
   solaris* | sysv5*)
-    if $LD -v 2>&1 | egrep 'BFD 2\.8' > /dev/null; then
+    if $LD -v 2>&1 | egrep 'BFD 2\.8' > /System/Devices/null; then
       ld_shlibs=no
       cat <<EOF 1>&2
 
@@ -201,7 +201,7 @@
 *** used, and then restart.
 
 EOF
-    elif $LD --help 2>&1 | egrep ': supported targets:.* elf' > /dev/null; then
+    elif $LD --help 2>&1 | egrep ': supported targets:.* elf' > /System/Devices/null; then
       archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
       archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
     else
@@ -217,7 +217,7 @@
     ;;
 
   *)
-    if $LD --help 2>&1 | egrep ': supported targets:.* elf' > /dev/null; then
+    if $LD --help 2>&1 | egrep ': supported targets:.* elf' > /System/Devices/null; then
       archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
       archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
     else
@@ -237,7 +237,7 @@
       ;;
     *)
       # ancient GNU ld didn't support --whole-archive et. al.
-      if $LD --help 2>&1 | egrep 'no-whole-archive' > /dev/null; then
+      if $LD --help 2>&1 | egrep 'no-whole-archive' > /System/Devices/null; then
 	whole_archive_flag_spec="$wlarc"'--whole-archive$convenience '"$wlarc"'--no-whole-archive'
       else
 	whole_archive_flag_spec=
@@ -277,7 +277,7 @@
       # below for broken collect2 doesn't work under 4.3+
         collect2name=`${CC} -print-prog-name=collect2`
         if test -f "$collect2name" && \
-	   strings "$collect2name" | grep resolve_lib_name >/dev/null
+	   strings "$collect2name" | grep resolve_lib_name >/System/Devices/null
         then
 	  # We have reworked collect2
 	  hardcode_direct=yes
@@ -387,7 +387,7 @@
   # does not break anything, and helps significantly (at the cost of a little
   # extra space).
   freebsd2.2*)
-    archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags /usr/lib/c++rt0.o'
+    archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags /System/Library/Libraries/c++rt0.o'
     hardcode_libdir_flag_spec='-R$libdir'
     hardcode_direct=yes
     hardcode_shlibpath_var=no
@@ -434,7 +434,7 @@
     ;;
 
   netbsd* | knetbsd*-gnu)
-    if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then
+    if echo __ELF__ | $CC -E - | grep __ELF__ >/System/Devices/null; then
       archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out
     else
       archive_cmds='$LD -shared -nodefaultlibs -o $lib $libobjs $deplibs $linker_flags'      # ELF
diff -urN binutils-2.16.1/ltconfig binutils-2.16.1-STEP/ltconfig
--- binutils-2.16.1/ltconfig	2004-10-06 02:34:42.000000000 +1300
+++ binutils-2.16.1-STEP/ltconfig	2005-09-02 11:16:21.005125312 +1200
@@ -1,4 +1,4 @@
-#! /bin/sh
+#! /System/Tools/sh
 
 # ltconfig - Create a system-specific libtool.
 # Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001
@@ -27,7 +27,7 @@
 # A lot of this script is taken from autoconf-2.10.
 
 # Check that we are running under the correct shell.
-SHELL=${CONFIG_SHELL-/bin/sh}
+SHELL=${CONFIG_SHELL-/System/Tools/sh}
 echo=echo
 if test "X$1" = X--no-reexec; then
   # Discard the --no-reexec flag, and continue.
@@ -35,7 +35,7 @@
 elif test "X$1" = X--fallback-echo; then
   # Avoid inline document here, it may be left over
   :
-elif test "X`($echo '\t') 2>/dev/null`" = 'X\t'; then
+elif test "X`($echo '\t') 2>/System/Devices/null`" = 'X\t'; then
   # Yippee, $echo works!
   :
 else
@@ -55,7 +55,7 @@
 # Find the correct PATH separator.  Usually this is `:', but
 # DJGPP uses `;' like DOS.
 if test "X${PATH_SEPARATOR+set}" != Xset; then
-  UNAME=${UNAME-`uname 2>/dev/null`}
+  UNAME=${UNAME-`uname 2>/System/Devices/null`}
   case X$UNAME in
     *-DOS) PATH_SEPARATOR=';' ;;
     *)     PATH_SEPARATOR=':' ;;
@@ -70,16 +70,16 @@
   # find a string as large as possible, as long as the shell can cope with it
   for cmd in 'sed 50q "$0"' 'sed 20q "$0"' 'sed 10q "$0"' 'sed 2q "$0"' 'echo test'; do
     # expected sizes: less than 2Kb, 1Kb, 512 bytes, 16 bytes, ...
-    if (echo_test_string="`eval $cmd`") 2>/dev/null &&
+    if (echo_test_string="`eval $cmd`") 2>/System/Devices/null &&
        echo_test_string="`eval $cmd`" &&
-       (test "X$echo_test_string" = "X$echo_test_string") 2>/dev/null; then
+       (test "X$echo_test_string" = "X$echo_test_string") 2>/System/Devices/null; then
       break
     fi
   done
 fi
 
-if test "X`($echo '\t') 2>/dev/null`" = 'X\t' &&
-   echo_testing_string=`($echo "$echo_test_string") 2>/dev/null` &&
+if test "X`($echo '\t') 2>/System/Devices/null`" = 'X\t' &&
+   echo_testing_string=`($echo "$echo_test_string") 2>/System/Devices/null` &&
    test "X$echo_testing_string" = "X$echo_test_string"; then
   :
 else
@@ -92,8 +92,8 @@
   IFS="${IFS= 	}"; save_ifs="$IFS"; IFS="${IFS}${PATH_SEPARATOR}"
   for dir in $PATH /usr/ucb; do
     if (test -f $dir/echo || test -f $dir/echo$ac_exeext) &&
-       test "X`($dir/echo '\t') 2>/dev/null`" = 'X\t' &&
-       echo_testing_string=`($dir/echo "$echo_test_string") 2>/dev/null` &&
+       test "X`($dir/echo '\t') 2>/System/Devices/null`" = 'X\t' &&
+       echo_testing_string=`($dir/echo "$echo_test_string") 2>/System/Devices/null` &&
        test "X$echo_testing_string" = "X$echo_test_string"; then
       echo="$dir/echo"
       break
@@ -103,39 +103,39 @@
 
   if test "X$echo" = Xecho; then
     # We didn't find a better echo, so look for alternatives.
-    if test "X`(print -r '\t') 2>/dev/null`" = 'X\t' &&
-       echo_testing_string=`(print -r "$echo_test_string") 2>/dev/null` &&
+    if test "X`(print -r '\t') 2>/System/Devices/null`" = 'X\t' &&
+       echo_testing_string=`(print -r "$echo_test_string") 2>/System/Devices/null` &&
        test "X$echo_testing_string" = "X$echo_test_string"; then
       # This shell has a builtin print -r that does the trick.
       echo='print -r'
-    elif (test -f /bin/ksh || test -f /bin/ksh$ac_exeext) &&
-	 test "X$CONFIG_SHELL" != X/bin/ksh; then
+    elif (test -f /System/Tools/ksh || test -f /System/Tools/ksh$ac_exeext) &&
+	 test "X$CONFIG_SHELL" != X/System/Tools/ksh; then
       # If we have ksh, try running ltconfig again with it.
-      ORIGINAL_CONFIG_SHELL="${CONFIG_SHELL-/bin/sh}"
+      ORIGINAL_CONFIG_SHELL="${CONFIG_SHELL-/System/Tools/sh}"
       export ORIGINAL_CONFIG_SHELL
-      CONFIG_SHELL=/bin/ksh
+      CONFIG_SHELL=/System/Tools/ksh
       export CONFIG_SHELL
       exec "$CONFIG_SHELL" "$0" --no-reexec ${1+"$@"}
     else
       # Try using printf.
       echo='printf %s\n'
-      if test "X`($echo '\t') 2>/dev/null`" = 'X\t' &&
-	 echo_testing_string=`($echo "$echo_test_string") 2>/dev/null` &&
+      if test "X`($echo '\t') 2>/System/Devices/null`" = 'X\t' &&
+	 echo_testing_string=`($echo "$echo_test_string") 2>/System/Devices/null` &&
 	 test "X$echo_testing_string" = "X$echo_test_string"; then
 	# Cool, printf works
 	:
-      elif echo_testing_string=`("$ORIGINAL_CONFIG_SHELL" "$0" --fallback-echo '\t') 2>/dev/null` &&
+      elif echo_testing_string=`("$ORIGINAL_CONFIG_SHELL" "$0" --fallback-echo '\t') 2>/System/Devices/null` &&
 	   test "X$echo_testing_string" = 'X\t' &&
-	   echo_testing_string=`("$ORIGINAL_CONFIG_SHELL" "$0" --fallback-echo "$echo_test_string") 2>/dev/null` &&
+	   echo_testing_string=`("$ORIGINAL_CONFIG_SHELL" "$0" --fallback-echo "$echo_test_string") 2>/System/Devices/null` &&
 	   test "X$echo_testing_string" = "X$echo_test_string"; then
 	CONFIG_SHELL="$ORIGINAL_CONFIG_SHELL"
 	export CONFIG_SHELL
 	SHELL="$CONFIG_SHELL"
 	export SHELL
 	echo="$CONFIG_SHELL $0 --fallback-echo"
-      elif echo_testing_string=`("$CONFIG_SHELL" "$0" --fallback-echo '\t') 2>/dev/null` &&
+      elif echo_testing_string=`("$CONFIG_SHELL" "$0" --fallback-echo '\t') 2>/System/Devices/null` &&
 	   test "X$echo_testing_string" = 'X\t' &&
-	   echo_testing_string=`("$CONFIG_SHELL" "$0" --fallback-echo "$echo_test_string") 2>/dev/null` &&
+	   echo_testing_string=`("$CONFIG_SHELL" "$0" --fallback-echo "$echo_test_string") 2>/System/Devices/null` &&
 	   test "X$echo_testing_string" = "X$echo_test_string"; then
 	echo="$CONFIG_SHELL $0 --fallback-echo"
       else
@@ -143,7 +143,7 @@
 	prev=:
 
 	for cmd in 'echo test' 'sed 2q "$0"' 'sed 10q "$0"' 'sed 20q "$0"' 'sed 50q "$0"'; do
-	  if (test "X$echo_test_string" = "X`eval $cmd`") 2>/dev/null; then
+	  if (test "X$echo_test_string" = "X`eval $cmd`") 2>/System/Devices/null; then
 	    break
 	  fi
 	  prev="$cmd"
@@ -153,7 +153,7 @@
 	  echo_test_string=`eval $prev`
 	  
 	  export echo_test_string
-	  exec "${ORIGINAL_CONFIG_SHELL-${CONFIG_SHELL-/bin/sh}}" "$0" ${1+"$@"}
+	  exec "${ORIGINAL_CONFIG_SHELL-${CONFIG_SHELL-/System/Tools/sh}}" "$0" ${1+"$@"}
 	else
 	  # Oops.  We lost completely, so just stick with echo.
 	  echo=echo
@@ -432,7 +432,7 @@
     ;;
   esac
 
-  if grep "^### BEGIN LIBTOOL TAG CONFIG: $tagname$" < "$ofile" > /dev/null; then
+  if grep "^### BEGIN LIBTOOL TAG CONFIG: $tagname$" < "$ofile" > /System/Devices/null; then
     echo "$progname: tag name $tagname already exists" 1>&2
     exit 1
   fi
@@ -468,12 +468,12 @@
 # 0 standard input
 # 1 file creation
 # 2 errors and warnings
-# 3 some systems may open it to /dev/tty
+# 3 some systems may open it to /System/Devices/tty
 # 4 used on the Kubota Titan
 # 5 compiler messages saved in config.log
 # 6 checking for... messages and results
 if test "$silent" = yes; then
-  exec 6>/dev/null
+  exec 6>/System/Devices/null
 else
   exec 6>&1
 fi
@@ -491,9 +491,9 @@
   . $cache_file
 fi
 
-if (echo "testing\c"; echo 1,2,3) | grep c >/dev/null; then
+if (echo "testing\c"; echo 1,2,3) | grep c >/System/Devices/null; then
   # Stardent Vistra SVR4 grep lacks -e, says ghazi@caip.rutgers.edu.
-  if (echo -n testing; echo 1,2,3) | sed s/-n/xn/ | grep xn >/dev/null; then
+  if (echo -n testing; echo 1,2,3) | sed s/-n/xn/ | grep xn >/System/Devices/null; then
     ac_n= ac_c='
 ' ac_t='	'
   else
@@ -528,7 +528,7 @@
   ac_config_sub=$ac_aux_dir/config.sub
 
   # Make sure we can run config.sub.
-  if $SHELL $ac_config_sub sun4 >/dev/null 2>&1; then :
+  if $SHELL $ac_config_sub sun4 >/System/Devices/null 2>&1; then :
   else
     echo "$progname: cannot run $ac_config_sub" 1>&2
     echo "$help" 1>&2
@@ -653,15 +653,15 @@
 test -z "$objext" && objext=o
 
 echo $ac_n "checking for objdir... $ac_c" 1>&6
-rm -f .libs 2>/dev/null
-mkdir .libs 2>/dev/null
+rm -f .libs 2>/System/Devices/null
+mkdir .libs 2>/System/Devices/null
 if test -d .libs; then
   objdir=.libs
 else
   # MS-DOS does not allow filenames that begin with a dot.
   objdir=_libs
 fi
-rmdir .libs 2>/dev/null
+rmdir .libs 2>/System/Devices/null
 echo "$ac_t$objdir" 1>&6
 
 # If no C compiler was specified, use CC.
@@ -738,7 +738,7 @@
 # Check for any special shared library compilation flags.
 if test -n "$ac_cv_prog_cc_shlib"; then
   echo "$progname: warning: \`$CC' requires \`$ac_cv_prog_cc_shlib' to build shared libraries" 1>&2
-  if echo "$old_CC $old_CFLAGS " | egrep -e "[ 	]$ac_cv_prog_cc_shlib[ 	]" >/dev/null; then :
+  if echo "$old_CC $old_CFLAGS " | egrep -e "[ 	]$ac_cv_prog_cc_shlib[ 	]" >/System/Devices/null; then :
   else
     echo "$progname: add \`$ac_cv_prog_cc_shlib' to the CC or CFLAGS env variable and reconfigure" 1>&2
     ac_cv_prog_cc_can_build_shared=no
@@ -787,7 +787,7 @@
   # If test is not a shell built-in, we'll probably end up computing a
   # maximum length that is only half of the actual maximum length, but
   # we can't tell.
-  while test "X"`$CONFIG_SHELL $0 --fallback-echo "X$testring" 2>/dev/null` \
+  while test "X"`$CONFIG_SHELL $0 --fallback-echo "X$testring" 2>/System/Devices/null` \
              = "XX$testring" &&
           new_result=`expr "X$testring" : ".*" 2>&1` &&
           lt_cv_sys_max_cmd_len=$new_result &&
@@ -816,7 +816,7 @@
 if test "${lt_cv_compiler_c_o+set}" = set; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
-  $rm -r conftest 2>/dev/null
+  $rm -r conftest 2>/System/Devices/null
   mkdir conftest
   cd conftest
   $rm conftest*
@@ -851,7 +851,7 @@
   rmdir out
   cd ..
   rmdir conftest
-  $rm -r conftest 2>/dev/null
+  $rm -r conftest 2>/System/Devices/null
 fi
 compiler_c_o=$lt_cv_compiler_c_o
 echo "${ac_t}$compiler_c_o" 1>&6
@@ -863,10 +863,10 @@
   echo $ac_n "checking if we can lock with hard links... $ac_c" 1>&6
   hard_links=yes
   $rm conftest*
-  ln conftest.a conftest.b 2>/dev/null && hard_links=no
+  ln conftest.a conftest.b 2>/System/Devices/null && hard_links=no
   touch conftest.a
   ln conftest.a conftest.b 2>&5 || hard_links=no
-  ln conftest.a conftest.b 2>/dev/null && hard_links=no
+  ln conftest.a conftest.b 2>/System/Devices/null && hard_links=no
   echo "$ac_t$hard_links" 1>&6
   $rm conftest*
   if test "$hard_links" = no; then
@@ -946,7 +946,7 @@
 echo "$ac_t$hardcode_action" 1>&6
 
 echo $ac_n "checking whether stripping libraries is possible... $ac_c" 1>&6
-if test -n "$STRIP" && $STRIP -V 2>&1 | grep "GNU strip" >/dev/null; then
+if test -n "$STRIP" && $STRIP -V 2>&1 | grep "GNU strip" >/System/Devices/null; then
   test -z "$old_striplib" && old_striplib="$STRIP --strip-debug"
   test -z "$striplib" && striplib="$STRIP --strip-unneeded"
   echo "${ac_t}yes" 1>&6
@@ -1011,7 +1011,7 @@
     fi
     # If we're using GNU nm, then we don't want the "-C" option.
     # -C means demangle to AIX nm, but means don't demangle with GNU nm
-    if $NM -V 2>&1 | egrep '(GNU)' > /dev/null; then
+    if $NM -V 2>&1 | egrep '(GNU)' > /System/Devices/null; then
       export_symbols_cmds='$NM -Bpg $libobjs $convenience | awk '\''{ if (((\$2 == "T") || (\$2 == "D") || (\$2 == "B")) && (substr(\$3,1,1) != ".")) { print \$3 } }'\'' | sort -u > $export_symbols'
     else
       export_symbols_cmds='$NM -BCpg $libobjs $convenience | awk '\''{ if (((\$2 == "T") || (\$2 == "D") || (\$2 == "B")) && (substr(\$3,1,1) != ".")) { print \$3 } }'\'' | sort -u > $export_symbols'
@@ -1022,7 +1022,7 @@
     aix4 | aix4.[01] | aix4.[01].*)
       if { echo '#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 97)'
 	   echo ' yes '
-	   echo '#endif'; } | ${CC} -E - | grep yes > /dev/null; then
+	   echo '#endif'; } | ${CC} -E - | grep yes > /System/Devices/null; then
 	:
       else
 	# With GCC up to 2.95.x, collect2 would create an import file
@@ -1040,7 +1040,7 @@
 amigaos*)
   library_names_spec='$libname.ixlibrary $libname.a'
   # Create ${libname}_ixlibrary.a entries in /sys/libs.
-  finish_eval='for lib in `ls $libdir/*.ixlibrary 2>/dev/null`; do libname=`$echo "X$lib" | $Xsed -e '\''s%^.*/\([^/]*\)\.ixlibrary$%\1%'\''`; test $rm /sys/libs/${libname}_ixlibrary.a; $show "(cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a)"; (cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a) || exit 1; done'
+  finish_eval='for lib in `ls $libdir/*.ixlibrary 2>/System/Devices/null`; do libname=`$echo "X$lib" | $Xsed -e '\''s%^.*/\([^/]*\)\.ixlibrary$%\1%'\''`; test $rm /sys/libs/${libname}_ixlibrary.a; $show "(cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a)"; (cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a) || exit 1; done'
   ;;
 
 beos*)
@@ -1128,7 +1128,7 @@
   ;;
 
 freebsd*)
-  objformat=`test -x /usr/bin/objformat && /usr/bin/objformat || echo aout`
+  objformat=`test -x /System/Tools/objformat && /System/Tools/objformat || echo aout`
   version_type=freebsd-$objformat
   case $version_type in
     freebsd-elf*)
@@ -1190,9 +1190,9 @@
     shlibpath_var=LD_LIBRARY_PATH
     shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.
     if test "X$HPUX_IA64_MODE" = X32; then
-      sys_lib_search_path_spec="/usr/lib/hpux32 /usr/local/lib/hpux32 /usr/local/lib"
+      sys_lib_search_path_spec="/System/Library/Libraries/hpux32 /usr/local/lib/hpux32 /usr/local/lib"
     else
-      sys_lib_search_path_spec="/usr/lib/hpux64 /usr/local/lib/hpux64"
+      sys_lib_search_path_spec="/System/Library/Libraries/hpux64 /usr/local/lib/hpux64"
     fi
     sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec
     ;;
@@ -1274,7 +1274,7 @@
   need_lib_prefix=no
   need_version=no
   version_type=sunos
-  if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then
+  if echo __ELF__ | $CC -E - | grep __ELF__ >/System/Devices/null; then
     library_names_spec='${libname}${release}.so$versuffix ${libname}.so$versuffix'
     finish_cmds='PATH="\$PATH:/sbin" ldconfig -m $libdir'
     dynamic_linker='NetBSD (a.out) ld.so'
@@ -1320,7 +1320,7 @@
   soname_spec='${libname}${release}.so'
   library_names_spec='${libname}${release}.so$versuffix ${libname}${release}.so $libname.so'
   shlibpath_var=LD_LIBRARY_PATH
-  sys_lib_search_path_spec="/usr/shlib /usr/ccs/lib /usr/lib/cmplrs/cc /usr/lib /usr/local/lib /var/shlib"
+  sys_lib_search_path_spec="/usr/shlib /usr/ccs/lib /System/Library/Libraries/cmplrs/cc /usr/lib /usr/local/lib /var/shlib"
   sys_lib_dlsearch_path_spec="$sys_lib_search_path_spec"
   ;;
 
@@ -1464,7 +1464,7 @@
 esac
 
 # If we're using GNU nm, then use its standard symbol codes.
-if $NM -V 2>&1 | egrep '(GNU|with BFD)' > /dev/null; then
+if $NM -V 2>&1 | egrep '(GNU|with BFD)' > /System/Devices/null; then
   symcode='[ABCDGISTW]'
 fi
 
@@ -1503,8 +1503,8 @@
       fi
 
       # Make sure that we snagged all the symbols we need.
-      if egrep ' nm_test_var$' "$nlist" >/dev/null; then
-	if egrep ' nm_test_func$' "$nlist" >/dev/null; then
+      if egrep ' nm_test_var$' "$nlist" >/System/Devices/null; then
+	if egrep ' nm_test_func$' "$nlist" >/System/Devices/null; then
 	  cat <<EOF > conftest.$ac_ext
 #ifdef __cplusplus
 extern "C" {
@@ -1939,7 +1939,7 @@
 int fnord = 0;
 int main () { return(0); }
 EOF
-ac_try="$ac_compile >/dev/null 2>conftest.out"
+ac_try="$ac_compile >/System/Devices/null 2>conftest.out"
 { (eval echo $progname:1882: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
 ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
 if test -z "$ac_err"; then
@@ -2023,7 +2023,7 @@
                if(ptr1 || ptr2) { dlclose(self); exit(0); } } exit(1); }
 
 EOF
-if { (eval echo $progname:1965: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/dev/null
+if { (eval echo $progname:1965: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/System/Devices/null
 then
   lt_cv_dlopen_self=yes
 else
@@ -2097,7 +2097,7 @@
     if(ptr1 || ptr2) { dlclose(self); exit(0); } } exit(1); }
 
 EOF
-if { (eval echo $progname:2039: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/dev/null
+if { (eval echo $progname:2039: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/System/Devices/null
 then
   lt_cv_dlopen_self_static=yes
 else
@@ -2268,7 +2268,7 @@
 esac
 
 cat <<EOF >> "$cfgfile"
-# Libtool was configured as follows, on host `(hostname || uname -n) 2>/dev/null | sed 1q`:
+# Libtool was configured as follows, on host `(hostname || uname -n) 2>/System/Devices/null | sed 1q`:
 #
 # AR=$old_AR AR_FLAGS=$old_AR_FLAGS LTCC=$old_LTCC CC=$old_CC \\
 # CFLAGS=$old_CFLAGS CPPFLAGS=$old_CPPFLAGS \\
@@ -2812,7 +2812,7 @@
 # the --cache-file=FILE option to use a different cache file; that is
 # what configure does when it calls configure scripts in
 # subdirectories, so they share the cache.
-# Giving --cache-file=/dev/null disables caching, for debugging configure.
+# Giving --cache-file=/System/Devices/null disables caching, for debugging configure.
 # config.status only pays attention to the cache file if you give it the
 # --recheck option to rerun configure.
 #
diff -urN binutils-2.16.1/ltmain.sh binutils-2.16.1-STEP/ltmain.sh
--- binutils-2.16.1/ltmain.sh	2005-03-02 11:33:54.000000000 +1300
+++ binutils-2.16.1-STEP/ltmain.sh	2005-09-02 11:16:21.021122880 +1200
@@ -31,7 +31,7 @@
 elif test "X$1" = X--fallback-echo; then
   # Avoid inline document here, it may be left over
   :
-elif test "X`($echo '\t') 2>/dev/null`" = 'X\t'; then
+elif test "X`($echo '\t') 2>/System/Devices/null`" = 'X\t'; then
   # Yippee, $echo works!
   :
 else
@@ -144,7 +144,7 @@
 	taglist="$taglist $tagname"
 	;;
       *)
-        if grep "^### BEGIN LIBTOOL TAG CONFIG: $tagname$" < "$0" > /dev/null; then
+        if grep "^### BEGIN LIBTOOL TAG CONFIG: $tagname$" < "$0" > /System/Devices/null; then
           taglist="$taglist $tagname"
 	  # Evaluate the configuration.
 	  eval "`sed -n -e '/^### BEGIN LIBTOOL TAG CONFIG: '$tagname'$/,/^### END LIBTOOL TAG CONFIG: '$tagname'$/p' < $0`"
@@ -502,7 +502,7 @@
       "`$echo $CC` "*) ;;
       *)
         for z in $available_tags; do
-          if grep "^### BEGIN LIBTOOL TAG CONFIG: $z$" < "$0" > /dev/null; then
+          if grep "^### BEGIN LIBTOOL TAG CONFIG: $z$" < "$0" > /System/Devices/null; then
 	    # Evaluate the configuration.
 	    eval "`sed -n -e '/^### BEGIN LIBTOOL TAG CONFIG: '$z'$/,/^### END LIBTOOL TAG CONFIG: '$z'$/p' < $0`"
             case $base_compile in
@@ -586,7 +586,7 @@
     # Lock this critical section if it is needed
     # We use this script file to make the link, it avoids creating a new file
     if test "$need_locks" = yes; then
-      until $run ln "$0" "$lockfile" 2>/dev/null; do
+      until $run ln "$0" "$lockfile" 2>/System/Devices/null; do
 	$show "Waiting for $lockfile to be removed"
 	sleep 2
       done
@@ -594,7 +594,7 @@
       if test -f "$lockfile"; then
 	echo "\
 *** ERROR, $lockfile exists and contains:
-`cat $lockfile 2>/dev/null`
+`cat $lockfile 2>/System/Devices/null`
 
 This indicates that another process is trying to use the same
 temporary object file, and libtool could not work around it because
@@ -663,10 +663,10 @@
       fi
 
       if test "$need_locks" = warn &&
-	 test x"`cat $lockfile 2>/dev/null`" != x"$srcfile"; then
+	 test x"`cat $lockfile 2>/System/Devices/null`" != x"$srcfile"; then
 	echo "\
 *** ERROR, $lockfile contains:
-`cat $lockfile 2>/dev/null`
+`cat $lockfile 2>/System/Devices/null`
 
 but it should contain:
 $srcfile
@@ -700,7 +700,7 @@
 EOF
 
       # Allow error messages only from the first compilation.
-      suppress_output=' >/dev/null 2>&1'
+      suppress_output=' >/System/Devices/null 2>&1'
     else
       # No PIC object so indicate it doesn't exist in the libtool
       # object file.
@@ -733,10 +733,10 @@
       fi
 
       if test "$need_locks" = warn &&
-	 test x"`cat $lockfile 2>/dev/null`" != x"$srcfile"; then
+	 test x"`cat $lockfile 2>/System/Devices/null`" != x"$srcfile"; then
 	echo "\
 *** ERROR, $lockfile contains:
-`cat $lockfile 2>/dev/null`
+`cat $lockfile 2>/System/Devices/null`
 
 but it should contain:
 $srcfile
@@ -977,7 +977,7 @@
               # A libtool-controlled object.
 
 	      # Check to see that this really is a libtool object.
-	      if (sed -e '2q' $arg | egrep "^# Generated by .*$PACKAGE") >/dev/null 2>&1; then
+	      if (sed -e '2q' $arg | egrep "^# Generated by .*$PACKAGE") >/System/Devices/null 2>&1; then
                 pic_object=
                 non_pic_object=
 
@@ -1385,7 +1385,7 @@
 	# A libtool-controlled object.
 
 	# Check to see that this really is a libtool object.
-	if (sed -e '2q' $arg | egrep "^# Generated by .*$PACKAGE") >/dev/null 2>&1; then
+	if (sed -e '2q' $arg | egrep "^# Generated by .*$PACKAGE") >/System/Devices/null 2>&1; then
           pic_object=
           non_pic_object=
 
@@ -1536,7 +1536,7 @@
       "`$echo $CC` "*) ;;
       *)
         for z in $available_tags; do
-          if grep "^### BEGIN LIBTOOL TAG CONFIG: $z$" < "$0" > /dev/null; then
+          if grep "^### BEGIN LIBTOOL TAG CONFIG: $z$" < "$0" > /System/Devices/null; then
 	    # Evaluate the configuration.
 	    eval "`sed -n -e '/^### BEGIN LIBTOOL TAG CONFIG: '$z'$/,/^### END LIBTOOL TAG CONFIG: '$z'$/p' < $0`"
             case $base_compile in
@@ -1816,7 +1816,7 @@
 	fi
 
 	# Check to see that this really is a libtool archive.
-	if (sed -e '2q' $lib | egrep "^# Generated by .*$PACKAGE") >/dev/null 2>&1; then :
+	if (sed -e '2q' $lib | egrep "^# Generated by .*$PACKAGE") >/System/Devices/null 2>&1; then :
 	else
 	  $echo "$modename: \`$lib' is not a valid libtool archive" 1>&2
 	  exit 1
@@ -2314,7 +2314,7 @@
 		  fi
 		  ;;
 		esac
-		if grep "^installed=no" $deplib > /dev/null; then
+		if grep "^installed=no" $deplib > /System/Devices/null; then
 		  path="-L$absdir/$objdir"
 		else
 		  eval libdir=`sed -n -e 's/^libdir=\(.*\)$/\1/p' $deplib`
@@ -2872,11 +2872,11 @@
 	    if test -n "$name" && test "$name" != "0"; then
 	      libname=`eval \\$echo \"$libname_spec\"`
 	      for i in $lib_search_path $sys_lib_search_path $shlib_search_path; do
-		    potential_libs=`ls $i/$libname[.-]* 2>/dev/null`
+		    potential_libs=`ls $i/$libname[.-]* 2>/System/Devices/null`
 		    for potent_lib in $potential_libs; do
 		      # Follow soft links.
-		      if ls -lLd "$potent_lib" 2>/dev/null \
-			 | grep " -> " >/dev/null; then
+		      if ls -lLd "$potent_lib" 2>/System/Devices/null \
+			 | grep " -> " >/System/Devices/null; then
 			continue
 		      fi
 		      # The statement above tries to avoid entering an
@@ -2885,16 +2885,16 @@
 		      # loop can be closed while we follow links,
 		      # but so what?
 		      potlib="$potent_lib"
-		      while test -h "$potlib" 2>/dev/null; do
+		      while test -h "$potlib" 2>/System/Devices/null; do
 			potliblink=`ls -ld $potlib | sed 's/.* -> //'`
 			case $potliblink in
 			[\\/]* | [A-Za-z]:[\\/]*) potlib="$potliblink";;
 			*) potlib=`$echo "X$potlib" | $Xsed -e 's,[^/]*$,,'`"$potliblink";;
 			esac
 		      done
-		      if eval $file_magic_cmd \"\$potlib\" 2>/dev/null \
+		      if eval $file_magic_cmd \"\$potlib\" 2>/System/Devices/null \
 			 | sed 10q \
-			 | egrep "$file_magic_regex" > /dev/null; then
+			 | egrep "$file_magic_regex" > /System/Devices/null; then
 			newdeplibs="$newdeplibs $a_deplib"
 			a_deplib=""
 			break 2
@@ -2924,11 +2924,11 @@
 	    if test -n "$name" && test "$name" != "0"; then
 	      libname=`eval \\$echo \"$libname_spec\"`
 	      for i in $lib_search_path $sys_lib_search_path $shlib_search_path; do
-		potential_libs=`ls $i/$libname[.-]* 2>/dev/null`
+		potential_libs=`ls $i/$libname[.-]* 2>/System/Devices/null`
 		for potent_lib in $potential_libs; do
-		  if eval echo \"$potent_lib\" 2>/dev/null \
+		  if eval echo \"$potent_lib\" 2>/System/Devices/null \
 		      | sed 10q \
-		      | egrep "$match_pattern_regex" > /dev/null; then
+		      | egrep "$match_pattern_regex" > /System/Devices/null; then
 		    newdeplibs="$newdeplibs $a_deplib"
 		    a_deplib=""
 		    break 2
@@ -2953,7 +2953,7 @@
 	  newdeplibs=""
 	  if $echo "X $deplibs" | $Xsed -e 's/ -lc$//' \
 	       -e 's/ -[LR][^ ]*//g' -e 's/[ 	]//g' |
-	     grep . >/dev/null; then
+	     grep . >/System/Devices/null; then
 	    echo
 	    if test "X$deplibs_check_method" = "Xnone"; then
 	      echo "*** Warning: inter-library dependencies are not supported in this platform."
@@ -4005,7 +4005,7 @@
     if test \"X\$1\" = X--no-reexec; then
       # Discard the --no-reexec flag, and continue.
       shift
-    elif test \"X\`(\$echo '\t') 2>/dev/null\`\" = 'X\t'; then
+    elif test \"X\`(\$echo '\t') 2>/System/Devices/null\`\" = 'X\t'; then
       # Yippee, \$echo works!
       :
     else
@@ -4048,7 +4048,7 @@
   progdir=\"\$thisdir/$objdir\"
 
   if test ! -f \"\$progdir/\$program\" || \\
-     { file=\`ls -1dt \"\$progdir/\$program\" \"\$progdir/../\$program\" 2>/dev/null | sed 1q\`; \\
+     { file=\`ls -1dt \"\$progdir/\$program\" \"\$progdir/../\$program\" 2>/System/Devices/null | sed 1q\`; \\
        test \"X\$file\" != \"X\$progdir/\$program\"; }; then
 
     file=\"\$\$-\$program\"
@@ -4071,7 +4071,7 @@
       fi
     fi
 
-    $mv \"\$progdir/\$file\" \"\$progdir/\$program\" 2>/dev/null ||
+    $mv \"\$progdir/\$file\" \"\$progdir/\$program\" 2>/System/Devices/null ||
     { $rm \"\$progdir/\$program\";
       $mv \"\$progdir/\$file\" \"\$progdir/\$program\"; }
     $rm \"\$progdir/\$file\"
@@ -4243,7 +4243,7 @@
         if (for obj in $oldobjs
 	    do
 	      $echo "X$obj" | $Xsed -e 's%^.*/%%'
-	    done | sort | sort -uc >/dev/null 2>&1); then
+	    done | sort | sort -uc >/System/Devices/null 2>&1); then
 	  :
 	else
 	  $echo "copying selected object files to avoid basename conflicts..."
@@ -4418,7 +4418,7 @@
 	  # place dlname in correct position for cygwin
 	  tdlname=$dlname
 	  case $host,$output,$installed,$module,$dlname in
-	    *cygwin*,*lai,yes,no,*.dll) tdlname=../bin/$dlname ;;
+	    *cygwin*,*lai,yes,no,*.dll) tdlname=../System/Tools/$dlname ;;
 	  esac
 	  $echo > $output "\
 # $outputname - a libtool library file
@@ -4475,9 +4475,9 @@
 
     # There may be an optional sh(1) argument at the beginning of
     # install_prog (especially on Windows NT).
-    if test "$nonopt" = "$SHELL" || test "$nonopt" = /bin/sh ||
+    if test "$nonopt" = "$SHELL" || test "$nonopt" = /System/Tools/sh ||
        # Allow the use of GNU shtool's install command.
-       $echo "X$nonopt" | $Xsed | grep shtool > /dev/null; then
+       $echo "X$nonopt" | $Xsed | grep shtool > /System/Devices/null; then
       # Aesthetically quote it.
       arg=`$echo "X$nonopt" | $Xsed -e "$sed_quote_subst"`
       case $arg in
@@ -4629,7 +4629,7 @@
 
       *.la)
 	# Check to see that this really is a libtool archive.
-	if (sed -e '2q' $file | egrep "^# Generated by .*$PACKAGE") >/dev/null 2>&1; then :
+	if (sed -e '2q' $file | egrep "^# Generated by .*$PACKAGE") >/System/Devices/null 2>&1; then :
 	else
 	  $echo "$modename: \`$file' is not a valid libtool archive" 1>&2
 	  $echo "$help" 1>&2
@@ -4778,7 +4778,7 @@
 	fi
 
 	# Do a test to see if this is really a libtool program.
-	if (sed -e '4q' $file | egrep "^# Generated by .*$PACKAGE") >/dev/null 2>&1; then
+	if (sed -e '4q' $file | egrep "^# Generated by .*$PACKAGE") >/System/Devices/null 2>&1; then
 	  notinst_deplibs=
 	  relink_command=
 
@@ -4822,7 +4822,7 @@
 	  outputname=
 	  if test "$fast_install" = no && test -n "$relink_command"; then
 	    if test "$finalize" = yes && test -z "$run"; then
-	      tmpdir="/tmp"
+	      tmpdir="/System/TemporaryFiles"
 	      test -n "$TMPDIR" && tmpdir="$TMPDIR"
 	      tmpdir="$tmpdir/libtool-$$"
 	      if $mkdir -p "$tmpdir" && chmod 700 "$tmpdir"; then :
@@ -4853,10 +4853,10 @@
 	fi
 
 
-	# remove .exe since cygwin /usr/bin/install will append another
+	# remove .exe since cygwin /System/Tools/install will append another
 	# one anyways
 	case $install_prog,$host in
-	*/usr/bin/install*,*cygwin*)
+	*/System/Tools/install*,*cygwin*)
 	  case $file:$destfile in
 	  *.exe:*.exe)
 	    # this is ok
@@ -4980,7 +4980,7 @@
     if test -n "$admincmds"; then
       echo "   - have your system administrator run these commands:$admincmds"
     fi
-    if test -f /etc/ld.so.conf; then
+    if test -f/System/Settings/ld.so.conf; then
       echo "   - have your system administrator add LIBDIR to \`/etc/ld.so.conf'"
     fi
     echo
@@ -5014,7 +5014,7 @@
       case $file in
       *.la)
 	# Check to see that this really is a libtool archive.
-	if (sed -e '2q' $file | egrep "^# Generated by .*$PACKAGE") >/dev/null 2>&1; then :
+	if (sed -e '2q' $file | egrep "^# Generated by .*$PACKAGE") >/System/Devices/null 2>&1; then :
 	else
 	  $echo "$modename: \`$lib' is not a valid libtool archive" 1>&2
 	  $echo "$help" 1>&2
@@ -5085,7 +5085,7 @@
       -*) ;;
       *)
 	# Do a test to see if this is really a libtool program.
-	if (sed -e '4q' $file | egrep "^# Generated by .*$PACKAGE") >/dev/null 2>&1; then
+	if (sed -e '4q' $file | egrep "^# Generated by .*$PACKAGE") >/System/Devices/null 2>&1; then
 	  # If there is no directory component, then add one.
 	  case $file in
 	  */* | *\\*) . $file ;;
@@ -5178,8 +5178,8 @@
       fi
 
       # Don't error if the file doesn't exist and rm -f was used.
-      if (test -L "$file") >/dev/null 2>&1 \
-        || (test -h "$file") >/dev/null 2>&1 \
+      if (test -L "$file") >/System/Devices/null 2>&1 \
+        || (test -h "$file") >/System/Devices/null 2>&1 \
 	|| test -f "$file"; then
         :
       elif test -d "$file"; then
@@ -5194,7 +5194,7 @@
       case $name in
       *.la)
 	# Possibly a libtool archive, so verify it.
-	if (sed -e '2q' $file | egrep "^# Generated by .*$PACKAGE") >/dev/null 2>&1; then
+	if (sed -e '2q' $file | egrep "^# Generated by .*$PACKAGE") >/System/Devices/null 2>&1; then
 	  . $dir/$name
 
 	  # Delete the libtool libraries and symlinks.
@@ -5241,7 +5241,7 @@
 
       *.lo)
 	# Possibly a libtool object, so verify it.
-	if (sed -e '2q' $file | egrep "^# Generated by .*$PACKAGE") >/dev/null 2>&1; then
+	if (sed -e '2q' $file | egrep "^# Generated by .*$PACKAGE") >/System/Devices/null 2>&1; then
 
           # Read the .lo file
           . $dir/$name
@@ -5263,7 +5263,7 @@
       *)
 	# Do a test to see if this is a libtool program.
 	if test $mode = clean &&
-	   (sed -e '4q' $file | egrep "^# Generated by .*$PACKAGE") >/dev/null 2>&1; then
+	   (sed -e '4q' $file | egrep "^# Generated by .*$PACKAGE") >/System/Devices/null 2>&1; then
 	  relink_command=
 	  . $dir/$file
 
@@ -5282,7 +5282,7 @@
     for dir in $rmdirs; do
       if test -d "$dir"; then
 	$show "rmdir $dir"
-	$run rmdir $dir >/dev/null 2>&1
+	$run rmdir $dir >/System/Devices/null 2>&1
       fi
     done
 
@@ -5349,7 +5349,7 @@
 Remove files from the build directory.
 
 RM is the name of the program to use to delete files associated with each FILE
-(typically \`/bin/rm').  RM-OPTIONS are options (such as \`-f') to be passed
+(typically \`/System/Tools/rm').  RM-OPTIONS are options (such as \`-f') to be passed
 to RM.
 
 If FILE is a libtool library, object or program, all the files associated
@@ -5482,7 +5482,7 @@
 Remove libraries from an installation directory.
 
 RM is the name of the program to use to delete files associated with each FILE
-(typically \`/bin/rm').  RM-OPTIONS are options (such as \`-f') to be passed
+(typically \`/System/Tools/rm').  RM-OPTIONS are options (such as \`-f') to be passed
 to RM.
 
 If FILE is a libtool library, all the files associated with it are deleted.
diff -urN binutils-2.16.1/missing binutils-2.16.1-STEP/missing
--- binutils-2.16.1/missing	2004-09-07 20:34:05.000000000 +1200
+++ binutils-2.16.1-STEP/missing	2005-09-02 11:16:21.060116952 +1200
@@ -1,4 +1,4 @@
-#! /bin/sh
+#! /System/Tools/sh
 # Common stub for a few missing GNU programs while installing.
 
 scriptversion=2004-09-07.08
@@ -121,7 +121,7 @@
     ;;
 
   *)
-    if test -z "$run" && ($1 --version) > /dev/null 2>&1; then
+    if test -z "$run" && ($1 --version) > /System/Devices/null 2>&1; then
        # We have it, but it failed.
        exit 1
     elif test "x$2" = "x--version" || test "x$2" = "x--help"; then
@@ -198,7 +198,7 @@
 	touch $file
     else
 	test -z "$file" || exec >$file
-	echo "#! /bin/sh"
+	echo "#! /System/Tools/sh"
 	echo "# Created by GNU Automake missing as a replacement of"
 	echo "#  $ $@"
 	echo "exit 0"
@@ -302,10 +302,10 @@
     # We have already tried tar in the generic part.
     # Look for gnutar/gtar before invocation to avoid ugly error
     # messages.
-    if (gnutar --version > /dev/null 2>&1); then
+    if (gnutar --version > /System/Devices/null 2>&1); then
        gnutar "$@" && exit 0
     fi
-    if (gtar --version > /dev/null 2>&1); then
+    if (gtar --version > /System/Devices/null 2>&1); then
        gtar "$@" && exit 0
     fi
     firstarg="$1"
diff -urN binutils-2.16.1/mkdep binutils-2.16.1-STEP/mkdep
--- binutils-2.16.1/mkdep	1999-08-09 05:46:02.000000000 +1200
+++ binutils-2.16.1-STEP/mkdep	2005-09-02 11:16:21.078114216 +1200
@@ -1,4 +1,4 @@
-#!/bin/sh -
+#!/System/Tools/sh -
 #
 # Copyright (c) 1987 Regents of the University of California.
 # All rights reserved.
@@ -47,7 +47,7 @@
 	exit 1
 fi
 
-TMP=/tmp/mkdep$$
+TMP=/System/TemporaryFiles/mkdep$$
 
 trap 'rm -f $TMP ; exit 1' 1 2 3 13 15
 
@@ -66,7 +66,7 @@
 # hack can't deal with anything that requires a search path, and doesn't
 # even try for anything using bracket (<>) syntax.
 #
-# egrep '^#include[ 	]*".*"' /dev/null $* |
+# egrep '^#include[ 	]*".*"' /System/Devices/null $* |
 # sed -e 's/:[^"]*"\([^"]*\)".*/: \1/' -e 's/\.c/.o/' |
 
 gcc -MM $* |
diff -urN binutils-2.16.1/mkinstalldirs binutils-2.16.1-STEP/mkinstalldirs
--- binutils-2.16.1/mkinstalldirs	2004-02-20 15:05:00.000000000 +1300
+++ binutils-2.16.1-STEP/mkinstalldirs	2005-09-02 11:16:21.079114064 +1200
@@ -1,4 +1,4 @@
-#! /bin/sh
+#! /System/Tools/sh
 # mkinstalldirs --- make directory hierarchy
 
 scriptversion=2004-02-15.20
@@ -74,7 +74,7 @@
 # ourselves to GNU mkdir, which is thread-safe.
 case $dirmode in
   '')
-    if mkdir -p --version . >/dev/null 2>&1 && test ! -d ./--version; then
+    if mkdir -p --version . >/System/Devices/null 2>&1 && test ! -d ./--version; then
       echo "mkdir -p -- $*"
       exec mkdir -p -- "$@"
     else
@@ -87,7 +87,7 @@
     fi
     ;;
   *)
-    if mkdir -m "$dirmode" -p --version . >/dev/null 2>&1 &&
+    if mkdir -m "$dirmode" -p --version . >/System/Devices/null 2>&1 &&
        test ! -d ./--version; then
       echo "mkdir -m $dirmode -p -- $*"
       exec mkdir -m "$dirmode" -p -- "$@"
diff -urN binutils-2.16.1/move-if-change binutils-2.16.1-STEP/move-if-change
--- binutils-2.16.1/move-if-change	1999-05-03 19:28:40.000000000 +1200
+++ binutils-2.16.1-STEP/move-if-change	2005-09-02 11:16:21.081113760 +1200
@@ -1,4 +1,4 @@
-#!/bin/sh
+#!/System/Tools/sh
 
 # Copyright (C) 1996 Free Software Foundation, Inc.
 #
@@ -20,7 +20,7 @@
 test -r $2
 then
 if
-cmp $1 $2 > /dev/null
+cmp $1 $2 > /System/Devices/null
 then
 echo $2 is unchanged
 rm -f $1
diff -urN binutils-2.16.1/opcodes/Makefile.am binutils-2.16.1-STEP/opcodes/Makefile.am
--- binutils-2.16.1/opcodes/Makefile.am	2005-02-22 00:48:33.000000000 +1300
+++ binutils-2.16.1-STEP/opcodes/Makefile.am	2005-09-02 11:16:21.127106768 +1200
@@ -473,7 +473,7 @@
 	$(MAKE) MKDEP="$(MKDEP)" DEP1
 	sed -f dep.sed < DEP1 > DEPA
 	echo '# IF YOU PUT ANYTHING HERE IT WILL GO AWAY' >> DEPA
-	if grep ' /' DEPA > /dev/null 2> /dev/null; then \
+	if grep ' /' DEPA > /System/Devices/null 2> /System/Devices/null; then \
 	  echo 'make DEP failed!'; exit 1; \
 	else \
 	  mv -f DEPA $@; \
diff -urN binutils-2.16.1/opcodes/Makefile.in binutils-2.16.1-STEP/opcodes/Makefile.in
--- binutils-2.16.1/opcodes/Makefile.in	2005-02-22 00:48:33.000000000 +1300
+++ binutils-2.16.1-STEP/opcodes/Makefile.in	2005-09-02 11:16:21.130106312 +1200
@@ -727,7 +727,7 @@
 		$(TAGS_FILES) $(LISP)
 	tags=; \
 	here=`pwd`; \
-	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
+	if ($(ETAGS) --etags-include --version) >/System/Devices/null 2>&1; then \
 	  include_option=--etags-include; \
 	  empty_fix=.; \
 	else \
@@ -1004,7 +1004,7 @@
 	$(MAKE) MKDEP="$(MKDEP)" DEP1
 	sed -f dep.sed < DEP1 > DEPA
 	echo '# IF YOU PUT ANYTHING HERE IT WILL GO AWAY' >> DEPA
-	if grep ' /' DEPA > /dev/null 2> /dev/null; then \
+	if grep ' /' DEPA > /System/Devices/null 2> /System/Devices/null; then \
 	  echo 'make DEP failed!'; exit 1; \
 	else \
 	  mv -f DEPA $@; \
diff -urN binutils-2.16.1/opcodes/aclocal.m4 binutils-2.16.1-STEP/opcodes/aclocal.m4
--- binutils-2.16.1/opcodes/aclocal.m4	2004-11-09 02:17:37.000000000 +1300
+++ binutils-2.16.1-STEP/opcodes/aclocal.m4	2005-09-02 11:16:21.102110568 +1200
@@ -237,7 +237,7 @@
     for i in 1 2 3 4 5 6; do
       echo '#include "conftst'$i'.h"' >> sub/conftest.c
       # Using `: > sub/conftst$i.h' creates only sub/conftst1.h with
-      # Solaris 8's {/usr,}/bin/sh.
+      # Solaris 8's {/usr,}/System/Tools/sh.
       touch sub/conftst$i.h
     done
     echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf
@@ -261,10 +261,10 @@
        source=sub/conftest.c object=sub/conftest.${OBJEXT-o} \
        depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
        $SHELL ./depcomp $depcc -c -o sub/conftest.${OBJEXT-o} sub/conftest.c \
-         >/dev/null 2>conftest.err &&
-       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
-       grep sub/conftest.${OBJEXT-o} sub/conftest.Po > /dev/null 2>&1 &&
-       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
+         >/System/Devices/null 2>conftest.err &&
+       grep sub/conftst6.h sub/conftest.Po > /System/Devices/null 2>&1 &&
+       grep sub/conftest.${OBJEXT-o} sub/conftest.Po > /System/Devices/null 2>&1 &&
+       ${MAKE-make} -s -f confmf > /System/Devices/null 2>&1; then
       # icc doesn't choke on unknown options, it will just issue warnings
       # or remarks (even with -Werror).  So we grep stderr for any message
       # that says an option was ignored or not supported.
@@ -273,7 +273,7 @@
       # The diagnosis changed in icc 8.0:
       #   icc: Command line remark: option '-MP' not supported
       if (grep 'ignoring option' conftest.err ||
-          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
+          grep 'not supported' conftest.err) >/System/Devices/null 2>&1; then :; else
         am_cv_$1_dependencies_compiler_type=$depmode
         break
       fi
@@ -351,7 +351,7 @@
   # Grep'ing the first line is not enough: some people post-process
   # each Makefile.in and add a new line on top of each file to say so.
   # So let's grep whole file.
-  if grep '^#.*generated by automake' $mf > /dev/null 2>&1; then
+  if grep '^#.*generated by automake' $mf > /System/Devices/null 2>&1; then
     dirpart=`AS_DIRNAME("$mf")`
   else
     continue
@@ -471,7 +471,7 @@
 
 # test whether we have cygpath
 if test -z "$CYGPATH_W"; then
-  if (cygpath --version) >/dev/null 2>/dev/null; then
+  if (cygpath --version) >/System/Devices/null 2>/System/Devices/null; then
     CYGPATH_W='cygpath -w'
   else
     CYGPATH_W=echo
@@ -594,14 +594,14 @@
 # Check whether the underlying file-system supports filenames
 # with a leading dot.  For instance MS-DOS doesn't.
 AC_DEFUN([AM_SET_LEADING_DOT],
-[rm -rf .tst 2>/dev/null
-mkdir .tst 2>/dev/null
+[rm -rf .tst 2>/System/Devices/null
+mkdir .tst 2>/System/Devices/null
 if test -d .tst; then
   am__leading_dot=.
 else
   am__leading_dot=_
 fi
-rmdir .tst 2>/dev/null
+rmdir .tst 2>/System/Devices/null
 AC_SUBST([am__leading_dot])])
 
 # Add --enable-maintainer-mode option to configure.
@@ -687,7 +687,7 @@
 # In particular we don't look at `^make:' because GNU make might
 # be invoked under some other name (usually "gmake"), in which
 # case it prints its new name instead of `make'.
-if test "`$am_make -s -f confmf 2> /dev/null | grep -v 'ing directory'`" = "done"; then
+if test "`$am_make -s -f confmf 2> /System/Devices/null | grep -v 'ing directory'`" = "done"; then
    am__include=include
    am__quote=
    _am_result=GNU
@@ -695,7 +695,7 @@
 # Now try BSD make style include.
 if test "$am__include" = "#"; then
    echo '.include "confinc"' > confmf
-   if test "`$am_make -s -f confmf 2> /dev/null`" = "done"; then
+   if test "`$am_make -s -f confmf 2> /System/Devices/null`" = "done"; then
       am__include=.include
       am__quote="\""
       _am_result=BSD
@@ -793,7 +793,7 @@
 # restrict ourselves to GNU make (using the --version option ensures
 # this.)
 AC_DEFUN([AM_PROG_MKDIR_P],
-[if mkdir -p --version . >/dev/null 2>&1 && test ! -d ./--version; then
+[if mkdir -p --version . >/System/Devices/null 2>&1 && test ! -d ./--version; then
   # We used to keeping the `.' as first argument, in order to
   # allow $(mkdir_p) to be used without argument.  As in
   #   $(mkdir_p) $(somedir)
@@ -907,7 +907,7 @@
 # (eg FreeBSD returns the mod time of the symlink's containing
 # directory).
 if (
-   set X `ls -Lt $srcdir/configure conftest.file 2> /dev/null`
+   set X `ls -Lt $srcdir/configure conftest.file 2> /System/Devices/null`
    if test "$[*]" = "X"; then
       # -L didn't work.
       set X `ls -t $srcdir/configure conftest.file`
@@ -1037,7 +1037,7 @@
   plaintar)
     # Must skip GNU tar: if it does not support --format= it doesn't create
     # ustar tarball either.
-    (tar --version) >/dev/null 2>&1 && continue
+    (tar --version) >/System/Devices/null 2>&1 && continue
     am__tar='tar chf - "$$tardir"'
     am__tar_='tar chf - "$tardir"'
     am__untar='tar xf -'
@@ -1071,7 +1071,7 @@
   rm -rf conftest.dir
   if test -s conftest.tar; then
     AM_RUN_LOG([$am__untar <conftest.tar])
-    grep GrepMe conftest.dir/file >/dev/null 2>&1 && break
+    grep GrepMe conftest.dir/file >/System/Devices/null 2>&1 && break
   fi
 done
 rm -rf conftest.dir
diff -urN binutils-2.16.1/opcodes/cgen.sh binutils-2.16.1-STEP/opcodes/cgen.sh
--- binutils-2.16.1/opcodes/cgen.sh	2005-03-04 00:49:47.000000000 +1300
+++ binutils-2.16.1-STEP/opcodes/cgen.sh	2005-09-02 11:16:21.104110264 +1200
@@ -1,4 +1,4 @@
-#! /bin/sh
+#! /System/Tools/sh
 # CGEN generic assembler support code.
 #
 #  Copyright 2000, 2003, 2005 Free Software Foundation, Inc.
diff -urN binutils-2.16.1/opcodes/configure binutils-2.16.1-STEP/opcodes/configure
--- binutils-2.16.1/opcodes/configure	2005-02-01 09:30:37.000000000 +1300
+++ binutils-2.16.1-STEP/opcodes/configure	2005-09-02 11:16:21.116108440 +1200
@@ -1,4 +1,4 @@
-#! /bin/sh
+#! /System/Tools/sh
 # Guess values for system-dependent variables and create Makefiles.
 # Generated by GNU Autoconf 2.59.
 #
@@ -10,19 +10,19 @@
 ## --------------------- ##
 
 # Be Bourne compatible
-if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
+if test -n "${ZSH_VERSION+set}" && (emulate sh) >/System/Devices/null 2>&1; then
   emulate sh
   NULLCMD=:
   # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
   # is contrary to our usage.  Disable this feature.
   alias -g '${1+"$@"}'='"$@"'
-elif test -n "${BASH_VERSION+set}" && (set -o posix) >/dev/null 2>&1; then
+elif test -n "${BASH_VERSION+set}" && (set -o posix) >/System/Devices/null 2>&1; then
   set -o posix
 fi
 DUALCASE=1; export DUALCASE # for MKS sh
 
 # Support unset when possible.
-if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
+if ( (MAIL=60; unset MAIL) || exit) >/System/Devices/null 2>&1; then
   as_unset=unset
 else
   as_unset=false
@@ -49,13 +49,13 @@
 done
 
 # Required to use basename.
-if expr a : '\(a\)' >/dev/null 2>&1; then
+if expr a : '\(a\)' >/System/Devices/null 2>&1; then
   as_expr=expr
 else
   as_expr=false
 fi
 
-if (basename /) >/dev/null 2>&1 && test "X`basename / 2>&1`" = "X/"; then
+if (basename /) >/System/Devices/null 2>&1 && test "X`basename / 2>&1`" = "X/"; then
   as_basename=basename
 else
   as_basename=false
@@ -67,7 +67,7 @@
 $as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
 	 X"$0" : 'X\(//\)$' \| \
 	 X"$0" : 'X\(/\)$' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X/"$0" |
     sed '/^.*\/\([^/][^/]*\)\/*$/{ s//\1/; q; }
   	  /^X\/\(\/\/\)$/{ s//\1/; q; }
@@ -85,10 +85,10 @@
 
 # The user is always right.
 if test "${PATH_SEPARATOR+set}" != set; then
-  echo "#! /bin/sh" >conf$$.sh
+  echo "#! /System/Tools/sh" >conf$$.sh
   echo  "exit 0"   >>conf$$.sh
   chmod +x conf$$.sh
-  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
+  if (PATH="/nonexistent;."; conf$$.sh) >/System/Devices/null 2>&1; then
     PATH_SEPARATOR=';'
   else
     PATH_SEPARATOR=:
@@ -99,7 +99,7 @@
 
   as_lineno_1=$LINENO
   as_lineno_2=$LINENO
-  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
+  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/System/Devices/null`
   test "x$as_lineno_1" != "x$as_lineno_2" &&
   test "x$as_lineno_3"  = "x$as_lineno_2"  || {
   # Find who we are.  Look in the path if we contain no path at all
@@ -138,9 +138,9 @@
 	   if ("$as_dir/$as_base" -c '
   as_lineno_1=$LINENO
   as_lineno_2=$LINENO
-  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
+  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/System/Devices/null`
   test "x$as_lineno_1" != "x$as_lineno_2" &&
-  test "x$as_lineno_3"  = "x$as_lineno_2" ') 2>/dev/null; then
+  test "x$as_lineno_3"  = "x$as_lineno_2" ') 2>/System/Devices/null; then
 	     $as_unset BASH_ENV || test "${BASH_ENV+set}" != set || { BASH_ENV=; export BASH_ENV; }
 	     $as_unset ENV || test "${ENV+set}" != set || { ENV=; export ENV; }
 	     CONFIG_SHELL=$as_dir/$as_base
@@ -191,7 +191,7 @@
   *)       ECHO_N= ECHO_C='\c' ECHO_T= ;;
 esac
 
-if expr a : '\(a\)' >/dev/null 2>&1; then
+if expr a : '\(a\)' >/System/Devices/null 2>&1; then
   as_expr=expr
 else
   as_expr=false
@@ -199,7 +199,7 @@
 
 rm -f conf$$ conf$$.exe conf$$.file
 echo >conf$$.file
-if ln -s conf$$.file conf$$ 2>/dev/null; then
+if ln -s conf$$.file conf$$ 2>/System/Devices/null; then
   # We could just check for DJGPP; but this test a) works b) is more generic
   # and c) will remain valid once DJGPP supports symlinks (DJGPP 2.04).
   if test -f conf$$.exe; then
@@ -208,14 +208,14 @@
   else
     as_ln_s='ln -s'
   fi
-elif ln conf$$.file conf$$ 2>/dev/null; then
+elif ln conf$$.file conf$$ 2>/System/Devices/null; then
   as_ln_s=ln
 else
   as_ln_s='cp -p'
 fi
 rm -f conf$$ conf$$.exe conf$$.file
 
-if mkdir -p . 2>/dev/null; then
+if mkdir -p . 2>/System/Devices/null; then
   as_mkdir_p=:
 else
   test -d ./-p && rmdir ./-p
@@ -244,7 +244,7 @@
 # Name of the host.
 # hostname on some systems (SVR3.2, Linux) returns a bogus exit status,
 # so uname gets run too.
-ac_hostname=`(hostname || uname -n) 2>/dev/null | sed 1q`
+ac_hostname=`(hostname || uname -n) 2>/System/Devices/null | sed 1q`
 
 exec 6>&1
 
@@ -257,7 +257,7 @@
 subdirs=
 MFLAGS=
 MAKEFLAGS=
-SHELL=${CONFIG_SHELL-/bin/sh}
+SHELL=${CONFIG_SHELL-/System/Tools/sh}
 
 # Maximum number of lines to put in a shell here document.
 # This variable seems obsolete.  It should probably be removed, and
@@ -317,7 +317,7 @@
 ac_init_version=false
 # The variables have the same names as the options, with
 # dashes changed to underlines.
-cache_file=/dev/null
+cache_file=/System/Devices/null
 exec_prefix=NONE
 no_create=
 no_recursion=
@@ -395,7 +395,7 @@
   -disable-* | --disable-*)
     ac_feature=`expr "x$ac_option" : 'x-*disable-\(.*\)'`
     # Reject names that are not valid shell variable names.
-    expr "x$ac_feature" : ".*[^-_$as_cr_alnum]" >/dev/null &&
+    expr "x$ac_feature" : ".*[^-_$as_cr_alnum]" >/System/Devices/null &&
       { echo "$as_me: error: invalid feature name: $ac_feature" >&2
    { (exit 1); exit 1; }; }
     ac_feature=`echo $ac_feature | sed 's/-/_/g'`
@@ -404,7 +404,7 @@
   -enable-* | --enable-*)
     ac_feature=`expr "x$ac_option" : 'x-*enable-\([^=]*\)'`
     # Reject names that are not valid shell variable names.
-    expr "x$ac_feature" : ".*[^-_$as_cr_alnum]" >/dev/null &&
+    expr "x$ac_feature" : ".*[^-_$as_cr_alnum]" >/System/Devices/null &&
       { echo "$as_me: error: invalid feature name: $ac_feature" >&2
    { (exit 1); exit 1; }; }
     ac_feature=`echo $ac_feature | sed 's/-/_/g'`
@@ -586,7 +586,7 @@
   -with-* | --with-*)
     ac_package=`expr "x$ac_option" : 'x-*with-\([^=]*\)'`
     # Reject names that are not valid shell variable names.
-    expr "x$ac_package" : ".*[^-_$as_cr_alnum]" >/dev/null &&
+    expr "x$ac_package" : ".*[^-_$as_cr_alnum]" >/System/Devices/null &&
       { echo "$as_me: error: invalid package name: $ac_package" >&2
    { (exit 1); exit 1; }; }
     ac_package=`echo $ac_package| sed 's/-/_/g'`
@@ -599,7 +599,7 @@
   -without-* | --without-*)
     ac_package=`expr "x$ac_option" : 'x-*without-\(.*\)'`
     # Reject names that are not valid shell variable names.
-    expr "x$ac_package" : ".*[^-_$as_cr_alnum]" >/dev/null &&
+    expr "x$ac_package" : ".*[^-_$as_cr_alnum]" >/System/Devices/null &&
       { echo "$as_me: error: invalid package name: $ac_package" >&2
    { (exit 1); exit 1; }; }
     ac_package=`echo $ac_package | sed 's/-/_/g'`
@@ -631,7 +631,7 @@
   *=*)
     ac_envvar=`expr "x$ac_option" : 'x\([^=]*\)='`
     # Reject names that are not valid shell variable names.
-    expr "x$ac_envvar" : ".*[^_$as_cr_alnum]" >/dev/null &&
+    expr "x$ac_envvar" : ".*[^_$as_cr_alnum]" >/System/Devices/null &&
       { echo "$as_me: error: invalid variable name: $ac_envvar" >&2
    { (exit 1); exit 1; }; }
     ac_optarg=`echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"`
@@ -641,7 +641,7 @@
   *)
     # FIXME: should be removed in autoconf 3.0.
     echo "$as_me: WARNING: you should use --build, --host, --target" >&2
-    expr "x$ac_option" : ".*[^-._$as_cr_alnum]" >/dev/null &&
+    expr "x$ac_option" : ".*[^-._$as_cr_alnum]" >/System/Devices/null &&
       echo "$as_me: WARNING: invalid host type: $ac_option" >&2
     : ${build_alias=$ac_option} ${host_alias=$ac_option} ${target_alias=$ac_option}
     ;;
@@ -699,19 +699,19 @@
 ac_tool_prefix=
 test -n "$host_alias" && ac_tool_prefix=$host_alias-
 
-test "$silent" = yes && exec 6>/dev/null
+test "$silent" = yes && exec 6>/System/Devices/null
 
 
 # Find the source files, if location was not specified.
 if test -z "$srcdir"; then
   ac_srcdir_defaulted=yes
   # Try the directory containing this script, then its parent.
-  ac_confdir=`(dirname "$0") 2>/dev/null ||
+  ac_confdir=`(dirname "$0") 2>/System/Devices/null ||
 $as_expr X"$0" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$0" : 'X\(//\)[^/]' \| \
 	 X"$0" : 'X\(//\)$' \| \
 	 X"$0" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$0" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -734,7 +734,7 @@
    { (exit 1); exit 1; }; }
   fi
 fi
-(cd $srcdir && test -r ./$ac_unique_file) 2>/dev/null ||
+(cd $srcdir && test -r ./$ac_unique_file) 2>/System/Devices/null ||
   { echo "$as_me: error: sources are in $srcdir, but \`cd $srcdir' does not work" >&2
    { (exit 1); exit 1; }; }
 srcdir=`echo "$srcdir" | sed 's%\([^\\/]\)[\\/]*$%\1%'`
@@ -1003,22 +1003,22 @@
 ## Platform. ##
 ## --------- ##
 
-hostname = `(hostname || uname -n) 2>/dev/null | sed 1q`
-uname -m = `(uname -m) 2>/dev/null || echo unknown`
-uname -r = `(uname -r) 2>/dev/null || echo unknown`
-uname -s = `(uname -s) 2>/dev/null || echo unknown`
-uname -v = `(uname -v) 2>/dev/null || echo unknown`
-
-/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`
-/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`
-
-/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`
-/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`
-/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`
-hostinfo               = `(hostinfo) 2>/dev/null               || echo unknown`
-/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`
-/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`
-/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`
+hostname = `(hostname || uname -n) 2>/System/Devices/null | sed 1q`
+uname -m = `(uname -m) 2>/System/Devices/null || echo unknown`
+uname -r = `(uname -r) 2>/System/Devices/null || echo unknown`
+uname -s = `(uname -s) 2>/System/Devices/null || echo unknown`
+uname -v = `(uname -v) 2>/System/Devices/null || echo unknown`
+
+/System/Tools/uname -p = `(/System/Tools/uname -p) 2>/System/Devices/null || echo unknown`
+/System/Tools/uname -X     = `(/System/Tools/uname -X) 2>/System/Devices/null     || echo unknown`
+
+/System/Tools/arch              = `(/System/Tools/arch) 2>/System/Devices/null              || echo unknown`
+/System/Tools/arch -k       = `(/System/Tools/arch -k) 2>/System/Devices/null       || echo unknown`
+/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/System/Devices/null || echo unknown`
+hostinfo               = `(hostinfo) 2>/System/Devices/null               || echo unknown`
+/System/Tools/machine           = `(/System/Tools/machine) 2>/System/Devices/null           || echo unknown`
+/System/Tools/oslevel       = `(/System/Tools/oslevel) 2>/System/Devices/null       || echo unknown`
+/System/Tools/universe          = `(/System/Tools/universe) 2>/System/Devices/null          || echo unknown`
 
 _ASUNAME
 
@@ -1228,7 +1228,7 @@
 done
 
 if test -r "$cache_file"; then
-  # Some versions of bash will fail to source /dev/null (special
+  # Some versions of bash will fail to source /System/Devices/null (special
   # files actually), so we avoid doing that.
   if test -f "$cache_file"; then
     { echo "$as_me:$LINENO: loading cache $cache_file" >&5
@@ -1347,7 +1347,7 @@
 ac_configure="$SHELL $ac_aux_dir/configure" # This should be Cygnus configure.
 
 # Make sure we can run config.sub.
-$ac_config_sub sun4 >/dev/null 2>&1 ||
+$ac_config_sub sun4 >/System/Devices/null 2>&1 ||
   { { echo "$as_me:$LINENO: error: cannot run $ac_config_sub" >&5
 echo "$as_me: error: cannot run $ac_config_sub" >&2;}
    { (exit 1); exit 1; }; }
@@ -1747,18 +1747,18 @@
 echo "$as_me:$LINENO:" \
      "checking for C compiler version" >&5
 ac_compiler=`set X $ac_compile; echo $2`
-{ (eval echo "$as_me:$LINENO: \"$ac_compiler --version </dev/null >&5\"") >&5
-  (eval $ac_compiler --version </dev/null >&5) 2>&5
+{ (eval echo "$as_me:$LINENO: \"$ac_compiler --version </System/Devices/null >&5\"") >&5
+  (eval $ac_compiler --version </System/Devices/null >&5) 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
-{ (eval echo "$as_me:$LINENO: \"$ac_compiler -v </dev/null >&5\"") >&5
-  (eval $ac_compiler -v </dev/null >&5) 2>&5
+{ (eval echo "$as_me:$LINENO: \"$ac_compiler -v </System/Devices/null >&5\"") >&5
+  (eval $ac_compiler -v </System/Devices/null >&5) 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
-{ (eval echo "$as_me:$LINENO: \"$ac_compiler -V </dev/null >&5\"") >&5
-  (eval $ac_compiler -V </dev/null >&5) 2>&5
+{ (eval echo "$as_me:$LINENO: \"$ac_compiler -V </System/Devices/null >&5\"") >&5
+  (eval $ac_compiler -V </System/Devices/null >&5) 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
@@ -1940,7 +1940,7 @@
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }; then
-  for ac_file in `(ls conftest.o conftest.obj; ls conftest.*) 2>/dev/null`; do
+  for ac_file in `(ls conftest.o conftest.obj; ls conftest.*) 2>/System/Devices/null`; do
   case $ac_file in
     *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg ) ;;
     *) ac_cv_objext=`expr "$ac_file" : '.*\.\(.*\)'`
@@ -2495,13 +2495,13 @@
 # Find a good install program.  We prefer a C program (faster),
 # so one script is as good as another.  But avoid the broken or
 # incompatible versions:
-# SysV /etc/install, /usr/sbin/install
+# SysV/System/Settings/install, /usr/System/AdminTools/install
 # SunOS /usr/etc/install
-# IRIX /sbin/install
-# AIX /bin/install
+# IRIX /System/AdminTools/install
+# AIX /System/Tools/install
 # AmigaOS /C/install, which installs bootblocks on floppy discs
-# AIX 4 /usr/bin/installbsd, which doesn't work without a -g flag
-# AFS /usr/afsws/bin/install, which mishandles nonexistent args
+# AIX 4 /System/Tools/installbsd, which doesn't work without a -g flag
+# AFS /usr/afsws/System/Tools/install, which mishandles nonexistent args
 # SVR4 /usr/ucb/install, which tries to use the nonexistent group "staff"
 # OS/2's system install, which has a completely different semantic
 # ./install, which can be erroneously created by make from ./install.sh.
@@ -2519,7 +2519,7 @@
   # Account for people who put trailing slashes in PATH elements.
 case $as_dir/ in
   ./ | .// | /cC/* | \
-  /etc/* | /usr/sbin/* | /usr/etc/* | /sbin/* | /usr/afsws/bin/* | \
+ /System/Settings/* | /usr/System/AdminTools/* | /usr/etc/* | /System/AdminTools/* | /usr/afsws/System/Tools/* | \
   ?:\\/os2\\/install\\/* | ?:\\/OS2\\/INSTALL\\/* | \
   /usr/ucb/* ) ;;
   *)
@@ -2530,11 +2530,11 @@
       for ac_exec_ext in '' $ac_executable_extensions; do
 	if $as_executable_p "$as_dir/$ac_prog$ac_exec_ext"; then
 	  if test $ac_prog = install &&
-	    grep dspmsg "$as_dir/$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
+	    grep dspmsg "$as_dir/$ac_prog$ac_exec_ext" >/System/Devices/null 2>&1; then
 	    # AIX install.  It has an incompatible calling convention.
 	    :
 	  elif test $ac_prog = install &&
-	    grep pwplus "$as_dir/$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
+	    grep pwplus "$as_dir/$ac_prog$ac_exec_ext" >/System/Devices/null 2>&1; then
 	    # program-specific install script used by HP pwplus--don't use.
 	    :
 	  else
@@ -2582,7 +2582,7 @@
 # (eg FreeBSD returns the mod time of the symlink's containing
 # directory).
 if (
-   set X `ls -Lt $srcdir/configure conftest.file 2> /dev/null`
+   set X `ls -Lt $srcdir/configure conftest.file 2> /System/Devices/null`
    if test "$*" = "X"; then
       # -L didn't work.
       set X `ls -t $srcdir/configure conftest.file`
@@ -2642,7 +2642,7 @@
 echo "$as_me: WARNING: \`missing' script is too old or missing" >&2;}
 fi
 
-if mkdir -p --version . >/dev/null 2>&1 && test ! -d ./--version; then
+if mkdir -p --version . >/System/Devices/null 2>&1 && test ! -d ./--version; then
   # We used to keeping the `.' as first argument, in order to
   # allow $(mkdir_p) to be used without argument.  As in
   #   $(mkdir_p) $(somedir)
@@ -2726,7 +2726,7 @@
 	@echo 'ac_maketemp="$(MAKE)"'
 _ACEOF
 # GNU make sometimes prints "make[1]: Entering...", which would confuse us.
-eval `${MAKE-make} -f conftest.make 2>/dev/null | grep temp=`
+eval `${MAKE-make} -f conftest.make 2>/System/Devices/null | grep temp=`
 if test -n "$ac_maketemp"; then
   eval ac_cv_prog_make_${ac_make}_set=yes
 else
@@ -2744,14 +2744,14 @@
   SET_MAKE="MAKE=${MAKE-make}"
 fi
 
-rm -rf .tst 2>/dev/null
-mkdir .tst 2>/dev/null
+rm -rf .tst 2>/System/Devices/null
+mkdir .tst 2>/System/Devices/null
 if test -d .tst; then
   am__leading_dot=.
 else
   am__leading_dot=_
 fi
-rmdir .tst 2>/dev/null
+rmdir .tst 2>/System/Devices/null
 
 DEPDIR="${am__leading_dot}deps"
 
@@ -2777,7 +2777,7 @@
 # In particular we don't look at `^make:' because GNU make might
 # be invoked under some other name (usually "gmake"), in which
 # case it prints its new name instead of `make'.
-if test "`$am_make -s -f confmf 2> /dev/null | grep -v 'ing directory'`" = "done"; then
+if test "`$am_make -s -f confmf 2> /System/Devices/null | grep -v 'ing directory'`" = "done"; then
    am__include=include
    am__quote=
    _am_result=GNU
@@ -2785,7 +2785,7 @@
 # Now try BSD make style include.
 if test "$am__include" = "#"; then
    echo '.include "confinc"' > confmf
-   if test "`$am_make -s -f confmf 2> /dev/null`" = "done"; then
+   if test "`$am_make -s -f confmf 2> /System/Devices/null`" = "done"; then
       am__include=.include
       am__quote="\""
       _am_result=BSD
@@ -2828,7 +2828,7 @@
 
 # test whether we have cygpath
 if test -z "$CYGPATH_W"; then
-  if (cygpath --version) >/dev/null 2>/dev/null; then
+  if (cygpath --version) >/System/Devices/null 2>/System/Devices/null; then
     CYGPATH_W='cygpath -w'
   else
     CYGPATH_W=echo
@@ -3009,7 +3009,7 @@
     for i in 1 2 3 4 5 6; do
       echo '#include "conftst'$i'.h"' >> sub/conftest.c
       # Using `: > sub/conftst$i.h' creates only sub/conftst1.h with
-      # Solaris 8's {/usr,}/bin/sh.
+      # Solaris 8's {/usr,}/System/Tools/sh.
       touch sub/conftst$i.h
     done
     echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf
@@ -3033,10 +3033,10 @@
        source=sub/conftest.c object=sub/conftest.${OBJEXT-o} \
        depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
        $SHELL ./depcomp $depcc -c -o sub/conftest.${OBJEXT-o} sub/conftest.c \
-         >/dev/null 2>conftest.err &&
-       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
-       grep sub/conftest.${OBJEXT-o} sub/conftest.Po > /dev/null 2>&1 &&
-       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
+         >/System/Devices/null 2>conftest.err &&
+       grep sub/conftst6.h sub/conftest.Po > /System/Devices/null 2>&1 &&
+       grep sub/conftest.${OBJEXT-o} sub/conftest.Po > /System/Devices/null 2>&1 &&
+       ${MAKE-make} -s -f confmf > /System/Devices/null 2>&1; then
       # icc doesn't choke on unknown options, it will just issue warnings
       # or remarks (even with -Werror).  So we grep stderr for any message
       # that says an option was ignored or not supported.
@@ -3045,7 +3045,7 @@
       # The diagnosis changed in icc 8.0:
       #   icc: Command line remark: option '-MP' not supported
       if (grep 'ignoring option' conftest.err ||
-          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
+          grep 'not supported' conftest.err) >/System/Devices/null 2>&1; then :; else
         am_cv_CC_dependencies_compiler_type=$depmode
         break
       fi
@@ -3331,7 +3331,7 @@
       re_direlt='/[^/][^/]*/\.\./'
       # Canonicalize the path of ld
       ac_prog=`echo $ac_prog| sed 's%\\\\%/%g'`
-      while echo $ac_prog | grep "$re_direlt" > /dev/null 2>&1; do
+      while echo $ac_prog | grep "$re_direlt" > /System/Devices/null 2>&1; do
 	ac_prog=`echo $ac_prog| sed "s%$re_direlt%/%"`
       done
       test -z "$LD" && LD="$ac_prog"
@@ -3364,7 +3364,7 @@
       # Check to see if the program is GNU ld.  I'd rather use --version,
       # but apparently some GNU ld's only accept -v.
       # Break only if it was the GNU/non-GNU ld that we prefer.
-      if "$lt_cv_path_LD" -v 2>&1 < /dev/null | egrep '(GNU|with BFD)' > /dev/null; then
+      if "$lt_cv_path_LD" -v 2>&1 < /System/Devices/null | egrep '(GNU|with BFD)' > /System/Devices/null; then
 	test "$with_gnu_ld" != no && break
       else
 	test "$with_gnu_ld" != yes && break
@@ -3394,7 +3394,7 @@
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
   # I'd rather use --version here, but apparently some GNU ld's only accept -v.
-if $LD -v 2>&1 </dev/null | egrep '(GNU|with BFD)' 1>&5; then
+if $LD -v 2>&1 </System/Devices/null | egrep '(GNU|with BFD)' 1>&5; then
   lt_cv_prog_gnu_ld=yes
 else
   lt_cv_prog_gnu_ld=no
@@ -3434,11 +3434,11 @@
       # Check to see if the nm accepts a BSD-compat flag.
       # Adding the `sed 1q' prevents false positives on HP-UX, which says:
       #   nm: unknown option "B" ignored
-      # Tru64's nm complains that /dev/null is an invalid object file
-      if ($tmp_nm -B /dev/null 2>&1 | sed '1q'; exit 0) | egrep '(/dev/null|Invalid file or object type)' >/dev/null; then
+      # Tru64's nm complains that /System/Devices/null is an invalid object file
+      if ($tmp_nm -B /System/Devices/null 2>&1 | sed '1q'; exit 0) | egrep '(/System/Devices/null|Invalid file or object type)' >/System/Devices/null; then
 	lt_cv_path_NM="$tmp_nm -B"
 	break
-      elif ($tmp_nm -p /dev/null 2>&1 | sed '1q'; exit 0) | egrep /dev/null >/dev/null; then
+      elif ($tmp_nm -p /System/Devices/null 2>&1 | sed '1q'; exit 0) | egrep /System/Devices/null >/System/Devices/null; then
 	lt_cv_path_NM="$tmp_nm -p"
 	break
       else
@@ -3497,7 +3497,7 @@
 
 bsdi4*)
   lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (shared object|dynamic lib)'
-  lt_cv_file_magic_cmd='/usr/bin/file -L'
+  lt_cv_file_magic_cmd='/System/Tools/file -L'
   lt_cv_file_magic_test_file=/shlib/libc.so
   ;;
 
@@ -3508,26 +3508,26 @@
 
 darwin* | rhapsody*)
   lt_cv_deplibs_check_method='file_magic Mach-O dynamically linked shared library'
-  lt_cv_file_magic_cmd='/usr/bin/file -L'
+  lt_cv_file_magic_cmd='/System/Tools/file -L'
   case "$host_os" in
   rhapsody* | darwin1.012)
     lt_cv_file_magic_test_file='/System/Library/Frameworks/System.framework/System'
     ;;
   *) # Darwin 1.3 on
-    lt_cv_file_magic_test_file='/usr/lib/libSystem.dylib'
+    lt_cv_file_magic_test_file='/System/Library/Libraries/libSystem.dylib'
     ;;
   esac
   ;;
 
 freebsd* | kfreebsd*-gnu)
-  if echo __ELF__ | $CC -E - | grep __ELF__ > /dev/null; then
+  if echo __ELF__ | $CC -E - | grep __ELF__ > /System/Devices/null; then
     case $host_cpu in
     i*86 )
       # Not sure whether the presence of OpenBSD here was a mistake.
       # Let's accept both of them until this is cleared up.
       lt_cv_deplibs_check_method='file_magic (FreeBSD|OpenBSD)/i[3-9]86 (compact )?demand paged shared library'
-      lt_cv_file_magic_cmd=/usr/bin/file
-      lt_cv_file_magic_test_file=`echo /usr/lib/libc.so.*`
+      lt_cv_file_magic_cmd=/System/Tools/file
+      lt_cv_file_magic_test_file=`echo /System/Library/Libraries/libc.so.*`
       ;;
     esac
   else
@@ -3543,13 +3543,13 @@
   case $host_cpu in
   hppa*)
     lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|PA-RISC[0-9].[0-9]) shared library'
-    lt_cv_file_magic_cmd=/usr/bin/file
-    lt_cv_file_magic_test_file=/usr/lib/libc.sl
+    lt_cv_file_magic_cmd=/System/Tools/file
+    lt_cv_file_magic_test_file=/System/Library/Libraries/libc.sl
     ;;
   ia64*)
     lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF-[0-9][0-9]) shared object file - IA64'
-    lt_cv_file_magic_cmd=/usr/bin/file
-    lt_cv_file_magic_test_file=/usr/lib/hpux32/libc.so
+    lt_cv_file_magic_cmd=/System/Tools/file
+    lt_cv_file_magic_test_file=/System/Library/Libraries/hpux32/libc.so
     ;;
   esac
   ;;
@@ -3588,7 +3588,7 @@
   ;;
 
 netbsd* | knetbsd*-gnu)
-  if echo __ELF__ | $CC -E - | grep __ELF__ > /dev/null; then
+  if echo __ELF__ | $CC -E - | grep __ELF__ > /System/Devices/null; then
     lt_cv_deplibs_check_method='match_pattern /lib[^/\.]+\.so\.[0-9]+\.[0-9]+$'
   else
     lt_cv_deplibs_check_method='match_pattern /lib[^/\.]+\.so$'
@@ -3597,8 +3597,8 @@
 
 newsos6)
   lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (executable|dynamic lib)'
-  lt_cv_file_magic_cmd=/usr/bin/file
-  lt_cv_file_magic_test_file=/usr/lib/libnls.so
+  lt_cv_file_magic_cmd=/System/Tools/file
+  lt_cv_file_magic_test_file=/System/Library/Libraries/libnls.so
   ;;
 
 osf3* | osf4* | osf5*)
@@ -3628,7 +3628,7 @@
     ;;
   motorola)
     lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (shared object|dynamic lib) M[0-9][0-9]* Version [0-9]'
-    lt_cv_file_magic_test_file=`echo /usr/lib/libc.so*`
+    lt_cv_file_magic_test_file=`echo /System/Library/Libraries/libc.so*`
     ;;
   esac
   ;;
@@ -3674,8 +3674,8 @@
 	"file_magic "*)
 	  file_magic_regex="`expr \"$deplibs_check_method\" : \"file_magic \(.*\)\"`"
 	  MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
-	  if eval $file_magic_cmd \$file_magic_test_file 2> /dev/null |
-	    egrep "$file_magic_regex" > /dev/null; then
+	  if eval $file_magic_cmd \$file_magic_test_file 2> /System/Devices/null |
+	    egrep "$file_magic_regex" > /System/Devices/null; then
 	    :
 	  else
 	    cat <<EOF 1>&2
@@ -3738,8 +3738,8 @@
 	"file_magic "*)
 	  file_magic_regex="`expr \"$deplibs_check_method\" : \"file_magic \(.*\)\"`"
 	  MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
-	  if eval $file_magic_cmd \$file_magic_test_file 2> /dev/null |
-	    egrep "$file_magic_regex" > /dev/null; then
+	  if eval $file_magic_cmd \$file_magic_test_file 2> /System/Devices/null |
+	    egrep "$file_magic_regex" > /System/Devices/null; then
 	    :
 	  else
 	    cat <<EOF 1>&2
@@ -3985,7 +3985,7 @@
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }; then
    if test "$lt_cv_prog_gnu_ld" = yes; then
-    case `/usr/bin/file conftest.$ac_objext` in
+    case `/System/Tools/file conftest.$ac_objext` in
     *32-bit*)
       LD="${LD-ld} -melf32bsmip"
       ;;
@@ -3997,7 +3997,7 @@
       ;;
     esac
    else
-    case `/usr/bin/file conftest.$ac_objext` in
+    case `/System/Tools/file conftest.$ac_objext` in
     *32-bit*)
       LD="${LD-ld} -32"
       ;;
@@ -4021,7 +4021,7 @@
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }; then
-    case "`/usr/bin/file conftest.o`" in
+    case "`/System/Tools/file conftest.o`" in
     *ELF-32*)
       HPUX_IA64_MODE="32"
       ;;
@@ -4161,9 +4161,9 @@
      t end
      /^ac_cv_env/!s/^\([^=]*\)=\(.*\)$/\1=${\1=\2}/
      : end' >>confcache
-if diff $cache_file confcache >/dev/null 2>&1; then :; else
+if diff $cache_file confcache >/System/Devices/null 2>&1; then :; else
   if test -w $cache_file; then
-    test "x$cache_file" != "x/dev/null" && echo "updating cache $cache_file"
+    test "x$cache_file" != "x/System/Devices/null" && echo "updating cache $cache_file"
     cat confcache >$cache_file
   else
     echo "not updating unwritable cache $cache_file"
@@ -4178,7 +4178,7 @@
 AS="$AS" DLLTOOL="$DLLTOOL" OBJDUMP="$OBJDUMP" \
 objext="$OBJEXT" exeext="$EXEEXT" reload_flag="$reload_flag" \
 deplibs_check_method="$deplibs_check_method" file_magic_cmd="$file_magic_cmd" \
-${CONFIG_SHELL-/bin/sh} $ac_aux_dir/ltconfig --no-reexec \
+${CONFIG_SHELL-/System/Tools/sh} $ac_aux_dir/ltconfig --no-reexec \
 $libtool_flags --no-verify --build="$build" $ac_aux_dir/ltmain.sh $host \
 || { { echo "$as_me:$LINENO: error: libtool configure failed" >&5
 echo "$as_me: error: libtool configure failed" >&2;}
@@ -4186,7 +4186,7 @@
 
 # Reload cache, that may have been modified by ltconfig
 if test -r "$cache_file"; then
-  # Some versions of bash will fail to source /dev/null (special
+  # Some versions of bash will fail to source /System/Devices/null (special
   # files actually), so we avoid doing that.
   if test -f "$cache_file"; then
     { echo "$as_me:$LINENO: loading cache $cache_file" >&5
@@ -4675,18 +4675,18 @@
 echo "$as_me:$LINENO:" \
      "checking for C compiler version" >&5
 ac_compiler=`set X $ac_compile; echo $2`
-{ (eval echo "$as_me:$LINENO: \"$ac_compiler --version </dev/null >&5\"") >&5
-  (eval $ac_compiler --version </dev/null >&5) 2>&5
+{ (eval echo "$as_me:$LINENO: \"$ac_compiler --version </System/Devices/null >&5\"") >&5
+  (eval $ac_compiler --version </System/Devices/null >&5) 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
-{ (eval echo "$as_me:$LINENO: \"$ac_compiler -v </dev/null >&5\"") >&5
-  (eval $ac_compiler -v </dev/null >&5) 2>&5
+{ (eval echo "$as_me:$LINENO: \"$ac_compiler -v </System/Devices/null >&5\"") >&5
+  (eval $ac_compiler -v </System/Devices/null >&5) 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
-{ (eval echo "$as_me:$LINENO: \"$ac_compiler -V </dev/null >&5\"") >&5
-  (eval $ac_compiler -V </dev/null >&5) 2>&5
+{ (eval echo "$as_me:$LINENO: \"$ac_compiler -V </System/Devices/null >&5\"") >&5
+  (eval $ac_compiler -V </System/Devices/null >&5) 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
@@ -5214,7 +5214,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -5252,7 +5252,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -5321,7 +5321,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -5359,7 +5359,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -5407,7 +5407,7 @@
 if test "${ac_cv_prog_egrep+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
-  if echo a | (grep -E '(a|b)') >/dev/null 2>&1
+  if echo a | (grep -E '(a|b)') >/System/Devices/null 2>&1
     then ac_cv_prog_egrep='grep -E'
     else ac_cv_prog_egrep='egrep'
     fi
@@ -5484,7 +5484,7 @@
 
 _ACEOF
 if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  $EGREP "memchr" >/dev/null 2>&1; then
+  $EGREP "memchr" >/System/Devices/null 2>&1; then
   :
 else
   ac_cv_header_stdc=no
@@ -5505,7 +5505,7 @@
 
 _ACEOF
 if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  $EGREP "free" >/dev/null 2>&1; then
+  $EGREP "free" >/System/Devices/null 2>&1; then
   :
 else
   ac_cv_header_stdc=no
@@ -5515,7 +5515,7 @@
 fi
 
 if test $ac_cv_header_stdc = yes; then
-  # /bin/cc in Irix-4.0.5 gets non-ANSI ctype macros unless using -ansi.
+  # /System/Tools/cc in Irix-4.0.5 gets non-ANSI ctype macros unless using -ansi.
   if test "$cross_compiling" = yes; then
   :
 else
@@ -6142,7 +6142,7 @@
 
 _ACEOF
 if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  $EGREP "webecray" >/dev/null 2>&1; then
+  $EGREP "webecray" >/System/Devices/null 2>&1; then
   ac_cv_os_cray=yes
 else
   ac_cv_os_cray=no
@@ -6401,7 +6401,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -6838,7 +6838,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -7307,7 +7307,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -7965,7 +7965,7 @@
       fi
 
             if test "$XGETTEXT" != ":"; then
-			if $XGETTEXT --omit-header /dev/null 2> /dev/null; then
+			if $XGETTEXT --omit-header /System/Devices/null 2> /System/Devices/null; then
 	  : ;
 	else
 	  echo "$as_me:$LINENO: result: found xgettext programs is not GNU xgettext; ignore it" >&5
@@ -8118,7 +8118,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -8274,13 +8274,13 @@
 # Find a good install program.  We prefer a C program (faster),
 # so one script is as good as another.  But avoid the broken or
 # incompatible versions:
-# SysV /etc/install, /usr/sbin/install
+# SysV/System/Settings/install, /usr/System/AdminTools/install
 # SunOS /usr/etc/install
-# IRIX /sbin/install
-# AIX /bin/install
+# IRIX /System/AdminTools/install
+# AIX /System/Tools/install
 # AmigaOS /C/install, which installs bootblocks on floppy discs
-# AIX 4 /usr/bin/installbsd, which doesn't work without a -g flag
-# AFS /usr/afsws/bin/install, which mishandles nonexistent args
+# AIX 4 /System/Tools/installbsd, which doesn't work without a -g flag
+# AFS /usr/afsws/System/Tools/install, which mishandles nonexistent args
 # SVR4 /usr/ucb/install, which tries to use the nonexistent group "staff"
 # OS/2's system install, which has a completely different semantic
 # ./install, which can be erroneously created by make from ./install.sh.
@@ -8298,7 +8298,7 @@
   # Account for people who put trailing slashes in PATH elements.
 case $as_dir/ in
   ./ | .// | /cC/* | \
-  /etc/* | /usr/sbin/* | /usr/etc/* | /sbin/* | /usr/afsws/bin/* | \
+ /System/Settings/* | /usr/System/AdminTools/* | /usr/etc/* | /System/AdminTools/* | /usr/afsws/System/Tools/* | \
   ?:\\/os2\\/install\\/* | ?:\\/OS2\\/INSTALL\\/* | \
   /usr/ucb/* ) ;;
   *)
@@ -8309,11 +8309,11 @@
       for ac_exec_ext in '' $ac_executable_extensions; do
 	if $as_executable_p "$as_dir/$ac_prog$ac_exec_ext"; then
 	  if test $ac_prog = install &&
-	    grep dspmsg "$as_dir/$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
+	    grep dspmsg "$as_dir/$ac_prog$ac_exec_ext" >/System/Devices/null 2>&1; then
 	    # AIX install.  It has an incompatible calling convention.
 	    :
 	  elif test $ac_prog = install &&
-	    grep pwplus "$as_dir/$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
+	    grep pwplus "$as_dir/$ac_prog$ac_exec_ext" >/System/Devices/null 2>&1; then
 	    # program-specific install script used by HP pwplus--don't use.
 	    :
 	  else
@@ -8429,7 +8429,7 @@
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } >/dev/null; then
+  (exit $ac_status); } >/System/Devices/null; then
   if test -s conftest.err; then
     ac_cpp_err=$ac_c_preproc_warn_flag
     ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
@@ -8555,7 +8555,7 @@
 if test -n "$enable_targets" ; then
     for targ in `echo $enable_targets | sed 's/,/ /g'`
     do
-	result=`$ac_config_sub $targ 2>/dev/null`
+	result=`$ac_config_sub $targ 2>/System/Devices/null`
 	if test -n "$result" ; then
 	    canon_targets="$canon_targets $result"
 	else
@@ -8761,9 +8761,9 @@
      t end
      /^ac_cv_env/!s/^\([^=]*\)=\(.*\)$/\1=${\1=\2}/
      : end' >>confcache
-if diff $cache_file confcache >/dev/null 2>&1; then :; else
+if diff $cache_file confcache >/System/Devices/null 2>&1; then :; else
   if test -w $cache_file; then
-    test "x$cache_file" != "x/dev/null" && echo "updating cache $cache_file"
+    test "x$cache_file" != "x/System/Devices/null" && echo "updating cache $cache_file"
     cat confcache >$cache_file
   else
     echo "not updating unwritable cache $cache_file"
@@ -8867,19 +8867,19 @@
 ## --------------------- ##
 
 # Be Bourne compatible
-if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
+if test -n "${ZSH_VERSION+set}" && (emulate sh) >/System/Devices/null 2>&1; then
   emulate sh
   NULLCMD=:
   # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
   # is contrary to our usage.  Disable this feature.
   alias -g '${1+"$@"}'='"$@"'
-elif test -n "${BASH_VERSION+set}" && (set -o posix) >/dev/null 2>&1; then
+elif test -n "${BASH_VERSION+set}" && (set -o posix) >/System/Devices/null 2>&1; then
   set -o posix
 fi
 DUALCASE=1; export DUALCASE # for MKS sh
 
 # Support unset when possible.
-if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
+if ( (MAIL=60; unset MAIL) || exit) >/System/Devices/null 2>&1; then
   as_unset=unset
 else
   as_unset=false
@@ -8906,13 +8906,13 @@
 done
 
 # Required to use basename.
-if expr a : '\(a\)' >/dev/null 2>&1; then
+if expr a : '\(a\)' >/System/Devices/null 2>&1; then
   as_expr=expr
 else
   as_expr=false
 fi
 
-if (basename /) >/dev/null 2>&1 && test "X`basename / 2>&1`" = "X/"; then
+if (basename /) >/System/Devices/null 2>&1 && test "X`basename / 2>&1`" = "X/"; then
   as_basename=basename
 else
   as_basename=false
@@ -8924,7 +8924,7 @@
 $as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
 	 X"$0" : 'X\(//\)$' \| \
 	 X"$0" : 'X\(/\)$' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X/"$0" |
     sed '/^.*\/\([^/][^/]*\)\/*$/{ s//\1/; q; }
   	  /^X\/\(\/\/\)$/{ s//\1/; q; }
@@ -8942,10 +8942,10 @@
 
 # The user is always right.
 if test "${PATH_SEPARATOR+set}" != set; then
-  echo "#! /bin/sh" >conf$$.sh
+  echo "#! /System/Tools/sh" >conf$$.sh
   echo  "exit 0"   >>conf$$.sh
   chmod +x conf$$.sh
-  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
+  if (PATH="/nonexistent;."; conf$$.sh) >/System/Devices/null 2>&1; then
     PATH_SEPARATOR=';'
   else
     PATH_SEPARATOR=:
@@ -8956,7 +8956,7 @@
 
   as_lineno_1=$LINENO
   as_lineno_2=$LINENO
-  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
+  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/System/Devices/null`
   test "x$as_lineno_1" != "x$as_lineno_2" &&
   test "x$as_lineno_3"  = "x$as_lineno_2"  || {
   # Find who we are.  Look in the path if we contain no path at all
@@ -8996,9 +8996,9 @@
 	   if ("$as_dir/$as_base" -c '
   as_lineno_1=$LINENO
   as_lineno_2=$LINENO
-  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
+  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/System/Devices/null`
   test "x$as_lineno_1" != "x$as_lineno_2" &&
-  test "x$as_lineno_3"  = "x$as_lineno_2" ') 2>/dev/null; then
+  test "x$as_lineno_3"  = "x$as_lineno_2" ') 2>/System/Devices/null; then
 	     $as_unset BASH_ENV || test "${BASH_ENV+set}" != set || { BASH_ENV=; export BASH_ENV; }
 	     $as_unset ENV || test "${ENV+set}" != set || { ENV=; export ENV; }
 	     CONFIG_SHELL=$as_dir/$as_base
@@ -9050,7 +9050,7 @@
   *)       ECHO_N= ECHO_C='\c' ECHO_T= ;;
 esac
 
-if expr a : '\(a\)' >/dev/null 2>&1; then
+if expr a : '\(a\)' >/System/Devices/null 2>&1; then
   as_expr=expr
 else
   as_expr=false
@@ -9058,7 +9058,7 @@
 
 rm -f conf$$ conf$$.exe conf$$.file
 echo >conf$$.file
-if ln -s conf$$.file conf$$ 2>/dev/null; then
+if ln -s conf$$.file conf$$ 2>/System/Devices/null; then
   # We could just check for DJGPP; but this test a) works b) is more generic
   # and c) will remain valid once DJGPP supports symlinks (DJGPP 2.04).
   if test -f conf$$.exe; then
@@ -9067,14 +9067,14 @@
   else
     as_ln_s='ln -s'
   fi
-elif ln conf$$.file conf$$ 2>/dev/null; then
+elif ln conf$$.file conf$$ 2>/System/Devices/null; then
   as_ln_s=ln
 else
   as_ln_s='cp -p'
 fi
 rm -f conf$$ conf$$.exe conf$$.file
 
-if mkdir -p . 2>/dev/null; then
+if mkdir -p . 2>/System/Devices/null; then
   as_mkdir_p=:
 else
   test -d ./-p && rmdir ./-p
@@ -9123,7 +9123,7 @@
   $ $0 $@
 
 _CSEOF
-echo "on `(hostname || uname -n) 2>/dev/null | sed 1q`" >&5
+echo "on `(hostname || uname -n) 2>/System/Devices/null | sed 1q`" >&5
 echo >&5
 _ACEOF
 
@@ -9257,7 +9257,7 @@
 ac_configure_extra_args=
 
 if $ac_cs_silent; then
-  exec 6>/dev/null
+  exec 6>/System/Devices/null
   ac_configure_extra_args="$ac_configure_extra_args --silent"
 fi
 
@@ -9321,7 +9321,7 @@
 # Create a (secure) tmp directory for tmp files.
 
 {
-  tmp=`(umask 077 && mktemp -d -q "./confstatXXXXXX") 2>/dev/null` &&
+  tmp=`(umask 077 && mktemp -d -q "./confstatXXXXXX") 2>/System/Devices/null` &&
   test -n "$tmp" && test -d "$tmp"
 }  ||
 {
@@ -9536,12 +9536,12 @@
   esac
 
   # Compute @srcdir@, @top_srcdir@, and @INSTALL@ for subdirectories.
-  ac_dir=`(dirname "$ac_file") 2>/dev/null ||
+  ac_dir=`(dirname "$ac_file") 2>/System/Devices/null ||
 $as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$ac_file" : 'X\(//\)[^/]' \| \
 	 X"$ac_file" : 'X\(//\)$' \| \
 	 X"$ac_file" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$ac_file" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -9555,12 +9555,12 @@
     as_dirs=
     while test ! -d "$as_dir"; do
       as_dirs="$as_dir $as_dirs"
-      as_dir=`(dirname "$as_dir") 2>/dev/null ||
+      as_dir=`(dirname "$as_dir") 2>/System/Devices/null ||
 $as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$as_dir" : 'X\(//\)[^/]' \| \
 	 X"$as_dir" : 'X\(//\)$' \| \
 	 X"$as_dir" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$as_dir" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -9680,7 +9680,7 @@
 	   # Source tree
 	   echo "$srcdir/$f"
 	 else
-	   # /dev/null tree
+	   # /System/Devices/null tree
 	   { { echo "$as_me:$LINENO: error: cannot find input file: $f" >&5
 echo "$as_me: error: cannot find input file: $f" >&2;}
    { (exit 1); exit 1; }; }
@@ -9772,7 +9772,7 @@
 	   # Source tree
 	   echo "$srcdir/$f"
 	 else
-	   # /dev/null tree
+	   # /System/Devices/null tree
 	   { { echo "$as_me:$LINENO: error: cannot find input file: $f" >&5
 echo "$as_me: error: cannot find input file: $f" >&2;}
    { (exit 1); exit 1; }; }
@@ -9825,11 +9825,11 @@
 # Break up conftest.defines because some shells have a limit on the size
 # of here documents, and old seds have small limits too (100 cmds).
 echo '  # Handle all the #define templates only if necessary.' >>$CONFIG_STATUS
-echo '  if grep "^[	 ]*#[	 ]*define" $tmp/in >/dev/null; then' >>$CONFIG_STATUS
+echo '  if grep "^[	 ]*#[	 ]*define" $tmp/in >/System/Devices/null; then' >>$CONFIG_STATUS
 echo '  # If there are no defines, we may have an empty if/fi' >>$CONFIG_STATUS
 echo '  :' >>$CONFIG_STATUS
 rm -f conftest.tail
-while grep . conftest.defines >/dev/null
+while grep . conftest.defines >/System/Devices/null
 do
   # Write a limited-size here document to $tmp/defines.sed.
   echo '  cat >$tmp/defines.sed <<CEOF' >>$CONFIG_STATUS
@@ -9856,7 +9856,7 @@
 # of here documents, and old seds have small limits too (100 cmds).
 echo '  # Handle all the #undef templates' >>$CONFIG_STATUS
 rm -f conftest.tail
-while grep . conftest.undefs >/dev/null
+while grep . conftest.undefs >/System/Devices/null
 do
   # Write a limited-size here document to $tmp/undefs.sed.
   echo '  cat >$tmp/undefs.sed <<CEOF' >>$CONFIG_STATUS
@@ -9889,16 +9889,16 @@
   cat $tmp/in >>$tmp/config.h
   rm -f $tmp/in
   if test x"$ac_file" != x-; then
-    if diff $ac_file $tmp/config.h >/dev/null 2>&1; then
+    if diff $ac_file $tmp/config.h >/System/Devices/null 2>&1; then
       { echo "$as_me:$LINENO: $ac_file is unchanged" >&5
 echo "$as_me: $ac_file is unchanged" >&6;}
     else
-      ac_dir=`(dirname "$ac_file") 2>/dev/null ||
+      ac_dir=`(dirname "$ac_file") 2>/System/Devices/null ||
 $as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$ac_file" : 'X\(//\)[^/]' \| \
 	 X"$ac_file" : 'X\(//\)$' \| \
 	 X"$ac_file" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$ac_file" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -9912,12 +9912,12 @@
     as_dirs=
     while test ! -d "$as_dir"; do
       as_dirs="$as_dir $as_dirs"
-      as_dir=`(dirname "$as_dir") 2>/dev/null ||
+      as_dir=`(dirname "$as_dir") 2>/System/Devices/null ||
 $as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$as_dir" : 'X\(//\)[^/]' \| \
 	 X"$as_dir" : 'X\(//\)$' \| \
 	 X"$as_dir" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$as_dir" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -9947,12 +9947,12 @@
       _am_stamp_count=`expr $_am_stamp_count + 1` ;;
   esac
 done
-echo "timestamp for $ac_file" >`(dirname $ac_file) 2>/dev/null ||
+echo "timestamp for $ac_file" >`(dirname $ac_file) 2>/System/Devices/null ||
 $as_expr X$ac_file : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X$ac_file : 'X\(//\)[^/]' \| \
 	 X$ac_file : 'X\(//\)$' \| \
 	 X$ac_file : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X$ac_file |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -9969,12 +9969,12 @@
 for ac_file in : $CONFIG_COMMANDS; do test "x$ac_file" = x: && continue
   ac_dest=`echo "$ac_file" | sed 's,:.*,,'`
   ac_source=`echo "$ac_file" | sed 's,[^:]*:,,'`
-  ac_dir=`(dirname "$ac_dest") 2>/dev/null ||
+  ac_dir=`(dirname "$ac_dest") 2>/System/Devices/null ||
 $as_expr X"$ac_dest" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$ac_dest" : 'X\(//\)[^/]' \| \
 	 X"$ac_dest" : 'X\(//\)$' \| \
 	 X"$ac_dest" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$ac_dest" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -9988,12 +9988,12 @@
     as_dirs=
     while test ! -d "$as_dir"; do
       as_dirs="$as_dir $as_dirs"
-      as_dir=`(dirname "$as_dir") 2>/dev/null ||
+      as_dir=`(dirname "$as_dir") 2>/System/Devices/null ||
 $as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$as_dir" : 'X\(//\)[^/]' \| \
 	 X"$as_dir" : 'X\(//\)$' \| \
 	 X"$as_dir" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$as_dir" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -10084,13 +10084,13 @@
   # Grep'ing the first line is not enough: some people post-process
   # each Makefile.in and add a new line on top of each file to say so.
   # So let's grep whole file.
-  if grep '^#.*generated by automake' $mf > /dev/null 2>&1; then
-    dirpart=`(dirname "$mf") 2>/dev/null ||
+  if grep '^#.*generated by automake' $mf > /System/Devices/null 2>&1; then
+    dirpart=`(dirname "$mf") 2>/System/Devices/null ||
 $as_expr X"$mf" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$mf" : 'X\(//\)[^/]' \| \
 	 X"$mf" : 'X\(//\)$' \| \
 	 X"$mf" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$mf" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -10118,12 +10118,12 @@
        sed -e 's/\$(DEPDIR)/'"$DEPDIR"'/g' -e 's/\$U/'"$U"'/g'`; do
     # Make sure the directory exists.
     test -f "$dirpart/$file" && continue
-    fdir=`(dirname "$file") 2>/dev/null ||
+    fdir=`(dirname "$file") 2>/System/Devices/null ||
 $as_expr X"$file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$file" : 'X\(//\)[^/]' \| \
 	 X"$file" : 'X\(//\)$' \| \
 	 X"$file" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$file" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -10137,12 +10137,12 @@
     as_dirs=
     while test ! -d "$as_dir"; do
       as_dirs="$as_dir $as_dirs"
-      as_dir=`(dirname "$as_dir") 2>/dev/null ||
+      as_dir=`(dirname "$as_dir") 2>/System/Devices/null ||
 $as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$as_dir" : 'X\(//\)[^/]' \| \
 	 X"$as_dir" : 'X\(//\)$' \| \
 	 X"$as_dir" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 .     : '\(.\)' 2>/System/Devices/null ||
 echo X"$as_dir" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
   	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
@@ -10177,7 +10177,7 @@
 # config.status does its own redirection, appending to config.log.
 # Unfortunately, on DOS this fails, as config.log is still kept open
 # by configure, so config.status won't be able to write to it; its
-# output is simply discarded.  So we exec the FD to /dev/null,
+# output is simply discarded.  So we exec the FD to /System/Devices/null,
 # effectively closing config.log, so it can be properly (re)opened and
 # appended to by config.status.  When coming back to configure, we
 # need to make the FD available again.
@@ -10186,7 +10186,7 @@
   ac_config_status_args=
   test "$silent" = yes &&
     ac_config_status_args="$ac_config_status_args --quiet"
-  exec 5>/dev/null
+  exec 5>/System/Devices/null
   $SHELL $CONFIG_STATUS $ac_config_status_args || ac_cs_success=false
   exec 5>>config.log
   # Use ||, not &&, to avoid exiting from the if with $? = 1, which
diff -urN binutils-2.16.1/opcodes/configure.in binutils-2.16.1-STEP/opcodes/configure.in
--- binutils-2.16.1/opcodes/configure.in	2004-11-09 02:17:37.000000000 +1300
+++ binutils-2.16.1-STEP/opcodes/configure.in	2005-09-02 11:16:21.118108136 +1200
@@ -132,7 +132,7 @@
 if test -n "$enable_targets" ; then
     for targ in `echo $enable_targets | sed 's/,/ /g'`
     do
-	result=`$ac_config_sub $targ 2>/dev/null`
+	result=`$ac_config_sub $targ 2>/System/Devices/null`
 	if test -n "$result" ; then
 	    canon_targets="$canon_targets $result"
 	else
diff -urN binutils-2.16.1/opcodes/po/Make-in binutils-2.16.1-STEP/opcodes/po/Make-in
--- binutils-2.16.1/opcodes/po/Make-in	2005-03-04 00:49:51.000000000 +1300
+++ binutils-2.16.1-STEP/opcodes/po/Make-in	2005-09-02 11:16:21.144104184 +1200
@@ -10,7 +10,7 @@
 PACKAGE = @PACKAGE@
 VERSION = @VERSION@
 
-SHELL = /bin/sh
+SHELL = /System/Tools/sh
 @SET_MAKE@
 
 srcdir = @srcdir@
@@ -205,7 +205,7 @@
 dist distdir: update-po $(DISTFILES)
 	dists="$(DISTFILES)"; \
 	for file in $$dists; do \
-	  ln $(srcdir)/$$file $(distdir) 2> /dev/null \
+	  ln $(srcdir)/$$file $(distdir) 2> /System/Devices/null \
 	    || cp -p $(srcdir)/$$file $(distdir); \
 	done
 
diff -urN binutils-2.16.1/src-release binutils-2.16.1-STEP/src-release
--- binutils-2.16.1/src-release	2004-12-03 23:30:06.000000000 +1300
+++ binutils-2.16.1-STEP/src-release	2005-09-02 11:16:21.146103880 +1200
@@ -26,7 +26,7 @@
 # This is the name of this script (!).  Needed due to horrible recursion.
 SELF = src-release
 
-SHELL = /bin/sh
+SHELL = /System/Tools/sh
 
 BZIPPROG = bzip2
 MD5PROG = md5sum
@@ -64,13 +64,13 @@
 
 # NOTE: No double quotes in the below.  It is used within shell script
 # as VER="$(VER)"
-VER = `	if grep 'AM_INIT_AUTOMAKE.*BFD_VERSION' $(TOOL)/configure.in >/dev/null 2>&1; then \
+VER = `	if grep 'AM_INIT_AUTOMAKE.*BFD_VERSION' $(TOOL)/configure.in >/System/Devices/null 2>&1; then \
 	  sed < bfd/configure.in -n 's/AM_INIT_AUTOMAKE[^,]*, *\([^)]*\))/\1/p'; \
-	elif grep AM_INIT_AUTOMAKE $(TOOL)/configure.in >/dev/null 2>&1; then \
+	elif grep AM_INIT_AUTOMAKE $(TOOL)/configure.in >/System/Devices/null 2>&1; then \
 	  sed < $(TOOL)/configure.in -n 's/AM_INIT_AUTOMAKE[^,]*, *\([^)]*\))/\1/p'; \
 	elif test -f $(TOOL)/version.in; then \
 	  head -1 $(TOOL)/version.in; \
-	elif grep VERSION $(TOOL)/Makefile.in > /dev/null 2>&1; then \
+	elif grep VERSION $(TOOL)/Makefile.in > /System/Devices/null 2>&1; then \
 	  sed < $(TOOL)/Makefile.in -n 's/^VERSION *= *//p'; \
 	else \
 	  echo VERSION; \
@@ -145,9 +145,9 @@
 	for d in $$dirs ; do \
 	  if [ -d $$d ]; then \
 	    if [ ! -f $$d/Makefile ] ; then true ; \
-	    elif grep '^diststuff:' $$d/Makefile >/dev/null ; then \
+	    elif grep '^diststuff:' $$d/Makefile >/System/Devices/null ; then \
 		(cd $$d ; $(MAKE) diststuff ) || exit 1 ; \
-	    elif grep '^info:' $$d/Makefile >/dev/null ; then \
+	    elif grep '^info:' $$d/Makefile >/System/Devices/null ; then \
 	        (cd $$d ; $(MAKE) info ) || exit 1 ; \
 	    fi ; \
 	    if [ -d $$d/proto-$$d.dir ]; then \
diff -urN binutils-2.16.1/symlink-tree binutils-2.16.1-STEP/symlink-tree
--- binutils-2.16.1/symlink-tree	2003-08-15 08:44:13.000000000 +1200
+++ binutils-2.16.1-STEP/symlink-tree	2005-09-02 11:16:21.154102664 +1200
@@ -1,4 +1,4 @@
-#!/bin/sh
+#!/System/Tools/sh
 # Create a symlink tree.
 #
 # Copyright (C) 1995, 2000, 2003  Free Software Foundation, Inc.
diff -urN binutils-2.16.1/ylwrap binutils-2.16.1-STEP/ylwrap
--- binutils-2.16.1/ylwrap	2004-09-25 01:21:46.000000000 +1200
+++ binutils-2.16.1-STEP/ylwrap	2005-09-02 11:16:21.155102512 +1200
@@ -1,4 +1,4 @@
-#! /bin/sh
+#! /System/Tools/sh
 # ylwrap - wrapper for lex/yacc invocations.
 # Copyright (C) 1996, 1997 Free Software Foundation, Inc.
 # Written by Tom Tromey <tromey@cygnus.com>.
@@ -53,7 +53,7 @@
 # We don't want to use the absolute path if the input in the current
 # directory like when making a tar ball.
 input_base=`echo $input | sed -e 's|.*/||'`
-if test -f $input_base && cmp $input_base $input >/dev/null 2>&1; then
+if test -f $input_base && cmp $input_base $input >/System/Devices/null 2>&1; then
   input=$input_base
 fi
 
@@ -70,7 +70,7 @@
 # FIXME: add hostname here for parallel makes that run commands on
 # other machines.  But that might take us over the 14-char limit.
 dirname=ylwrap$$
-trap "cd `pwd`; rm -rf $dirname > /dev/null 2>&1" 1 2 3 15
+trap "cd `pwd`; rm -rf $dirname > /System/Devices/null 2>&1" 1 2 3 15
 mkdir $dirname || exit 1
 
 cd $dirname
@@ -80,7 +80,7 @@
     ;;
  *)
     # Make a symbolic link, hard link or hardcopy.
-    ln -s ../"$input" . > /dev/null 2>&1 || ln ../"$input" . > /dev/null 2>&1 || cp ../"$input" .
+    ln -s ../"$input" . > /System/Devices/null 2>&1 || ln ../"$input" . > /System/Devices/null 2>&1 || cp ../"$input" .
     ;;
 esac
 $prog ${1+"$@"} "$input"
